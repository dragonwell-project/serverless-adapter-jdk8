[
  {
    "className": "Lch/qos/logback/classic/BasicConfigurator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/BasicConfigurator.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/classic/spi/Configurator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","configure(Lch/qos/logback/classic/LoggerContext;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/Level;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/Level.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(ILjava/lang/String;)V","fromLocationAwareLoggerInteger(I)Lch/qos/logback/classic/Level;","toLevel(I)Lch/qos/logback/classic/Level;","toLevel(ILch/qos/logback/classic/Level;)Lch/qos/logback/classic/Level;","toLevel(Ljava/lang/String;)Lch/qos/logback/classic/Level;","toLevel(Ljava/lang/String;Lch/qos/logback/classic/Level;)Lch/qos/logback/classic/Level;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/Logger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/Logger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/Logger;","Lorg/slf4j/spi/LocationAwareLogger;","Lch/qos/logback/core/spi/AppenderAttachable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/LoggerContext;)V","addAppender(Lch/qos/logback/core/Appender;)V","appendLoopOnAppenders(Lch/qos/logback/classic/spi/ILoggingEvent;)I","buildLoggingEventAndAppend(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","callAppenders(Lch/qos/logback/classic/spi/ILoggingEvent;)V","callTurboFilters(Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;)Lch/qos/logback/core/spi/FilterReply;","createChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;","debug(Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","detachAndStopAllAppenders()V","error(Ljava/lang/String;Ljava/lang/Throwable;)V","filterAndLog_0_Or3Plus(Ljava/lang/String;Lorg/slf4j/Marker;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","getChildByName(Ljava/lang/String;)Lch/qos/logback/classic/Logger;","getEffectiveLevel()Lch/qos/logback/classic/Level;","getLevel()Lch/qos/logback/classic/Level;","getLoggerContext()Lch/qos/logback/classic/LoggerContext;","getName()Ljava/lang/String;","handleParentLevelChange(I)V","info(Ljava/lang/String;)V","info(Ljava/lang/String;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isDebugEnabled(Lorg/slf4j/Marker;)Z","isErrorEnabled()Z","isErrorEnabled(Lorg/slf4j/Marker;)Z","isInfoEnabled()Z","isInfoEnabled(Lorg/slf4j/Marker;)Z","isRootLogger()Z","isTraceEnabled()Z","isTraceEnabled(Lorg/slf4j/Marker;)Z","isWarnEnabled()Z","isWarnEnabled(Lorg/slf4j/Marker;)Z","localLevelReset()V","log(Lorg/slf4j/Marker;Ljava/lang/String;ILjava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","recursiveReset()V","setAdditive(Z)V","setLevel(Lch/qos/logback/classic/Level;)V","toString()Ljava/lang/String;","trace(Ljava/lang/String;)V","trace(Ljava/lang/String;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/LoggerContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/LoggerContext.class",
    "super": "Lch/qos/logback/core/ContextBase;",
    "interfaces": ["Lorg/slf4j/ILoggerFactory;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addListener(Lch/qos/logback/classic/spi/LoggerContextListener;)V","cancelScheduledTasks()V","fireOnLevelChange(Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;)V","fireOnReset()V","fireOnStart()V","fireOnStop()V","getCopyOfListenerList()Ljava/util/List;","getFrameworkPackages()Ljava/util/List;","getLogger(Ljava/lang/String;)Lch/qos/logback/classic/Logger;","getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;","getLoggerContextRemoteView()Lch/qos/logback/classic/spi/LoggerContextVO;","getMaxCallerDataDepth()I","getTurboFilterChainDecision_0_3OrMore(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;","incSize()V","initEvaluatorMap()V","isPackagingDataEnabled()Z","noAppenderDefinedWarning(Lch/qos/logback/classic/Logger;)V","putProperty(Ljava/lang/String;Ljava/lang/String;)V","reset()V","resetAllListeners()V","resetListenersExceptResetResistant()V","resetStatusListeners()V","resetTurboFilterList()V","setName(Ljava/lang/String;)V","setPackagingDataEnabled(Z)V","start()V","stop()V","toString()Ljava/lang/String;","updateLoggerContextVO()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/PatternLayout;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/PatternLayout.class",
    "super": "Lch/qos/logback/core/pattern/PatternLayoutBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: ch.qos.logback.core.pattern.parser.Parser",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/boolex/JaninoEventEvaluator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/boolex/JaninoEventEvaluator.class",
    "super": "Lch/qos/logback/core/boolex/JaninoEventEvaluatorBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/encoder/PatternLayoutEncoder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/encoder/PatternLayoutEncoder.class",
    "super": "Lch/qos/logback/core/pattern/PatternLayoutEncoderBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/gaffer/GafferUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/gaffer/GafferUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addError(Lch/qos/logback/classic/LoggerContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V","newGafferConfiguratorInstance(Lch/qos/logback/classic/LoggerContext;Ljava/lang/Object;)Ljava/lang/Object;","runGafferConfiguratorOn(Lch/qos/logback/classic/LoggerContext;Ljava/lang/Object;Ljava/net/URL;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/jmx/JMXConfigurator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/jmx/JMXConfigurator.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/classic/jmx/JMXConfiguratorMBean;","Lch/qos/logback/classic/spi/LoggerContextListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/classic/LoggerContext;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)V","clearFields()V","isResetResistant()Z","onLevelChange(Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;)V","onReset(Lch/qos/logback/classic/LoggerContext;)V","onStart(Lch/qos/logback/classic/LoggerContext;)V","onStop(Lch/qos/logback/classic/LoggerContext;)V","previouslyRegisteredListenerWithSameObjectName()Z","stop()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/jmx/JMXConfiguratorMBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/jmx/JMXConfiguratorMBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/jmx/MBeanUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/jmx/MBeanUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getObjectNameFor(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/String;","isRegistered(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Z","string2ObjectName(Lch/qos/logback/core/Context;Ljava/lang/Object;Ljava/lang/String;)Ljavax/management/ObjectName;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/JoranConfigurator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/JoranConfigurator.class",
    "super": "Lch/qos/logback/core/joran/JoranConfiguratorBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addDefaultNestedComponentRegistryRules(Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;)V","addInstanceRules(Lch/qos/logback/core/joran/spi/RuleStore;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/ReconfigureOnChangeTask;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/ReconfigureOnChangeTask.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","fallbackConfiguration(Lch/qos/logback/classic/LoggerContext;Ljava/util/List;Ljava/net/URL;)V","fireChangeDetected()V","fireDoneReconfiguring()V","fireEnteredRunMethod()V","performXMLConfiguration(Lch/qos/logback/classic/LoggerContext;Ljava/net/URL;)V","removeIncludeEvents(Ljava/util/List;)Ljava/util/List;","run()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/ReconfigureOnChangeTaskListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/ReconfigureOnChangeTaskListener.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/ConfigurationAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/ConfigurationAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","getDuration(Ljava/lang/String;Ljava/lang/String;)Lch/qos/logback/core/util/Duration;","getSystemProperty(Ljava/lang/String;)Ljava/lang/String;","processScanAttrib(Lch/qos/logback/core/joran/spi/InterpretationContext;Lorg/xml/sax/Attributes;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/ConsolePluginAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/ConsolePluginAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/ContextNameAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/ContextNameAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","body(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/EvaluatorAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/EvaluatorAction.class",
    "super": "Lch/qos/logback/core/joran/action/AbstractEventEvaluatorAction;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","defaultClassName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/InsertFromJNDIAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/InsertFromJNDIAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/JMXConfiguratorAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/JMXConfiguratorAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/LevelAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/LevelAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/LoggerAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/LoggerAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/LoggerContextListenerAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/LoggerContextListenerAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/ReceiverAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/ReceiverAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/joran/action/RootLoggerAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/joran/action/RootLoggerAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/layout/TTLLLayout;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/layout/TTLLLayout.class",
    "super": "Lch/qos/logback/core/LayoutBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","doLayout(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/lang/String;","doLayout(Ljava/lang/Object;)Ljava/lang/String;","start()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/net/LoggingEventPreSerializationTransformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/net/LoggingEventPreSerializationTransformer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/spi/PreSerializationTransformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","transform(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/io/Serializable;","transform(Ljava/lang/Object;)Ljava/io/Serializable;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/net/ReceiverBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/net/ReceiverBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/net/SocketAppender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/net/SocketAppender.class",
    "super": "Lch/qos/logback/core/net/AbstractSocketAppender;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","getPST()Lch/qos/logback/core/spi/PreSerializationTransformer;","postProcessEvent(Lch/qos/logback/classic/spi/ILoggingEvent;)V","postProcessEvent(Ljava/lang/Object;)V","setIncludeCallerData(Z)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/CallerDataConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/CallerDataConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ClassOfCallerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ClassOfCallerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/NamedConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ClassicConverter.class",
    "super": "Lch/qos/logback/core/pattern/DynamicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ContextNameConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ContextNameConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/DateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/DateConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ThrowableProxyConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/FileOfCallerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/FileOfCallerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/LevelConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/LevelConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/LineOfCallerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/LineOfCallerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/LineSeparatorConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/LineSeparatorConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/LocalSequenceNumberConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/LocalSequenceNumberConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/LoggerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/LoggerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/NamedConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/MDCConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/MDCConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/MarkerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/MarkerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/MessageConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/MessageConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/MethodOfCallerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/MethodOfCallerConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/NamedConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/NamedConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/NopThrowableInformationConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/NopThrowableInformationConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ThrowableHandlingConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/PropertyConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/PropertyConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/RelativeTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/RelativeTimeConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/RootCauseFirstThrowableProxyConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/RootCauseFirstThrowableProxyConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ThreadConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ThreadConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ThrowableHandlingConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ThrowableHandlingConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ClassicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/ThrowableProxyConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/ThrowableProxyConverter.class",
    "super": "Lch/qos/logback/classic/pattern/ThrowableHandlingConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addEvaluator(Lch/qos/logback/core/boolex/EventEvaluator;)V","addIgnoreStackTraceLine(Ljava/lang/String;)V","convert(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/lang/String;","extraData(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/StackTraceElementProxy;)V","isIgnoredStackTraceLine(Ljava/lang/String;)Z","printIgnoredCount(Ljava/lang/StringBuilder;I)V","printStackLine(Ljava/lang/StringBuilder;ILch/qos/logback/classic/spi/StackTraceElementProxy;)V","recursiveAppend(Ljava/lang/StringBuilder;Ljava/lang/String;ILch/qos/logback/classic/spi/IThrowableProxy;)V","start()V","stop()V","subjoinExceptionMessage(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/IThrowableProxy;)V","subjoinFirstLine(Ljava/lang/StringBuilder;Ljava/lang/String;ILch/qos/logback/classic/spi/IThrowableProxy;)V","subjoinSTEPArray(Ljava/lang/StringBuilder;ILch/qos/logback/classic/spi/IThrowableProxy;)V","throwableProxyToString(Lch/qos/logback/classic/spi/IThrowableProxy;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/pattern/color/HighlightingCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/pattern/color/HighlightingCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/selector/ContextJNDISelector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/selector/ContextJNDISelector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/selector/ContextSelector;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>(Lch/qos/logback/classic/LoggerContext;)V","configureLoggerContextByURL(Lch/qos/logback/classic/LoggerContext;Ljava/net/URL;)V","conventionalConfigFileName(Ljava/lang/String;)Ljava/lang/String;","findConfigFileURL(Ljavax/naming/Context;Lch/qos/logback/classic/LoggerContext;)Ljava/net/URL;","getLoggerContext()Lch/qos/logback/classic/LoggerContext;","urlByResourceName(Lch/qos/logback/core/status/StatusManager;Ljava/lang/String;)Ljava/net/URL;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/selector/ContextSelector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/selector/ContextSelector.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/selector/DefaultContextSelector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/selector/DefaultContextSelector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/selector/ContextSelector;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/classic/LoggerContext;)V","getDefaultLoggerContext()Lch/qos/logback/classic/LoggerContext;","getLoggerContext()Lch/qos/logback/classic/LoggerContext;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/sift/AppenderFactoryUsingJoran;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/sift/AppenderFactoryUsingJoran.class",
    "super": "Lch/qos/logback/core/sift/AbstractAppenderFactoryUsingJoran;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/sift/SiftAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/sift/SiftAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": ["Lch/qos/logback/core/joran/event/InPlayListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","inPlay(Lch/qos/logback/core/joran/event/SaxEvent;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/sift/SiftingAppender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/sift/SiftingAppender.class",
    "super": "Lch/qos/logback/core/sift/SiftingAppenderBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/CallerData;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/CallerData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","extract(Ljava/lang/Throwable;Ljava/lang/String;ILjava/util/List;)[Ljava/lang/StackTraceElement;","isInFrameworkSpace(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Z","isInFrameworkSpaceList(Ljava/lang/String;Ljava/util/List;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/ClassPackagingData;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/ClassPackagingData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/Configurator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/Configurator.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/EventArgUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/EventArgUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["extractThrowable([Ljava/lang/Object;)Ljava/lang/Throwable;","successfulExtraction(Ljava/lang/Throwable;)Z","trimmedCopy([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/ILoggingEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/ILoggingEvent.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/DeferredProcessingAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/IThrowableProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/IThrowableProxy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/LoggerContextListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/LoggerContextListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/LoggerContextVO;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/LoggerContextVO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/classic/LoggerContext;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/LoggingEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/LoggingEvent.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/spi/ILoggingEvent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V","extractThrowableAnRearrangeArguments([Ljava/lang/Object;)Ljava/lang/Throwable;","getArgumentArray()[Ljava/lang/Object;","getCallerData()[Ljava/lang/StackTraceElement;","getFormattedMessage()Ljava/lang/String;","getLevel()Lch/qos/logback/classic/Level;","getLoggerContextVO()Lch/qos/logback/classic/spi/LoggerContextVO;","getLoggerName()Ljava/lang/String;","getMDCPropertyMap()Ljava/util/Map;","getMarker()Lorg/slf4j/Marker;","getMessage()Ljava/lang/String;","getThreadName()Ljava/lang/String;","getThrowableProxy()Lch/qos/logback/classic/spi/IThrowableProxy;","getTimeStamp()J","hasCallerData()Z","prepareForDeferredProcessing()V","setMarker(Lorg/slf4j/Marker;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/LoggingEventVO;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/LoggingEventVO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/spi/ILoggingEvent;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","build(Lch/qos/logback/classic/spi/ILoggingEvent;)Lch/qos/logback/classic/spi/LoggingEventVO;","equals(Ljava/lang/Object;)Z","getArgumentArray()[Ljava/lang/Object;","getCallerData()[Ljava/lang/StackTraceElement;","getLevel()Lch/qos/logback/classic/Level;","getLoggerContextVO()Lch/qos/logback/classic/spi/LoggerContextVO;","getLoggerName()Ljava/lang/String;","getMDCPropertyMap()Ljava/util/Map;","getMarker()Lorg/slf4j/Marker;","getMessage()Ljava/lang/String;","getThreadName()Ljava/lang/String;","getThrowableProxy()Lch/qos/logback/classic/spi/IThrowableProxy;","getTimeStamp()J","hasCallerData()Z","hashCode()I"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/PackagingDataCalculator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/PackagingDataCalculator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Throwable.UNASSIGNED_STACK",
    "invokedMethods": ["<clinit>()V","<init>()V","bestEffortLoadClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;","calculate(Lch/qos/logback/classic/spi/IThrowableProxy;)V","computeBySTEP(Lch/qos/logback/classic/spi/StackTraceElementProxy;Ljava/lang/ClassLoader;)Lch/qos/logback/classic/spi/ClassPackagingData;","getCodeLocation(Ljava/lang/Class;)Ljava/lang/String;","getCodeLocation(Ljava/lang/String;C)Ljava/lang/String;","getImplementationVersion(Ljava/lang/Class;)Ljava/lang/String;","isFolder(ILjava/lang/String;)Z","loadClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;","populateFrames([Lch/qos/logback/classic/spi/StackTraceElementProxy;)V","populateUncommonFrames(I[Lch/qos/logback/classic/spi/StackTraceElementProxy;Ljava/lang/ClassLoader;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/PlatformInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/PlatformInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hasJMXObjectName()Z"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/STEUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/STEUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findNumberOfCommonFrames([Ljava/lang/StackTraceElement;[Lch/qos/logback/classic/spi/StackTraceElementProxy;)I"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/StackTraceElementProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/StackTraceElementProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/StackTraceElement;)V","equals(Ljava/lang/Object;)Z","getSTEAsString()Ljava/lang/String;","hashCode()I","setClassPackagingData(Lch/qos/logback/classic/spi/ClassPackagingData;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/ThrowableProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/ThrowableProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/spi/IThrowableProxy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Throwable;)V","calculatePackagingData()V","getCause()Lch/qos/logback/classic/spi/IThrowableProxy;","getClassName()Ljava/lang/String;","getCommonFrames()I","getMessage()Ljava/lang/String;","getPackagingDataCalculator()Lch/qos/logback/classic/spi/PackagingDataCalculator;","getStackTraceElementProxyArray()[Lch/qos/logback/classic/spi/StackTraceElementProxy;","getSuppressed()[Lch/qos/logback/classic/spi/IThrowableProxy;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/ThrowableProxyUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/ThrowableProxyUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findNumberOfCommonFrames([Ljava/lang/StackTraceElement;[Lch/qos/logback/classic/spi/StackTraceElementProxy;)I","indent(Ljava/lang/StringBuilder;I)V","steArrayToStepArray([Ljava/lang/StackTraceElement;)[Lch/qos/logback/classic/spi/StackTraceElementProxy;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/ThrowableProxyVO;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/ThrowableProxyVO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/classic/spi/IThrowableProxy;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","build(Lch/qos/logback/classic/spi/IThrowableProxy;)Lch/qos/logback/classic/spi/ThrowableProxyVO;","equals(Ljava/lang/Object;)Z","getCause()Lch/qos/logback/classic/spi/IThrowableProxy;","getClassName()Ljava/lang/String;","getCommonFrames()I","getMessage()Ljava/lang/String;","getStackTraceElementProxyArray()[Lch/qos/logback/classic/spi/StackTraceElementProxy;","getSuppressed()[Lch/qos/logback/classic/spi/IThrowableProxy;","hashCode()I"]
  }
,
  {
    "className": "Lch/qos/logback/classic/spi/TurboFilterList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/spi/TurboFilterList.class",
    "super": "Ljava/util/concurrent/CopyOnWriteArrayList;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getTurboFilterChainDecision(Lorg/slf4j/Marker;Lch/qos/logback/classic/Logger;Lch/qos/logback/classic/Level;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lch/qos/logback/core/spi/FilterReply;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/turbo/TurboFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/turbo/TurboFilter.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/classic/util/ContextInitializer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/ContextInitializer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/classic/LoggerContext;)V","autoConfig()V","configureByResource(Ljava/net/URL;)V","findConfigFileURLFromSystemProperties(Ljava/lang/ClassLoader;Z)Ljava/net/URL;","findURLOfDefaultConfigurationFile(Z)Ljava/net/URL;","getResource(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/net/URL;","multiplicityWarning(Ljava/lang/String;Ljava/lang/ClassLoader;)V","statusOnResourceSearch(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/net/URL;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/ContextSelectorStaticBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/ContextSelectorStaticBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["dynamicalContextSelector(Lch/qos/logback/classic/LoggerContext;Ljava/lang/String;)Lch/qos/logback/classic/selector/ContextSelector;","getContextSelector()Lch/qos/logback/classic/selector/ContextSelector;","getSingleton()Lch/qos/logback/classic/util/ContextSelectorStaticBinder;","init(Lch/qos/logback/classic/LoggerContext;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/DefaultNestedComponentRules;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/DefaultNestedComponentRules.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addDefaultNestedComponentRegistryRules(Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;)V"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/EnvUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/EnvUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getServiceLoaderClassLoader()Ljava/lang/ClassLoader;","isGroovyAvailable()Z","loadFromServiceLoader(Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/JNDIUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/JNDIUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getInitialContext()Ljavax/naming/Context;","lookup(Ljavax/naming/Context;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/LogbackMDCAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/LogbackMDCAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/spi/MDCAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getPropertyMap()Ljava/util/Map;"]
  }
,
  {
    "className": "Lch/qos/logback/classic/util/LoggerNameUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/ch/qos/logback/classic/util/LoggerNameUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getSeparatorIndexOf(Ljava/lang/String;I)I"]
  }
,
  {
    "className": "Lch/qos/logback/core/Appender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/Appender.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/LifeCycle;","Lch/qos/logback/core/spi/ContextAware;","Lch/qos/logback/core/spi/FilterAttachable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/AppenderBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/AppenderBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/Appender;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","doAppend(Ljava/lang/Object;)V","getFilterChainDecision(Ljava/lang/Object;)Lch/qos/logback/core/spi/FilterReply;","getName()Ljava/lang/String;","isStarted()Z","setName(Ljava/lang/String;)V","start()V","stop()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/BasicStatusManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/BasicStatusManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/status/StatusManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Lch/qos/logback/core/status/Status;)V","add(Lch/qos/logback/core/status/StatusListener;)Z","checkForPresence(Ljava/util/List;Ljava/lang/Class;)Z","fireStatusAddEvent(Lch/qos/logback/core/status/Status;)V","getCopyOfStatusList()Ljava/util/List;","getCopyOfStatusListenerList()Ljava/util/List;","remove(Lch/qos/logback/core/status/StatusListener;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/ConsoleAppender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/ConsoleAppender.class",
    "super": "Lch/qos/logback/core/OutputStreamAppender;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getTargetStreamForWindows(Ljava/io/OutputStream;)Ljava/io/OutputStream;","start()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/Context;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/Context.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/PropertyContainer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/ContextBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/ContextBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/Context;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addScheduledFuture(Ljava/util/concurrent/ScheduledFuture;)V","getBirthTime()J","getConfigurationLock()Ljava/lang/Object;","getCopyOfPropertyMap()Ljava/util/Map;","getExecutorService()Ljava/util/concurrent/ExecutorService;","getLifeCycleManager()Lch/qos/logback/core/LifeCycleManager;","getName()Ljava/lang/String;","getObject(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getScheduledExecutorService()Ljava/util/concurrent/ScheduledExecutorService;","getStatusManager()Lch/qos/logback/core/status/StatusManager;","initCollisionMaps()V","isStarted()Z","lazyGetHostname()Ljava/lang/String;","putHostnameProperty(Ljava/lang/String;)V","putObject(Ljava/lang/String;Ljava/lang/Object;)V","putProperty(Ljava/lang/String;Ljava/lang/String;)V","register(Lch/qos/logback/core/spi/LifeCycle;)V","removeObject(Ljava/lang/String;)V","removeShutdownHook()V","reset()V","setName(Ljava/lang/String;)V","start()V","stop()V","stopExecutorService()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/CoreConstants;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/CoreConstants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/Layout;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/Layout.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/LayoutBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/LayoutBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/Layout;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFileFooter()Ljava/lang/String;","getFileHeader()Ljava/lang/String;","getPresentationFooter()Ljava/lang/String;","getPresentationHeader()Ljava/lang/String;","isStarted()Z","setContext(Lch/qos/logback/core/Context;)V","start()V","stop()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/LifeCycleManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/LifeCycleManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","register(Lch/qos/logback/core/spi/LifeCycle;)V","reset()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/LogbackException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/LogbackException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/OutputStreamAppender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/OutputStreamAppender.class",
    "super": "Lch/qos/logback/core/UnsynchronizedAppenderBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","append(Ljava/lang/Object;)V","closeOutputStream()V","encoderClose()V","encoderInit()V","setEncoder(Lch/qos/logback/core/encoder/Encoder;)V","setOutputStream(Ljava/io/OutputStream;)V","start()V","stop()V","subAppend(Ljava/lang/Object;)V","writeBytes([B)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/UnsynchronizedAppenderBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/UnsynchronizedAppenderBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/Appender;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","doAppend(Ljava/lang/Object;)V","getFilterChainDecision(Ljava/lang/Object;)Lch/qos/logback/core/spi/FilterReply;","getName()Ljava/lang/String;","isStarted()Z","setName(Ljava/lang/String;)V","start()V","stop()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/boolex/EvaluationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/boolex/EvaluationException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/boolex/EventEvaluator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/boolex/EventEvaluator.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/boolex/EventEvaluatorBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/boolex/EventEvaluatorBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/boolex/EventEvaluator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/boolex/JaninoEventEvaluatorBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/boolex/JaninoEventEvaluatorBase.class",
    "super": "Lch/qos/logback/core/boolex/EventEvaluatorBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/encoder/Encoder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/encoder/Encoder.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/encoder/EncoderBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/encoder/EncoderBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/encoder/Encoder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/encoder/LayoutWrappingEncoder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/encoder/LayoutWrappingEncoder.class",
    "super": "Lch/qos/logback/core/encoder/EncoderBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","appendIfNotNull(Ljava/lang/StringBuilder;Ljava/lang/String;)V","convertToBytes(Ljava/lang/String;)[B","encode(Ljava/lang/Object;)[B","footerBytes()[B","headerBytes()[B","isStarted()Z","setLayout(Lch/qos/logback/core/Layout;)V","start()V","stop()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/filter/AbstractMatcherFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/filter/AbstractMatcherFilter.class",
    "super": "Lch/qos/logback/core/filter/Filter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/filter/EvaluatorFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/filter/EvaluatorFilter.class",
    "super": "Lch/qos/logback/core/filter/AbstractMatcherFilter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/filter/Filter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/filter/Filter.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/helpers/CyclicBuffer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/helpers/CyclicBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","add(Ljava/lang/Object;)V","asList()Ljava/util/List;","get(I)Ljava/lang/Object;","init(I)V","length()I"]
  }
,
  {
    "className": "Lch/qos/logback/core/helpers/ThrowableToStringArray;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/helpers/ThrowableToStringArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convert(Ljava/lang/Throwable;)[Ljava/lang/String;","extract(Ljava/util/List;Ljava/lang/Throwable;[Ljava/lang/StackTraceElement;)V","findNumberOfCommonFrames([Ljava/lang/StackTraceElement;[Ljava/lang/StackTraceElement;)I","formatFirstLine(Ljava/lang/Throwable;[Ljava/lang/StackTraceElement;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/hook/ShutdownHook;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/hook/ShutdownHook.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Runnable;","Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/hook/ShutdownHookBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/hook/ShutdownHookBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/hook/ShutdownHook;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/joran/GenericConfigurator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/GenericConfigurator.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","buildInterpreter()V","doConfigure(Ljava/io/InputStream;Ljava/lang/String;)V","doConfigure(Ljava/net/URL;)V","doConfigure(Ljava/util/List;)V","doConfigure(Lorg/xml/sax/InputSource;)V","getBeanDescriptionCache()Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;","informContextOfURLUsedForConfiguration(Lch/qos/logback/core/Context;Ljava/net/URL;)V","initialElementPath()Lch/qos/logback/core/joran/spi/ElementPath;","recallSafeConfiguration()Ljava/util/List;","registerSafeConfiguration(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/JoranConfiguratorBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/JoranConfiguratorBase.class",
    "super": "Lch/qos/logback/core/joran/GenericConfigurator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addImplicitRules(Lch/qos/logback/core/joran/spi/Interpreter;)V","addInstanceRules(Lch/qos/logback/core/joran/spi/RuleStore;)V","buildInterpreter()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/AbstractEventEvaluatorAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/AbstractEventEvaluatorAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/Action;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/Action.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","body(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","getColumnNumber(Lch/qos/logback/core/joran/spi/InterpretationContext;)I","getLineColStr(Lch/qos/logback/core/joran/spi/InterpretationContext;)Ljava/lang/String;","getLineNumber(Lch/qos/logback/core/joran/spi/InterpretationContext;)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ActionUtil$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ActionUtil$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ActionUtil$Scope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ActionUtil$Scope.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lch/qos/logback/core/joran/action/ActionUtil$Scope;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ActionUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ActionUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["setProperties(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/util/Properties;Lch/qos/logback/core/joran/action/ActionUtil$Scope;)V","setProperty(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Ljava/lang/String;Lch/qos/logback/core/joran/action/ActionUtil$Scope;)V","stringToScope(Ljava/lang/String;)Lch/qos/logback/core/joran/action/ActionUtil$Scope;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/AppenderAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/AppenderAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/AppenderRefAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/AppenderRefAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ContextPropertyAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ContextPropertyAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ConversionRuleAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ConversionRuleAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/DefinePropertyAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/DefinePropertyAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/IADataForBasicProperty;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/IADataForBasicProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/PropertySetter;Lch/qos/logback/core/util/AggregationType;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/IADataForComplexProperty;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/IADataForComplexProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/PropertySetter;Lch/qos/logback/core/util/AggregationType;Ljava/lang/String;)V","getAggregationType()Lch/qos/logback/core/util/AggregationType;","getComplexPropertyName()Ljava/lang/String;","getNestedComplexProperty()Ljava/lang/Object;","setNestedComplexProperty(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ImplicitAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ImplicitAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/IncludeAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/IncludeAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","attributeToURL(Ljava/lang/String;)Ljava/net/URL;","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","checkAttributes(Lorg/xml/sax/Attributes;)Z","close(Ljava/io/InputStream;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","filePathAsURL(Ljava/lang/String;)Ljava/net/URL;","getInputStream(Lch/qos/logback/core/joran/spi/InterpretationContext;Lorg/xml/sax/Attributes;)Ljava/io/InputStream;","getInputURL(Lch/qos/logback/core/joran/spi/InterpretationContext;Lorg/xml/sax/Attributes;)Ljava/net/URL;","openURL(Ljava/net/URL;)Ljava/io/InputStream;","optionalWarning(Ljava/lang/String;)V","parseAndRecord(Ljava/io/InputStream;Lch/qos/logback/core/joran/event/SaxEventRecorder;)V","resourceAsURL(Ljava/lang/String;)Ljava/net/URL;","trimHeadAndTail(Lch/qos/logback/core/joran/event/SaxEventRecorder;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NOPAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NOPAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NestedBasicPropertyIA$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NestedBasicPropertyIA$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NestedBasicPropertyIA;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NestedBasicPropertyIA.class",
    "super": "Lch/qos/logback/core/joran/action/ImplicitAction;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;)V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","body(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","isApplicable(Lch/qos/logback/core/joran/spi/ElementPath;Lorg/xml/sax/Attributes;Lch/qos/logback/core/joran/spi/InterpretationContext;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NestedComplexPropertyIA$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NestedComplexPropertyIA$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NestedComplexPropertyIA;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NestedComplexPropertyIA.class",
    "super": "Lch/qos/logback/core/joran/action/ImplicitAction;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;)V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","isApplicable(Lch/qos/logback/core/joran/spi/ElementPath;Lorg/xml/sax/Attributes;Lch/qos/logback/core/joran/spi/InterpretationContext;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/NewRuleAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/NewRuleAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ParamAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ParamAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;)V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/PropertyAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/PropertyAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","checkFileAttributeSanity(Lorg/xml/sax/Attributes;)Z","checkResourceAttributeSanity(Lorg/xml/sax/Attributes;)Z","checkValueNameAttributesSanity(Lorg/xml/sax/Attributes;)Z","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","loadAndSetProperties(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/io/InputStream;Lch/qos/logback/core/joran/action/ActionUtil$Scope;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/ShutdownHookAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/ShutdownHookAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/StatusListenerAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/StatusListenerAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","isEffectivelyAdded()Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/action/TimestampAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/action/TimestampAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/ElseAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/ElseAction.class",
    "super": "Lch/qos/logback/core/joran/conditional/ThenOrElseActionBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","registerEventList(Lch/qos/logback/core/joran/conditional/IfAction;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/IfAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/IfAction.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","isActive()Z","setElseSaxEventList(Ljava/util/List;)V","setThenSaxEventList(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/IfState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/IfState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/PropertyEvalScriptBuilder.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/spi/PropertyContainer;)V","build(Ljava/lang/String;)Lch/qos/logback/core/joran/conditional/Condition;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/ThenAction;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/ThenAction.class",
    "super": "Lch/qos/logback/core/joran/conditional/ThenOrElseActionBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","registerEventList(Lch/qos/logback/core/joran/conditional/IfAction;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/ThenActionState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/ThenActionState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/joran/event/InPlayListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","inPlay(Lch/qos/logback/core/joran/event/SaxEvent;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/conditional/ThenOrElseActionBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/conditional/ThenOrElseActionBase.class",
    "super": "Lch/qos/logback/core/joran/action/Action;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","end(Lch/qos/logback/core/joran/spi/InterpretationContext;Ljava/lang/String;)V","removeFirstAndLastFromList(Ljava/util/List;)V","weAreActive(Lch/qos/logback/core/joran/spi/InterpretationContext;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/BodyEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/BodyEvent.class",
    "super": "Lch/qos/logback/core/joran/event/SaxEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/xml/sax/Locator;)V","append(Ljava/lang/String;)V","getText()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/EndEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/EndEvent.class",
    "super": "Lch/qos/logback/core/joran/event/SaxEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Locator;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/InPlayListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/InPlayListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/SaxEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/SaxEvent.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Locator;)V","getLocalName()Ljava/lang/String;","getLocator()Lorg/xml/sax/Locator;","getQName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/SaxEventRecorder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/SaxEventRecorder.class",
    "super": "Lorg/xml/sax/helpers/DefaultHandler;",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","addError(Ljava/lang/String;)V","addError(Ljava/lang/String;Ljava/lang/Throwable;)V","addWarn(Ljava/lang/String;Ljava/lang/Throwable;)V","buildSaxParser()Ljavax/xml/parsers/SAXParser;","characters([CII)V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","error(Lorg/xml/sax/SAXParseException;)V","fatalError(Lorg/xml/sax/SAXParseException;)V","getLastEvent()Lch/qos/logback/core/joran/event/SaxEvent;","getLocator()Lorg/xml/sax/Locator;","getTagName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","handleError(Ljava/lang/String;Ljava/lang/Throwable;)V","isSpaceOnly(Ljava/lang/String;)Z","recordEvents(Ljava/io/InputStream;)V","recordEvents(Lorg/xml/sax/InputSource;)Ljava/util/List;","setContext(Lch/qos/logback/core/Context;)V","setDocumentLocator(Lorg/xml/sax/Locator;)V","startDocument()V","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","warning(Lorg/xml/sax/SAXParseException;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/event/StartEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/event/StartEvent.class",
    "super": "Lch/qos/logback/core/joran/event/SaxEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/spi/ElementPath;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;Lorg/xml/sax/Locator;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ActionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ActionException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/CAI_WithLocatorSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/CAI_WithLocatorSupport.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;Lch/qos/logback/core/joran/spi/Interpreter;)V","getOrigin()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ConfigurationWatchList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ConfigurationWatchList.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addAsFileToWatch(Ljava/net/URL;)V","addToWatchList(Ljava/net/URL;)V","buildClone()Lch/qos/logback/core/joran/spi/ConfigurationWatchList;","changeDetected()Z","clear()V","convertToFile(Ljava/net/URL;)Ljava/io/File;","getCopyOfFileWatchList()Ljava/util/List;","getMainURL()Ljava/net/URL;","setMainURL(Ljava/net/URL;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ConsoleTarget$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ConsoleTarget$1.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","flush()V","write(I)V","write([B)V","write([BII)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ConsoleTarget$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ConsoleTarget$2.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","flush()V","write(I)V","write([B)V","write([BII)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ConsoleTarget;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ConsoleTarget.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/lang/String;Ljava/io/OutputStream;)V","getStream()Ljava/io/OutputStream;","toString()Ljava/lang/String;","values()[Lch/qos/logback/core/joran/spi/ConsoleTarget;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/DefaultClass;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/DefaultClass.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)V","findDefaultComponentType(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;","oneShotFind(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ElementPath;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ElementPath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/util/List;)V","duplicate()Lch/qos/logback/core/joran/spi/ElementPath;","equalityCheck(Ljava/lang/String;Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/String;","getCopyOfPartList()Ljava/util/List;","peekLast()Ljava/lang/String;","pop()V","push(Ljava/lang/String;)V","size()I","toStableString()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/ElementSelector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/ElementSelector.class",
    "super": "Lch/qos/logback/core/joran/spi/ElementPath;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/util/List;)V","equalityCheck(Ljava/lang/String;Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","fullPathMatch(Lch/qos/logback/core/joran/spi/ElementPath;)Z","getPrefixMatchLength(Lch/qos/logback/core/joran/spi/ElementPath;)I","getTailMatchLength(Lch/qos/logback/core/joran/spi/ElementPath;)I","hashCode()I","isContainedIn(Lch/qos/logback/core/joran/spi/ElementPath;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/EventPlayer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/EventPlayer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/spi/Interpreter;)V","addEventsDynamically(Ljava/util/List;I)V","play(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/HostClassAndPropertyDouble;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/HostClassAndPropertyDouble.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/InterpretationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/InterpretationContext.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/spi/PropertyContainer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;Lch/qos/logback/core/joran/spi/Interpreter;)V","addInPlayListener(Lch/qos/logback/core/joran/event/InPlayListener;)V","addSubstitutionProperties(Ljava/util/Properties;)V","addSubstitutionProperty(Ljava/lang/String;Ljava/lang/String;)V","fireInPlay(Lch/qos/logback/core/joran/event/SaxEvent;)V","getCopyOfPropertyMap()Ljava/util/Map;","getDefaultNestedComponentRegistry()Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;","getJoranInterpreter()Lch/qos/logback/core/joran/spi/Interpreter;","getObjectMap()Ljava/util/Map;","getProperty(Ljava/lang/String;)Ljava/lang/String;","isEmpty()Z","isListenerListEmpty()Z","peekObject()Ljava/lang/Object;","popObject()Ljava/lang/Object;","pushObject(Ljava/lang/Object;)V","removeInPlayListener(Lch/qos/logback/core/joran/event/InPlayListener;)Z","subst(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/Interpreter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/Interpreter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;Lch/qos/logback/core/joran/spi/RuleStore;Lch/qos/logback/core/joran/spi/ElementPath;)V","addImplicitAction(Lch/qos/logback/core/joran/action/ImplicitAction;)V","callBeginAction(Ljava/util/List;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","callBodyAction(Ljava/util/List;Ljava/lang/String;)V","callEndAction(Ljava/util/List;Ljava/lang/String;)V","characters(Lch/qos/logback/core/joran/event/BodyEvent;)V","endElement(Lch/qos/logback/core/joran/event/EndEvent;)V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getApplicableActionList(Lch/qos/logback/core/joran/spi/ElementPath;Lorg/xml/sax/Attributes;)Ljava/util/List;","getEventPlayer()Lch/qos/logback/core/joran/spi/EventPlayer;","getInterpretationContext()Lch/qos/logback/core/joran/spi/InterpretationContext;","getLocator()Lorg/xml/sax/Locator;","getRuleStore()Lch/qos/logback/core/joran/spi/RuleStore;","getTagName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","lookupImplicitAction(Lch/qos/logback/core/joran/spi/ElementPath;Lorg/xml/sax/Attributes;Lch/qos/logback/core/joran/spi/InterpretationContext;)Ljava/util/List;","pushEmptyActionList()V","setDocumentLocator(Lorg/xml/sax/Locator;)V","startElement(Lch/qos/logback/core/joran/event/StartEvent;)V","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/JoranException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/JoranException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/NoAutoStart;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/NoAutoStart.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/NoAutoStartUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/NoAutoStartUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["notMarkedWithNoAutoStart(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/RuleStore;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/RuleStore.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/joran/spi/SimpleRuleStore;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/spi/SimpleRuleStore.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/joran/spi/RuleStore;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","addRule(Lch/qos/logback/core/joran/spi/ElementSelector;Lch/qos/logback/core/joran/action/Action;)V","addRule(Lch/qos/logback/core/joran/spi/ElementSelector;Ljava/lang/String;)V","fullPathMatch(Lch/qos/logback/core/joran/spi/ElementPath;)Ljava/util/List;","isKleeneStar(Ljava/lang/String;)Z","isSuffixPattern(Lch/qos/logback/core/joran/spi/ElementSelector;)Z","matchActions(Lch/qos/logback/core/joran/spi/ElementPath;)Ljava/util/List;","middleMatch(Lch/qos/logback/core/joran/spi/ElementPath;)Ljava/util/List;","prefixMatch(Lch/qos/logback/core/joran/spi/ElementPath;)Ljava/util/List;","suffixMatch(Lch/qos/logback/core/joran/spi/ElementPath;)Ljava/util/List;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/ConfigurationWatchListUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/ConfigurationWatchListUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addInfo(Lch/qos/logback/core/Context;Ljava/lang/String;)V","addStatus(Lch/qos/logback/core/Context;Lch/qos/logback/core/status/Status;)V","addToWatchList(Lch/qos/logback/core/Context;Ljava/net/URL;)V","addWarn(Lch/qos/logback/core/Context;Ljava/lang/String;)V","getConfigurationWatchList(Lch/qos/logback/core/Context;)Lch/qos/logback/core/joran/spi/ConfigurationWatchList;","getMainWatchURL(Lch/qos/logback/core/Context;)Ljava/net/URL;","registerConfigurationWatchList(Lch/qos/logback/core/Context;Lch/qos/logback/core/joran/spi/ConfigurationWatchList;)V","setMainWatchURL(Lch/qos/logback/core/Context;Ljava/net/URL;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/PropertySetter$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/PropertySetter$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/PropertySetter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/PropertySetter.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;Ljava/lang/Object;)V","addBasicProperty(Ljava/lang/String;Ljava/lang/String;)V","addComplexProperty(Ljava/lang/String;Ljava/lang/Object;)V","capitalizeFirstLetter(Ljava/lang/String;)Ljava/lang/String;","computeAggregationType(Ljava/lang/String;)Lch/qos/logback/core/util/AggregationType;","computeRawAggregationType(Ljava/lang/reflect/Method;)Lch/qos/logback/core/util/AggregationType;","findAdderMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;","findSetterMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;","getAnnotation(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/annotation/Annotation;","getByConcreteType(Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Class;","getClassNameViaImplicitRules(Ljava/lang/String;Lch/qos/logback/core/util/AggregationType;Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;)Ljava/lang/Class;","getDefaultClassNameByAnnonation(Ljava/lang/String;Ljava/lang/reflect/Method;)Ljava/lang/Class;","getObj()Ljava/lang/Object;","getParameterClassForMethod(Ljava/lang/reflect/Method;)Ljava/lang/Class;","getRelevantMethod(Ljava/lang/String;Lch/qos/logback/core/util/AggregationType;)Ljava/lang/reflect/Method;","invokeMethodWithSingleParameterOnThisObject(Ljava/lang/reflect/Method;Ljava/lang/Object;)V","isSanityCheckSuccessful(Ljava/lang/String;Ljava/lang/reflect/Method;[Ljava/lang/Class;Ljava/lang/Object;)Z","isUnequivocallyInstantiable(Ljava/lang/Class;)Z","setComplexProperty(Ljava/lang/String;Ljava/lang/Object;)V","setProperty(Ljava/lang/String;Ljava/lang/String;)V","setProperty(Ljava/lang/reflect/Method;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/StringToObjectConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/StringToObjectConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["canBeBuiltFromSimpleString(Ljava/lang/Class;)Z","convertArg(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","convertByValueOfMethod(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","convertToCharset(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;)Ljava/nio/charset/Charset;","convertToEnum(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","followsTheValueOfConvention(Ljava/lang/Class;)Z","getValueOfMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;","isOfTypeCharset(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/beans/BeanDescription;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/beans/BeanDescription.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V","getAdder(Ljava/lang/String;)Ljava/lang/reflect/Method;","getSetter(Ljava/lang/String;)Ljava/lang/reflect/Method;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/beans/BeanDescriptionCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/beans/BeanDescriptionCache.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","getBeanDescription(Ljava/lang/Class;)Lch/qos/logback/core/joran/util/beans/BeanDescription;","getBeanDescriptionFactory()Lch/qos/logback/core/joran/util/beans/BeanDescriptionFactory;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/beans/BeanDescriptionFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/beans/BeanDescriptionFactory.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","create(Ljava/lang/Class;)Lch/qos/logback/core/joran/util/beans/BeanDescription;"]
  }
,
  {
    "className": "Lch/qos/logback/core/joran/util/beans/BeanUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/joran/util/beans/BeanUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getParameterCount(Ljava/lang/reflect/Method;)I","getPropertyName(Ljava/lang/reflect/Method;)Ljava/lang/String;","getSubstringIfPrefixMatches(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","isAdder(Ljava/lang/reflect/Method;)Z","isGetter(Ljava/lang/reflect/Method;)Z","isSetter(Ljava/lang/reflect/Method;)Z","toLowerCamelCase(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/AbstractSocketAppender$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/AbstractSocketAppender$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/net/AbstractSocketAppender;)V","run()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/AbstractSocketAppender;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/AbstractSocketAppender.class",
    "super": "Lch/qos/logback/core/AppenderBase;",
    "interfaces": ["Lch/qos/logback/core/net/SocketConnector$ExceptionHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lch/qos/logback/core/net/QueueFactory;Lch/qos/logback/core/net/ObjectWriterFactory;)V","access$000(Lch/qos/logback/core/net/AbstractSocketAppender;)V","append(Ljava/lang/Object;)V","connectSocketAndDispatchEvents()V","connectionFailed(Lch/qos/logback/core/net/SocketConnector;Ljava/lang/Exception;)V","createConnector(Ljava/net/InetAddress;IIJ)Lch/qos/logback/core/net/SocketConnector;","createObjectWriterForSocket()Lch/qos/logback/core/net/ObjectWriter;","dispatchEvents(Lch/qos/logback/core/net/ObjectWriter;)V","getSocketFactory()Ljavax/net/SocketFactory;","newConnector(Ljava/net/InetAddress;IJJ)Lch/qos/logback/core/net/SocketConnector;","setPort(I)V","setRemoteHost(Ljava/lang/String;)V","socketConnectionCouldBeEstablished()Z","start()V","stop()V","tryReAddingEventToFrontOfQueue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/AutoFlushingObjectWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/AutoFlushingObjectWriter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/net/ObjectWriter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectOutputStream;I)V","preventMemoryLeak()V","write(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/DefaultSocketConnector$ConsoleExceptionHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/DefaultSocketConnector$ConsoleExceptionHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/net/SocketConnector$ExceptionHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lch/qos/logback/core/net/DefaultSocketConnector$1;)V","connectionFailed(Lch/qos/logback/core/net/SocketConnector;Ljava/lang/Exception;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/DefaultSocketConnector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/DefaultSocketConnector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/net/SocketConnector;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/InetAddress;IJJ)V","<init>(Ljava/net/InetAddress;ILch/qos/logback/core/util/DelayStrategy;)V","call()Ljava/net/Socket;","createSocket()Ljava/net/Socket;","setExceptionHandler(Lch/qos/logback/core/net/SocketConnector$ExceptionHandler;)V","setSocketFactory(Ljavax/net/SocketFactory;)V","useDefaultsForMissingFields()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/ObjectWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ObjectWriter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ObjectWriterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ObjectWriterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newAutoFlushingObjectWriter(Ljava/io/OutputStream;)Lch/qos/logback/core/net/AutoFlushingObjectWriter;"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/QueueFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/QueueFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newLinkedBlockingDeque(I)Ljava/util/concurrent/LinkedBlockingDeque;"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/SocketConnector$ExceptionHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/SocketConnector$ExceptionHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/SocketConnector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/SocketConnector.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/Callable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/KeyManagerFactoryFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/KeyManagerFactoryFactoryBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/KeyStoreFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/KeyStoreFactoryBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SSLComponent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SSLComponent.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SSLConfiguration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SSLConfiguration.class",
    "super": "Lch/qos/logback/core/net/ssl/SSLContextFactoryBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SSLContextFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SSLContextFactoryBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SSLNestedComponentRegistryRules;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SSLNestedComponentRegistryRules.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addDefaultNestedComponentRegistryRules(Lch/qos/logback/core/joran/spi/DefaultNestedComponentRegistry;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SSLParametersConfiguration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SSLParametersConfiguration.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/SecureRandomFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/SecureRandomFactoryBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/net/ssl/TrustManagerFactoryFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/net/ssl/TrustManagerFactoryFactoryBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/CompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/CompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/DynamicConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/Converter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/Converter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/DynamicConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/DynamicConverter.class",
    "super": "Lch/qos/logback/core/pattern/FormattingConverter;",
    "interfaces": ["Lch/qos/logback/core/spi/LifeCycle;","Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addError(Ljava/lang/String;)V","addError(Ljava/lang/String;Ljava/lang/Throwable;)V","addStatus(Lch/qos/logback/core/status/Status;)V","getContext()Lch/qos/logback/core/Context;","getFirstOption()Ljava/lang/String;","getOptionList()Ljava/util/List;","isStarted()Z","setContext(Lch/qos/logback/core/Context;)V","start()V","stop()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/FormattingConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/FormattingConverter.class",
    "super": "Lch/qos/logback/core/pattern/Converter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/IdentityCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/IdentityCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/CompositeConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/PatternLayoutBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/PatternLayoutBase.class",
    "super": "Lch/qos/logback/core/LayoutBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/PatternLayoutEncoderBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/PatternLayoutEncoderBase.class",
    "super": "Lch/qos/logback/core/encoder/LayoutWrappingEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/ReplacingCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/ReplacingCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/CompositeConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BlackCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BlackCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BlueCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BlueCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldBlueCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldBlueCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldCyanCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldCyanCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldGreenCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldGreenCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldMagentaCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldMagentaCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldRedCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldRedCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldWhiteCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldWhiteCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/BoldYellowCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/BoldYellowCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/CyanCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/CyanCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase.class",
    "super": "Lch/qos/logback/core/pattern/CompositeConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/GrayCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/GrayCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/GreenCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/GreenCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/MagentaCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/MagentaCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/RedCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/RedCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/WhiteCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/WhiteCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/color/YellowCompositeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/color/YellowCompositeConverter.class",
    "super": "Lch/qos/logback/core/pattern/color/ForegroundCompositeConverterBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/parser/Parser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/parser/Parser.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: ch.qos.logback.core.pattern.parser.Token.BARE_COMPOSITE_KEYWORD_TOKEN",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/parser/Token;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/parser/Token.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/util/IEscapeUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/util/IEscapeUtil.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/pattern/util/RegularEscapeUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/pattern/util/RegularEscapeUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/pattern/util/IEscapeUtil;"],
    "safeForPreinit": "true",
    "invokedMethods": ["basicEscape(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/sift/AbstractAppenderFactoryUsingJoran;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/sift/AbstractAppenderFactoryUsingJoran.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/sift/AppenderFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","removeSiftElement(Ljava/util/List;)Ljava/util/List;"]
  }
,
  {
    "className": "Lch/qos/logback/core/sift/AppenderFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/sift/AppenderFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/sift/SiftingAppenderBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/sift/SiftingAppenderBase.class",
    "super": "Lch/qos/logback/core/AppenderBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/AppenderAttachable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/AppenderAttachable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/AppenderAttachableImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/AppenderAttachableImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/spi/AppenderAttachable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.System.currentTimeMillis()",
    "invokedMethods": ["<clinit>()V","<init>()V","addAppender(Lch/qos/logback/core/Appender;)V","appendLoopOnAppenders(Ljava/lang/Object;)I","detachAndStopAllAppenders()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/spi/ContextAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/ContextAware.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/ContextAwareBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lch/qos/logback/core/spi/ContextAware;)V","addError(Ljava/lang/String;)V","addError(Ljava/lang/String;Ljava/lang/Throwable;)V","addInfo(Ljava/lang/String;)V","addStatus(Lch/qos/logback/core/status/Status;)V","addWarn(Ljava/lang/String;)V","addWarn(Ljava/lang/String;Ljava/lang/Throwable;)V","getContext()Lch/qos/logback/core/Context;","getDeclaredOrigin()Ljava/lang/Object;","setContext(Lch/qos/logback/core/Context;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/spi/ContextAwareImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/ContextAwareImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;Ljava/lang/Object;)V","addError(Ljava/lang/String;)V","addError(Ljava/lang/String;Ljava/lang/Throwable;)V","addStatus(Lch/qos/logback/core/status/Status;)V","addWarn(Ljava/lang/String;Ljava/lang/Throwable;)V","getOrigin()Ljava/lang/Object;","setContext(Lch/qos/logback/core/Context;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/spi/DeferredProcessingAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/DeferredProcessingAware.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/FilterAttachable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/FilterAttachable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/FilterAttachableImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/FilterAttachableImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/spi/FilterAttachable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFilterChainDecision(Ljava/lang/Object;)Lch/qos/logback/core/spi/FilterReply;"]
  }
,
  {
    "className": "Lch/qos/logback/core/spi/FilterReply;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/FilterReply.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/LifeCycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/LifeCycle.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/LogbackLock;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/LogbackLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/spi/PreSerializationTransformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/PreSerializationTransformer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/PropertyContainer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/PropertyContainer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/PropertyDefiner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/PropertyDefiner.class",
    "super": "null",
    "interfaces": ["Lch/qos/logback/core/spi/ContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/spi/ScanException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/spi/ScanException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/ErrorStatus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/ErrorStatus.class",
    "super": "Lch/qos/logback/core/status/StatusBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/InfoStatus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/InfoStatus.class",
    "super": "Lch/qos/logback/core/status/StatusBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/OnConsoleStatusListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/OnConsoleStatusListener.class",
    "super": "Lch/qos/logback/core/status/OnPrintStreamStatusListenerBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getPrintStream()Ljava/io/PrintStream;"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/OnPrintStreamStatusListenerBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/OnPrintStreamStatusListenerBase.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": ["Lch/qos/logback/core/status/StatusListener;","Lch/qos/logback/core/spi/LifeCycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addStatusEvent(Lch/qos/logback/core/status/Status;)V","isElapsedTimeLongerThanThreshold(JJ)Z","isStarted()Z","print(Lch/qos/logback/core/status/Status;)V","retrospectivePrint()V","start()V","stop()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/Status;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/Status.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/status/StatusBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/StatusBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/status/Status;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.ArrayList.EMPTY_ELEMENTDATA",
    "invokedMethods": ["<clinit>()V","<init>(ILjava/lang/String;Ljava/lang/Object;)V","<init>(ILjava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V","add(Lch/qos/logback/core/status/Status;)V","equals(Ljava/lang/Object;)Z","getDate()Ljava/lang/Long;","getEffectiveLevel()I","getLevel()I","getMessage()Ljava/lang/String;","getThrowable()Ljava/lang/Throwable;","hasChildren()Z","hashCode()I","iterator()Ljava/util/Iterator;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/StatusListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/StatusListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/status/StatusManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/StatusManager.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/status/StatusUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/StatusUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","addError(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Throwable;)V","addStatus(Lch/qos/logback/core/status/Status;)V","containsMatch(JILjava/lang/String;)Z","contextHasStatusListener(Lch/qos/logback/core/Context;)Z","filterStatusListByTimeThreshold(Ljava/util/List;J)Ljava/util/List;","getHighestLevel(J)I","hasXMLParsingErrors(J)Z","noXMLParsingErrorsOccurred(J)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/status/WarnStatus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/status/WarnStatus.class",
    "super": "Lch/qos/logback/core/status/StatusBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Node$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Node$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Node$Type;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Node$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lch/qos/logback/core/subst/Node$Type;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Node;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/subst/Node$Type;Ljava/lang/Object;)V","append(Lch/qos/logback/core/subst/Node;)V","equals(Ljava/lang/Object;)Z","hashCode()I","recursive(Lch/qos/logback/core/subst/Node;Ljava/lang/StringBuilder;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/NodeToStringTransformer$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/NodeToStringTransformer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/NodeToStringTransformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/NodeToStringTransformer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/subst/Node;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)V","compileNode(Lch/qos/logback/core/subst/Node;Ljava/lang/StringBuilder;Ljava/util/Stack;)V","constructRecursionErrorMessage(Ljava/util/Stack;)Ljava/lang/String;","equalNodes(Lch/qos/logback/core/subst/Node;Lch/qos/logback/core/subst/Node;)Z","handleLiteral(Lch/qos/logback/core/subst/Node;Ljava/lang/StringBuilder;)V","handleVariable(Lch/qos/logback/core/subst/Node;Ljava/lang/StringBuilder;Ljava/util/Stack;)V","haveVisitedNodeAlready(Lch/qos/logback/core/subst/Node;Ljava/util/Stack;)Z","lookupKey(Ljava/lang/String;)Ljava/lang/String;","substituteVariable(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;","tokenizeAndParseString(Ljava/lang/String;)Lch/qos/logback/core/subst/Node;","transform()Ljava/lang/String;","variableNodeValue(Lch/qos/logback/core/subst/Node;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Parser$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Parser$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Parser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Parser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","C()Lch/qos/logback/core/subst/Node;","E()Lch/qos/logback/core/subst/Node;","Eopt()Lch/qos/logback/core/subst/Node;","T()Lch/qos/logback/core/subst/Node;","V()Lch/qos/logback/core/subst/Node;","advanceTokenPointer()V","expectCurlyRight(Lch/qos/logback/core/subst/Token;)V","expectNotNull(Lch/qos/logback/core/subst/Token;Ljava/lang/String;)V","isDefaultToken(Lch/qos/logback/core/subst/Token;)Z","makeNewLiteralNode(Ljava/lang/String;)Lch/qos/logback/core/subst/Node;","parse()Lch/qos/logback/core/subst/Node;","peekAtCurentToken()Lch/qos/logback/core/subst/Token;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Token$Type;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Token$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lch/qos/logback/core/subst/Token$Type;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Token;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Token.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lch/qos/logback/core/subst/Token$Type;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Tokenizer$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Tokenizer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Tokenizer$TokenizerState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Tokenizer$TokenizerState.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lch/qos/logback/core/subst/Tokenizer$TokenizerState;"]
  }
,
  {
    "className": "Lch/qos/logback/core/subst/Tokenizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/subst/Tokenizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","addLiteralToken(Ljava/util/List;Ljava/lang/StringBuilder;)V","handleDefaultValueState(CLjava/util/List;Ljava/lang/StringBuilder;)V","handleLiteralState(CLjava/util/List;Ljava/lang/StringBuilder;)V","handleStartState(CLjava/util/List;Ljava/lang/StringBuilder;)V","tokenize()Ljava/util/List;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/AggregationType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/AggregationType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lch/qos/logback/core/util/AggregationType;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/COWArrayList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/COWArrayList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","addIfAbsent(Ljava/lang/Object;)V","asTypedArray()[Ljava/lang/Object;","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","get(I)Ljava/lang/Object;","isEmpty()Z","isFresh()Z","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","markAsStale()V","refreshCopy()V","refreshCopyIfNecessary()V","remove(Ljava/lang/Object;)Z","set(ILjava/lang/Object;)Ljava/lang/Object;","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/CachingDateFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/CachingDateFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","format(J)Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/CloseUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/CloseUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["closeQuietly(Ljava/net/Socket;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/ContextUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/ContextUtil.class",
    "super": "Lch/qos/logback/core/spi/ContextAwareBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lch/qos/logback/core/Context;)V","acceptableAddress(Ljava/net/InetAddress;)Z","addFrameworkPackage(Ljava/util/List;Ljava/lang/String;)V","addGroovyPackages(Ljava/util/List;)V","addProperties(Ljava/util/Properties;)V","getLocalAddressAsString()Ljava/lang/String;","getLocalHostName()Ljava/lang/String;","safelyGetLocalHostName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/DelayStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/DelayStrategy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lch/qos/logback/core/util/Duration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/Duration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(J)V","buildByDays(D)Lch/qos/logback/core/util/Duration;","buildByHours(D)Lch/qos/logback/core/util/Duration;","buildByMilliseconds(D)Lch/qos/logback/core/util/Duration;","buildByMinutes(D)Lch/qos/logback/core/util/Duration;","buildBySeconds(D)Lch/qos/logback/core/util/Duration;","getMilliseconds()J","toString()Ljava/lang/String;","valueOf(Ljava/lang/String;)Lch/qos/logback/core/util/Duration;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/DynamicClassLoadingException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/DynamicClassLoadingException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/EnvUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/EnvUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isJaninoAvailable()Z","isWindows()Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/ExecutorServiceUtil$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/ExecutorServiceUtil$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/ThreadFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/ExecutorServiceUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/ExecutorServiceUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","newScheduledExecutorService()Ljava/util/concurrent/ScheduledExecutorService;","shutdown(Ljava/util/concurrent/ExecutorService;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/FixedDelay;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/FixedDelay.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lch/qos/logback/core/util/DelayStrategy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JJ)V","nextDelay()J"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/IncompatibleClassException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/IncompatibleClassException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/Loader$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/Loader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/Loader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/Loader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","getClassLoaderOfClass(Ljava/lang/Class;)Ljava/lang/ClassLoader;","getClassLoaderOfObject(Ljava/lang/Object;)Ljava/lang/ClassLoader;","getResource(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;","getResourceBySelfClassLoader(Ljava/lang/String;)Ljava/net/URL;","getResources(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Set;","getTCL()Ljava/lang/ClassLoader;","loadClass(Ljava/lang/String;)Ljava/lang/Class;","loadClass(Ljava/lang/String;Lch/qos/logback/core/Context;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/OptionHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/OptionHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getEnv(Ljava/lang/String;)Ljava/lang/String;","getSystemProperty(Ljava/lang/String;)Ljava/lang/String;","getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","instantiateByClassName(Ljava/lang/String;Ljava/lang/Class;Lch/qos/logback/core/Context;)Ljava/lang/Object;","instantiateByClassName(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;","instantiateByClassNameAndParameter(Ljava/lang/String;Ljava/lang/Class;Lch/qos/logback/core/Context;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","instantiateByClassNameAndParameter(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","isEmpty(Ljava/lang/String;)Z","setSystemProperties(Lch/qos/logback/core/spi/ContextAware;Ljava/util/Properties;)V","setSystemProperty(Lch/qos/logback/core/spi/ContextAware;Ljava/lang/String;Ljava/lang/String;)V","substVars(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;","toBoolean(Ljava/lang/String;Z)Z"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/PropertySetterException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/PropertySetterException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/StatusListenerConfigHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/StatusListenerConfigHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addOnConsoleListenerInstance(Lch/qos/logback/core/Context;Lch/qos/logback/core/status/OnConsoleStatusListener;)V","addStatusListener(Lch/qos/logback/core/Context;Ljava/lang/String;)V","createListenerPerClassName(Lch/qos/logback/core/Context;Ljava/lang/String;)Lch/qos/logback/core/status/StatusListener;","initAndAddListener(Lch/qos/logback/core/Context;Lch/qos/logback/core/status/StatusListener;)V","installIfAsked(Lch/qos/logback/core/Context;)V"]
  }
,
  {
    "className": "Lch/qos/logback/core/util/StatusPrinter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-core-1.2.3.jar!/ch/qos/logback/core/util/StatusPrinter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.out",
    "invokedMethods": ["<clinit>()V","appendThrowable(Ljava/lang/StringBuilder;Ljava/lang/Throwable;)V","buildStr(Ljava/lang/StringBuilder;Ljava/lang/String;Lch/qos/logback/core/status/Status;)V","buildStrFromStatusList(Ljava/lang/StringBuilder;Ljava/util/List;)V","print(Lch/qos/logback/core/status/StatusManager;J)V","printInCaseOfErrorsOrWarnings(Lch/qos/logback/core/Context;)V","printInCaseOfErrorsOrWarnings(Lch/qos/logback/core/Context;J)V"]
  }
,
  {
    "className": "Lcom/alibaba/rcm/ResourceContainer;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/rcm/ResourceContainer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["root()Lcom/alibaba/rcm/ResourceContainer;"]
  }
,
  {
    "className": "Lcom/alibaba/rcm/internal/AbstractResourceContainer$RootContainer;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/rcm/internal/AbstractResourceContainer$RootContainer.class",
    "super": "Lcom/alibaba/rcm/internal/AbstractResourceContainer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/rcm/internal/AbstractResourceContainer;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/rcm/internal/AbstractResourceContainer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/alibaba/rcm/ResourceContainer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["root()Lcom/alibaba/rcm/internal/AbstractResourceContainer;"]
  }
,
  {
    "className": "Lcom/alibaba/tenant/TenantContainer;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/tenant/TenantContainer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: com.alibaba.tenant.TenantContainer.registerNatives()",
    "invokedMethods": ["<clinit>()V","checkIfTenantIsEnabled()V","current()Lcom/alibaba/tenant/TenantContainer;","current0()Lcom/alibaba/tenant/TenantContainer;","registerNatives()V"]
  }
,
  {
    "className": "Lcom/alibaba/tenant/TenantGlobals;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/tenant/TenantGlobals.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isDataIsolationEnabled()Z","isTenantEnabled()Z","isThreadStopEnabled()Z"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/StealAwareRunnable;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/StealAwareRunnable.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/TimeOut$Action;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/TimeOut$Action.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/TimeOut;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/TimeOut.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/alibaba/wisp/engine/WispTask;JLcom/alibaba/wisp/engine/TimeOut$Action;)V","expired()Z"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispCarrier$1;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispCarrier$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/alibaba/wisp/engine/StealAwareRunnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/alibaba/wisp/engine/WispCarrier;Lcom/alibaba/wisp/engine/WispTask;)V","run()V","setStealEnable(Z)V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispCarrier;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispCarrier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: jdk.internal.reflect.Reflection.getCallerClass()",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/alibaba/wisp/engine/WispEngine;)V","addTimer(JLcom/alibaba/wisp/engine/TimeOut$Action;)V","addTimerInternal(JLcom/alibaba/wisp/engine/WispTask;Lcom/alibaba/wisp/engine/TimeOut$Action;Z)V","cancelTimer()V","checkAndDispatchShutdown()V","compareTo(Lcom/alibaba/wisp/engine/WispCarrier;)I","compareTo(Ljava/lang/Object;)I","countEnqueueTime(J)V","createResumeEntry(Lcom/alibaba/wisp/engine/WispTask;)Lcom/alibaba/wisp/engine/StealAwareRunnable;","current()Lcom/alibaba/wisp/engine/WispCarrier;","getCounter()Lcom/alibaba/wisp/engine/WispCounter;","getCurrentTask()Lcom/alibaba/wisp/engine/WispTask;","getId()J","getTaskQueueLength()I","init()V","processPendingTimer()V","processYield()V","registerEvent(Lcom/alibaba/wisp/engine/WispTask;Ljava/nio/channels/SelectableChannel;I)V","registerEvent(Ljava/nio/channels/SelectableChannel;I)V","resumeLater(JLcom/alibaba/wisp/engine/WispTask;)V","runWispTaskEpilog()V","schedule(Z)V","shutdownPending(Lcom/alibaba/wisp/engine/WispTask;)Z","steal(Lcom/alibaba/wisp/engine/WispTask;)Ljava/dyn/Coroutine$StealResult;","toString()Ljava/lang/String;","unregisterEvent()V","unregisterEvent(Lcom/alibaba/wisp/engine/WispTask;)V","wakeupTask(Lcom/alibaba/wisp/engine/WispTask;)V","yield()V","yieldTo(Lcom/alibaba/wisp/engine/WispTask;Z)Z"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispConfiguration;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispConfiguration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispControlGroup;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispControlGroup.class",
    "super": "Ljava/util/concurrent/AbstractExecutorService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.alibaba.wisp.engine.WispConfiguration.SYSMON_TICK_US",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispCounter;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispCounter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/alibaba/wisp/engine/WispCarrier;)V","create(Lcom/alibaba/wisp/engine/WispCarrier;)Lcom/alibaba/wisp/engine/WispCounter;","incrementParkCount()V","incrementSwitchCount()V","incrementTotalEnqueueTime(J)V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispEngine$5;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispEngine$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/WispEngineAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["addTimer(J)V","cancelTimer()V","enableSocketLock()Z","getCurrentTask()Lcom/alibaba/wisp/engine/WispTask;","isTimeout()Z","park(J)V","registerEvent(Ljava/nio/channels/SelectableChannel;I)V","unpark(Lcom/alibaba/wisp/engine/WispTask;)V","unregisterEvent()V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispEngine;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispEngine.class",
    "super": "Ljava/util/concurrent/AbstractExecutorService;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["enableThreadAsWisp()Z","getNanoTime()J","runningAsCoroutine(Ljava/lang/Thread;)Z","transparentWispSwitch()Z"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispEventPump$Pool;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispEventPump$Pool.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.alibaba.wisp.engine.WispConfiguration.WORKER_COUNT",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;I)V","hash(I)I","registerEvent(Lcom/alibaba/wisp/engine/WispTask;Ljava/nio/channels/SelectableChannel;I)V","values()[Lcom/alibaba/wisp/engine/WispEventPump$Pool;"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispEventPump;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispEventPump.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.internal.misc.SharedSecrets.epollAccess",
    "invokedMethods": ["<clinit>()V","<init>()V","getFd2TaskHigh(I)Ljava/util/concurrent/ConcurrentHashMap;","getFd2TaskLow(I)[Lcom/alibaba/wisp/engine/WispTask;","isReadEvent(I)Z","recordTaskByFD(ILcom/alibaba/wisp/engine/WispTask;I)V","registerEvent(Lcom/alibaba/wisp/engine/WispTask;II)V","removeTaskByFD(II)Lcom/alibaba/wisp/engine/WispTask;"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispScheduler$SchedulingPolicy$1;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispScheduler$SchedulingPolicy$1.class",
    "super": "Lcom/alibaba/wisp/engine/WispScheduler$SchedulingPolicy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispScheduler$SchedulingPolicy$2;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispScheduler$SchedulingPolicy$2.class",
    "super": "Lcom/alibaba/wisp/engine/WispScheduler$SchedulingPolicy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispScheduler$SchedulingPolicy;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispScheduler$SchedulingPolicy.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispScheduler$Worker;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispScheduler$Worker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispScheduler;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispScheduler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.alibaba.wisp.engine.WispConfiguration.SCHEDULING_POLICY",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispTask$CacheableCoroutine;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispTask$CacheableCoroutine.class",
    "super": "Ljava/dyn/Coroutine;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/alibaba/wisp/engine/WispTask;J)V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispTask$Status;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispTask$Status.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispTask;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispTask.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.internal.misc.Unsafe.access",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/alibaba/wisp/engine/WispCarrier;Ljava/dyn/Coroutine;ZZ)V","compareTo(Lcom/alibaba/wisp/engine/WispTask;)I","compareTo(Ljava/lang/Object;)I","countExecutionTime(J)V","equals(Ljava/lang/Object;)Z","getEnqueueTime()J","getName()Ljava/lang/String;","getThreadWrapper()Ljava/lang/Thread;","hashCode()I","inDestoryedGroup()Z","inheritedFromNonRootContainer()Z","isAlive()Z","isThreadTask()Z","jdkPark(J)V","jdkUnpark()V","parkInternal(JZ)V","recordOnUnpark(Z)V","registerNatives()V","reset(Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/Thread;Ljava/lang/ClassLoader;)V","resetEnqueueTime()V","resetRegisterEventTime()V","setCarrier(Lcom/alibaba/wisp/engine/WispCarrier;)V","setParkTime()V","setRegisterEventTime()V","setThreadWrapper(Ljava/lang/Thread;)V","switchTo(Lcom/alibaba/wisp/engine/WispTask;Lcom/alibaba/wisp/engine/WispTask;Z)V","toString()Ljava/lang/String;","trackTask(Lcom/alibaba/wisp/engine/WispTask;)V","unparkInternal(Z)V","updateEnqueueTime()V"]
  }
,
  {
    "className": "Lcom/alibaba/wisp/engine/WispThreadWrapper;",
    "module": "java.base",
    "source": "/java.base/com/alibaba/wisp/engine/WispThreadWrapper.class",
    "super": "Ljava/lang/Thread;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/alibaba/wisp/engine/WispTask;)V","getContextClassLoader()Ljava/lang/ClassLoader;","getCoroutineSupport()Ljava/dyn/CoroutineSupport;","getId()J","getStackTrace()[Ljava/lang/StackTraceElement;","getState()Ljava/lang/Thread$State;","getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;","setContextClassLoader(Ljava/lang/ClassLoader;)V","setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V","start()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/beans/TypeResolver;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/TypeResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["erase(Ljava/lang/reflect/Type;)Ljava/lang/Class;","erase([Ljava/lang/reflect/Type;)[Ljava/lang/Class;","fixGenericArray(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;","getActualType(Ljava/lang/Class;)Ljava/lang/reflect/Type;","prepare(Ljava/util/Map;Ljava/lang/reflect/Type;)V","resolve(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;","resolve(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;","resolveInClass(Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;","resolveInClass(Ljava/lang/Class;[Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;"]
  }
,
  {
    "className": "Lcom/sun/beans/WeakCache;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/WeakCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get(Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/beans/WildcardTypeImpl;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/WildcardTypeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/WildcardType;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V","equals(Ljava/lang/Object;)Z","getLowerBounds()[Ljava/lang/reflect/Type;","getUpperBounds()[Ljava/lang/reflect/Type;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/AbstractFinder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/AbstractFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/finder/BeanInfoFinder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/BeanInfoFinder.class",
    "super": "Lcom/sun/beans/finder/InstanceFinder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","find(Ljava/lang/Class;)Ljava/lang/Object;","instantiate(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/beans/BeanInfo;","instantiate(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;","isValid(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/ClassFinder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/ClassFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findClass(Ljava/lang/String;)Ljava/lang/Class;","findClass(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/FinderUtils;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/FinderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isExported(Ljava/lang/Class;)Z","packageName(Ljava/lang/Class;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/InstanceFinder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/InstanceFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;ZLjava/lang/String;[Ljava/lang/String;)V","find(Ljava/lang/Class;)Ljava/lang/Object;","instantiate(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","instantiate(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/MethodFinder$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/MethodFinder$1.class",
    "super": "Lcom/sun/beans/util/Cache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/beans/util/Cache$Kind;Lcom/sun/beans/util/Cache$Kind;)V"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/MethodFinder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/MethodFinder.class",
    "super": "Lcom/sun/beans/finder/AbstractFinder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.beans.util.Cache$Kind.SOFT",
    "invokedMethods": ["<clinit>()V","findAccessibleMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","findAccessibleMethod(Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Method;"]
  }
,
  {
    "className": "Lcom/sun/beans/finder/Signature;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/finder/Signature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/introspect/ClassInfo$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/ClassInfo$1.class",
    "super": "Lcom/sun/beans/util/Cache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/beans/util/Cache$Kind;Lcom/sun/beans/util/Cache$Kind;)V","create(Ljava/lang/Class;)Lcom/sun/beans/introspect/ClassInfo;","create(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/beans/introspect/ClassInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/ClassInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.beans.util.Cache$Kind.SOFT",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;)V","get(Ljava/lang/Class;)Lcom/sun/beans/introspect/ClassInfo;","getEventSets()Ljava/util/Map;","getMethods()Ljava/util/List;","getProperties()Ljava/util/Map;"]
  }
,
  {
    "className": "Lcom/sun/beans/introspect/EventSetInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/EventSetInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get(Ljava/lang/Class;)Ljava/util/Map;","getAddMethod()Ljava/lang/reflect/Method;","getGetMethod()Ljava/lang/reflect/Method;","getInfo(Lcom/sun/beans/introspect/MethodInfo;Ljava/lang/reflect/Method;II)Lcom/sun/beans/introspect/MethodInfo;","getInfo(Ljava/util/Map;Ljava/lang/String;)Lcom/sun/beans/introspect/EventSetInfo;","getListenerType()Ljava/lang/Class;","getRemoveMethod()Ljava/lang/reflect/Method;","initialize()Z","isUnicast()Z"]
  }
,
  {
    "className": "Lcom/sun/beans/introspect/MethodInfo$MethodOrder;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/MethodInfo$MethodOrder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I"]
  }
,
  {
    "className": "Lcom/sun/beans/introspect/MethodInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/MethodInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;Ljava/lang/Class;)V","<init>(Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)V","get(Ljava/lang/Class;)Ljava/util/List;","isThrow(Ljava/lang/Class;)Z","resolve(Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/beans/introspect/PropertyInfo$Name;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/PropertyInfo$Name.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/introspect/PropertyInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/introspect/PropertyInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","add(Ljava/util/List;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Ljava/util/List;","get(Lcom/sun/beans/introspect/PropertyInfo$Name;)Ljava/lang/Object;","get(Ljava/lang/Class;)Ljava/util/Map;","getIndexed()Lcom/sun/beans/introspect/PropertyInfo;","getInfo(Ljava/util/Map;Ljava/lang/String;Z)Lcom/sun/beans/introspect/PropertyInfo;","getPropertyType()Ljava/lang/Class;","getReadMethod()Ljava/lang/reflect/Method;","getWriteMethod()Ljava/lang/reflect/Method;","initialize()Z","initialize(Lcom/sun/beans/introspect/MethodInfo;)Z","is(Lcom/sun/beans/introspect/PropertyInfo$Name;)Z","isConstrained()Z","isPrefix(Ljava/lang/String;Ljava/lang/String;)Z","put(Lcom/sun/beans/introspect/PropertyInfo$Name;Ljava/lang/Object;)V","put(Lcom/sun/beans/introspect/PropertyInfo$Name;Ljava/lang/String;)V","put(Lcom/sun/beans/introspect/PropertyInfo$Name;Z)V"]
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$CacheEntry;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$CacheEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/beans/util/Cache;ILjava/lang/Object;Ljava/lang/Object;Lcom/sun/beans/util/Cache$CacheEntry;)V","matches(ILjava/lang/Object;)Z","unlink()V"]
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind$1.class",
    "super": "Lcom/sun/beans/util/Cache$Kind;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind$2;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind$2.class",
    "super": "Lcom/sun/beans/util/Cache$Kind;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["create(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Lcom/sun/beans/util/Cache$Ref;"]
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind$3;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind$3.class",
    "super": "Lcom/sun/beans/util/Cache$Kind;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind$Soft;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind$Soft.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": ["Lcom/sun/beans/util/Cache$Ref;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","getOwner()Ljava/lang/Object;","getReferent()Ljava/lang/Object;","isStale()Z","removeOwner()V"]
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind$Strong;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind$Strong.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/beans/util/Cache$Ref;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","getOwner()Ljava/lang/Object;","getReferent()Ljava/lang/Object;","isStale()Z","removeOwner()V"]
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Kind;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Kind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache$Ref;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache$Ref.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/beans/util/Cache;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/beans/util/Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/beans/util/Cache$Kind;Lcom/sun/beans/util/Cache$Kind;)V","<init>(Lcom/sun/beans/util/Cache$Kind;Lcom/sun/beans/util/Cache$Kind;Z)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getEntryValue(Ljava/lang/Object;ILcom/sun/beans/util/Cache$CacheEntry;)Ljava/lang/Object;","hash(Ljava/lang/Object;)I","index(I[Ljava/lang/Object;)I","newTable(I)[Lcom/sun/beans/util/Cache$CacheEntry;","removeStaleEntries()V","transfer([Lcom/sun/beans/util/Cache$CacheEntry;[Lcom/sun/beans/util/Cache$CacheEntry;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES128_CBC_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES128_CBC_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES128_CFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES128_CFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES128_ECB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES128_ECB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES128_GCM_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES128_GCM_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES128_OFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES128_OFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES192_CBC_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES192_CBC_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES192_CFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES192_CFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES192_ECB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES192_ECB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES192_GCM_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES192_GCM_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES192_OFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES192_OFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES256_CBC_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES256_CBC_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES256_CFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES256_CFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES256_ECB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES256_ECB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES256_GCM_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES256_GCM_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$AES256_OFB_NoPadding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$AES256_OFB_NoPadding.class",
    "super": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$General;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$General.class",
    "super": "Lcom/sun/crypto/provider/AESCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher$OidImpl;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher$OidImpl.class",
    "super": "Lcom/sun/crypto/provider/AESCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","checkKeySize(Ljava/security/Key;I)V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESConstants;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESCrypt;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESCrypt.class",
    "super": "Lcom/sun/crypto/provider/SymmetricCipher;",
    "interfaces": ["Lcom/sun/crypto/provider/AESConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","decryptBlock([BI[BI)V","encryptBlock([BI[BI)V","expandToSubKey([[IZ)[I","getBlockSize()I","getRounds(I)I","implDecryptBlock([BI[BI)V","implEncryptBlock([BI[BI)V","init(ZLjava/lang/String;[B)V","isKeySizeValid(I)Z","makeSessionKey([B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESKeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESKeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESWrapCipher$AES128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESWrapCipher$AES128.class",
    "super": "Lcom/sun/crypto/provider/AESWrapCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESWrapCipher$AES192;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESWrapCipher$AES192.class",
    "super": "Lcom/sun/crypto/provider/AESWrapCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESWrapCipher$AES256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESWrapCipher$AES256.class",
    "super": "Lcom/sun/crypto/provider/AESWrapCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESWrapCipher$General;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESWrapCipher$General.class",
    "super": "Lcom/sun/crypto/provider/AESWrapCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/AESWrapCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/AESWrapCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ARCFOURCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ARCFOURCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","crypt([BII[BI)V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","engineUpdate([BII)[B","engineUpdate([BII[BI)I","getEncodedKey(Ljava/security/Key;)[B","init(ILjava/security/Key;)V","init([B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlockCipherParamsCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlockCipherParamsCore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getEncoded()[B","getParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","init(Ljava/security/spec/AlgorithmParameterSpec;)V","init([B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlowfishCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlowfishCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlowfishConstants;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlowfishConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlowfishCrypt;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlowfishCrypt.class",
    "super": "Lcom/sun/crypto/provider/SymmetricCipher;",
    "interfaces": ["Lcom/sun/crypto/provider/BlowfishConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","F(I)I","cipherBlock([BI[BI)V","decryptBlock([BI[BI)V","decryptBlock([I)V","encryptBlock([BI[BI)V","encryptBlock([I)V","getBlockSize()I","init(ZLjava/lang/String;[B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlowfishKeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlowfishKeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/BlowfishParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/BlowfishParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$ChaCha20Only;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$ChaCha20Only.class",
    "super": "Lcom/sun/crypto/provider/ChaCha20Cipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$ChaCha20Poly1305;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$ChaCha20Poly1305.class",
    "super": "Lcom/sun/crypto/provider/ChaCha20Cipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$EngineAEADDec;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$EngineAEADDec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/ChaCha20Cipher;)V","doFinal([BII[BI)I","doUpdate([BII[BI)I","getOutputSize(IZ)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$EngineAEADEnc;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$EngineAEADEnc.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/ChaCha20Cipher;)V","doFinal([BII[BI)I","doUpdate([BII[BI)I","getOutputSize(IZ)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher$EngineStreamOnly;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher$EngineStreamOnly.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/crypto/provider/ChaCha20Cipher$ChaChaEngine;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/ChaCha20Cipher;)V","doFinal([BII[BI)I","doUpdate([BII[BI)I","getOutputSize(IZ)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Cipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Cipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","authFinalizeData([BII[BI)V","authPad16(J)V","authUpdate([BII)I","authWriteLengths(JJ[B)V","chaCha20Block([IJ[B)V","chaCha20Transform([BII[BI)V","checkKeyAndNonce([B[B)V","createRandomNonce(Ljava/security/SecureRandom;)[B","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","generateKeystream()V","getEncodedKey(Ljava/security/Key;)[B","init(ILjava/security/Key;[B)V","initAuthenticator()V","setInitialState()V","xor([BI[BI[BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ChaCha20Poly1305Parameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ChaCha20Poly1305Parameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CipherBlockChaining;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CipherBlockChaining.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","decrypt([BII[BI)I","encrypt([BII[BI)I","implDecrypt([BII[BI)I","implEncrypt([BII[BI)I","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CipherCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CipherCore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;I)V","checkOutputCapacity([BII)I","checkReinit()V","doFinal([BII)[B","doFinal([BII[BI)I","endDoFinal()V","fillOutputBuffer([BI[BII[B)I","finalNoPadding([BI[BII)I","getIV()[B","getKeyBytes(Ljava/security/Key;)[B","getNumOfUnit(Ljava/lang/String;II)I","getOutputSizeByOperation(IZ)I","getParameters(Ljava/lang/String;)Ljava/security/AlgorithmParameters;","init(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","init(ILjava/security/Key;Ljava/security/SecureRandom;)V","init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","prepareInputBuffer([BII[BI)[B","setMode(Ljava/lang/String;)V","setPadding(Ljava/lang/String;)V","unpad(I[B)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CipherFeedback;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CipherFeedback.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;I)V","decrypt([BII[BI)I","decryptFinal([BII[BI)I","encrypt([BII[BI)I","encryptFinal([BII[BI)I","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CipherForKeyProtector;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CipherForKeyProtector.class",
    "super": "Ljavax/crypto/Cipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CipherTextStealing;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CipherTextStealing.class",
    "super": "Lcom/sun/crypto/provider/CipherBlockChaining;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","decryptFinal([BII[BI)I","encryptFinal([BII[BI)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/CounterMode;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/CounterMode.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","crypt([BII[BI)I","decrypt([BII[BI)I","encrypt([BII[BI)I","implCrypt([BII[BI)I","increment([B)V","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESConstants;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESCrypt;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESCrypt.class",
    "super": "Lcom/sun/crypto/provider/SymmetricCipher;",
    "interfaces": ["Lcom/sun/crypto/provider/DESConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","cipherBlock([BI[BI)V","decryptBlock([BI[BI)V","encryptBlock([BI[BI)V","expandKey([B)V","getBlockSize()I","init(ZLjava/lang/String;[B)V","initialPermutationLeft([BI)I","initialPermutationRight([BI)I","perm(II[BI)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESKey;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","<init>([BI)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I","lambda$new$0([B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESKeyFactory;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESKeyFactory.class",
    "super": "Ljavax/crypto/SecretKeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGenerateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","engineGetKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESKeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESKeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setParityBit([BI)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeCrypt;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeCrypt.class",
    "super": "Lcom/sun/crypto/provider/DESCrypt;",
    "interfaces": ["Lcom/sun/crypto/provider/DESConstants;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","decryptBlock([BI[BI)V","encryptBlock([BI[BI)V","init(ZLjava/lang/String;[B)V","keyEquals([BI[BII)Z"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeKey;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","<init>([BI)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I","lambda$new$0([B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeKeyFactory;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeKeyFactory.class",
    "super": "Ljavax/crypto/SecretKeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGenerateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","engineGetKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeKeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeKeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DESedeWrapCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DESedeWrapCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHKeyAgreement;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHKeyAgreement.class",
    "super": "Ljavax/crypto/KeyAgreementSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHKeyFactory;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHKeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","engineGetKeySpec(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHKeyPairGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHKeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkKeySize(I)V","initialize(ILjava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHParameterGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHParameterGenerator.class",
    "super": "Ljava/security/AlgorithmParameterGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHPrivateKey;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHPrivateKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivateKey;","Ljavax/crypto/interfaces/DHPrivateKey;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V","<init>([B)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","getParams()Ljavax/crypto/spec/DHParameterSpec;","getX()Ljava/math/BigInteger;","hashCode()I","parseKeyBits()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/DHPublicKey;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/DHPublicKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PublicKey;","Ljavax/crypto/interfaces/DHPublicKey;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;I)V","<init>([B)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","getParams()Ljavax/crypto/spec/DHParameterSpec;","getY()Ljava/math/BigInteger;","hashCode()I","parseKeyBits()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ElectronicCodeBook;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ElectronicCodeBook.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","decrypt([BII[BI)I","encrypt([BII[BI)I","implECBDecrypt([BII[BI)I","implECBEncrypt([BII[BI)I","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/EncryptedPrivateKeyInfo;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/EncryptedPrivateKeyInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","getAlgorithm()Lsun/security/x509/AlgorithmId;","getEncryptedData()[B"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/FeedbackCipher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","decryptFinal([BII[BI)I","encryptFinal([BII[BI)I","getBufferedLength()I","getEmbeddedCipher()Lcom/sun/crypto/provider/SymmetricCipher;","getIV()[B"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/GCMParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/GCMParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/GCTR;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/GCTR.class",
    "super": "Lcom/sun/crypto/provider/CounterMode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;[B)V","blocksUntilRollover()J","doFinal([BII[BI)I","update([BII[BI)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/GHASH;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/GHASH.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","blockMult([J[J)V","digest()[B","getLong([BI)J","ghashRangeCheck([BII[J[J)V","processBlock([BI[J[J)V","processBlocks([BII[J[J)V","putLong([BIJ)V","reset()V","restore()V","save()V","update([B)V","update([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/GaloisCounterMode;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/GaloisCounterMode.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","checkDataLength(II)V","decryptFinal([BII[BI)I","doLastBlock([BII[BIZ)V","encryptFinal([BII[BI)I","expandToOneBlock([BII)[B","getBufferedLength()I","getJ0([B[B)[B","getLengthBlock(I)[B","getLengthBlock(II)[B","getTagLen()I","increment32([B)V","init(ZLjava/lang/String;[B[B)V","init(ZLjava/lang/String;[B[BI)V","processAAD()V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA224;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA224.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA256.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA384;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA384.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA512;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA512.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA512_224;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA512_224.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore$HmacSHA512_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore$HmacSHA512_256.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacCore.class",
    "super": "Ljavax/crypto/MacSpi;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","clone()Ljava/lang/Object;","engineDoFinal()[B","engineGetMacLength()I","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacMD5;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacMD5.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacMD5KeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacMD5KeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacPKCS12PBESHA1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacPKCS12PBESHA1.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacSHA1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacSHA1.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/HmacSHA1KeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/HmacSHA1KeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/ISO10126Padding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/ISO10126Padding.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/crypto/provider/Padding;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","padLength(I)I","padWithLen([BII)V","unpad([BII)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/JceKeyStore$DeserializationChecker;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/JceKeyStore$DeserializationChecker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/ObjectInputFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","checkInput(Ljava/io/ObjectInputFilter$FilterInfo;)Ljava/io/ObjectInputFilter$Status;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/JceKeyStore$PrivateKeyEntry;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/JceKeyStore$PrivateKeyEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/JceKeyStore$SecretKeyEntry;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/JceKeyStore$SecretKeyEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/JceKeyStore$TrustedCertEntry;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/JceKeyStore$TrustedCertEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/JceKeyStore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/JceKeyStore.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","getPreKeyedHash([C)Ljava/security/MessageDigest;","lambda$engineLoad$0(Ljava/io/ObjectInputStream;I)Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$ARCFOURKeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$ARCFOURKeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$ChaCha20KeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$ChaCha20KeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA224;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA224.class",
    "super": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA256.class",
    "super": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA384;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA384.class",
    "super": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA512;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG$SHA512.class",
    "super": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$HmacSHA2KG.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore$RC2KeyGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore$RC2KeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyGeneratorCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyGeneratorCore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","implInit(Ljava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/KeyProtector;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/KeyProtector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([C)V","recover(Lcom/sun/crypto/provider/EncryptedPrivateKeyInfo;)Ljava/security/Key;","recover([B)[B","unseal(Ljavax/crypto/SealedObject;I)Ljava/security/Key;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/OAEPParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/OAEPParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/OutputFeedback;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/OutputFeedback.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;I)V","decryptFinal([BII[BI)I","encrypt([BII[BI)I","encryptFinal([BII[BI)I","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKey;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/spec/PBEKeySpec;Ljava/lang/String;Z)V","destroy()V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I","lambda$new$0([B)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA1AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA224AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA256AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA384AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithHmacSHA512AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndDES;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndDES.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndTripleDES;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithMD5AndTripleDES.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndDESede;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndDESede.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_40;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC2_40.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_128.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_40;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory$PBEWithSHA1AndRC4_40.class",
    "super": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEKeyFactory;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEKeyFactory.class",
    "super": "Ljavax/crypto/SecretKeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","engineGenerateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","engineGetKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEParameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES1Core;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES1Core.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","deriveCipherKey([B)[B","doFinal([BII)[B","doFinal([BII[BI)I","getParameters()Ljava/security/AlgorithmParameters;","init(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA1AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA224AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA256AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA384AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core$HmacSHA512AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Core;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Core.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;I)V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$General;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$General.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA1AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA224AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA256AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA384AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_128.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters$HmacSHA512AndAES_256.class",
    "super": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBES2Parameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBES2Parameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;","parseES(Lsun/security/util/DerValue;)Ljava/lang/String;","parseKDF(Lsun/security/util/DerValue;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEWithMD5AndDESCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEWithMD5AndDESCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBEWithMD5AndTripleDESCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBEWithMD5AndTripleDESCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core$HmacSHA1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core$HmacSHA1.class",
    "super": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core$HmacSHA224;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core$HmacSHA224.class",
    "super": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core$HmacSHA256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core$HmacSHA256.class",
    "super": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core$HmacSHA384;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core$HmacSHA384.class",
    "super": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core$HmacSHA512;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core$HmacSHA512.class",
    "super": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2Core;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2Core.class",
    "super": "Ljavax/crypto/SecretKeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","engineGenerateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","engineGetKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2KeyImpl$1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2KeyImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/Mac;[B)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBKDF2KeyImpl;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBKDF2KeyImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/crypto/interfaces/PBEKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/spec/PBEKeySpec;Ljava/lang/String;)V","deriveKey(Ljavax/crypto/Mac;[B[BII)[B","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","getIterationCount()I","getPassword()[C","getPasswordBytes([C)[B","getSalt()[B","hashCode()I","lambda$new$0([B[C)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core$HmacSHA1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core$HmacSHA1.class",
    "super": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core$HmacSHA224;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core$HmacSHA224.class",
    "super": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core$HmacSHA256;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core$HmacSHA256.class",
    "super": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core$HmacSHA384;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core$HmacSHA384.class",
    "super": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core$HmacSHA512;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core$HmacSHA512.class",
    "super": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PBMAC1Core;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PBMAC1Core.class",
    "super": "Lcom/sun/crypto/provider/HmacCore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;I)V","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","getKDFImpl(Ljava/lang/String;)Lcom/sun/crypto/provider/PBKDF2Core;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PCBC;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PCBC.class",
    "super": "Lcom/sun/crypto/provider/FeedbackCipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/crypto/provider/SymmetricCipher;)V","decrypt([BII[BI)I","encrypt([BII[BI)I","init(ZLjava/lang/String;[B[B)V","reset()V","restore()V","save()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndDESede;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndDESede.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_128.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_40;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC2_40.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_128;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_128.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_40;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4_40.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS12PBECipherCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS12PBECipherCore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","concat([B[BII)V","derive([C[BIII)[B","derive([C[BIIILjava/lang/String;I)[B","implDoFinal([BII)[B","implDoFinal([BII[BI)I","implGetKeySize(Ljava/security/Key;)I","implGetParameters()Ljava/security/AlgorithmParameters;","implInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","implInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;Ljavax/crypto/CipherSpi;)V","implInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","implInit(ILjava/security/Key;Ljava/security/SecureRandom;Ljavax/crypto/CipherSpi;)V","implInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","implInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;Ljavax/crypto/CipherSpi;)V","implSetMode(Ljava/lang/String;)V","implSetPadding(Ljava/lang/String;)V","roundup(II)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PKCS5Padding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PKCS5Padding.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/crypto/provider/Padding;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","padLength(I)I","padWithLen([BII)V","unpad([BII)I"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/Padding;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/Padding.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/crypto/provider/Poly1305;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/Poly1305.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineDoFinal()[B","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","engineReset()V","engineUpdate([BII)V","processBlock([BII)V","setRSVals()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/PrivateKeyInfo;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/PrivateKeyInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B)V","getAlgorithm()Lsun/security/x509/AlgorithmId;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/RC2Cipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/RC2Cipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/RC2Crypt;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/RC2Crypt.class",
    "super": "Lcom/sun/crypto/provider/SymmetricCipher;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","checkKey(Ljava/lang/String;I)V","decryptBlock([BI[BI)V","encryptBlock([BI[BI)V","getBlockSize()I","getEffectiveKeyBits()I","init(ZLjava/lang/String;[B)V","initEffectiveKeyBits(I)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/RC2Parameters;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/RC2Parameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/RSACipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/RSACipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","doFinal()[B","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","init(ILjava/security/Key;Ljava/security/SecureRandom;Ljava/security/spec/AlgorithmParameterSpec;)V","update([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SealedObjectForKeyProtector$DeserializationChecker;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SealedObjectForKeyProtector$DeserializationChecker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/ObjectInputFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","checkInput(Ljava/io/ObjectInputFilter$FilterInfo;)Ljava/io/ObjectInputFilter$Status;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SealedObjectForKeyProtector;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SealedObjectForKeyProtector.class",
    "super": "Ljavax/crypto/SealedObject;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/SealedObject;)V","getKey(Ljavax/crypto/Cipher;I)Ljava/security/Key;","getParameters()Ljava/security/AlgorithmParameters;","lambda$getKey$0(Ljava/io/ObjectInputStream;I)Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SslMacCore$SslMacMD5;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SslMacCore$SslMacMD5.class",
    "super": "Ljavax/crypto/MacSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineDoFinal()[B","engineGetMacLength()I","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SslMacCore$SslMacSHA1;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SslMacCore$SslMacSHA1.class",
    "super": "Ljavax/crypto/MacSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineDoFinal()[B","engineGetMacLength()I","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SslMacCore;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SslMacCore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[B[B)V","doFinal()[B","getDigestLength()I","init(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","reset()V","update(B)V","update([BII)V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SunJCE$SecureRandomHolder;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SunJCE$SecureRandomHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SunJCE;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SunJCE.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Lcom/sun/crypto/provider/SunJCE;","getRandom()Ljava/security/SecureRandom;","ps(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V","putEntries()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/SymmetricCipher;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/SymmetricCipher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsKeyMaterialGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsKeyMaterialGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsMasterSecretGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsMasterSecretGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsPrfGenerator$V10;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsPrfGenerator$V10.class",
    "super": "Lcom/sun/crypto/provider/TlsPrfGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsPrfGenerator$V12;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsPrfGenerator$V12.class",
    "super": "Lcom/sun/crypto/provider/TlsPrfGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsPrfGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsPrfGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/crypto/provider/TlsRsaPremasterSecretGenerator;",
    "module": "java.base",
    "source": "/java.base/com/sun/crypto/provider/TlsRsaPremasterSecretGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPCompressionTypes;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPCompressionTypes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getName(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPConstants;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$1.class",
    "super": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$EmbeddedProgressAdapter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/bmp/BMPImageReader;)V","imageProgress(Ljavax/imageio/ImageReader;F)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$2;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/event/IIOReadUpdateListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/bmp/BMPImageReader;)V","imageUpdate(Ljavax/imageio/ImageReader;Ljava/awt/image/BufferedImage;IIIIII[I)V","passComplete(Ljavax/imageio/ImageReader;Ljava/awt/image/BufferedImage;)V","passStarted(Ljavax/imageio/ImageReader;Ljava/awt/image/BufferedImage;IIIIIII[I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$3;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/event/IIOReadWarningListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/bmp/BMPImageReader;)V","warningOccurred(Ljavax/imageio/ImageReader;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$4;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$5;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader$EmbeddedProgressAdapter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader$EmbeddedProgressAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/event/IIOReadProgressListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/bmp/BMPImageReader;)V","imageComplete(Ljavax/imageio/ImageReader;)V","imageStarted(Ljavax/imageio/ImageReader;I)V","readAborted(Ljavax/imageio/ImageReader;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": ["Lcom/sun/imageio/plugins/bmp/BMPConstants;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","access$000(Lcom/sun/imageio/plugins/bmp/BMPImageReader;F)V","access$100(Lcom/sun/imageio/plugins/bmp/BMPImageReader;Ljava/awt/image/BufferedImage;IIIIII[I)V","access$200(Lcom/sun/imageio/plugins/bmp/BMPImageReader;Ljava/awt/image/BufferedImage;)V","access$300(Lcom/sun/imageio/plugins/bmp/BMPImageReader;Ljava/awt/image/BufferedImage;IIIIIII[I)V","access$400(Lcom/sun/imageio/plugins/bmp/BMPImageReader;Ljava/lang/String;)V","checkIndex(I)V","copyRLE4ScanlineToDst(I[B[B)Z","copyRLE8ScanlineToDst(I[B[B)Z","decodeRLE4(II[B[B)V","decodeRLE8(II[B[B)V","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageTypes(I)Ljava/util/Iterator;","getNumImages(Z)I","getWidth(I)I","isLinkedProfileAllowed()Z","isUncOrDevicePath([B)Z","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","read16Bit([S)V","read1Bit([B)V","read24Bit([B)V","read32Bit([I)V","read4Bit([B)V","read8Bit([B)V","readEmbedded(ILjava/awt/image/BufferedImage;Ljavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader()V","readRLE4([B)V","readRLE8([B)V","resetHeaderInfo()V","setInput(Ljava/lang/Object;ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/bmp/BMPMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/bmp/BMPMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": ["Lcom/sun/imageio/plugins/bmp/BMPConstants;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addChildNode(Ljavax/imageio/metadata/IIOMetadataNode;Ljava/lang/String;Ljava/lang/Object;)Ljavax/imageio/metadata/IIOMetadataNode;","addXYZPoints(Ljavax/imageio/metadata/IIOMetadataNode;Ljava/lang/String;DDD)V","countBits(I)Ljava/lang/String;","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getNativeTree()Lorg/w3c/dom/Node;","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDataNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/BogusColorSpace;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/BogusColorSpace.class",
    "super": "Ljava/awt/color/ColorSpace;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getType(I)I","toRGB([F)[F"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/I18N;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/I18N.class",
    "super": "Lcom/sun/imageio/plugins/common/I18NImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getString(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/I18NImpl;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/I18NImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/ImageUtil;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/ImageUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convertObjectToString(Ljava/lang/Object;)Ljava/lang/String;","createColorModel(Ljava/awt/color/ColorSpace;Ljava/awt/image/SampleModel;)Ljava/awt/image/ColorModel;","getDestinationType(Ljavax/imageio/ImageReadParam;Ljava/util/Iterator;)Ljavax/imageio/ImageTypeSpecifier;","getPackedBinaryData(Ljava/awt/image/Raster;Ljava/awt/Rectangle;)[B","imageIsContiguous(Ljava/awt/image/RenderedImage;)Z","isBinary(Ljava/awt/image/SampleModel;)Z","isIndicesForGrayscale([B[B[B)Z","setPackedBinaryData([BLjava/awt/image/WritableRaster;Ljava/awt/Rectangle;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/InputStreamAdapter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/InputStreamAdapter.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;)V","read()I","read([BII)I"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/ReaderUtil;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/ReaderUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["computeUpdatedPixels(IIIIIIIII[II)V","computeUpdatedPixels(Ljava/awt/Rectangle;Ljava/awt/Point;IIIIIIIIIIII)[I","readMultiByteInteger(Ljavax/imageio/stream/ImageInputStream;)I"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/SimpleCMYKColorSpace;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/SimpleCMYKColorSpace.class",
    "super": "Ljava/awt/color/ColorSpace;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","getInstance()Ljava/awt/color/ColorSpace;","hashCode()I","toRGB([F)[F"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/common/SubImageInputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/common/SubImageInputStream.class",
    "super": "Ljavax/imageio/stream/ImageInputStreamImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;I)V","read()I","read([BII)I"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFImageMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFImageMetadata.class",
    "super": "Lcom/sun/imageio/plugins/gif/GIFMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getNativeTree()Lorg/w3c/dom/Node;","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDataNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTextNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTransparencyNode()Ljavax/imageio/metadata/IIOMetadataNode;","toISO8859([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","checkIndex(I)V","computeDecodeThisRow()V","concatenateBlocks()[B","copyData([BI[B)I","createIndexed([B[B[BI)Ljavax/imageio/ImageTypeSpecifier;","getCode(II)I","getDefaultPalette()[B","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageTypes(I)Ljava/util/Iterator;","getNumImages(Z)I","getWidth(I)I","initNext32Bits()V","initializeStringTable([I[B[B[I)V","locateImage(I)I","outputPixels([BI)V","outputRow()V","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader()V","readMetadata()V","resetStreamSettings()V","setInput(Ljava/lang/Object;ZZ)V","skipImage()Z","startPass(I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/gif/GIFStreamMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/gif/GIFStreamMetadata.class",
    "super": "Lcom/sun/imageio/plugins/gif/GIFMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/AdobeMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/AdobeMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/COMMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/COMMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","getComment()Ljava/lang/String;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/DHTMarkerSegment$Htable;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/DHTMarkerSegment$Htable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/DHTMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/DHTMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/DHTMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/DQTMarkerSegment$Qtable;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/DQTMarkerSegment$Qtable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/DQTMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/DQTMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/DQTMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/DRIMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/DRIMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/ImageTypeIterator;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/ImageTypeIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljavax/imageio/ImageTypeSpecifier;","remove()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/ImageTypeProducer;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/ImageTypeProducer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","getType()Ljavax/imageio/ImageTypeSpecifier;","getTypeProducer(I)Lcom/sun/imageio/plugins/jpeg/ImageTypeProducer;","produce()Ljavax/imageio/ImageTypeSpecifier;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$ICCMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$ICCMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","addData(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)Z","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFExtensionMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFExtensionMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumb;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumb.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbJPEG;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbJPEG.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumb;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;ILcom/sun/imageio/plugins/jpeg/JPEGImageReader;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbPalette;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbPalette.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbUncompressed;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;II)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbRGB;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbRGB.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbUncompressed;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;II)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbUncompressed;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumbUncompressed.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment$JFIFThumb;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;IIILjava/lang/String;)V","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JFIFMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JFIFMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","addICC(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","addJFXX(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEG$JCS;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEG$JCS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.color.ColorSpace.sRGBspace",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEG;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEG.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;)V","getStreamPosition()J","loadBuf(I)V","pushBack()V","readData([B)V","scanForFF(Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;)Z","skipData(I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader$2;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader$2.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/ImageTypeProducer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;)V","produce()Ljavax/imageio/ImageTypeSpecifier;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader$CallBackLock$State;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader$CallBackLock$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader$CallBackLock;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader$CallBackLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","check()V","lock()V","unlock()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader$JPEGReaderDisposerRecord;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader$JPEGReaderDisposerRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/DisposerRecord;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","dispose()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.security.AccessController.doPrivileged(PrivilegedAction)",
    "invokedMethods": ["<clinit>()V","<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","checkColorConversion(Ljava/awt/image/BufferedImage;Ljavax/imageio/ImageReadParam;)V","checkTablesOnly()V","clearNativeReadAbortFlag(J)V","clearThreadLock()V","dispose()V","disposeReader(J)V","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageType(I)Lcom/sun/imageio/plugins/jpeg/ImageTypeProducer;","getImageTypes(I)Ljava/util/Iterator;","getImageTypesOnThread(I)Ljava/util/Iterator;","getNumImages(Z)I","getNumImagesOnThread(Z)I","getRawImageType(I)Ljavax/imageio/ImageTypeSpecifier;","getWidth(I)I","gotoImage(I)V","hasNextImage()Z","initJPEGImageReader()J","initProgressData()V","initReaderIDs(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader(IZ)V","readImage(IJ[BI[I[IIIIIII[Ljavax/imageio/plugins/jpeg/JPEGQTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;IIZ)Z","readImageHeader(JZZ)Z","readInternal(ILjavax/imageio/ImageReadParam;Z)Ljava/awt/image/Raster;","readNativeHeader(Z)Z","resetInternalState()V","resetLibraryState(J)V","resetReader(J)V","setInput(Ljava/lang/Object;ZZ)V","setOutColorSpace(JI)V","setSource(J)V","setThreadLock()V","skipImage()V","warningOccurred(I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/JPEGMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/JPEGMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZZ)V","<init>(ZZLjavax/imageio/stream/ImageInputStream;Lcom/sun/imageio/plugins/jpeg/JPEGImageReader;)V","clone()Ljava/lang/Object;","cloneSequence()Ljava/util/List;","countScanBands()I","findMarkerSegment(I)Lcom/sun/imageio/plugins/jpeg/MarkerSegment;","findMarkerSegment(Ljava/lang/Class;Z)Lcom/sun/imageio/plugins/jpeg/MarkerSegment;","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getNativeTree()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTextNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTransparencyNode()Ljavax/imageio/metadata/IIOMetadataNode;","isConsistent()Z"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/MarkerSegment.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;","loadData(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/SOFMarkerSegment$ComponentSpec;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/SOFMarkerSegment$ComponentSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/SOFMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/SOFMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/SOFMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/SOSMarkerSegment$ScanComponentSpec;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/SOSMarkerSegment$ScanComponentSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/SOSMarkerSegment;Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/jpeg/SOSMarkerSegment;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/jpeg/SOSMarkerSegment.class",
    "super": "Lcom/sun/imageio/plugins/jpeg/MarkerSegment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/jpeg/JPEGBuffer;)V","clone()Ljava/lang/Object;","getNativeNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/png/PNGImageDataEnumeration;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/png/PNGImageDataEnumeration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;)V","hasMoreElements()Z","nextElement()Ljava/io/InputStream;","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/png/PNGImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/png/PNGImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","createRaster(IIIII)Ljava/awt/image/WritableRaster;","decodeAverageFilter([BI[BIII)V","decodeImage()V","decodePaethFilter([BI[BIII)V","decodePass(IIIIIII)V","decodeSubFilter([BIII)V","decodeUpFilter([BI[BII)V","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageTypes(I)Ljava/util/Iterator;","getNumImages(Z)I","getRawImageType(I)Ljavax/imageio/ImageTypeSpecifier;","getWidth(I)I","inflate([B)[B","paethPredictor(III)I","parse_PLTE_chunk(I)V","parse_bKGD_chunk()V","parse_cHRM_chunk()V","parse_gAMA_chunk()V","parse_hIST_chunk(I)V","parse_iCCP_chunk(I)V","parse_iTXt_chunk(I)V","parse_pHYs_chunk()V","parse_sBIT_chunk()V","parse_sPLT_chunk(I)V","parse_sRGB_chunk()V","parse_tEXt_chunk(I)V","parse_tIME_chunk()V","parse_tRNS_chunk(I)V","parse_zTXt_chunk(I)V","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader()V","readImage(Ljavax/imageio/ImageReadParam;)V","readMetadata()V","readNullTerminatedString(Ljava/lang/String;I)Ljava/lang/String;","resetStreamSettings()V","setInput(Ljava/lang/Object;ZZ)V","skipPass(II)V","updateImageProgress(I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/png/PNGImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/png/PNGImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/png/PNGImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/png/PNGImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/png/PNGMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/png/PNGMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","cloneBytesArrayList(Ljava/util/ArrayList;)Ljava/util/ArrayList;","decodeImageCreationTimeFromTextChunk(Ljava/util/ListIterator;)V","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getEncodedTime()Ljava/lang/String;","getNativeTree()Lorg/w3c/dom/Node;","getNumChannels()I","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDataNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDocumentNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTextNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTransparencyNode()Ljavax/imageio/metadata/IIOMetadataNode;","hasTransparentColor()Z","initImageCreationTime(Ljava/time/OffsetDateTime;)V","parseEncodedTime(Ljava/lang/String;)Ljava/time/OffsetDateTime;","repeat(Ljava/lang/String;I)Ljava/lang/String;","setCreationTimeChunk(Ljava/util/ListIterator;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFCIELabColorConverter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFCIELabColorConverter.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFColorConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","clamp(F)F","toRGB(FFF[F)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFColorConverter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFColorConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFDecompressor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","areIntArraysEqual([I[I)Z","areSampleSizesEqual(Ljava/awt/image/SampleModel;)Z","beginDecoding()V","createComponentCM(Ljava/awt/color/ColorSpace;I[IIZZ)Ljava/awt/image/ColorModel;","createInterleavedSM(II)Ljava/awt/image/SampleModel;","createMask([II)I","createRawImage()Ljava/awt/image/BufferedImage;","decode()V","decodeRaw([DIII)V","decodeRaw([FIII)V","decodeRaw([IIII)V","decodeRaw([SIII)V","getBitsPerPixel(Ljava/awt/image/SampleModel;)I","getDataTypeFromNumBits(IZ)I","getDataTypeSize(I)I","getRawImageType()Ljavax/imageio/ImageTypeSpecifier;","getRawImageTypeSpecifier(III[I[I[I[C)Ljavax/imageio/ImageTypeSpecifier;","isDataBufferBitContiguous(Ljava/awt/image/SampleModel;[I)Z","reformatData([BII[S[III)V","reformatDiscontiguousData([B[IIIILjava/awt/image/WritableRaster;)V","setActiveSrcHeight(I)V","setActiveSrcMinX(I)V","setActiveSrcMinY(I)V","setActiveSrcWidth(I)V","setBitsPerSample([I)V","setByteCount(I)V","setColorConverter(Lcom/sun/imageio/plugins/tiff/TIFFColorConverter;)V","setColorMap([C)V","setCompression(I)V","setDestinationBands([I)V","setDstHeight(I)V","setDstMinX(I)V","setDstMinY(I)V","setDstWidth(I)V","setDstXOffset(I)V","setDstYOffset(I)V","setExtraSamples([I)V","setImage(Ljava/awt/image/BufferedImage;)V","setMetadata(Ljavax/imageio/metadata/IIOMetadata;)V","setOffset(J)V","setPhotometricInterpretation(I)V","setPlanar(Z)V","setPlanarBand(I)V","setReader(Ljavax/imageio/ImageReader;)V","setSampleFormat([I)V","setSamplesPerPixel(I)V","setSourceBands([I)V","setSourceXOffset(I)V","setSourceYOffset(I)V","setSrcHeight(I)V","setSrcMinX(I)V","setSrcMinY(I)V","setSrcWidth(I)V","setStream(Ljavax/imageio/stream/ImageInputStream;)V","setSubsampleX(I)V","setSubsampleY(I)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFDeflateDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFDeflateDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","decodeRaw([BIII)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFFaxDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFFaxDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","beginDecoding()V","decodeBlackCodeWord()I","decodeNextScanline(I)V","decodeRLE()V","decodeRaw([BIII)V","decodeT4()V","decodeT6()V","decodeWhiteCodeWord()I","findNextLine()I","getNextChangingElement(IZ[I)V","nextLesserThan8Bits(I)I","nextNBits(I)I","setToBlack(II)V","updatePointer(I)V","warning(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFFieldNode;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFFieldNode.class",
    "super": "Ljavax/imageio/metadata/IIOMetadataNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/plugins/tiff/TIFFField;)V","appendChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","cloneNode(Z)Lorg/w3c/dom/Node;","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLength()I","getNextSibling()Lorg/w3c/dom/Node;","getNodeName(Ljavax/imageio/plugins/tiff/TIFFField;)Ljava/lang/String;","getPreviousSibling()Lorg/w3c/dom/Node;","hasChildNodes()Z","initialize()V","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","isIFD(Ljavax/imageio/plugins/tiff/TIFFField;)Z","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFIFD$TIFFIFDEntry;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFIFD$TIFFIFDEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/plugins/tiff/TIFFTag;IIJ)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFIFD;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFIFD.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFDirectory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","<init>(Ljava/util/List;Ljavax/imageio/plugins/tiff/TIFFTag;)V","calculateByteCounts(ILjava/util/List;)Z","checkFieldOffsets(J)V","getDirectoryAsIFD(Ljavax/imageio/plugins/tiff/TIFFDirectory;)Lcom/sun/imageio/plugins/tiff/TIFFIFD;","getFieldAsInt(I)I","getFieldAsLong(I)J","getTag(ILjava/util/List;)Ljavax/imageio/plugins/tiff/TIFFTag;","getTag(Ljava/lang/String;Ljava/util/List;)Ljavax/imageio/plugins/tiff/TIFFTag;","getTagSetList()Ljava/util/List;","initialize(Ljavax/imageio/stream/ImageInputStream;ZZZ)V","initializeEssentialTags()V","iterator()Ljava/util/Iterator;","readFieldValue(Ljavax/imageio/stream/ImageInputStream;II[Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFImageMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFImageMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","fatal(Lorg/w3c/dom/Node;Ljava/lang/String;)V","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getAttribute(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/lang/String;","getChildNode(Lorg/w3c/dom/Node;Ljava/lang/String;)Lorg/w3c/dom/Node;","getIFDAsTree(Lcom/sun/imageio/plugins/tiff/TIFFIFD;Ljava/lang/String;I)Lorg/w3c/dom/Node;","getNativeTree()Lorg/w3c/dom/Node;","getRootIFD()Lcom/sun/imageio/plugins/tiff/TIFFIFD;","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDataNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDocumentNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTextNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTransparencyNode()Ljavax/imageio/metadata/IIOMetadataNode;","getTIFFField(I)Ljavax/imageio/plugins/tiff/TIFFField;","initializeFromStream(Ljavax/imageio/stream/ImageInputStream;ZZ)V","listToCharArray(Ljava/lang/String;)[C","listToIntArray(Ljava/lang/String;)[I","mergeNativeTree(Lorg/w3c/dom/Node;)V","mergeStandardTree(Lorg/w3c/dom/Node;)V","mergeTree(Ljava/lang/String;Lorg/w3c/dom/Node;)V","parseIFD(Lorg/w3c/dom/Node;)Lcom/sun/imageio/plugins/tiff/TIFFIFD;","repeat(Ljava/lang/String;I)Ljava/lang/String;","reset()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","checkIndex(I)V","decodeTile(III)V","forwardWarningMessage(Ljava/lang/String;)V","getCompression()I","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight()I","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageTypes(I)Ljava/util/Iterator;","getNumImages(Z)I","getPlanarConfiguration()I","getTileOrStripByteCount(I)J","getTileOrStripHeight()I","getTileOrStripOffset(I)J","getTileOrStripWidth()I","getWidth()I","getWidth(I)I","iceil(II)I","ifloor(II)I","initializeFromMetadata()V","isImageTiled(I)Z","locateImage(I)I","prepareRead(ILjavax/imageio/ImageReadParam;)V","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader()V","readMetadata()V","reportProgress()V","resetLocal()V","seekToImage(I)V","setInput(Ljava/lang/Object;ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFImageWriter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFImageWriter.class",
    "super": "Ljavax/imageio/ImageWriter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["XToTileX(III)I","YToTileY(III)I"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFJPEGDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFJPEGDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","beginDecoding()V","decodeRaw([BIII)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFLSBDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFLSBDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.imageio.plugins.tiff.TIFFFaxDecompressor.flipTable",
    "invokedMethods": ["<clinit>()V","<init>()V","decodeRaw([BIII)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFLZWDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFLZWDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","addStringToTable([B)V","addStringToTable([BB)V","composeString([BB)[B","decode([BI[BI)I","decodeRaw([BIII)V","getNextCode()I","initializeStringTable()V","writeString([B)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFNullDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFNullDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","beginDecoding()V","decode()V","decodeRaw([BIII)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFOldJPEGDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFOldJPEGDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFJPEGDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","decodeRaw([BIII)V","initialize()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFPackBitsDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFPackBitsDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","decode([BI[BI)I","decodeRaw([BIII)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFStreamMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFStreamMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFYCbCrColorConverter;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFYCbCrColorConverter.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFColorConverter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/tiff/TIFFImageMetadata;)V","toRGB(FFF[F)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/tiff/TIFFYCbCrDecompressor;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/tiff/TIFFYCbCrDecompressor.class",
    "super": "Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/imageio/plugins/tiff/TIFFDecompressor;Z)V","beginDecoding()V","clamp(I)B","decodeRaw([BIII)V","setActiveSrcHeight(I)V","setActiveSrcMinX(I)V","setActiveSrcMinY(I)V","setActiveSrcWidth(I)V","setBitsPerSample([I)V","setByteCount(I)V","setColorMap([C)V","setCompression(I)V","setDestinationBands([I)V","setDstHeight(I)V","setDstMinX(I)V","setDstMinY(I)V","setDstWidth(I)V","setDstXOffset(I)V","setDstYOffset(I)V","setExtraSamples([I)V","setImage(Ljava/awt/image/BufferedImage;)V","setMetadata(Ljavax/imageio/metadata/IIOMetadata;)V","setOffset(J)V","setPhotometricInterpretation(I)V","setPlanar(Z)V","setReader(Ljavax/imageio/ImageReader;)V","setSampleFormat([I)V","setSamplesPerPixel(I)V","setSourceBands([I)V","setSourceXOffset(I)V","setSourceYOffset(I)V","setSrcHeight(I)V","setSrcMinX(I)V","setSrcMinY(I)V","setSrcWidth(I)V","setStream(Ljavax/imageio/stream/ImageInputStream;)V","warning(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/wbmp/WBMPImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/wbmp/WBMPImageReader.class",
    "super": "Ljavax/imageio/ImageReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","checkIndex(I)V","getDefaultReadParam()Ljavax/imageio/ImageReadParam;","getHeight(I)I","getImageMetadata(I)Ljavax/imageio/metadata/IIOMetadata;","getImageTypes(I)Ljava/util/Iterator;","getNumImages(Z)I","getWidth(I)I","isValidWbmpType(I)Z","read(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;","readHeader()V","setInput(Ljava/lang/Object;ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/wbmp/WBMPImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/wbmp/WBMPImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canDecodeInput(Ljava/lang/Object;)Z","createReaderInstance(Ljava/lang/Object;)Ljavax/imageio/ImageReader;","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/wbmp/WBMPImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/wbmp/WBMPImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/plugins/wbmp/WBMPMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/plugins/wbmp/WBMPMetadata.class",
    "super": "Ljavax/imageio/metadata/IIOMetadata;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addChildNode(Ljavax/imageio/metadata/IIOMetadataNode;Ljava/lang/String;Ljava/lang/Object;)Ljavax/imageio/metadata/IIOMetadataNode;","getAsTree(Ljava/lang/String;)Lorg/w3c/dom/Node;","getNativeTree()Lorg/w3c/dom/Node;","getStandardChromaNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDimensionNode()Ljavax/imageio/metadata/IIOMetadataNode;"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/FileImageInputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/FileImageInputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageInputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createInputStreamInstance(Ljava/lang/Object;ZLjava/io/File;)Ljavax/imageio/stream/ImageInputStream;"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/FileImageOutputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/FileImageOutputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageOutputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/InputStreamImageInputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/InputStreamImageInputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageInputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createInputStreamInstance(Ljava/lang/Object;ZLjava/io/File;)Ljavax/imageio/stream/ImageInputStream;"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/OutputStreamImageOutputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/OutputStreamImageOutputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageOutputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/RAFImageInputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/RAFImageInputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageInputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createInputStreamInstance(Ljava/lang/Object;ZLjava/io/File;)Ljavax/imageio/stream/ImageInputStream;"]
  }
,
  {
    "className": "Lcom/sun/imageio/spi/RAFImageOutputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/spi/RAFImageOutputStreamSpi.class",
    "super": "Ljavax/imageio/spi/ImageOutputStreamSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/stream/CloseableDisposerRecord;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/stream/CloseableDisposerRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/DisposerRecord;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/Closeable;)V","dispose()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/stream/StreamCloser$1;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/stream/StreamCloser$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/stream/StreamCloser$CloseAction;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/stream/StreamCloser$CloseAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;)V","performAction()V"]
  }
,
  {
    "className": "Lcom/sun/imageio/stream/StreamCloser;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/stream/StreamCloser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addToQueue(Lcom/sun/imageio/stream/StreamCloser$CloseAction;)V","createCloseAction(Ljavax/imageio/stream/ImageInputStream;)Lcom/sun/imageio/stream/StreamCloser$CloseAction;","lambda$addToQueue$0(Ljava/lang/Runnable;)Ljava/lang/Object;","removeFromQueue(Lcom/sun/imageio/stream/StreamCloser$CloseAction;)V"]
  }
,
  {
    "className": "Lcom/sun/imageio/stream/StreamFinalizer;",
    "module": "java.desktop",
    "source": "/java.desktop/com/sun/imageio/stream/StreamFinalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/ImageInputStream;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/defaults/JmxProperties;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/defaults/JmxProperties.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: jdk.internal.reflect.Reflection.getCallerClass()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$2;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/DefaultMBeanServerInterceptor$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor;Ljava/lang/ClassLoader;Ljavax/management/ObjectName;)V","done()V","registering()V","unregistered()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$3;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/DefaultMBeanServerInterceptor$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor;)V","run()Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext$1;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["done()V","registering()V","unregistered()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext.class",
    "super": "null",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/interceptor/MBeanServerInterceptor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;Lcom/sun/jmx/mbeanserver/MBeanInstantiator;Lcom/sun/jmx/mbeanserver/Repository;)V","addClassLoader(Ljava/lang/ClassLoader;Ljavax/management/ObjectName;)V","checkMBeanPermission(Ljava/lang/String;Ljava/lang/String;Ljavax/management/ObjectName;Ljava/lang/String;)V","checkMBeanPermission(Ljavax/management/DynamicMBean;Ljava/lang/String;Ljavax/management/ObjectName;Ljava/lang/String;)V","checkMBeanTrustPermission(Ljava/lang/Class;)V","createClassLoaderContext(Ljava/lang/ClassLoader;Ljavax/management/ObjectName;)Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;","exclusiveUnregisterMBean(Ljavax/management/ObjectName;)V","getInstantiatorCLR()Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;","getMBean(Ljavax/management/ObjectName;)Ljavax/management/DynamicMBean;","getNewMBeanClassName(Ljava/lang/Object;)Ljava/lang/String;","getResource(Ljavax/management/DynamicMBean;)Ljava/lang/Object;","isRegistered(Ljavax/management/ObjectName;)Z","makeResourceContextFor(Ljava/lang/Object;Ljavax/management/ObjectName;)Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;","nonDefaultDomain(Ljavax/management/ObjectName;)Ljavax/management/ObjectName;","postDeregisterInvoke(Ljavax/management/ObjectName;Ljavax/management/MBeanRegistration;)V","postRegister(Ljavax/management/ObjectName;Ljavax/management/DynamicMBean;ZZ)V","preDeregisterInvoke(Ljavax/management/MBeanRegistration;)V","preRegister(Ljavax/management/DynamicMBean;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;","registerDynamicMBean(Ljava/lang/String;Ljavax/management/DynamicMBean;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;","registerMBean(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;","registerObject(Ljava/lang/String;Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;","registerWithRepository(Ljava/lang/Object;Ljavax/management/DynamicMBean;Ljavax/management/ObjectName;)Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;","removeClassLoader(Ljava/lang/ClassLoader;Ljavax/management/ObjectName;)V","sendNotification(Ljava/lang/String;Ljavax/management/ObjectName;)V","throwMBeanRegistrationException(Ljava/lang/Throwable;Ljava/lang/String;)V","unregisterFromRepository(Ljava/lang/Object;Ljavax/management/DynamicMBean;Ljavax/management/ObjectName;)Lcom/sun/jmx/interceptor/DefaultMBeanServerInterceptor$ResourceContext;","unregisterMBean(Ljavax/management/ObjectName;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/interceptor/MBeanServerInterceptor;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/interceptor/MBeanServerInterceptor.class",
    "super": "null",
    "interfaces": ["Ljavax/management/MBeanServer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/ClassLoaderRepositorySupport$LoaderEntry;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/ClassLoaderRepositorySupport$LoaderEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/ObjectName;Ljava/lang/ClassLoader;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/ClassLoaderRepositorySupport;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/ClassLoaderRepositorySupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljavax/management/ObjectName;Ljava/lang/ClassLoader;)Z","addClassLoader(Ljava/lang/ClassLoader;)V","addClassLoader(Ljavax/management/ObjectName;Ljava/lang/ClassLoader;)V","remove(Ljavax/management/ObjectName;Ljava/lang/ClassLoader;)Z","removeClassLoader(Ljavax/management/ObjectName;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/ConvertingMethod;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/ConvertingMethod.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;)V","checkCallFromOpen()V","from(Ljava/lang/reflect/Method;)Lcom/sun/jmx/mbeanserver/ConvertingMethod;","getDescriptor()Ljavax/management/Descriptor;","getGenericParameterTypes()[Ljava/lang/reflect/Type;","getGenericReturnType()Ljava/lang/reflect/Type;","getMethod()Ljava/lang/reflect/Method;","getName()Ljava/lang/String;","getOpenParameterTypes()[Ljavax/management/openmbean/OpenType;","getOpenReturnType()Ljavax/management/openmbean/OpenType;","getOpenSignature()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;Ljavax/management/openmbean/ArrayType;Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V","checkReconstructible()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CollectionMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CollectionMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;Ljavax/management/openmbean/ArrayType;Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V","checkReconstructible()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;)V","getItemNames()[Ljava/lang/String;","getTargetClass()Ljava/lang/Class;","possibleCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderCheckGetters;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderCheckGetters.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;[Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V","applicable([Ljava/lang/reflect/Method;)Ljava/lang/String;","possibleCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaConstructor$Constr;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaConstructor$Constr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;[ILjava/util/BitSet;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaConstructor;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaConstructor.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;)V","applicable([Ljava/lang/reflect/Method;)Ljava/lang/String;","getConstPropValues(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaFrom;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaFrom.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;)V","applicable([Ljava/lang/reflect/Method;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaProxy;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaProxy.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;)V","applicable([Ljava/lang/reflect/Method;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaSetters;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilderViaSetters.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeBuilder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/String;)V","applicable([Ljava/lang/reflect/Method;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory;Ljava/lang/Class;Ljavax/management/openmbean/CompositeType;[Ljava/lang/String;[Ljava/lang/reflect/Method;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)V","checkReconstructible()V","makeCompositeBuilder()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$EnumMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$EnumMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$IdentityMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$IdentityMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;)V","isIdentity()Z"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$MXBeanRefMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$MXBeanRefMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$Mappings;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$Mappings.class",
    "super": "Ljava/util/WeakHashMap;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/MXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;)V","isIdentity()Z"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$TabularMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$TabularMapping.class",
    "super": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;ZLjavax/management/openmbean/TabularType;Lcom/sun/jmx/mbeanserver/MXBeanMapping;Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V","checkReconstructible()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory.class",
    "super": "Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decapitalize(Ljava/lang/String;)Ljava/lang/String;","getMapping(Ljava/lang/reflect/Type;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","invalidObjectException(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/io/InvalidObjectException;","isIdentity(Lcom/sun/jmx/mbeanserver/MXBeanMapping;)Z","makeArrayOrCollectionMapping(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeCompositeMapping(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeEnumMapping(Ljava/lang/Class;Ljava/lang/Class;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeMXBeanRefMapping(Ljava/lang/reflect/Type;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeMapping(Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeParameterizedTypeMapping(Ljava/lang/reflect/ParameterizedType;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","makeTabularMapping(Ljava/lang/reflect/Type;ZLjava/lang/reflect/Type;Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","mappingForType(Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;)Lcom/sun/jmx/mbeanserver/MXBeanMapping;","mustBeComparable(Ljava/lang/Class;Ljava/lang/reflect/Type;)V","openDataException(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/management/openmbean/OpenDataException;","propertyName(Ljava/lang/reflect/Method;)Ljava/lang/String;","putMapping(Ljava/lang/reflect/Type;Lcom/sun/jmx/mbeanserver/MXBeanMapping;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DescriptorCache;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DescriptorCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljavax/management/ImmutableDescriptor;)Ljavax/management/ImmutableDescriptor;","getInstance()Lcom/sun/jmx/mbeanserver/DescriptorCache;","union([Ljavax/management/Descriptor;)Ljavax/management/ImmutableDescriptor;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/DynamicMBean2;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/DynamicMBean2.class",
    "super": "null",
    "interfaces": ["Ljavax/management/DynamicMBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/GetPropertyAction;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/GetPropertyAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/Introspector;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/Introspector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.security.AccessController.doPrivileged(PrivilegedAction)",
    "invokedMethods": ["<clinit>()V","annotationToField(Ljava/lang/Object;)Ljava/lang/Object;","checkCompliance(Ljava/lang/Class;)V","descriptorForAnnotations([Ljava/lang/annotation/Annotation;)Ljavax/management/Descriptor;","descriptorForElement(Ljava/lang/reflect/AnnotatedElement;)Ljavax/management/Descriptor;","equals(Ljava/lang/Object;Ljava/lang/Object;)Z","findMBeanInterface(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;","getMXBeanInterface(Ljava/lang/Class;)Ljava/lang/Class;","getStandardMBeanInterface(Ljava/lang/Class;)Ljava/lang/Class;","implementsMBean(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Class;","makeDynamicMBean(Ljava/lang/Object;)Ljavax/management/DynamicMBean;","throwException(Ljava/lang/Class;Ljava/lang/Throwable;)Ljavax/management/NotCompliantMBeanException;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/JavaBeansAccessor;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/JavaBeansAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","getConstructorPropertiesValue(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;","getJavaBeansAccess()Ljdk/internal/misc/JavaBeansAccess;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/JmxMBeanServer$1;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/JmxMBeanServer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/JmxMBeanServer;Lcom/sun/jmx/mbeanserver/MBeanInstantiator;)V","run()Ljava/lang/Object;","run()Ljavax/management/loading/ClassLoaderRepository;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/JmxMBeanServer$2;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/JmxMBeanServer$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/JmxMBeanServer;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/JmxMBeanServer$3;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/JmxMBeanServer$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/JmxMBeanServer;)V","run()Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/JmxMBeanServer;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/JmxMBeanServer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/SunJmxMBeanServer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;Lcom/sun/jmx/mbeanserver/MBeanInstantiator;ZZ)V","checkNewMBeanServerPermission()V","cloneObjectName(Ljavax/management/ObjectName;)Ljavax/management/ObjectName;","initialize()V","isRegistered(Ljavax/management/ObjectName;)Z","newMBeanServer(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;Z)Ljavax/management/MBeanServer;","newMBeanServerDelegate()Ljavax/management/MBeanServerDelegate;","registerMBean(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;","unregisterMBean(Ljavax/management/ObjectName;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$AttrMethods;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanAnalyzer$AttrMethods.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$MBeanVisitor;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanAnalyzer$MBeanVisitor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$MethodOrder;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanAnalyzer$MethodOrder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanAnalyzer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MBeanIntrospector;)V","analyzer(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MBeanIntrospector;)Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;","eliminateCovariantMethods(Ljava/util/List;)Ljava/util/List;","initMaps(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MBeanIntrospector;)V","visit(Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$MBeanVisitor;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanInstantiator;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Byte.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;)V","checkMBeanPermission(Ljava/lang/String;Ljava/lang/String;Ljavax/management/ObjectName;Ljava/lang/String;)V","getClassLoaderRepository()Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMaker;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMaker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$MBeanVisitor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/MBeanIntrospector;)V","makeMBeanInfo(Ljava/lang/Class;Ljava/lang/String;)Ljavax/management/MBeanInfo;","visitAttribute(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","visitOperation(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMap;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMap.class",
    "super": "Ljava/util/WeakHashMap;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector$PerInterfaceMap;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanIntrospector$PerInterfaceMap.class",
    "super": "Ljava/util/WeakHashMap;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanIntrospector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["consistent(Ljava/lang/Object;Ljava/lang/Object;)Z","findConstructors(Ljava/lang/Class;)[Ljavax/management/MBeanConstructorInfo;","findNotifications(Ljava/lang/Object;)[Ljavax/management/MBeanNotificationInfo;","getClassMBeanInfo(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/PerInterface;)Ljavax/management/MBeanInfo;","getMBeanInfo(Ljava/lang/Object;Lcom/sun/jmx/mbeanserver/PerInterface;)Ljavax/management/MBeanInfo;","getMethods(Ljava/lang/Class;)Ljava/util/List;","getPerInterface(Ljava/lang/Class;)Lcom/sun/jmx/mbeanserver/PerInterface;","makeInterfaceMBeanInfo(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;)Ljavax/management/MBeanInfo;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanServerDelegateImpl;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanServerDelegateImpl.class",
    "super": "Ljavax/management/MBeanServerDelegate;",
    "interfaces": ["Ljavax/management/DynamicMBean;","Ljavax/management/MBeanRegistration;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","getMBeanInfo()Ljavax/management/MBeanInfo;","postDeregister()V","postRegister(Ljava/lang/Boolean;)V","preDeregister()V","preRegister(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MBeanSupport;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MBeanSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/DynamicMBean2;","Ljavax/management/MBeanRegistration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Class;)V","getMBeanInfo()Ljavax/management/MBeanInfo;","getMBeanInterface()Ljava/lang/Class;","getResource()Ljava/lang/Object;","postDeregister()V","postRegister(Ljava/lang/Boolean;)V","preDeregister()V","preRegister(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;","preRegister2(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)V","registerFailed()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MXBeanIntrospector;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MXBeanIntrospector.class",
    "super": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["canUseOpenInfo(Ljava/lang/reflect/Type;)Z","checkMethod(Lcom/sun/jmx/mbeanserver/ConvertingMethod;)V","checkMethod(Ljava/lang/Object;)V","getAnalyzer(Ljava/lang/Class;)Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;","getBasicMBeanDescriptor()Ljavax/management/Descriptor;","getGenericParameterTypes(Lcom/sun/jmx/mbeanserver/ConvertingMethod;)[Ljava/lang/reflect/Type;","getGenericParameterTypes(Ljava/lang/Object;)[Ljava/lang/reflect/Type;","getGenericReturnType(Lcom/sun/jmx/mbeanserver/ConvertingMethod;)Ljava/lang/reflect/Type;","getGenericReturnType(Ljava/lang/Object;)Ljava/lang/reflect/Type;","getInstance()Lcom/sun/jmx/mbeanserver/MXBeanIntrospector;","getMBeanAttributeInfo(Ljava/lang/String;Lcom/sun/jmx/mbeanserver/ConvertingMethod;Lcom/sun/jmx/mbeanserver/ConvertingMethod;)Ljavax/management/MBeanAttributeInfo;","getMBeanAttributeInfo(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/management/MBeanAttributeInfo;","getMBeanDescriptor(Ljava/lang/Class;)Ljavax/management/Descriptor;","getMBeanInfoMap()Lcom/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMap;","getMBeanOperationInfo(Ljava/lang/String;Lcom/sun/jmx/mbeanserver/ConvertingMethod;)Ljavax/management/MBeanOperationInfo;","getMBeanOperationInfo(Ljava/lang/String;Ljava/lang/Object;)Ljavax/management/MBeanOperationInfo;","getName(Lcom/sun/jmx/mbeanserver/ConvertingMethod;)Ljava/lang/String;","getPerInterfaceMap()Lcom/sun/jmx/mbeanserver/MBeanIntrospector$PerInterfaceMap;","getSignature(Lcom/sun/jmx/mbeanserver/ConvertingMethod;)[Ljava/lang/String;","getSignature(Ljava/lang/Object;)[Ljava/lang/String;","mFrom(Ljava/lang/reflect/Method;)Lcom/sun/jmx/mbeanserver/ConvertingMethod;","mFrom(Ljava/lang/reflect/Method;)Ljava/lang/Object;","originalTypeString(Ljava/lang/reflect/Type;)Ljava/lang/String;","typeDescriptor(Ljavax/management/openmbean/OpenType;Ljava/lang/reflect/Type;)Ljavax/management/Descriptor;","typeName(Ljava/lang/reflect/Type;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MXBeanLookup;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MXBeanLookup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>(Ljavax/management/MBeanServerConnection;)V","addReference(Ljavax/management/ObjectName;Ljava/lang/Object;)V","lookupFor(Ljavax/management/MBeanServerConnection;)Lcom/sun/jmx/mbeanserver/MXBeanLookup;","removeReference(Ljavax/management/ObjectName;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MXBeanMapping;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MXBeanMapping.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;)V","checkReconstructible()V","getJavaType()Ljava/lang/reflect/Type;","getOpenClass()Ljava/lang/Class;","getOpenType()Ljavax/management/openmbean/OpenType;","makeOpenClass(Ljava/lang/reflect/Type;Ljavax/management/openmbean/OpenType;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MXBeanMappingFactory;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MXBeanMappingFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/MXBeanSupport;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/MXBeanSupport.class",
    "super": "Lcom/sun/jmx/mbeanserver/MBeanSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Class;)V","findMXBeanInterface(Ljava/lang/Class;)Ljava/lang/Class;","getMBeanIntrospector()Lcom/sun/jmx/mbeanserver/MBeanIntrospector;","register(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)V","transitiveInterfaces(Ljava/lang/Class;)Ljava/util/Set;","transitiveInterfaces(Ljava/lang/Class;Ljava/util/Set;)V","unregister()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/ModifiableClassLoaderRepository;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/ModifiableClassLoaderRepository.class",
    "super": "null",
    "interfaces": ["Ljavax/management/loading/ClassLoaderRepository;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/NamedObject;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/NamedObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/ObjectName;Ljavax/management/DynamicMBean;)V","equals(Ljava/lang/Object;)Z","getName()Ljavax/management/ObjectName;","getObject()Ljavax/management/DynamicMBean;","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/PerInterface$InitMaps;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/PerInterface$InitMaps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/jmx/mbeanserver/MBeanAnalyzer$MBeanVisitor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/PerInterface;)V","visitAttribute(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","visitOperation(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/PerInterface$MethodAndSig;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/PerInterface$MethodAndSig.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jmx/mbeanserver/PerInterface;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/PerInterface;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/PerInterface.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Lcom/sun/jmx/mbeanserver/MBeanIntrospector;Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;Ljavax/management/MBeanInfo;)V","getMBeanInfo()Ljavax/management/MBeanInfo;","getMBeanInterface()Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/Repository$RegistrationContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/Repository;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/Repository.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Z)V","addMBean(Ljavax/management/DynamicMBean;Ljavax/management/ObjectName;Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;)V","addMoiToTb(Ljavax/management/DynamicMBean;Ljavax/management/ObjectName;Ljava/lang/String;Ljava/util/Map;Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;)V","addNewDomMoi(Ljavax/management/DynamicMBean;Ljava/lang/String;Ljavax/management/ObjectName;Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;)V","contains(Ljavax/management/ObjectName;)Z","getDefaultDomain()Ljava/lang/String;","registering(Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;)V","remove(Ljavax/management/ObjectName;Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;)V","retrieve(Ljavax/management/ObjectName;)Ljavax/management/DynamicMBean;","retrieveNamedObject(Ljavax/management/ObjectName;)Lcom/sun/jmx/mbeanserver/NamedObject;","unregistering(Lcom/sun/jmx/mbeanserver/Repository$RegistrationContext;Ljavax/management/ObjectName;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/SecureClassLoaderRepository;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/SecureClassLoaderRepository.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/management/loading/ClassLoaderRepository;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/loading/ClassLoaderRepository;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/StandardMBeanIntrospector;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/StandardMBeanIntrospector.class",
    "super": "Lcom/sun/jmx/mbeanserver/MBeanIntrospector;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkMethod(Ljava/lang/Object;)V","checkMethod(Ljava/lang/reflect/Method;)V","getAnalyzer(Ljava/lang/Class;)Lcom/sun/jmx/mbeanserver/MBeanAnalyzer;","getBasicMBeanDescriptor()Ljavax/management/Descriptor;","getGenericParameterTypes(Ljava/lang/Object;)[Ljava/lang/reflect/Type;","getGenericParameterTypes(Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Type;","getGenericReturnType(Ljava/lang/Object;)Ljava/lang/reflect/Type;","getGenericReturnType(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;","getInstance()Lcom/sun/jmx/mbeanserver/StandardMBeanIntrospector;","getMBeanAttributeInfo(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljavax/management/MBeanAttributeInfo;","getMBeanAttributeInfo(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljavax/management/MBeanAttributeInfo;","getMBeanDescriptor(Ljava/lang/Class;)Ljavax/management/Descriptor;","getMBeanInfoMap()Lcom/sun/jmx/mbeanserver/MBeanIntrospector$MBeanInfoMap;","getMBeanOperationInfo(Ljava/lang/String;Ljava/lang/Object;)Ljavax/management/MBeanOperationInfo;","getMBeanOperationInfo(Ljava/lang/String;Ljava/lang/reflect/Method;)Ljavax/management/MBeanOperationInfo;","getPerInterfaceMap()Lcom/sun/jmx/mbeanserver/MBeanIntrospector$PerInterfaceMap;","getSignature(Ljava/lang/Object;)[Ljava/lang/String;","getSignature(Ljava/lang/reflect/Method;)[Ljava/lang/String;","isDefinitelyImmutableInfo(Ljava/lang/Class;)Z","mFrom(Ljava/lang/reflect/Method;)Ljava/lang/Object;","mFrom(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/StandardMBeanSupport;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/StandardMBeanSupport.class",
    "super": "Lcom/sun/jmx/mbeanserver/MBeanSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Class;)V","getMBeanInfo()Ljavax/management/MBeanInfo;","getMBeanIntrospector()Lcom/sun/jmx/mbeanserver/MBeanIntrospector;","register(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)V","unregister()V"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/SunJmxMBeanServer;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/SunJmxMBeanServer.class",
    "super": "null",
    "interfaces": ["Ljavax/management/MBeanServer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/Util;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["cast(Ljava/lang/Object;)Ljava/lang/Object;","hashCode([Ljava/lang/String;[Ljava/lang/Object;)I","newInsertionOrderMap()Ljava/util/Map;","newList()Ljava/util/List;","newList(Ljava/util/Collection;)Ljava/util/List;","newMap()Ljava/util/Map;","newObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;","newSet()Ljava/util/Set;","newSet(Ljava/util/Collection;)Ljava/util/Set;","newSortedMap()Ljava/util/SortedMap;"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/WeakIdentityHashMap$IdentityWeakReference;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/WeakIdentityHashMap$IdentityWeakReference.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/jmx/mbeanserver/WeakIdentityHashMap;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/mbeanserver/WeakIdentityHashMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","expunge()V","get(Ljava/lang/Object;)Ljava/lang/Object;","make()Lcom/sun/jmx/mbeanserver/WeakIdentityHashMap;","makeReference(Ljava/lang/Object;)Ljava/lang/ref/WeakReference;","makeReference(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Ljava/lang/ref/WeakReference;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jmx/remote/util/ClassLogger;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/remote/util/ClassLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/System$Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","debugOn()Z","isLoggable(Ljava/lang/System$Logger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/jmx/remote/util/EnvHelp;",
    "module": "java.management",
    "source": "/java.management/com/sun/jmx/remote/util/EnvHelp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: jdk.internal.reflect.Reflection.getCallerClass()",
    "invokedMethods": ["<clinit>()V","initCause(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/CT;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/CT.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DNSDatagramSocketFactory$EphemeralPortRange;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DNSDatagramSocketFactory$EphemeralPortRange.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DNSDatagramSocketFactory$PortHistory;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DNSDatagramSocketFactory$PortHistory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/util/Random;)V","add(I)Z","contains(I)Z","offer(I)Z"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DNSDatagramSocketFactory;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DNSDatagramSocketFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Random;)V","<init>(Ljava/util/Random;Ljava/net/ProtocolFamily;II)V","open()Ljava/net/DatagramSocket;","openDefault()Ljava/net/DatagramSocket;","openRandom()Ljava/net/DatagramSocket;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsClient;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsClient.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "invokedMethods": ["<clinit>()V","<init>([Ljava/lang/String;II)V","checkResponseCode(Lcom/sun/jndi/dns/Header;)V","close()V","continueTcpQuery(Lcom/sun/jndi/dns/Tcp;)[B","doTcpQuery(Lcom/sun/jndi/dns/Tcp;Lcom/sun/jndi/dns/Packet;)[B","doUdpQuery(Lcom/sun/jndi/dns/Packet;Ljava/net/InetAddress;III)[B","getDatagramSocket()Ljava/net/DatagramSocket;","isMatchResponse([BI)Z","lookupResponse(Ljava/lang/Integer;)[B","makeQueryName(Lcom/sun/jndi/dns/DnsName;Lcom/sun/jndi/dns/Packet;I)V","makeQueryPacket(Lcom/sun/jndi/dns/DnsName;IIIZ)Lcom/sun/jndi/dns/Packet;","query(Lcom/sun/jndi/dns/DnsName;IIZZ)Lcom/sun/jndi/dns/ResourceRecords;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsContext;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsContext.class",
    "super": "Lcom/sun/jndi/toolkit/ctx/ComponentDirContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/jndi/dns/DnsContext;)V","<init>(Lcom/sun/jndi/dns/DnsContext;Lcom/sun/jndi/dns/DnsName;)V","<init>(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Hashtable;)V","addToEnvironment(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","c_lookup(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","classAndTypeMatch(II[Lcom/sun/jndi/dns/CT;)Z","close()V","fromAttrId(Ljava/lang/String;)Lcom/sun/jndi/dns/CT;","fullyQualify(Ljavax/naming/Name;)Lcom/sun/jndi/dns/DnsName;","getEnvironment()Ljava/util/Hashtable;","getLookupCT(Ljava/lang/String;)Lcom/sun/jndi/dns/CT;","getResolver()Lcom/sun/jndi/dns/Resolver;","initFromEnvironment()V","p_getEnvironment()Ljava/util/Hashtable;","rrsToAttrs(Lcom/sun/jndi/dns/ResourceRecords;[Lcom/sun/jndi/dns/CT;)Ljavax/naming/directory/Attributes;","setProviderUrl(Ljava/lang/String;)V","toAttrId(II)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsContextFactory;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsContextFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/spi/InitialContextFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","constructProviderUrl(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;","filterNameServers(Ljava/util/List;Z)Ljava/util/List;","getContext(Ljava/lang/String;[Lcom/sun/jndi/dns/DnsUrl;Ljava/util/Hashtable;)Lcom/sun/jndi/dns/DnsContext;","getContext(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Hashtable;)Lcom/sun/jndi/dns/DnsContext;","getInitCtxUrl(Ljava/util/Hashtable;)Ljava/lang/String;","getInitialContext(Ljava/util/Hashtable;)Ljavax/naming/Context;","platformServersAvailable()Z","platformServersUsed([Lcom/sun/jndi/dns/DnsUrl;)Z","serversForUrls([Lcom/sun/jndi/dns/DnsUrl;)[Ljava/lang/String;","urlToContext(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/naming/Context;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsName;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/Name;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/jndi/dns/DnsName;II)V","<init>(Ljava/lang/String;)V","add(ILjava/lang/String;)Ljavax/naming/Name;","addAll(ILjavax/naming/Name;)Ljavax/naming/Name;","addAll(Ljavax/naming/Name;)Ljavax/naming/Name;","clone()Ljava/lang/Object;","compareLabels(Ljava/lang/String;Ljava/lang/String;)I","compareRange(IILjavax/naming/Name;)I","compareTo(Ljava/lang/Object;)I","equals(Ljava/lang/Object;)Z","escape(Ljava/lang/StringBuilder;Ljava/lang/String;)V","get(I)Ljava/lang/String;","getEscapedOctet(Ljava/lang/String;I)C","getKey(I)Ljava/lang/String;","getOctets()S","hasRootLabel()Z","hashCode()I","isDigit(C)Z","isEmpty()Z","keyForLabel(Ljava/lang/String;)Ljava/lang/String;","parse(Ljava/lang/String;)V","size()I","toString()Ljava/lang/String;","verifyLabel(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsNameParser;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsNameParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/NameParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/DnsUrl;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/DnsUrl.class",
    "super": "Lcom/sun/jndi/toolkit/url/Uri;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","fromList(Ljava/lang/String;)[Lcom/sun/jndi/dns/DnsUrl;","getDomain()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/Header;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/Header.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","decode([BI)V","getShort([BI)I"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/NameNode;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/NameNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/Packet;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/Packet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getData()[B","length()I","putByte(II)V","putInt(II)V","putShort(II)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/Resolver;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/Resolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/String;II)V","close()V","query(Lcom/sun/jndi/dns/DnsName;IIZZ)Lcom/sun/jndi/dns/ResourceRecords;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/ResourceRecord;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/ResourceRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BIIZZ)V","decode(Z)V","decodeA(I)Ljava/lang/String;","decodeAAAA(I)Ljava/lang/String;","decodeCharString(ILjava/lang/StringBuffer;)I","decodeHinfo(I)Ljava/lang/String;","decodeMx(I)Ljava/lang/String;","decodeName(I)Lcom/sun/jndi/dns/DnsName;","decodeName(ILcom/sun/jndi/dns/DnsName;)I","decodeNaptr(I)Ljava/lang/String;","decodeRdata(I)Ljava/lang/Object;","decodeSoa(I)Ljava/lang/String;","decodeSrv(I)Ljava/lang/String;","decodeTxt(I)Ljava/lang/String;","getInt(I)I","getName()Lcom/sun/jndi/dns/DnsName;","getRdata()Ljava/lang/Object;","getRrclass()I","getRrclass(Ljava/lang/String;)I","getRrclassName(I)Ljava/lang/String;","getType()I","getType(Ljava/lang/String;)I","getTypeName(I)Ljava/lang/String;","getUByte(I)I","getUInt(I)J","getUShort(I)I","nameToValue(Ljava/lang/String;[Ljava/lang/String;)I","size()I","toString()Ljava/lang/String;","valueToName(I[Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/ResourceRecords;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/ResourceRecords.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BILcom/sun/jndi/dns/Header;Z)V","add([BILcom/sun/jndi/dns/Header;)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/Tcp;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/Tcp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/InetAddress;I)V","close()V"]
  }
,
  {
    "className": "Lcom/sun/jndi/dns/ZoneNode;",
    "module": "jdk.naming.dns",
    "source": "/jdk.naming.dns/com/sun/jndi/dns/ZoneNode.class",
    "super": "Lcom/sun/jndi/dns/NameNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/AtomicContext$1;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/AtomicContext$1.class",
    "super": "Ljavax/naming/RefAddr;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jndi/toolkit/ctx/AtomicContext;Ljava/lang/String;Ljava/lang/Object;)V","getContent()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/AtomicContext;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/AtomicContext.class",
    "super": "Lcom/sun/jndi/toolkit/ctx/ComponentContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","a_lookup_nns(Ljava/lang/String;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","a_processJunction_nns(Ljava/lang/String;Lcom/sun/jndi/toolkit/ctx/Continuation;)V","a_resolveIntermediate_nns(Ljava/lang/String;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","c_lookup_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","c_resolveIntermediate_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","isEmpty(Ljava/lang/String;)Z","resolve_to_penultimate_context(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Z","resolve_to_penultimate_context_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Z"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/ComponentContext$1;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/ComponentContext$1.class",
    "super": "Ljavax/naming/RefAddr;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jndi/toolkit/ctx/ComponentContext;Ljava/lang/String;Ljava/lang/Object;)V","getContent()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/ComponentContext$2;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/ComponentContext$2.class",
    "super": "Ljavax/naming/RefAddr;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/jndi/toolkit/ctx/ComponentContext;Ljava/lang/String;)V","getContent()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/ComponentContext;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/ComponentContext.class",
    "super": "Lcom/sun/jndi/toolkit/ctx/PartialCompositeContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","c_lookup_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","c_processJunction_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)V","c_resolveIntermediate_nns(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","checkAndAdjustRemainingName(Ljavax/naming/Name;)V","isAllEmpty(Ljavax/naming/Name;)Z","p_lookup(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","p_parseComponent(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Lcom/sun/jndi/toolkit/ctx/HeadTail;","p_resolveIntermediate(Ljavax/naming/Name;Lcom/sun/jndi/toolkit/ctx/Continuation;)Lcom/sun/jndi/toolkit/ctx/HeadTail;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/ComponentDirContext;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/ComponentDirContext.class",
    "super": "Lcom/sun/jndi/toolkit/ctx/PartialCompositeDirContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/Continuation;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/Continuation.class",
    "super": "Ljavax/naming/spi/ResolveResult;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/Name;Ljava/util/Hashtable;)V","fillInException(Ljavax/naming/NamingException;)Ljavax/naming/NamingException;","isContinue()Z","setContinue(Ljava/lang/Object;Ljava/lang/String;Ljavax/naming/Context;Ljava/lang/String;)V","setContinue(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;)V","setContinue(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljavax/naming/Name;)V","setContinueAux(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljavax/naming/Name;)V","setContinueLink(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljavax/naming/Name;)V","setContinueNNS(Ljava/lang/Object;Ljava/lang/String;Ljavax/naming/Context;)V","setContinueNNS(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;)V","setError(Ljava/lang/Object;Ljavax/naming/Name;)V","setErrorAux(Ljava/lang/Object;Ljavax/naming/Name;)V","setErrorNNS(Ljava/lang/Object;Ljava/lang/String;)V","setSuccess()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/HeadTail;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/HeadTail.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/Name;Ljavax/naming/Name;)V","<init>(Ljavax/naming/Name;Ljavax/naming/Name;I)V","getHead()Ljavax/naming/Name;","getStatus()I","getTail()Ljavax/naming/Name;","setStatus(I)V"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/PartialCompositeContext;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/PartialCompositeContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/Context;","Ljavax/naming/spi/Resolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","getPCContext(Lcom/sun/jndi/toolkit/ctx/Continuation;)Lcom/sun/jndi/toolkit/ctx/PartialCompositeContext;","lookup(Ljava/lang/String;)Ljava/lang/Object;","lookup(Ljavax/naming/Name;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/ctx/PartialCompositeDirContext;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/ctx/PartialCompositeDirContext.class",
    "super": "Lcom/sun/jndi/toolkit/ctx/AtomicContext;",
    "interfaces": ["Ljavax/naming/directory/DirContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","a_lookup(Ljava/lang/String;Lcom/sun/jndi/toolkit/ctx/Continuation;)Ljava/lang/Object;","c_parseComponent(Ljava/lang/String;Lcom/sun/jndi/toolkit/ctx/Continuation;)Lcom/sun/jndi/toolkit/ctx/StringHeadTail;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/url/Uri;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/url/Uri.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getHost()Ljava/lang/String;","getPort()I","init(Ljava/lang/String;)V","parse(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/jndi/toolkit/url/UrlUtil;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/jndi/toolkit/url/UrlUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decode(Ljava/lang/String;)Ljava/lang/String;","decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/management/GarbageCollectorMXBean;",
    "module": "jdk.management",
    "source": "/jdk.management/com/sun/management/GarbageCollectorMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/GarbageCollectorMXBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/management/OperatingSystemMXBean;",
    "module": "jdk.management",
    "source": "/jdk.management/com/sun/management/OperatingSystemMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/OperatingSystemMXBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/management/ThreadMXBean;",
    "module": "jdk.management",
    "source": "/jdk.management/com/sun/management/ThreadMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/ThreadMXBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/management/UnixOperatingSystemMXBean;",
    "module": "jdk.management",
    "source": "/jdk.management/com/sun/management/UnixOperatingSystemMXBean.class",
    "super": "null",
    "interfaces": ["Lcom/sun/management/OperatingSystemMXBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/naming/internal/FactoryEnumeration;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/naming/internal/FactoryEnumeration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Ljava/lang/ClassLoader;)V","hasMore()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/naming/internal/NamedWeakReference;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/naming/internal/NamedWeakReference.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/String;)V","getName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/naming/internal/ResourceManager;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/naming/internal/ResourceManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getApplicationResources()Ljava/util/Hashtable;","getFactories(Ljava/lang/String;Ljava/util/Hashtable;Ljavax/naming/Context;)Lcom/sun/naming/internal/FactoryEnumeration;","getFactory(Ljava/lang/String;Ljava/util/Hashtable;Ljavax/naming/Context;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;","getInitialEnvironment(Ljava/util/Hashtable;)Ljava/util/Hashtable;","getProperty(Ljava/lang/String;Ljava/util/Hashtable;Ljavax/naming/Context;Z)Ljava/lang/String;","getProviderResource(Ljava/lang/Object;)Ljava/util/Hashtable;","isListProperty(Ljava/lang/String;)Z","mergeTables(Ljava/util/Hashtable;Ljava/util/Hashtable;)V"]
  }
,
  {
    "className": "Lcom/sun/naming/internal/VersionHelper$InputStreamEnumeration;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/naming/internal/VersionHelper$InputStreamEnumeration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/NamingEnumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/naming/internal/VersionHelper;Ljava/util/Enumeration;)V","getNextElement()Ljava/io/InputStream;","hasMore()Z","hasMoreElements()Z","lambda$getNextElement$0()Ljava/io/InputStream;","next()Ljava/io/InputStream;","next()Ljava/lang/Object;","nextElement()Ljava/io/InputStream;","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/naming/internal/VersionHelper;",
    "module": "java.naming",
    "source": "/java.naming/com/sun/naming/internal/VersionHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getContextClassLoader()Ljava/lang/ClassLoader;","getJavaHomeConfStream(Ljava/lang/String;)Ljava/io/InputStream;","getJndiProperties()[Ljava/lang/String;","getJndiProperty(I)Ljava/lang/String;","getResourceAsStream(Ljava/lang/Class;Ljava/lang/String;)Ljava/io/InputStream;","getResources(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljavax/naming/NamingEnumeration;","lambda$getContextClassLoader$6()Ljava/lang/ClassLoader;","lambda$getJavaHomeConfStream$4(Ljava/lang/String;)Ljava/io/InputStream;","lambda$getJndiProperties$2()Ljava/util/Properties;","lambda$getJndiProperty$1(I)Ljava/lang/String;","lambda$getResourceAsStream$3(Ljava/lang/Class;Ljava/lang/String;)Ljava/io/InputStream;","lambda$getResources$5(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/util/Enumeration;","loadClass(Ljava/lang/String;)Ljava/lang/Class;","loadClass(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;","loadClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;","resolveName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/net/ssl/internal/ssl/Provider;",
    "module": "java.base",
    "source": "/java.base/com/sun/net/ssl/internal/ssl/Provider.class",
    "super": "Lsun/security/ssl/SunJSSE;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/security/Provider;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xalan/internal/utils/XMLSecurityManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xalan/internal/utils/XMLSecurityManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["printWarning(Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/SAXException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/AttrImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;",
    "interfaces": ["Lorg/w3c/dom/Attr;","Lorg/w3c/dom/TypeInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","checkNormalizationAfterInsert(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","checkNormalizationAfterRemove(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getChildNodes()Lorg/w3c/dom/NodeList;","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLength()I","getName()Ljava/lang/String;","getNodeName()Ljava/lang/String;","getNodeType()S","getNodeValue()Ljava/lang/String;","getOwnerElement()Lorg/w3c/dom/Element;","getSpecified()Z","getValue()Ljava/lang/String;","hasChildNodes()Z","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","internalInsertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;","internalRemoveChild(Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;","item(I)Lorg/w3c/dom/Node;","lastChild()Lcom/sun/org/apache/xerces/internal/dom/ChildNode;","lastChild(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","makeChildNode()V","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setIdAttribute(Z)V","setNodeValue(Ljava/lang/String;)V","setReadOnly(ZZ)V","setSpecified(Z)V","setType(Ljava/lang/Object;)V","setValue(Ljava/lang/String;)V","synchronizeChildren()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/AttrNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/AttrNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getLocalName()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getPrefix()Ljava/lang/String;","setName(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/AttributeMap;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/AttributeMap.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/ElementImpl;Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;)V","addItem(Lorg/w3c/dom/Node;)I","cloneContent(Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;)V","cloneMap(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;","remove(Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;IZ)Lorg/w3c/dom/Node;","removeItem(Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;","setNamedItem(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setNamedItemNS(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CDATASectionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CDATASectionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/TextImpl;",
    "interfaces": ["Lorg/w3c/dom/CDATASection;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","getNodeName()Ljava/lang/String;","getNodeType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CharacterDataImpl$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CharacterDataImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NodeList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getLength()I","item(I)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CharacterDataImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CharacterDataImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ChildNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","appendData(Ljava/lang/String;)V","getChildNodes()Lorg/w3c/dom/NodeList;","getData()Ljava/lang/String;","getLength()I","getNodeValue()Ljava/lang/String;","setData(Ljava/lang/String;)V","setNodeValue(Ljava/lang/String;)V","setNodeValueInternal(Ljava/lang/String;)V","setNodeValueInternal(Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ChildNode;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ChildNode.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getNextSibling()Lorg/w3c/dom/Node;","getParentNode()Lorg/w3c/dom/Node;","getPreviousSibling()Lorg/w3c/dom/Node;","parentNode()Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;","previousSibling()Lcom/sun/org/apache/xerces/internal/dom/ChildNode;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CommentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CommentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CharacterDataImpl;",
    "interfaces": ["Lorg/w3c/dom/CharacterData;","Lorg/w3c/dom/Comment;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","getNodeName()Ljava/lang/String;","getNodeType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CoreDOMImplementationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CoreDOMImplementationImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/DOMImplementation;","Lorg/w3c/dom/ls/DOMImplementationLS;"],
    "safeForPreinit": "true",
    "invokedMethods": ["hasFeature(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/CoreDocumentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/Document;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Z)V","callUserDataHandlers(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;S)V","callUserDataHandlers(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;SLjava/util/Map;)V","changed()V","changes()I","checkDOMNSErr(Ljava/lang/String;Ljava/lang/String;)V","checkNamespaceWF(Ljava/lang/String;II)V","checkQName(Ljava/lang/String;Ljava/lang/String;)V","clone()Ljava/lang/Object;","cloneNode(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Z)V","createAttribute(Ljava/lang/String;)Lorg/w3c/dom/Attr;","createAttributeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","createAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","createCDATASection(Ljava/lang/String;)Lorg/w3c/dom/CDATASection;","createComment(Ljava/lang/String;)Lorg/w3c/dom/Comment;","createDocumentFragment()Lorg/w3c/dom/DocumentFragment;","createDocumentType(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/DocumentType;","createElement(Ljava/lang/String;)Lorg/w3c/dom/Element;","createElementDefinition(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/dom/ElementDefinitionImpl;","createElementNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;","createElementNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;","createEntity(Ljava/lang/String;)Lorg/w3c/dom/Entity;","createEntityReference(Ljava/lang/String;)Lorg/w3c/dom/EntityReference;","createNotation(Ljava/lang/String;)Lorg/w3c/dom/Notation;","createProcessingInstruction(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/ProcessingInstruction;","createTextNode(Ljava/lang/String;)Lorg/w3c/dom/Text;","freeNodeListCache(Lcom/sun/org/apache/xerces/internal/dom/NodeListCache;)V","getBaseURI()Ljava/lang/String;","getDoctype()Lorg/w3c/dom/DocumentType;","getDocumentElement()Lorg/w3c/dom/Element;","getDocumentURI()Ljava/lang/String;","getNodeListCache(Lcom/sun/org/apache/xerces/internal/dom/ParentNode;)Lcom/sun/org/apache/xerces/internal/dom/NodeListCache;","getNodeName()Ljava/lang/String;","getNodeType()S","getOwnerDocument()Lorg/w3c/dom/Document;","getUserDataRecord(Lorg/w3c/dom/Node;)Ljava/util/Map;","getXmlVersion()Ljava/lang/String;","importNode(Lorg/w3c/dom/Node;ZZLjava/util/Map;)Lorg/w3c/dom/Node;","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","isKidOK(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Z","isXMLName(Ljava/lang/String;Z)Z","lambda$callUserDataHandlers$0(Ljava/util/Map;SLorg/w3c/dom/Node;Lorg/w3c/dom/Node;Ljava/lang/String;)V","putIdentifier(Ljava/lang/String;Lorg/w3c/dom/Element;)V","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","removeIdentifier(Ljava/lang/String;)V","setDocumentURI(Ljava/lang/String;)V","setInputEncoding(Ljava/lang/String;)V","setStrictErrorChecking(Z)V","setXmlEncoding(Ljava/lang/String;)V","setXmlStandalone(Z)V","setXmlVersion(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DOMErrorImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DOMErrorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/DOMError;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DOMImplementationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DOMImplementationImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CoreDOMImplementationImpl;",
    "interfaces": ["Lorg/w3c/dom/DOMImplementation;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getDOMImplementation()Lorg/w3c/dom/DOMImplementation;","hasFeature(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DOMLocatorImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DOMLocatorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/DOMLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DOMMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DOMMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["formatMessage(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getResourceBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;","init()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeepNodeListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeepNodeListImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NodeList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Ljava/lang/String;)V","getLength()I","item(I)Lorg/w3c/dom/Node;","nextMatchingElementAfter(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredAttrImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredAttrImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredAttrNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredAttrNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/AttrNSImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredCDATASectionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredCDATASectionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CDATASectionImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredCommentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredCommentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CommentImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredDOMImplementationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredDOMImplementationImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/DOMImplementationImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDOMImplementation()Lorg/w3c/dom/DOMImplementation;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl$IntVector;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl$IntVector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addElement(I)V","elementAt(I)I","ensureCapacity(I)V","removeAllElements()V","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl$RefCount;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl$RefCount.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","<init>(ZZ)V","appendChild(II)V","binarySearch([IIII)I","clearChunkIndex([[III)I","clearChunkValue([[Ljava/lang/Object;II)Ljava/lang/String;","cloneNode(IZ)I","createChunk([[II)V","createChunk([[Ljava/lang/Object;I)V","createDeferredAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I","createDeferredCDATASection(Ljava/lang/String;)I","createDeferredComment(Ljava/lang/String;)I","createDeferredDocument()I","createDeferredDocumentType(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","createDeferredElement(Ljava/lang/String;Ljava/lang/String;)I","createDeferredElementDefinition(Ljava/lang/String;)I","createDeferredEntity(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","createDeferredEntityReference(Ljava/lang/String;Ljava/lang/String;)I","createDeferredNotation(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","createDeferredProcessingInstruction(Ljava/lang/String;Ljava/lang/String;)I","createDeferredTextNode(Ljava/lang/String;Z)I","createNode(S)I","ensureCapacity(I)V","getChunkIndex([[III)I","getChunkValue([[Ljava/lang/Object;II)Ljava/lang/String;","getDeferredEntityBaseURI(I)Ljava/lang/String;","getImplementation()Lorg/w3c/dom/DOMImplementation;","getLastChild(I)I","getLastChild(IZ)I","getNodeExtra(I)I","getNodeExtra(IZ)I","getNodeIndex()I","getNodeName(I)Ljava/lang/String;","getNodeName(IZ)Ljava/lang/String;","getNodeObject(I)Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;","getNodeType(I)S","getNodeType(IZ)S","getNodeURI(I)Ljava/lang/String;","getNodeURI(IZ)Ljava/lang/String;","getNodeValue(I)Ljava/lang/String;","getNodeValue(IZ)Ljava/lang/String;","getNodeValueString(I)Ljava/lang/String;","getNodeValueString(IZ)Ljava/lang/String;","getParentNode(IZ)I","getPrevSibling(I)I","getPrevSibling(IZ)I","getRealPrevSibling(I)I","getRealPrevSibling(IZ)I","getTypeInfo(I)Ljava/lang/Object;","insertBefore(III)I","lookupElementDefinition(Ljava/lang/String;)I","putIdentifier(Ljava/lang/String;I)V","putIdentifier0(Ljava/lang/String;Lorg/w3c/dom/Element;)V","setAsLastChild(II)V","setChunkIndex([[IIII)I","setChunkValue([[Ljava/lang/Object;Ljava/lang/Object;II)Ljava/lang/String;","setDeferredAttribute(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZLjava/lang/Object;)I","setEntityInfo(ILjava/lang/String;Ljava/lang/String;)V","setIdAttribute(I)V","setInputEncoding(ILjava/lang/String;)V","setInternalSubset(ILjava/lang/String;)V","setTypeInfo(ILjava/lang/Object;)V","synchronizeChildren()V","synchronizeChildren(Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;I)V","synchronizeChildren(Lcom/sun/org/apache/xerces/internal/dom/ParentNode;I)V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentTypeImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredDocumentTypeImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/DocumentTypeImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredElementDefinitionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredElementDefinitionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ElementDefinitionImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredElementImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredElementImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ElementImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredElementNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredElementNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ElementNSImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredEntityImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredEntityImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/EntityImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredEntityReferenceImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredEntityReferenceImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/EntityReferenceImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeChildren()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredNode.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredNotationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredNotationImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/NotationImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredProcessingInstructionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredProcessingInstructionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ProcessingInstructionImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DeferredTextImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DeferredTextImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/TextImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/dom/DeferredNode;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DeferredDocumentImpl;I)V","getNodeIndex()I","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DocumentFragmentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DocumentFragmentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/DocumentFragment;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;)V","getNodeName()Ljava/lang/String;","getNodeType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl$EnclosingAttr;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DocumentImpl$EnclosingAttr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl$LEntry;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DocumentImpl$LEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DocumentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;",
    "interfaces": ["Lorg/w3c/dom/traversal/DocumentTraversal;","Lorg/w3c/dom/events/DocumentEvent;","Lorg/w3c/dom/ranges/DocumentRange;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Z)V","cloneNode(Z)Lorg/w3c/dom/Node;","dispatchAggregateEvents(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;Ljava/lang/String;S)V","dispatchAggregateEvents(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl$EnclosingAttr;)V","dispatchEvent(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Lorg/w3c/dom/events/Event;)Z","dispatchEventToSubtree(Lorg/w3c/dom/Node;Lorg/w3c/dom/events/Event;)V","dispatchingEventToSubtree(Lorg/w3c/dom/Node;Lorg/w3c/dom/events/Event;)V","getEventListeners(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)Ljava/util/List;","getImplementation()Lorg/w3c/dom/DOMImplementation;","getMutationEvents()Z","insertedNode(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Z)V","insertingNode(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Z)V","modifiedAttrValue(Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;Ljava/lang/String;)V","modifiedCharacterData(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Ljava/lang/String;Ljava/lang/String;Z)V","modifyingCharacterData(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Z)V","removedAttrNode(Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Ljava/lang/String;)V","removedNode(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Z)V","removingNode(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;Z)V","replacedText(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)V","saveEnclosingAttr(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)V","setAttrNode(Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;Lcom/sun/org/apache/xerces/internal/dom/AttrImpl;)V","setMutationEvents(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/DocumentTypeImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/DocumentTypeImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/DocumentType;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Integer.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getElements()Lorg/w3c/dom/NamedNodeMap;","getEntities()Lorg/w3c/dom/NamedNodeMap;","getNodeName()Ljava/lang/String;","getNodeType()S","getNotations()Lorg/w3c/dom/NamedNodeMap;","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","getUserDataRecord()Ljava/util/Map;","setInternalSubset(Ljava/lang/String;)V","setReadOnly(ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ElementDefinitionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ElementDefinitionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getNodeName()Ljava/lang/String;","getNodeType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ElementImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ElementImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/Element;","Lorg/w3c/dom/ElementTraversal;","Lorg/w3c/dom/TypeInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getAttribute(Ljava/lang/String;)Ljava/lang/String;","getAttributeNS(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getAttributeNode(Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributeNodeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getDefaultAttributes()Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;","getElementsByTagName(Ljava/lang/String;)Lorg/w3c/dom/NodeList;","getNodeName()Ljava/lang/String;","getNodeType()S","getTagName()Ljava/lang/String;","hasAttribute(Ljava/lang/String;)Z","setAttribute(Ljava/lang/String;Ljava/lang/String;)V","setAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","setAttributeNode(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;","setAttributeNodeNS(Lorg/w3c/dom/Attr;)Lorg/w3c/dom/Attr;","setIdAttributeNode(Lorg/w3c/dom/Attr;Z)V","setReadOnly(ZZ)V","setupDefaultAttributes()V","synchronizeData()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ElementNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ElementNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ElementImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getLocalName()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getPrefix()Ljava/lang/String;","setName(Ljava/lang/String;Ljava/lang/String;)V","setType(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/EntityImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/EntityImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/Entity;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getBaseURI()Ljava/lang/String;","getNodeName()Ljava/lang/String;","getNodeType()S","getNotationName()Ljava/lang/String;","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","setBaseURI(Ljava/lang/String;)V","setInputEncoding(Ljava/lang/String;)V","setNotationName(Ljava/lang/String;)V","setPublicId(Ljava/lang/String;)V","setSystemId(Ljava/lang/String;)V","setXmlEncoding(Ljava/lang/String;)V","setXmlVersion(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/EntityReferenceImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/EntityReferenceImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "interfaces": ["Lorg/w3c/dom/EntityReference;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getBaseURI()Ljava/lang/String;","getEntityRefValue()Ljava/lang/String;","getNodeName()Ljava/lang/String;","getNodeType()S","setBaseURI(Ljava/lang/String;)V","setReadOnly(ZZ)V","synchronizeChildren()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/LCount;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/LCount.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","lambda$lookup$0(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/dom/LCount;","lookup(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/dom/LCount;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NamedNodeMap;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)V","cloneContent(Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;)V","cloneMap(Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;)Lcom/sun/org/apache/xerces/internal/dom/NamedNodeMapImpl;","findNamePoint(Ljava/lang/String;I)I","findNamePoint(Ljava/lang/String;Ljava/lang/String;)I","getLength()I","getNamedItem(Ljava/lang/String;)Lorg/w3c/dom/Node;","getNamedItemNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Node;","hasDefaults()Z","hasDefaults(Z)V","isReadOnly()Z","isReadOnly(Z)V","item(I)Lorg/w3c/dom/Node;","setNamedItem(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setNamedItemNS(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setReadOnly(ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/NodeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/Node;","Lorg/w3c/dom/NodeList;","Lorg/w3c/dom/events/EventTarget;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;)V","appendChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","changed()V","changes()I","cloneNode(Z)Lorg/w3c/dom/Node;","dispatchEvent(Lorg/w3c/dom/events/Event;)Z","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getChildNodes()Lorg/w3c/dom/NodeList;","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLength()I","getLocalName()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getNextSibling()Lorg/w3c/dom/Node;","getNodeValue()Ljava/lang/String;","getOwnerDocument()Lorg/w3c/dom/Document;","getParentNode()Lorg/w3c/dom/Node;","getPrefix()Ljava/lang/String;","getPreviousSibling()Lorg/w3c/dom/Node;","getUserDataRecord()Ljava/util/Map;","hasChildNodes()Z","hasStringValue()Z","hasStringValue(Z)V","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","isFirstChild()Z","isFirstChild(Z)V","isIdAttribute()Z","isIdAttribute(Z)V","isIgnorableWhitespace(Z)V","isNormalized()Z","isNormalized(Z)V","isOwned()Z","isOwned(Z)V","isReadOnly()Z","isReadOnly(Z)V","isSpecified()Z","isSpecified(Z)V","item(I)Lorg/w3c/dom/Node;","needsSyncChildren()Z","needsSyncChildren(Z)V","needsSyncData()Z","needsSyncData(Z)V","ownerDocument()Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;","parentNode()Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setReadOnly(ZZ)V","synchronizeData()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/NodeIteratorImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/NodeIteratorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/traversal/NodeIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/NodeListCache;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/NodeListCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/ParentNode;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/NotationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/NotationImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/NodeImpl;",
    "interfaces": ["Lorg/w3c/dom/Notation;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","getNodeName()Ljava/lang/String;","getNodeType()S","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","setBaseURI(Ljava/lang/String;)V","setPublicId(Ljava/lang/String;)V","setSystemId(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/PSVIAttrNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/PSVIAttrNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/AttrNSImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/AttributePSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getAttributeDeclaration()Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;","getErrorCodes()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getErrorMessages()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getIsSchemaSpecified()Z","getMemberTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getSchemaValue()Lcom/sun/org/apache/xerces/internal/xs/XSValue;","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getValidationAttempted()S","getValidationContext()Ljava/lang/String;","getValidity()S","setPSVI(Lcom/sun/org/apache/xerces/internal/xs/AttributePSVI;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/PSVIDOMImplementationImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/DOMImplementationImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDOMImplementation()Lorg/w3c/dom/DOMImplementation;","hasFeature(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/PSVIDocumentImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/PSVIDocumentImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/DocumentImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","cloneNode(Z)Lorg/w3c/dom/Node;","createAttributeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","createAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","createElementNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;","createElementNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;","getImplementation()Lorg/w3c/dom/DOMImplementation;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/PSVIElementNSImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/PSVIElementNSImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ElementNSImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/ElementPSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getElementDeclaration()Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;","getErrorCodes()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getErrorMessages()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getIsSchemaSpecified()Z","getMemberTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getNil()Z","getNotation()Lcom/sun/org/apache/xerces/internal/xs/XSNotationDeclaration;","getSchemaInformation()Lcom/sun/org/apache/xerces/internal/xs/XSModel;","getSchemaValue()Lcom/sun/org/apache/xerces/internal/xs/XSValue;","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getValidationAttempted()S","getValidationContext()Ljava/lang/String;","getValidity()S","setPSVI(Lcom/sun/org/apache/xerces/internal/xs/ElementPSVI;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode$UserDataRecord;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ParentNode$UserDataRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ParentNode;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ParentNode.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/ChildNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;)V","checkNormalizationAfterInsert(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","checkNormalizationAfterRemove(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getChildNodes()Lorg/w3c/dom/NodeList;","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLength()I","getOwnerDocument()Lorg/w3c/dom/Document;","hasChildNodes()Z","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","internalInsertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;","internalRemoveChild(Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;","item(I)Lorg/w3c/dom/Node;","lastChild()Lcom/sun/org/apache/xerces/internal/dom/ChildNode;","lastChild(Lcom/sun/org/apache/xerces/internal/dom/ChildNode;)V","nodeListGetLength()I","nodeListItem(I)Lorg/w3c/dom/Node;","ownerDocument()Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setReadOnly(ZZ)V","synchronizeChildren()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/ProcessingInstructionImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/ProcessingInstructionImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CharacterDataImpl;",
    "interfaces": ["Lorg/w3c/dom/ProcessingInstruction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;Ljava/lang/String;)V","getNodeName()Ljava/lang/String;","getNodeType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/RangeImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/RangeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/ranges/Range;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/TextImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/TextImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/CharacterDataImpl;",
    "interfaces": ["Lorg/w3c/dom/CharacterData;","Lorg/w3c/dom/Text;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/dom/CoreDocumentImpl;Ljava/lang/String;)V","getNodeName()Ljava/lang/String;","getNodeType()S","removeData()Ljava/lang/String;","replaceData(Ljava/lang/String;)V","setIgnorableWhitespace(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/events/EventImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/events/EventImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/events/Event;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getType()Ljava/lang/String;","initEvent(Ljava/lang/String;ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/dom/events/MutationEventImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/dom/events/MutationEventImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/dom/events/EventImpl;",
    "interfaces": ["Lorg/w3c/dom/events/MutationEvent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","initMutationEvent(Ljava/lang/String;ZZLorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;S)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/Constants$ArrayEnumeration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/Constants$ArrayEnumeration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/Constants;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/Constants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","getSAXFeatures()Ljava/util/Enumeration;","getXercesFeatures()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/ExternalSubsetResolver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/ExternalSubsetResolver.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/RevalidationHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/RevalidationHandler.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XML11DTDScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XML11DTDScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;)V","isInvalid(I)Z","isInvalidLiteral(I)Z","isValidNameChar(I)Z","normalizeWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","scanPubidLiteral(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","versionSupported(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XML11DocumentScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XML11DocumentScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isInvalid(I)Z","isInvalidLiteral(I)Z","isUnchangedByNormalization(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)I","isValidNCName(I)Z","isValidNameChar(I)Z","isValidNameStartChar(I)Z","isValidNameStartHighSurrogate(I)Z","normalizeWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","normalizeWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;I)V","scanAttributeValue(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Ljava/lang/String;ZLjava/lang/String;Z)Z","scanContent(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)I","scanPubidLiteral(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","versionSupported(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XML11EntityScanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XML11EntityScanner.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityScanner;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","peekChar()I","scanChar(Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)I","scanContent(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)I","scanData(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;I)Z","scanLiteral(ILcom/sun/org/apache/xerces/internal/xni/XMLString;Z)I","scanName(Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Ljava/lang/String;","scanNmtoken()Ljava/lang/String;","scanQName(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Z","skipChar(ILcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Z","skipSpaces()Z","skipString(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XML11NSDocumentScannerImpl$NS11ContentDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XML11NSDocumentScannerImpl$NS11ContentDriver.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$ContentDriver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XML11NSDocumentScannerImpl;)V","reconfigurePipeline()V","scanRootElementHook()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XML11NSDocumentScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XML11NSDocumentScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XML11DocumentScannerImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createContentDriver()Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;","next()I","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","scanAttribute(Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl;)V","scanEndElement()I","scanStartElement()Z","scanStartElementAfterName()Z","scanStartElementName()V","setDTDValidator(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidatorFilter;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLScanner;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/impl/XMLEntityHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;)V","endEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ensureEnumerationSize(I)V","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getGrammar()Lcom/sun/xml/internal/stream/dtd/nonvalidating/DTDGrammar;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","init()V","peekReportEntity()Z","popContentStack()I","popPEStack()I","pushContentStack(I)V","pushPEStack(IZ)V","reset()V","reset(Lcom/sun/org/apache/xerces/internal/impl/PropertyManager;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","scanAttDefaultDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Ljava/lang/String;","scanAttType(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","scanAttlistDecl()V","scanChildren(Ljava/lang/String;)V","scanComment()V","scanConditionalSect(I)V","scanDTDExternalSubset(Z)Z","scanDTDInternalSubset(ZZZ)Z","scanDecls(Z)Z","scanElementDecl()V","scanEntityDecl()V","scanEntityValue(Ljava/lang/String;ZLcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","scanMixed(Ljava/lang/String;)V","scanNotationDecl()V","scanPIData(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","scanTextDecl()Z","scanningInternalSubset()Z","setDTDContentModelHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;)V","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setInputSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","setLimitAnalyzer(Lcom/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer;)V","setScannerState(I)V","skipDTD(Z)Z","skipSeparator(ZZ)Z","startEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startPE(Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$ElementStack2;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$ElementStack2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$ElementStack;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$ElementStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl;)V","clear()V","getNext()Lcom/sun/org/apache/xerces/internal/xni/QName;","matchElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)Z","nextElement()Lcom/sun/org/apache/xerces/internal/xni/QName;","popElement()Lcom/sun/org/apache/xerces/internal/xni/QName;","push()V","pushElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)Lcom/sun/org/apache/xerces/internal/xni/QName;","reposition()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$FragmentContentDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$FragmentContentDriver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl;)V","next()I","startOfMarkup()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLScanner;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentScanner;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/impl/XMLEntityHandler;","Lcom/sun/xml/internal/stream/XMLBufferListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","bufferContent()V","checkAccess(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","checkDepth(Ljava/lang/String;)V","endEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getCharacterData()Lcom/sun/org/apache/xerces/internal/xni/XMLString;","getDocumentHandler()Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getPIData()Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;","getPITarget()Ljava/lang/String;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getScannerStateName(I)Ljava/lang/String;","getString()Lcom/sun/org/apache/xerces/internal/xni/XMLString;","handleCharacter(CLjava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","refresh(I)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resetCommon()V","scanAttribute(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","scanCDATASection(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;Z)Z","scanComment()V","scanContent(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)I","scanDocument(Z)Z","scanEndElement()I","scanEntityReference(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","scanPIData(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","scanStartElement()Z","scanXMLDeclOrTextDecl(Z)V","seekCloseOfStartTag()Z","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setDriver(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setScannerState(I)V","startEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$ContentDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$ContentDriver.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$FragmentContentDriver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;)V","elementDepthIsZeroHook()Z","endOfFileHook(Ljava/io/EOFException;)V","resolveExternalSubsetAndRead()V","scanForDoctypeHook()Z","scanRootElementHook()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$DTDDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$DTDDriver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;)V","dispatch(Z)Z","next()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$PrologDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$PrologDriver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;)V","next()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$TrailingMiscDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$TrailingMiscDriver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;)V","next()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$XMLDeclDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$XMLDeclDriver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;)V","next()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","createContentDriver()Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;","endEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getScannerStateName(I)Ljava/lang/String;","next()I","refresh(I)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","scanDoctypeDecl(Z)Z","setEndDTDScanState()V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityDescription.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager$EncodingInfo;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityManager$EncodingInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Ljava/lang/Boolean;Z)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Boolean;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager$RewindableInputStream;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityManager$RewindableInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;Ljava/io/InputStream;)V","available()I","close()V","mark(I)V","markSupported()Z","read()I","read([BII)I","readAndBuffer()I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Boolean.TRUE",
    "invokedMethods": ["<clinit>()V","<init>()V","closeReaders()V","createReader(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/io/Reader;","endEntity()V","endExternalSubset()V","expandSystemId(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","expandSystemId(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;","expandSystemIdStrictOff(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","expandSystemIdStrictOff1(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","fixURI(Ljava/lang/String;)Ljava/lang/String;","getCurrentEntity()Lcom/sun/xml/internal/stream/Entity$ScannedEntity;","getCurrentResourceIdentifier()Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;","getEncodingInfo([BI)Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager$EncodingInfo;","getEntityScanner()Lcom/sun/org/apache/xerces/internal/impl/XMLEntityScanner;","getEntityStore()Lcom/sun/xml/internal/stream/XMLEntityStorage;","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getTopLevelEntity()Lcom/sun/xml/internal/stream/Entity$ScannedEntity;","getUserDir()Lcom/sun/org/apache/xerces/internal/util/URI;","isDeclaredEntity(Ljava/lang/String;)Z","isExternalEntity(Ljava/lang/String;)Z","reset()V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resolveEntity(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","resolveEntityAsPerStax(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;)Lcom/sun/xml/internal/stream/StaxXMLInputSource;","setEntityHandler(Lcom/sun/org/apache/xerces/internal/impl/XMLEntityHandler;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setScannerVersion(S)V","setStandalone(Z)V","setupCurrentEntity(ZLjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;ZZ)Ljava/lang/String;","startDTDEntity(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","startEntity(ZLjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;ZZ)V","startEntity(ZLjava/lang/String;Z)V","startExternalSubset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityScanner$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityScanner$1.class",
    "super": "Ljava/io/EOFException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","fillInStackTrace()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLEntityScanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLEntityScanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Throwable.UNASSIGNED_STACK",
    "invokedMethods": ["<clinit>()V","<init>()V","arrangeCapacity(IZ)Z","checkBeforeLoad(Lcom/sun/xml/internal/stream/Entity$ScannedEntity;II)I","checkEntityLimit(Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;Lcom/sun/xml/internal/stream/Entity$ScannedEntity;II)V","checkLimit(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Lcom/sun/xml/internal/stream/Entity$ScannedEntity;II)V","checkNodeCount(Lcom/sun/xml/internal/stream/Entity$ScannedEntity;)V","createReader(Ljava/io/InputStream;Ljava/lang/String;Ljava/lang/Boolean;)Ljava/io/Reader;","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getCurrentEntity()Lcom/sun/xml/internal/stream/Entity$ScannedEntity;","getEncoding()Ljava/lang/String;","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;","invokeListeners(I)V","isExternal()Z","load(IZZ)Z","peekChar()I","registerListener(Lcom/sun/xml/internal/stream/XMLBufferListener;)V","reset(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resetCommon()V","scanChar(Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)I","scanContent(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)I","scanData(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;I)Z","scanLiteral(ILcom/sun/org/apache/xerces/internal/xni/XMLString;Z)I","scanName(Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Ljava/lang/String;","scanNmtoken()Ljava/lang/String;","scanQName(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Z","setBufferSize(I)V","setCurrentEntity(Lcom/sun/xml/internal/stream/Entity$ScannedEntity;)V","setEncoding(Ljava/lang/String;)V","setVersion(Ljava/lang/String;)V","setXMLVersion(Ljava/lang/String;)V","skipChar(ILcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;)Z","skipDeclSpaces()Z","skipSpaces()Z","skipString(Ljava/lang/String;)Z","skipString([C)Z","storeWhiteSpace(I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLErrorReporter$1.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerProxy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","getErrorHandler()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLErrorReporter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getErrorHandler()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;","getFeature(Ljava/lang/String;)Z","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getLocale()Ljava/util/Locale;","getMessageFormatter(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getSAXErrorHandler()Lorg/xml/sax/ErrorHandler;","putMessageFormatter(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;)V","reportError(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;S)Ljava/lang/String;","reportError(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;SLjava/lang/Exception;)Ljava/lang/String;","reportError(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;S)Ljava/lang/String;","reportError(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;SLjava/lang/Exception;)Ljava/lang/String;","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","setDocumentLocator(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;)V","setFeature(Ljava/lang/String;Z)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLNSDocumentScannerImpl$NSContentDriver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLNSDocumentScannerImpl$NSContentDriver.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl$ContentDriver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLNSDocumentScannerImpl;)V","reconfigurePipeline()V","scanRootElementHook()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLNSDocumentScannerImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLNSDocumentScannerImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentScannerImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createContentDriver()Lcom/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl$Driver;","next()I","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","scanAttribute(Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl;)V","scanStartElement()Z","setDTDValidator(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidatorFilter;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLScanner$NameType;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLScanner$NameType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLScanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLScanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","checkEntityLimit(ZLjava/lang/String;I)V","checkEntityLimit(ZLjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","endEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getStringBuffer()Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;","init()V","isInvalid(I)Z","isInvalidLiteral(I)Z","isValidNCName(I)Z","isValidNameChar(I)Z","isValidNameStartChar(I)Z","isValidNameStartHighSurrogate(I)Z","normalizeWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","reportFatalError(Ljava/lang/String;[Ljava/lang/Object;)V","reset()V","reset(Lcom/sun/org/apache/xerces/internal/impl/PropertyManager;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resolveCharacter(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)Z","scanAttributeValue(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;IZLjava/lang/String;Z)V","scanCharReferenceValue(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)I","scanComment(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","scanExternalID([Ljava/lang/String;Z)V","scanPI(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","scanPIData(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)V","scanPseudoAttribute(ZLcom/sun/org/apache/xerces/internal/xni/XMLString;)Ljava/lang/String;","scanPseudoAttributeName()Ljava/lang/String;","scanPubidLiteral(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","scanSurrogates(Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;)Z","scanXMLDeclOrTextDecl(Z[Ljava/lang/String;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setPropertyManager(Lcom/sun/org/apache/xerces/internal/impl/PropertyManager;)V","startEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","versionSupported(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/XMLVersionDetector;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/XMLVersionDetector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","determineDocVersion(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)S","fixupCurrentEntity(Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;[CI)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","startDocumentParsing(Lcom/sun/org/apache/xerces/internal/impl/XMLEntityHandler;S)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/BalancedDTDGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/BalancedDTDGrammar.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDDescription;)V","addContentSpecNodes(II)I","addContentSpecToElement(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl;)V","addToCurrentGroup(I)V","element(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","initializeContentModelStacks()V","occurrence(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","pcdata(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","separator(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startContentModel(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar$ChildrenList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar$ChildrenList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;","Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;","Lcom/sun/org/apache/xerces/internal/impl/validation/EntityState;","Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDDescription;)V","addContentSpecNode(SII)I","addContentSpecNode(SLjava/lang/String;)I","addContentSpecToElement(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl;)V","addUniqueLeafNode(Ljava/lang/String;)I","any(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","appendContentSpec(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;Ljava/lang/StringBuffer;ZI)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","buildSyntaxTree(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","contentSpecTree(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar$ChildrenList;)V","createAttributeDecl()I","createChildModel(I)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;","createContentSpec()I","createElementDecl()I","createEntityDecl()I","createNotationDecl()I","element(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","empty(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endContentModel(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ensureAttributeDeclCapacity(I)V","ensureContentSpecCapacity(I)V","ensureElementDeclCapacity(I)V","ensureEntityDeclCapacity(I)V","ensureNotationDeclCapacity(I)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getAttributeDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl;)Z","getAttributeDeclIndex(ILjava/lang/String;)I","getAttributeDeclIsExternal(I)Z","getContentSpec(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;)Z","getContentSpecAsString(I)Ljava/lang/String;","getContentSpecIndex(I)I","getContentSpecType(I)S","getElementContentModelValidator(I)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;","getElementDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl;)Z","getElementDeclIndex(Lcom/sun/org/apache/xerces/internal/xni/QName;)I","getElementDeclIndex(Ljava/lang/String;)I","getElementDeclIsExternal(I)Z","getElementDeclName(I)Lcom/sun/org/apache/xerces/internal/xni/QName;","getEntityDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl;)Z","getEntityDeclIndex(Ljava/lang/String;)I","getFirstAttributeDeclIndex(I)I","getFirstElementDeclIndex()I","getGrammarDescription()Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;","getNextAttributeDeclIndex(I)I","getNextElementDeclIndex(I)I","getNotationDeclIndex(Ljava/lang/String;)I","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","initializeContentModelStack()V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","isEntityUnparsed(Ljava/lang/String;)Z","isImmutable()Z","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","occurrence(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","pcdata(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","resize([[BI)[[B","resize([[II)[[I","resize([[Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;I)[[Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;","resize([[Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;I)[[Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;","resize([[Lcom/sun/org/apache/xerces/internal/xni/QName;I)[[Lcom/sun/org/apache/xerces/internal/xni/QName;","resize([[Ljava/lang/Object;I)[[Ljava/lang/Object;","resize([[Ljava/lang/String;I)[[Ljava/lang/String;","resize([[SI)[[S","resize([[[Ljava/lang/String;I)[[[Ljava/lang/String;","separator(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setAttributeDecl(IILcom/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl;)V","setContentSpec(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;)V","setContentSpecIndex(II)V","setElementDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl;)V","setEntityDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl;)V","setNotationDecl(ILcom/sun/org/apache/xerces/internal/impl/dtd/XMLNotationDecl;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startContentModel(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammarBucket;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/DTDGrammarBucket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","getActiveGrammar()Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;","getGrammar(Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;)Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;","getStandalone()Z","putGrammar(Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;)V","setActiveGrammar(Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;)V","setStandalone(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XML11DTDProcessor;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XML11DTDProcessor.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDLoader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createDTDScanner(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;)Lcom/sun/org/apache/xerces/internal/impl/XMLDTDScannerImpl;","isValidName(Ljava/lang/String;)Z","isValidNmtoken(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XML11DTDValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XML11DTDValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","init()V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XML11NSDTDValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XML11NSDTDValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XML11DTDValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","endNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;Z)V","startNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setValues(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","equals(Ljava/lang/Object;)Z","hashCode()I","setValues(SLjava/lang/Object;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLDTDDescription.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/XMLResourceIdentifierImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLDTDDescription;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getGrammarType()Ljava/lang/String;","getRootName()Ljava/lang/String;","hashCode()I","setPossibleRoots(Ljava/util/List;)V","setRootName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDLoader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLDTDLoader.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDProcessor;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarLoader;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;)V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;)V","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","reset()V","setFeature(Ljava/lang/String;Z)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDProcessor;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLDTDProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDFilter;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","any(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","checkDeclaredElements(Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;)V","checkDeclaredElements(Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;IILcom/sun/org/apache/xerces/internal/impl/dtd/XMLContentSpec;)V","checkStandaloneEntityRef(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammar;Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","element(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","empty(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endContentModel(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","isValidName(Ljava/lang/String;)Z","isValidNmtoken(Ljava/lang/String;)Z","normalizeDefaultAttrValue(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","occurrence(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","pcdata(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset()V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","separator(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setDTDContentModelHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;)V","setDTDContentModelSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;)V","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setDTDSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startContentModel(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;","Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidatorFilter;","Lcom/sun/org/apache/xerces/internal/impl/RevalidationHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","addDTDDefaultAttrsAndValidate(Lcom/sun/org/apache/xerces/internal/xni/QName;ILcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","charDataInContent()V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","checkContent(I[Lcom/sun/org/apache/xerces/internal/xni/QName;II)I","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;Z)V","ensureStackCapacity(I)V","getAttributeTypeName(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl;)Ljava/lang/String;","getDocumentHandler()Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","getDocumentSource()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;","getExternalEntityRefInAttrValue(Ljava/lang/String;)Ljava/lang/String;","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getGrammarBucket()Lcom/sun/org/apache/xerces/internal/impl/dtd/DTDGrammarBucket;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","handleEndElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;Z)V","handleStartElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Z","hasGrammar()Z","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","init()V","isSpace(I)Z","normalizeAttrValue(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;I)Z","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","rootElementSpecified(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","validate()Z","validateDTDattribute(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLAttributeDecl;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidatorFilter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidatorFilter.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLElementDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLNSDTDValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLNSDTDValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLDTDValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","endNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;Z)V","startNamespaceScope(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLNotationDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLNotationDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","setValues(Lcom/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType;)V","setValues(SLjava/lang/String;[Ljava/lang/String;ZSLjava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMAny;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMAny.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;I)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getPosition()I","getURI()Ljava/lang/String;","isNullable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMBinOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMBinOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getLeft()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getRight()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","isNullable()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMLeaf;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMLeaf.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","<init>(Lcom/sun/org/apache/xerces/internal/xni/QName;I)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getElement()Lcom/sun/org/apache/xerces/internal/xni/QName;","isNullable()Z","setPosition(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","firstPos()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;","getUserData()Ljava/lang/Object;","isCompactedForUPA()Z","lastPos()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;","setIsCompactUPAModel(Z)V","setMaxStates(I)V","setUserData(Ljava/lang/Object;)V","type()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","equals(Ljava/lang/Object;)Z","getBit(I)Z","hashCode()I","isEmpty()Z","isSameSet(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)Z","setBit(I)V","setTo(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","toString()Ljava/lang/String;","union(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","zeroBits()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMUniOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/CMUniOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getChild()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","isNullable()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/DFAContentModel;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/DFAContentModel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.String.intern()",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;IZ)V","buildDFA(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFollowList(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","makeDefStateList()[I","postTreeBuildInit(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;I)I","validate([Lcom/sun/org/apache/xerces/internal/xni/QName;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/MixedContentModel;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/MixedContentModel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lcom/sun/org/apache/xerces/internal/xni/QName;[IIIZ)V","validate([Lcom/sun/org/apache/xerces/internal/xni/QName;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/SimpleContentModel;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dtd/models/SimpleContentModel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dtd/models/ContentModelValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(SLcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/QName;)V","validate([Lcom/sun/org/apache/xerces/internal/xni/QName;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/DTDDVFactory;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/DTDDVFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Lcom/sun/org/apache/xerces/internal/impl/dv/DTDDVFactory;","getInstance(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/DTDDVFactory;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/DVFactoryException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/DVFactoryException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/DatatypeException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/Object;)V","getArgs()[Ljava/lang/Object;","getKey()Ljava/lang/String;","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/InvalidDatatypeFacetException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/InvalidDatatypeFacetException.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/InvalidDatatypeValueException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/InvalidDatatypeValueException.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getInstance()Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;","getInstance(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSValue;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertToPrimitiveKind(S)S","copyFrom(Lcom/sun/org/apache/xerces/internal/xs/XSValue;)V","getActualValue()Ljava/lang/Object;","getActualValueType()S","getListValueTypes()Lcom/sun/org/apache/xerces/internal/xs/ShortList;","getMemberTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getNormalizedValue()Ljava/lang/String;","isComparable(Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Z","reset()V","stringValue()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/ValidationContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/XSFacets.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/XSSimpleType.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/DTDDVFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/DTDDVFactoryImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/DTDDVFactory;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V","getBuiltInDV(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/ENTITYDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/ENTITYDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/IDDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/IDDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/IDREFDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/IDREFDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/ListDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/ListDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;)V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/NMTOKENDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/NMTOKENDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/NOTATIONDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/NOTATIONDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/StringDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/StringDatatypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/XML11DTDDVFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/XML11DTDDVFactoryImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/DTDDVFactoryImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","getBuiltInDV(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/XML11IDDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/XML11IDDatatypeValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/IDDatatypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/XML11IDREFDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/XML11IDREFDatatypeValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/IDREFDatatypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/XML11NMTOKENDatatypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/dtd/XML11NMTOKENDatatypeValidator.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/dtd/NMTOKENDatatypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/util/Base64;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/util/Base64.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decode(Ljava/lang/String;)[B","encode([B)Ljava/lang/String;","isData(C)Z","isPad(C)Z","isWhiteSpace(C)Z","removeWhiteSpace([C)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/util/ByteListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/util/ByteListImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/ByteList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","get(I)Ljava/lang/Byte;","get(I)Ljava/lang/Object;","getLength()I","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/util/HexBin;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/util/HexBin.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decode(Ljava/lang/String;)[B","encode([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDateTime;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIIIIDILjava/lang/String;ZLcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;)V","<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","append(Ljava/lang/StringBuffer;D)V","append(Ljava/lang/StringBuffer;II)V","append2(Ljava/lang/StringBuffer;D)V","append3(Ljava/lang/StringBuffer;D)V","cloneDate(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","compareDates(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Z)S","compareOrder(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)S","dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","fQuotient(II)I","fQuotient(III)I","findUTCSign(Ljava/lang/String;II)I","getAllowedFacets()S","getDate(Ljava/lang/String;IILcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)I","getTime(Ljava/lang/String;IILcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","getTimeZone(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;II)V","getYearMonth(Ljava/lang/String;IILcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)I","indexOf(Ljava/lang/String;IIC)I","isLeapYear(I)Z","isNextCharUTCSign(Ljava/lang/String;II)Z","maxDayInMonthFor(II)I","mod(III)I","modulo(III)I","normalize(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","parseInt(Ljava/lang/String;II)I","parseIntYear(Ljava/lang/String;I)I","parseSecond(Ljava/lang/String;II)D","parseTimeZone(Ljava/lang/String;IILcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","resetDateObj(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","saveUnnormalized(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V","validateDateTime(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AnyAtomicDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/AnyAtomicDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AnySimpleDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/AnySimpleDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AnyURIDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/AnyURIDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","encode(Ljava/lang/String;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/Base64BinaryDV$XBase64;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/Base64BinaryDV$XBase64.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/util/ByteListImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/Base64BinaryDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/Base64BinaryDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getDataLength(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/BaseSchemaDVFactory;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/BaseSchemaDVFactory.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createBuiltInTypes(Lcom/sun/org/apache/xerces/internal/util/SymbolHash;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/BooleanDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/BooleanDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DateDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DateDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DateTimeDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DateTimeDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DayDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DayDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DayTimeDurationDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DayTimeDurationDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DurationDV;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV$XDecimal;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV$XDecimal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDecimal;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Z)V","compareTo(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV$XDecimal;)I","equals(Ljava/lang/Object;)Z","hashCode()I","initD(Ljava/lang/String;)V","initI(Ljava/lang/String;)V","intComp(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV$XDecimal;)I","makeCanonical()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getFractionDigits(Ljava/lang/Object;)I","getTotalDigits(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DoubleDV$XDouble;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DoubleDV$XDouble.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","compareTo(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DoubleDV$XDouble;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DoubleDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DoubleDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","isPossibleFP(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DurationDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/DurationDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","addDuration(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;","compareDates(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;Z)S","compareResults(SSZ)S","dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;I)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;","parseSecond(Ljava/lang/String;II)D"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/EntityDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/EntityDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkExtraRules(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/FloatDV$XFloat;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/FloatDV$XFloat.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSFloat;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","compareTo(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/FloatDV$XFloat;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/FloatDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/FloatDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/HexBinaryDV$XHex;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/HexBinaryDV$XHex.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/util/ByteListImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/HexBinaryDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/HexBinaryDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getDataLength(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/IDDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/IDDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkExtraRules(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/IDREFDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/IDREFDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkExtraRules(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/IntegerDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/IntegerDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DecimalDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/ListDV$ListData;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/ListDV$ListData.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/ObjectList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","getLength()I","hashCode()I","item(I)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/ListDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/ListDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getDataLength(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/MonthDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/MonthDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/MonthDayDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/MonthDayDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","canonicalToStringForHashCode(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;","compare(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;)I","compareDecimal(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","compareTo(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;)I","equals(Ljava/lang/Object;)Z","hashCode()I","initD(Ljava/lang/String;)V","intComp(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV$XPrecisionDecimal;)I","makeCanonical()V","toString()Ljava/lang/String;","truncateTrailingZeros(Ljava/lang/StringBuffer;Ljava/lang/StringBuffer;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/PrecisionDecimalDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getFractionDigits(Ljava/lang/Object;)I","getTotalDigits(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV$XQName;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV$XQName.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/QName;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSQName;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S","getDataLength(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/SchemaDVFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/SchemaDVFactoryImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/BaseSchemaDVFactory;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.fAnySimpleType",
    "invokedMethods": ["<clinit>()V","createBuiltInTypes()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/SchemaDateTimeException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/SchemaDateTimeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/StringDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/StringDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TimeDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/TimeDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","checkExtraRules(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","getCodePointLength(Ljava/lang/String;)I","getDataLength(Ljava/lang/Object;)I","getDigit(C)I","getFractionDigits(Ljava/lang/Object;)I","getTotalDigits(Ljava/lang/Object;)I","isDigit(C)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/UnionDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/UnionDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/TypeValidator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","getAllowedFacets()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["addId(Ljava/lang/String;)V","addIdRef(Ljava/lang/String;)V","getLocale()Ljava/util/Locale;","getSymbol(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","isEntityUnparsed(Ljava/lang/String;)Z","isIdDeclared(Ljava/lang/String;)Z","needExtraChecking()Z","needFacetChecking()Z","needToNormalize()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$4;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["addId(Ljava/lang/String;)V","addIdRef(Ljava/lang/String;)V","getLocale()Ljava/util/Locale;","getSymbol(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","isEntityUnparsed(Ljava/lang/String;)Z","isIdDeclared(Ljava/lang/String;)Z","needExtraChecking()Z","needFacetChecking()Z","needToNormalize()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$ValidationContextImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl$ValidationContextImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","addId(Ljava/lang/String;)V","addIdRef(Ljava/lang/String;)V","getSymbol(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","isEntityUnparsed(Ljava/lang/String;)Z","isIdDeclared(Ljava/lang/String;)Z","needExtraChecking()Z","needFacetChecking()Z","needToNormalize()Z","setNSContext(Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","Lorg/w3c/dom/TypeInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;Ljava/lang/String;Ljava/lang/String;SZLcom/sun/org/apache/xerces/internal/xs/XSObjectList;)V","<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;Ljava/lang/String;Ljava/lang/String;SZLcom/sun/org/apache/xerces/internal/xs/XSObjectList;S)V","<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;Ljava/lang/String;SSZZZZS)V","<init>(Ljava/lang/String;Ljava/lang/String;SLcom/sun/org/apache/xerces/internal/impl/dv/xs/XSSimpleTypeDecl;ZLcom/sun/org/apache/xerces/internal/xs/XSObjectList;)V","appendEnumString(Ljava/lang/StringBuffer;)V","applyFacets(Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;SSLcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","applyFacets(Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;SSSLcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)V","applyFacets1(Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;SS)V","applyFacets1(Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;SSS)V","calcFundamentalFacets()V","checkExtraRules(Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)V","checkFacets(Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)V","convertToPrimitiveKind(S)S","getActualEnumValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;","getActualValue(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;Z)Ljava/lang/Object;","getAnonymous()Z","getBaseType()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getBuiltInKind()S","getDefinedFacets()S","getFinal()S","getItemType()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getMemberTypes()Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getPrimitiveDV(S)S","getPrimitiveKind()S","getPrimitiveType()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getType()S","getTypeCategory()S","getTypeName()Ljava/lang/String;","getVariety()S","getWhitespace()S","isIDType()Z","normalize(Ljava/lang/Object;S)Ljava/lang/String;","normalize(Ljava/lang/String;S)Ljava/lang/String;","reportError(Ljava/lang/String;[Ljava/lang/Object;)V","setAnonymous(Z)V","setBounded()V","setCardinality()V","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","setNumeric()V","setOrdered()V","specialCardinalityCheck()Z","toString()Ljava/lang/String;","validate(Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)V","validate(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Ljava/lang/Object;","validate(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Ljava/lang/Object;","validateWithInfo(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;","whiteSpaceValue(S)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/YearDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/YearDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/YearMonthDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/YearMonthDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["dateToString(Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;)Ljava/lang/String;","getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;","parse(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/YearMonthDurationDV;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/dv/xs/YearMonthDurationDV.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dv/xs/DurationDV;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getActualValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/ASCIIReader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/ASCIIReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;ILcom/sun/org/apache/xerces/internal/util/MessageFormatter;Ljava/util/Locale;)V","close()V","read()I","read([CII)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/Latin1Reader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/Latin1Reader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;I)V","<init>(Ljava/io/InputStream;[B)V","close()V","read()I","read([CII)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/MalformedByteSequenceException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/MalformedByteSequenceException.class",
    "super": "Ljava/io/CharConversionException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V","getArguments()[Ljava/lang/Object;","getDomain()Ljava/lang/String;","getKey()Ljava/lang/String;","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/UCSReader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/UCSReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;IS)V","<init>(Ljava/io/InputStream;S)V","close()V","read([CII)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/UTF16Reader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/UTF16Reader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;IZLcom/sun/org/apache/xerces/internal/util/MessageFormatter;Ljava/util/Locale;)V","<init>(Ljava/io/InputStream;[BZLcom/sun/org/apache/xerces/internal/util/MessageFormatter;Ljava/util/Locale;)V","close()V","expectedTwoBytes()V","processBE([CII)V","processLE([CII)V","read()I","read([CII)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/io/UTF8Reader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/io/UTF8Reader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;ILcom/sun/org/apache/xerces/internal/util/MessageFormatter;Ljava/util/Locale;)V","close()V","expectedByte(II)V","invalidByte(III)V","invalidSurrogate(I)V","read()I","read([CII)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/msg/XMLMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/msg/XMLMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatMessage(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/validation/ConfigurableValidationState;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/validation/ConfigurableValidationState.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationState;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addId(Ljava/lang/String;)V","addIdRef(Ljava/lang/String;)V","checkIDRefID()Ljava/util/Iterator;","isEntityUnparsed(Ljava/lang/String;)Z","isIdDeclared(Ljava/lang/String;)Z","setIdIdrefChecking(Z)V","setUnparsedEntityChecking(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/validation/EntityState;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/validation/EntityState.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/validation/ValidationManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addValidationState(Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationState;)V","isCachedDTD()Z","isGrammarFound()Z","reset()V","setCachedDTD(Z)V","setEntityState(Lcom/sun/org/apache/xerces/internal/impl/validation/EntityState;)V","setGrammarFound(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationState;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/validation/ValidationState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addId(Ljava/lang/String;)V","addIdRef(Ljava/lang/String;)V","checkIDRefID()Ljava/util/Iterator;","getLocale()Ljava/util/Locale;","getSymbol(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","isEntityUnparsed(Ljava/lang/String;)Z","isIdDeclared(Ljava/lang/String;)Z","needExtraChecking()Z","needFacetChecking()Z","needToNormalize()Z","resetIDTables()V","setEntityState(Lcom/sun/org/apache/xerces/internal/impl/validation/EntityState;)V","setExtraChecking(Z)V","setFacetChecking(Z)V","setLocale(Ljava/util/Locale;)V","setNamespaceSupport(Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","setNormalizationRequired(Z)V","setSymbolTable(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","setUsingNamespaces(Z)V","useNamespaces()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$1.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Scanner;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Axis;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$Axis.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Axis;)V","<init>(S)V","clone()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;)V","<init>([Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Step;)V","clone()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$NodeTest;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$NodeTest.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$NodeTest;)V","<init>(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(S)V","clone()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Scanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$Scanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;I)V","scanExpr(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;Ljava/lang/String;II)Z","scanNCName(Ljava/lang/String;II)I","scanNumber(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;Ljava/lang/String;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Step;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$Step.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Axis;Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$NodeTest;)V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Step;)V","clone()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(I)V","addToken(Ljava/lang/String;)V","getTokenString(I)Ljava/lang/String;","hasMore()Z","nextToken()I","nextTokenAsString()Ljava/lang/String;","peekToken()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","buildLocationPath(Ljava/util/ArrayList;)Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;","check(Z)V","getLocationPaths()[Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;","lambda$toString$0(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;)Ljava/lang/String;","parseExpression(Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)[Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$LocationPath;","parseNodeTest(ILcom/sun/org/apache/xerces/internal/impl/xpath/XPath$Tokens;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath$NodeTest;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPathException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/XPathException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getKey()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/BMPattern;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/BMPattern.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IZ)V","matches(Ljava/lang/String;II)I","matchesIgnoreCase(Ljava/lang/String;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/CaseInsensitiveMap;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/CaseInsensitiveMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.CharacterDataLatin1.instance",
    "invokedMethods": ["<clinit>()V","buildCaseInsensitiveMap()V","contains([II)Z","contains([III)Z","expandAndAdd([III)[I","expandMap([II)[I","get(I)[I","getMapping(I)[I","set(I[I)V","updateMap(I[II[II)[I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Match;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Match.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","getBeginning(I)I","getEnd(I)I","setBeginning(II)V","setEnd(II)V","setNumberOfGroups(I)V","setSource(Ljava/lang/String;)V","setSource(Ljava/text/CharacterIterator;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","getData()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getChild()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","setChild(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ConditionOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ConditionOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ModifierOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ModifierOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V","getData()I","getData2()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$RangeOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$RangeOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","getToken()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$StringOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$StringOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;)V","getString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$UnionOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op$UnionOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","addElement(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)V","elementAt(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Op.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","createAnchor(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp;","createBackReference(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp;","createCapture(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp;","createChar(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$CharOp;","createClosure(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;","createCondition(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ConditionOp;","createDot()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","createIndependent(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;","createLook(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;","createModifier(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;II)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ModifierOp;","createNonGreedyClosure()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;","createQuestion(Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$ChildOp;","createRange(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$RangeOp;","createString(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$StringOp;","createUnion(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op$UnionOp;","elementAt(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","getChild()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","getData()I","getData2()I","getString()Ljava/lang/String;","getToken()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/ParseException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/ParseException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/ParserForXMLSchema;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/ParserForXMLSchema.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegexParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Locale;)V","checkQuestion(I)Z","decodeEscaped()I","getRange(Ljava/lang/String;Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","getTokenForShorthand(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","parseCharacterClass(Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","parseSetOperations()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","processBackreference()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_A()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_B()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_C()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_I()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_X()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_Z()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_b()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_c()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_g()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_gt()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_i()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_lt()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_z()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processCIinCharacterClass(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;I)I","processCaret()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processCondition()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processDollar()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processIndependent()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processLookahead()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processLookbehind()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processModifiers()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processNegativelookahead()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processNegativelookbehind()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processParen()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processParen2()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processPlus(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processQuestion(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processStar(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","setupRange(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Ljava/lang/String;)V","setupRange(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;[I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/REUtil;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/REUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["composeFromSurrogates(II)I","createOptionString(I)Ljava/lang/String;","decomposeToSurrogates(I)Ljava/lang/String;","getOptionValue(I)I","isHighSurrogate(I)Z","isLowSurrogate(I)Z","parseOptions(Ljava/lang/String;)I","quoteMeta(Ljava/lang/String;)Ljava/lang/String;","stripExtendedComment(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","addRange(II)V","compactRanges()V","complementRanges(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","createMap()V","escapeCharInCharClass(I)Ljava/lang/String;","intersectRanges(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","isCompacted()Z","isSorted()Z","match(I)Z","mergeRanges(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","setCompacted()V","setSorted(Z)V","sortRanges()V","subtractRanges(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegexParser$ReferencePosition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegexParser$ReferencePosition.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegexParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegexParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Locale;)V","addCaseInsensitiveChar(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;I)V","addCaseInsensitiveCharRange(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;II)V","checkQuestion(I)Z","decodeEscaped()I","ex(Ljava/lang/String;I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/ParseException;","getTokenForShorthand(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","hexChar(I)I","isSet(I)Z","next()V","parse(Ljava/lang/String;I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","parseAtom()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","parseCharacterClass(Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","parseFactor()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","parseRegex()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","parseSetOperations()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","parseTerm()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBackreference()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_A()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_B()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_C()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_I()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_X()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_Z()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_b()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_c()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_g()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_gt()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_i()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_lt()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processBacksolidus_pP(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","processBacksolidus_z()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processCIinCharacterClass(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;I)I","processCaret()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processCondition()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processDollar()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processIndependent()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processLookahead()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processLookbehind()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processModifiers()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processNegativelookahead()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processNegativelookbehind()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processParen()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processParen2()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processPlus(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processQuestion(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","processStar(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","read()I","setContext(I)V","setLocale(Ljava/util/Locale;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ClosureContext;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ClosureContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addOffset(I)V","contains(I)Z","expandOffsets()[I","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$Context;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$Context.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","reset(Ljava/lang/String;III)V","resetCommon(I)V","setInUse(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$StringTarget;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$StringTarget.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","charAt(I)C","regionMatches(ZIIII)Z","regionMatches(ZIILjava/lang/String;I)Z","resetTarget(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)V","compile(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","compile(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;","equals(Ljava/lang/Object;)Z","getOptions()Ljava/lang/String;","getPreviousWordType(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget;IIII)I","getWordType(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget;IIII)I","getWordType0(CI)I","hashCode()I","isEOLChar(I)Z","isSet(II)Z","isWordChar(I)Z","match(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$Context;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;III)I","matchAnchor(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$ExpressionTarget;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Op;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression$Context;II)Z","matchChar(IIZ)Z","matchIgnoreCase(II)Z","matches(Ljava/lang/String;)Z","matches(Ljava/lang/String;IILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Match;)Z","prepare()V","setPattern(Ljava/lang/String;ILjava/util/Locale;)V","setPattern(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$CharToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$CharToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","getChar()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ClosureToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ClosureToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getMax()I","getMin()I","setMax(I)V","setMin(I)V","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConcatToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConcatToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConditionToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConditionToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$FixedStringContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$FixedStringContainer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ModifierToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ModifierToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;II)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getOptions()I","getOptionsMask()I","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ParenToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ParenToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;I)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getParenNumber()I","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$StringToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$StringToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/lang/String;I)V","getReferenceNumber()I","getString()Ljava/lang/String;","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$UnionToken;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token$UnionToken.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(I)V","addChild(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","lambda$toString$0(Ljava/lang/StringBuilder;ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","size()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xpath/regex/Token.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.addRange(int, int)",
    "invokedMethods": ["<clinit>()V","<init>(I)V","addChild(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)V","addRange(II)V","analyzeFirstCharacter(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;I)I","complementRanges(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","createAnchor(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$CharToken;","createBackReference(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$StringToken;","createChar(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$CharToken;","createClosure(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ClosureToken;","createConcat()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$UnionToken;","createConcat(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConcatToken;","createCondition(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ConditionToken;","createEmpty()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","createLook(ILcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ParenToken;","createModifierGroup(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;II)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ModifierToken;","createNGClosure(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ClosureToken;","createNRange()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","createParen(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$ParenToken;","createRange()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","createString(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$StringToken;","createUnion()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$UnionToken;","findFixedString(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token$FixedStringContainer;I)V","getChar()I","getChild(I)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getCombiningCharacterSequence()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getGraphemePattern()Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;","getMax()I","getMin()I","getMinLength()I","getParenNumber()I","getRange(Ljava/lang/String;Z)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","getRange(Ljava/lang/String;ZZ)Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/RangeToken;","getReferenceNumber()I","getString()Ljava/lang/String;","isRegisterNonXS(Ljava/lang/String;)Z","isSet(II)Z","isShorterThan(Lcom/sun/org/apache/xerces/internal/impl/xpath/regex/Token;)Z","registerNonXS(Ljava/lang/String;)V","setAlias(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V","size()I","toString()Ljava/lang/String;","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/AttributePSVImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/AttributePSVImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/AttributePSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAttributeDeclaration()Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;","getErrorCodes()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getErrorMessages()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getIsSchemaSpecified()Z","getMemberTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getSchemaValue()Lcom/sun/org/apache/xerces/internal/xs/XSValue;","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getValidationAttempted()S","getValidationContext()Ljava/lang/String;","getValidity()S","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/ElementPSVImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/ElementPSVImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/ElementPSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getElementDeclaration()Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;","getErrorCodes()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getErrorMessages()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getIsSchemaSpecified()Z","getMemberTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getNil()Z","getNotation()Lcom/sun/org/apache/xerces/internal/xs/XSNotationDeclaration;","getSchemaInformation()Lcom/sun/org/apache/xerces/internal/xs/XSModel;","getSchemaValue()Lcom/sun/org/apache/xerces/internal/xs/XSValue;","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getValidationAttempted()S","getValidationContext()Ljava/lang/String;","getValidity()S","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/PSVIErrorList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/PSVIErrorList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/StringList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/String;Z)V","get(I)Ljava/lang/Object;","get(I)Ljava/lang/String;","getLength()I","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$BuiltinAttrDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$BuiltinAttrDecl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;S)V","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$BuiltinSchemaGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$BuiltinSchemaGrammar.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IS)V","addComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","addDocument(Ljava/lang/Object;Ljava/lang/String;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;Ljava/lang/String;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Ljava/lang/String;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Ljava/lang/String;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Ljava/lang/String;)V","addGlobalElementDeclAll(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Ljava/lang/String;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;Ljava/lang/String;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/lang/String;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/lang/String;)V","addRedefinedGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","setImportedGrammars(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$Schema4Annotations;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$Schema4Annotations.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","addComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","addDocument(Ljava/lang/Object;Ljava/lang/String;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Ljava/lang/String;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Ljava/lang/String;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Ljava/lang/String;)V","addGlobalElementDeclAll(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Ljava/lang/String;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;Ljava/lang/String;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/lang/String;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/lang/String;)V","addRedefinedGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","createAnnotationElementDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","createAnyLaxWildcardParticle()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","createChoiceElementParticle(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","createUnboundedAnyWildcardSequenceParticle()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","createUnboundedModelGroupParticle()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","setImportedGrammars(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$XSAnyType;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar$XSAnyType.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createAttrGrp()Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","createParticle()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","setIsAnonymous()V","setName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XSGrammar;","Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.org.apache.xerces.internal.impl.xs.SchemaSymbols.URI_SCHEMAFORSCHEMA",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addAnnotation(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;)V","addComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","addDocument(Ljava/lang/Object;Ljava/lang/String;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;Ljava/lang/String;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Ljava/lang/String;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)V","addGlobalComplexTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Ljava/lang/String;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Ljava/lang/String;)V","addGlobalElementDeclAll(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Ljava/lang/String;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;Ljava/lang/String;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;)V","addGlobalSimpleTypeDecl(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/lang/String;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/lang/String;)V","addIDConstraintDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","addIDConstraintDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;Ljava/lang/String;)V","addRedefinedGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)V","getAttributeDeclaration(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;","getComponents(S)Lcom/sun/org/apache/xerces/internal/xs/XSNamedMap;","getComponentsExt(S)Lcom/sun/org/apache/xerces/internal/xs/datatypes/ObjectList;","getDocumentLocations()Lcom/sun/org/apache/xerces/internal/xs/StringList;","getElementDeclaration(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;","getGlobalAttributeDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;","getGlobalAttributeDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;","getGlobalAttributeGroupDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","getGlobalAttributeGroupDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","getGlobalElementDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getGlobalElementDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getGlobalGroupDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","getGlobalGroupDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","getGlobalNotationDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;","getGlobalNotationDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;","getGlobalTypeDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getGlobalTypeDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getIDConstraintDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","getIDConstraintDecl(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","getImportedGrammars()Ljava/util/List;","getRGLocators()[Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;","getRedefinedGroupDecls()[Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","getS4SGrammar(S)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","getSubstitutionGroups()[Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getTargetNamespace()Ljava/lang/String;","getTypeDefinition(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getUncheckedCTLocators()[Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;","getUncheckedComplexTypeDecls()[Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;","hasIDConstraints()Z","isImmutable()Z","resetComponents()V","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;","setImmutable(Z)V","setImportedGrammars(Ljava/util/List;)V","setUncheckedTypeNum(I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaNamespaceSupport;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaNamespaceSupport.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/NamespaceSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaNamespaceSupport;)V","getEffectiveLocalContext()[Ljava/lang/String;","makeGlobal()V","setEffectiveContext([Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaSymbols;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SchemaSymbols.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler$OneSubGroup;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler$OneSubGroup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;SS)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper;)V","addSubstitutionGroup([Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","getDBMethods(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler$OneSubGroup;)Z","getMatchingElemDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getSubGroupB(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler$OneSubGroup;)[Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler$OneSubGroup;","getSubstitutionGroup(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)[Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","reset()V","substitutionGroupOK(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;S)Z","typeDerivationOK(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;S)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/Object;)V","getArgs()[Ljava/lang/Object;","getKey()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader$LocationArray;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader$LocationArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addLocation(Ljava/lang/String;)V","getFirstLocation()Ljava/lang/String;","getLocationArray()[Ljava/lang/String;","resize(II)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarLoader;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper;","Lcom/sun/org/apache/xerces/internal/xs/XSLoader;","Lorg/w3c/dom/DOMConfiguration;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.xml.internal.JdkXmlUtils.CATALOG_DEFER",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;)V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;)V","getGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","initGrammarBucket()V","loadSchema(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Ljava/util/Map;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","processExternalHints(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","processJAXPSchemaSource(Ljava/util/Map;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resolveDocument(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Ljava/util/Map;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","saxToXMLInputSource(Lorg/xml/sax/InputSource;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","setFeature(Ljava/lang/String;Z)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","tokenizeSchemaLocationStr(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Z","xsdToXMLInputSource(Ljava/lang/Object;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$KeyRefValueStore;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$KeyRefValueStore.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/KeyRef;Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$KeyValueStore;)V","endDocument()V","endDocumentFragment()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$KeyValueStore;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$KeyValueStore.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey;)V","checkDuplicateValues()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$LocalIDKey;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$LocalIDKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ShortVector;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ShortVector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","add(S)V","clear()V","contains(S)Z","ensureCapacity(I)V","valueAt(I)S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$UniqueValueStore;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$UniqueValueStore.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey;)V","checkDuplicateValues()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/xs/identity/ValueStore;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","addItemValueType(Lcom/sun/org/apache/xerces/internal/xs/ShortList;)V","addValue(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;ZLjava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;)V","addValueType(S)V","append(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;)V","checkDuplicateValues()V","clear()V","contains()Z","contains(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;)I","endDocument()V","endDocumentFragment()V","endValueScope()V","getItemValueTypeAt(I)Lcom/sun/org/apache/xerces/internal/xs/ShortList;","getValueTypeAt(I)S","itemValueTypeContains(Lcom/sun/org/apache/xerces/internal/xs/ShortList;)Z","reportError(Ljava/lang/String;[Ljava/lang/Object;)V","startValueScope()V","toString()Ljava/lang/String;","toString(Ljava/util/Vector;II)Ljava/lang/String;","toString([Ljava/lang/Object;)Ljava/lang/String;","valueTypeContains(S)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreCache;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;)V","endDocument()V","endElement()V","getValueStoreFor(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$ValueStoreBase;","initValueStoresFor(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator;)V","startDocument()V","startElement()V","toString()Ljava/lang/String;","transplant(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$XPathMatcherStack;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$XPathMatcherStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addMatcher(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;)V","clear()V","ensureMatcherCapacity()V","getMatcherAt(I)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;","getMatcherCount()I","popContext()V","pushContext()V","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$XSIErrorReporter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator$XSIErrorReporter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;)V","mergeContext()[Ljava/lang/String;","popContext()[Ljava/lang/String;","pushContext()V","reportError(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;S)V","reset(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaValidator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;","Lcom/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator;","Lcom/sun/org/apache/xerces/internal/impl/RevalidationHandler;","Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.xml.internal.JdkXmlUtils.OVERRIDE_PARSER_DEFAULT",
    "invokedMethods": ["<clinit>()V","<init>()V","activateField(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;I)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;","activateSelectorFor(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","addDefaultAttributes(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","checkElementMatchesRootElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/xni/QName;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementLocallyValidComplexType(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/Object;)Ljava/lang/Object;","elementLocallyValidType(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/Object;)Ljava/lang/Object;","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElementPSVI(Z[Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endValueScopeFor(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)V","ensureStackCapacity()V","expectedStr(Ljava/util/List;)Ljava/lang/String;","findSchemaGrammar(SLjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","getAndCheckXsiType(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getDocumentHandler()Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","getDocumentSource()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;","getEmptyAugs(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getXsiNil(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;)Z","handleCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Lcom/sun/org/apache/xerces/internal/xni/XMLString;","handleEndDocument()V","handleEndElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","handleIgnorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","handleStartDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;)V","handleStartElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","hasSchemaComponent(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;SLcom/sun/org/apache/xerces/internal/xni/QName;)Z","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","normalizeWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Z)V","processAttributes(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","processElementContent(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","processOneAttribute(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;ILcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;Lcom/sun/org/apache/xerces/internal/impl/xs/AttributePSVImpl;)V","processRootElementDeclQName(Ljavax/xml/namespace/QName;Lcom/sun/org/apache/xerces/internal/xni/QName;)V","processRootTypeQName(Ljavax/xml/namespace/QName;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reportSchemaError(Ljava/lang/String;[Ljava/lang/Object;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","setFeature(Ljava/lang/String;Z)V","setLocationHints(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;[Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","setLocationHints(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;[Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xs/StringList;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startValueScopeFor(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)V","storeLocations(Ljava/lang/String;Ljava/lang/String;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSAnnotation;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAnnotations()Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;","getConstraintType()S","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getScope()S","getType()S","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getValInfo()Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","setValues(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;SSLcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSAttributeGroupDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addAttributeUse(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;)Ljava/lang/String;","getAttributeUse(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;","getAttributeUseNoProhibited(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;","getAttributeUses()Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getType()S","removeProhibitedAttrs()V","replaceAttributeUse(Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;)V","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","validRestrictionOf(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAttrDeclaration()Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getRequired()Z","getType()S"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSComplexTypeDefinition;","Lorg/w3c/dom/TypeInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","appendTypeInfo(Ljava/lang/StringBuilder;)V","containsTypeID()Z","getAbstract()Z","getAnonymous()Z","getAttrGrp()Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","getAttributeUses()Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;","getBaseType()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getContentModel(Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;)Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;","getContentModel(Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;Z)Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;","getContentType()S","getFinal()S","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getParticle()Lcom/sun/org/apache/xerces/internal/xs/XSParticle;","getSimpleType()Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;","getType()S","getTypeCategory()S","getTypeName()Ljava/lang/String;","setIsAnonymous()V","setName(Ljava/lang/String;)V","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","setValues(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;SSSSZLcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSConstraints$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSConstraints$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)I","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSConstraints;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSConstraints.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.SG_SchemaNS",
    "invokedMethods": ["<clinit>()V","ElementDefaultValidImmediate(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidationContext;Lcom/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo;)Ljava/lang/Object;","addElementToParticleVector(Ljava/util/List;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","checkComplexDerivation(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;S)Z","checkElementDeclsConsistent(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/util/SymbolHash;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)V","checkIDConstraintRestriction(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","checkMapAndSum(Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)V","checkNSCompat(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;IILcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;IIZ)V","checkNSRecurseCheckCardinality(Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;IIZ)V","checkNSSubset(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;IILcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;II)V","checkNameAndTypeOK(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;IILcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;II)V","checkOccurrenceRange(IIII)Z","checkRecurse(Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)V","checkRecurseLax(Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)V","checkRecurseUnordered(Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Ljava/util/List;IILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)V","checkSimpleDerivation(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;S)Z","checkSimpleDerivationOk(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;S)Z","checkTypeDerivationOk(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;S)Z","findElemInTable(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/util/SymbolHash;)V","fullSchemaChecking(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","gatherChildren(ILcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Ljava/util/List;)V","getEmptySequence()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","getNonUnaryGroup(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","overlapUPA(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","overlapUPA(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","overlapUPA(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;)Z","overlapUPA(Ljava/lang/Object;Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","particleValidRestriction(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","particleValidRestriction(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;Z)Z","removePointlessChildren(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Ljava/util/List;","reportSchemaError(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSDDescription.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/XMLResourceIdentifierImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLSchemaDescription;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","fromInstance()Z","getContextType()S","getGrammarType()Ljava/lang/String;","getLocationHints()[Ljava/lang/String;","getTargetNamespace()Ljava/lang/String;","hashCode()I","isExternal()Z","makeClone()Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;","reset()V","setContextType(S)V","setLocationHints([Ljava/lang/String;)V","setTargetNamespace(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSElementDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addIDConstraint(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","equals(Ljava/lang/Object;)Z","getAbstract()Z","getConstraintType()S","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getNillable()Z","getScope()S","getSubstitutionGroupAffiliation()Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;","getType()S","getTypeDefinition()Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","hashCode()I","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","setConstraintType(S)V","setIsAbstract()V","setIsGlobal()V","setIsLocal(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)V","setIsNillable()V","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getGrammar(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","getGrammars()[Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","putGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","putGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Z)Z","putGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ZZ)Z","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSModelGroupDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getModelGroup()Lcom/sun/org/apache/xerces/internal/xs/XSModelGroup;","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getType()S","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatMessage(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSModelGroupImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSModelGroupImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSModelGroup;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getParticles()Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;","getType()S","isEmpty()Z","maxEffectiveTotalRange()I","maxEffectiveTotalRangeAllSeq()I","maxEffectiveTotalRangeChoice()I","minEffectiveTotalRange()I","minEffectiveTotalRangeAllSeq()I","minEffectiveTotalRangeChoice()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSModelImpl$XSNamespaceItemListIterator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSModelImpl$XSNamespaceItemListIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XSModelImpl;I)V","hasNext()Z","next()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","next()Ljava/lang/Object;","remove()V","set(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSModelImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSModelImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSModel;","Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItemList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","<init>([Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;S)V","buildSubGroups()Lcom/sun/org/apache/xerces/internal/util/SymbolHash;","get(I)Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","get(I)Ljava/lang/Object;","getGlobalElements()Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl;","getLength()I","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","listIterator0(I)Ljava/util/ListIterator;","null2EmptyString(Ljava/lang/String;)Ljava/lang/String;","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toArray0([Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSNotationDeclaration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getNamespaceItem()Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;","getType()S","setNamespaceItem(Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSParticle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","appendParticle(Ljava/lang/StringBuffer;)V","emptiable()Z","getMaxOccursUnbounded()Z","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getTerm()Lcom/sun/org/apache/xerces/internal/xs/XSTerm;","getType()S","isEmpty()Z","maxEffectiveTotalRange()I","minEffectiveTotalRange()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSWildcard;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","allowNamespace(Ljava/lang/String;)Z","areSame(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;)Z","elementInSet(Ljava/lang/String;[Ljava/lang/String;)Z","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getProcessContentsAsString()Ljava/lang/String;","getType()S","intersect2sets([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;","isSubsetOf(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;)Z","performIntersectionWith(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;S)Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;","performUnionWith(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;S)Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;","subset2sets([Ljava/lang/String;[Ljava/lang/String;)Z","toString()Ljava/lang/String;","union2sets([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;","weakerProcessContents(Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field$Matcher;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Field$Matcher.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field$XPath;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/ValueStore;)V","convertToPrimitiveKind(Lcom/sun/org/apache/xerces/internal/xs/ShortList;)Lcom/sun/org/apache/xerces/internal/xs/ShortList;","convertToPrimitiveKind(S)S","handleContent(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;ZLjava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;)V","matched(Ljava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field$XPath;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Field$XPath.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","fixupXPath(Ljava/lang/String;)Ljava/lang/String;","fixupXPath2(Ljava/lang/String;II)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Field.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field$XPath;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","createMatcher(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/ValueStore;)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;","getIdentityConstraint()Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSIDCDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","addAnnotation(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;)V","addField(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;)V","getCategory()S","getElementName()Ljava/lang/String;","getFieldAt(I)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;","getFieldCount()I","getIdentityConstraintName()Ljava/lang/String;","getName()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getSelector()Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector;","getType()S","resize([Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;I)[Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Field;","setSelector(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/KeyRef;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/KeyRef.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey;)V","getKey()Lcom/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector$Matcher;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Selector$Matcher.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector$XPath;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator;I)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;ZLjava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;)V","getIdentityConstraint()Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","getInitialDepth()I","startDocumentFragment()V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector$XPath;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Selector$XPath.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","normalize(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/Selector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/Selector$XPath;Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","createMatcher(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/FieldActivator;I)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/UniqueOrKey.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;S)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/ValueStore;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/ValueStore.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/identity/XPathMatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xpath/XPath;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;ZLjava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;)V","handleContent(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;ZLjava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;)V","isMatched()Z","matched(Ljava/lang/Object;SLcom/sun/org/apache/xerces/internal/xs/ShortList;Z)V","startDocumentFragment()V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMNodeFactory;)V","buildCompactSyntaxTree(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","buildCompactSyntaxTree2(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;II)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","buildSyntaxTree(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;ZZ)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","copyNode(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","createAllCM(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;","createDFACM(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Z)Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;","expandContentModel(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;IIZ)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getContentModel(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Z)Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;","multiNodes(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;IZ)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","setDeclPool(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDeclarationPool;)V","useRepeatingLeafNodes(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/CMNodeFactory;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/CMNodeFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getCMBinOpNode(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getCMLeafNode(ILjava/lang/Object;II)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getCMRepeatingLeafNode(ILjava/lang/Object;IIII)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getCMUniOpNode(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","nodeCountCheck()V","reset()V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resetNodeCount()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSAllCM;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSAllCM.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZI)V","addElement(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Z)V","checkMinMaxBounds()Ljava/util/List;","checkUniqueParticleAttribution(Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","endContentModel([I)Z","findMatchingDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Ljava/lang/Object;","getTermName(I)Ljava/lang/String;","isCompactedForUPA()Z","occurenceInfo([I)[I","oneTransition(Lcom/sun/org/apache/xerces/internal/xni/QName;[ILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Ljava/lang/Object;","startContentModel()[I","whatCanGoHere([I)Ljava/util/List;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMBinOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSCMBinOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getLeft()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","getRight()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","isNullable()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMLeaf;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSCMLeaf.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;II)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getLeaf()Ljava/lang/Object;","getParticleId()I","getPosition()I","isNullable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMRepeatingLeaf;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSCMRepeatingLeaf.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMLeaf;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;IIII)V","getMaxOccurs()I","getMinOccurs()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMUniOp;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSCMUniOp.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFirstPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","calcLastPos(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMStateSet;)V","getChild()Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;","isNullable()Z","setUserData(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSDFACM$Occurence;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSDFACM$Occurence.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMRepeatingLeaf;I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSDFACM;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSDFACM.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;I)V","buildDFA(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","calcFollowList(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","checkMinMaxBounds()Ljava/util/List;","checkUniqueParticleAttribution(Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","endContentModel([I)Z","findMatchingDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Ljava/lang/Object;","findMatchingDecl(Lcom/sun/org/apache/xerces/internal/xni/QName;[ILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;I)Ljava/lang/Object;","getTermName(I)Ljava/lang/String;","isCompactedForUPA()Z","makeDefStateList()[I","occurenceInfo([I)[I","oneTransition(Lcom/sun/org/apache/xerces/internal/xni/QName;[ILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Ljava/lang/Object;","postTreeBuildInit(Lcom/sun/org/apache/xerces/internal/impl/dtd/models/CMNode;)V","startContentModel()[I","whatCanGoHere([I)Ljava/util/List;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSEmptyCM;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/models/XSEmptyCM.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/xs/models/XSCMValidator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.ArrayList.EMPTY_ELEMENTDATA",
    "invokedMethods": ["<clinit>()V","checkMinMaxBounds()Ljava/util/List;","checkUniqueParticleAttribution(Lcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Z","endContentModel([I)Z","getTermName(I)Ljava/lang/String;","isCompactedForUPA()Z","occurenceInfo([I)[I","oneTransition(Lcom/sun/org/apache/xerces/internal/xni/QName;[ILcom/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler;)Ljava/lang/Object;","startContentModel()[I","whatCanGoHere([I)Ljava/util/List;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/AttrImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/AttrImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl;",
    "interfaces": ["Lorg/w3c/dom/Attr;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getName()Ljava/lang/String;","getNodeValue()Ljava/lang/String;","getOwnerDocument()Lorg/w3c/dom/Document;","getSpecified()Z","getValue()Ljava/lang/String;","setValue(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultDocument;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultDocument.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl;",
    "interfaces": ["Lorg/w3c/dom/Document;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createAttribute(Ljava/lang/String;)Lorg/w3c/dom/Attr;","createAttributeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","createCDATASection(Ljava/lang/String;)Lorg/w3c/dom/CDATASection;","createComment(Ljava/lang/String;)Lorg/w3c/dom/Comment;","createElement(Ljava/lang/String;)Lorg/w3c/dom/Element;","createElementNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;","createEntityReference(Ljava/lang/String;)Lorg/w3c/dom/EntityReference;","createProcessingInstruction(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/ProcessingInstruction;","createTextNode(Ljava/lang/String;)Lorg/w3c/dom/Text;","getDocumentURI()Ljava/lang/String;","setDocumentURI(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl;",
    "interfaces": ["Lorg/w3c/dom/Element;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getElementsByTagName(Ljava/lang/String;)Lorg/w3c/dom/NodeList;","setAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultNode;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","appendChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","cloneNode(Z)Lorg/w3c/dom/Node;","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getChildNodes()Lorg/w3c/dom/NodeList;","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getNextSibling()Lorg/w3c/dom/Node;","getNodeValue()Ljava/lang/String;","getOwnerDocument()Lorg/w3c/dom/Document;","getParentNode()Lorg/w3c/dom/Node;","getPreviousSibling()Lorg/w3c/dom/Node;","hasChildNodes()Z","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setNodeValue(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultXMLDocumentHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultXMLDocumentHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;","Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","any(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","element(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","empty(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endContentModel(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","occurrence(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","pcdata(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","separator(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setDTDContentModelSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;)V","setDTDSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startContentModel(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V","getAnnotation()Ljava/lang/String;","getAttribute(Ljava/lang/String;)Ljava/lang/String;","getAttributeNS(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getAttributeNode(Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributeNodeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getCharacterOffset()I","getColumnNumber()I","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLineNumber()I","getNextSibling()Lorg/w3c/dom/Node;","getOwnerDocument()Lorg/w3c/dom/Document;","getParentNode()Lorg/w3c/dom/Node;","getPreviousSibling()Lorg/w3c/dom/Node;","getSyntheticAnnotation()Ljava/lang/String;","hasAttribute(Ljava/lang/String;)Z","hasChildNodes()Z","nsEquals(Ljava/lang/String;Ljava/lang/String;)Z","setAttribute(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/NamedNodeMapImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/NamedNodeMapImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NamedNodeMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lorg/w3c/dom/Attr;)V","getLength()I","getNamedItem(Ljava/lang/String;)Lorg/w3c/dom/Node;","item(I)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;S)V","getLocalName()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getNodeName()Ljava/lang/String;","getNodeType()S","getPrefix()Ljava/lang/String;","getReadOnly()Z","setReadOnly(ZZ)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOM;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOM.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultDocument;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","charactersRaw(Ljava/lang/String;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;III)Lcom/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl;","endAnnotation(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl;)V","endAnnotationCDATA()V","endAnnotationElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","endAnnotationElement(Ljava/lang/String;)V","endElement()V","endSyntheticAnnotationElement(Ljava/lang/String;Z)V","escapeAttValue(Ljava/lang/String;I)Ljava/lang/String;","getDocumentElement()Lorg/w3c/dom/Element;","getImplementation()Lorg/w3c/dom/DOMImplementation;","processAttValue(Ljava/lang/String;)Ljava/lang/String;","processElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","reset()V","resizeRelations()V","resizeRelations(I)V","startAnnotation(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","startAnnotation(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","startAnnotationCDATA()V","startAnnotationElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","startAnnotationElement(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;III)Lcom/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMImplementation;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMImplementation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/DOMImplementation;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getDOMImplementation()Lorg/w3c/dom/DOMImplementation;","hasFeature(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser$BooleanStack;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser$BooleanStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","ensureCapacity(I)V","pop()Z","push(Z)V","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultXMLDocumentHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getDocument()Lorg/w3c/dom/Document;","getProperty(Ljava/lang/String;)Ljava/lang/Object;","hasNonSchemaAttributes(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)Z","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","parse(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","resetNodePool()V","setEntityResolver(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaParsingConfig;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/opti/SchemaParsingConfig.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/BasicParserConfiguration;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLPullParserConfiguration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","addRecognizedParamsAndSetDefaults(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","checkFeature(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","checkProperty(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","cleanup()V","configurePipeline()V","configureXML11Pipeline()V","getFeatureState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","getPropertyState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","initXML11Components()V","parse(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","parse(Z)Z","reset()V","resetNodePool()V","resetXML10()V","resetXML11()V","setFeature(Ljava/lang/String;Z)V","setInputSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/Container;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/Container.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getContainer(I)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/Container;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/LargeContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/LargeContainer.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/Container;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","get(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr;","put(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IILjava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/SchemaContentHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/SchemaContentHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/ContentHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addNamespaceDeclarations(I)V","characters([CII)V","convertToSAXException(Lcom/sun/org/apache/xerces/internal/xni/XNIException;)V","convertToSAXParseException(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","endDocument()V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","endPrefixMapping(Ljava/lang/String;)V","fillQName(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","fillXMLAttributes(Lorg/xml/sax/Attributes;)V","getDocument()Lorg/w3c/dom/Document;","ignorableWhitespace([CII)V","processingInstruction(Ljava/lang/String;Ljava/lang/String;)V","reset(Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;ZZ)V","setDocumentLocator(Lorg/xml/sax/Locator;)V","skippedEntity(Ljava/lang/String;)V","startDocument()V","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V","startPrefixMapping(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/SmallContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/SmallContainer.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/Container;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","get(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr;","put(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/OneAttr;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/StAXSchemaParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/StAXSchemaParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addNamespaceDeclarations()V","fillDeclaredPrefixes(Ljava/util/Iterator;)V","fillDeclaredPrefixes(Ljavax/xml/stream/XMLStreamReader;)V","fillDeclaredPrefixes(Ljavax/xml/stream/events/EndElement;)V","fillDeclaredPrefixes(Ljavax/xml/stream/events/StartElement;)V","fillProcessingInstruction(Ljava/lang/String;)V","fillQName(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","fillQName(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljavax/xml/namespace/QName;)V","fillXMLAttributes(Ljavax/xml/stream/XMLStreamReader;)V","fillXMLAttributes(Ljavax/xml/stream/events/StartElement;)V","getDocument()Lorg/w3c/dom/Document;","parse(Ljavax/xml/stream/XMLEventReader;)V","parse(Ljavax/xml/stream/XMLStreamReader;)V","reset(Lcom/sun/org/apache/xerces/internal/impl/xs/opti/SchemaDOMParser;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","sendCharactersToSchemaParser(Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAnnotationInfo;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSAnnotationInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/w3c/dom/Element;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: com.sun.org.apache.xerces.internal.impl.xs.util.XIntPool.fXIntPool",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;)V","checkAttributes(Lorg/w3c/dom/Element;ZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)[Ljava/lang/Object;","checkAttributes(Lorg/w3c/dom/Element;ZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Z)[Ljava/lang/Object;","getAvailableArray()[Ljava/lang/Object;","reportSchemaError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reportSchemaFatalError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reset(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","resolveNamespace(Lorg/w3c/dom/Element;[Lorg/w3c/dom/Attr;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaNamespaceSupport;)V","returnAttrArray([Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)V","validate([Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;ILcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractIDConstraintTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractIDConstraintTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverseIdentityConstraint(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;[Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser$ParticleArray;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser$ParticleArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addParticle(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)V","getParticleCount()I","popContext()[Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","pushContext()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","hasAllContent(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Z","traverseAll(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","traverseChoice(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","traverseSeqChoice(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;IZLcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","traverseSequence(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser$FacetInfo;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser$FacetInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/dv/XSFacets;Lorg/w3c/dom/Element;SS)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","checkEnumerationAndLengthInconsistency(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/util/List;Lorg/w3c/dom/Element;Ljava/lang/String;)V","checkEnumerationAndMaxLengthInconsistency(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/util/List;Lorg/w3c/dom/Element;Ljava/lang/String;)V","checkEnumerationAndMinLengthInconsistency(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Ljava/util/List;Lorg/w3c/dom/Element;Ljava/lang/String;)V","checkNotationType(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lorg/w3c/dom/Element;)V","checkOccurrences(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Ljava/lang/String;Lorg/w3c/dom/Element;IJ)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","containsQName(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;)Z","escapeAttValue(Ljava/lang/String;I)Ljava/lang/String;","getSchemaTypeName(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)Ljava/lang/String;","processAttValue(Ljava/lang/String;)Ljava/lang/String;","reportSchemaError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reportSchemaWarning(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reset(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;ZLjava/util/Locale;)V","traverseAnnotationDecl(Lorg/w3c/dom/Element;[Ljava/lang/Object;ZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;","traverseAttrsAndAttrGrps(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)Lorg/w3c/dom/Element;","traverseFacets(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser$FacetInfo;","traverseSyntheticAnnotation(Lorg/w3c/dom/Element;Ljava/lang/String;[Ljava/lang/Object;ZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAttributeGroupTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAttributeGroupTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAttributeTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAttributeTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","checkDefaultValid(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;)V","checkDefaultValid(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;)V","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeUseImpl;","traverseNamedAttr(Lorg/w3c/dom/Element;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ZLcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDComplexTypeTraverser$ComplexTypeRecoverableError;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDComplexTypeTraverser$ComplexTypeRecoverableError.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDComplexTypeTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDComplexTypeTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","addAnnotation(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAnnotationImpl;)V","contentBackup()V","contentRestore()V","genAnonTypeName(Lorg/w3c/dom/Element;)Ljava/lang/String;","getErrorContent()Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","getErrorWildcard()Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;","handleComplexTypeError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","isAttrOrAttrGroup(Lorg/w3c/dom/Element;)Z","mergeAttributes(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;Ljava/lang/String;ZLorg/w3c/dom/Element;)V","processComplexContent(Lorg/w3c/dom/Element;ZZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","traverseComplexContent(Lorg/w3c/dom/Element;ZLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","traverseComplexTypeDecl(Lorg/w3c/dom/Element;Ljava/lang/String;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;","traverseSimpleContent(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDElementTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDElementTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","reset(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;ZLjava/util/Locale;)V","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","traverseLocal(Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILcom/sun/org/apache/xerces/internal/xs/XSObject;[Ljava/lang/String;)V","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","traverseNamedElement(Lorg/w3c/dom/Element;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ZLcom/sun/org/apache/xerces/internal/xs/XSObject;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDGroupTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDGroupTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractParticleTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$SAX2XNIUtil;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$SAX2XNIUtil.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerWrapper;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createXMLParseException0(Lorg/xml/sax/SAXParseException;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;","createXNIException0(Lorg/xml/sax/SAXException;)Lcom/sun/org/apache/xerces/internal/xni/XNIException;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$XSAnnotationGrammarPool;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$XSAnnotationGrammarPool.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","cacheGrammars(Ljava/lang/String;[Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;)V","refreshGrammars(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;)V","retrieveGrammar(Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;)Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;","retrieveInitialGrammarSet(Ljava/lang/String;)[Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$XSDKey;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$XSDKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;SLjava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket;)V","addGlobalAttributeDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;)V","addGlobalAttributeDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGlobalAttributeGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;)V","addGlobalAttributeGroupDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGlobalComponent(Lcom/sun/org/apache/xerces/internal/xs/XSObject;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;)V","addGlobalComponents(Ljava/util/List;Ljava/util/Map;)V","addGlobalElementDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","addGlobalElementDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGlobalGroupDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;)V","addGlobalGroupDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGlobalNotationDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;)V","addGlobalNotationDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGlobalTypeDecl(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)V","addGlobalTypeDecls(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGrammarComponents(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addGrammars(Ljava/util/List;)V","addIDConstraintDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;)V","addImportList(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Ljava/util/List;Ljava/util/List;)V","addNamespaceDependency(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V","addNewGrammarComponents(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addNewGrammarLocations(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addNewImportedGrammars(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","addRelatedAttribute(Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","addRelatedElement(Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","addRelatedType(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","buildGlobalNameRegistries()V","canAddComponent(Lcom/sun/org/apache/xerces/internal/xs/XSObject;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;)Z","canAddComponents(Ljava/util/List;)Z","changeRedefineGroup(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)I","checkForDuplicateNames(Ljava/lang/String;ILjava/util/Map;Ljava/util/Map;Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)V","checkForDuplicateNames(Ljava/lang/String;ILorg/w3c/dom/Element;)V","constructTrees(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Z)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;","containedImportedGrammar(Ljava/util/List;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Z","createAnnotationValidator()V","createGrammarFrom(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","createTraversers()V","doc2SystemId(Lorg/w3c/dom/Element;)Ljava/lang/String;","element2Locator(Lorg/w3c/dom/Element;)Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;","element2Locator(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;)Z","emptyString2Null(Ljava/lang/String;)Ljava/lang/String;","existingGrammars(Ljava/util/List;)Z","expandComponents([Lcom/sun/org/apache/xerces/internal/xs/XSObject;Ljava/util/Map;)Ljava/util/List;","expandGrammars([Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Ljava/util/List;","expandImportList(Ljava/lang/String;Ljava/util/List;)V","expandRelatedAttributeComponents(Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedAttributeGroupComponents(Lcom/sun/org/apache/xerces/internal/xs/XSAttributeGroupDefinition;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedAttributeUseComponents(Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedAttributeUsesComponents(Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedComplexTypeComponents(Lcom/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedComponents(Lcom/sun/org/apache/xerces/internal/xs/XSObject;Ljava/util/List;Ljava/util/Map;)V","expandRelatedElementComponents(Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedModelGroupComponents(Lcom/sun/org/apache/xerces/internal/xs/XSModelGroup;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedModelGroupDefinitionComponents(Lcom/sun/org/apache/xerces/internal/xs/XSModelGroupDefinition;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedParticleComponents(Lcom/sun/org/apache/xerces/internal/xs/XSParticle;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedSimpleTypeComponents(Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","expandRelatedTypeComponents(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;)V","fillInLocalElemInfo(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;ILcom/sun/org/apache/xerces/internal/xs/XSObject;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)V","findDependentNamespaces(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;","findGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Z)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","findQName(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Ljava/lang/String;","findXSDocumentForDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;","getDVFactory()Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;","getDocInfoFromMap(Ljava/util/Map;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;","getElementFromMap(Ljava/util/Map;Ljava/lang/String;)Lorg/w3c/dom/Element;","getFromMap(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;","getGlobalAttributeDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeDecl;","getGlobalAttributeGroupDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSAttributeGroupDecl;","getGlobalDecl(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;ILcom/sun/org/apache/xerces/internal/xni/QName;Lorg/w3c/dom/Element;)Ljava/lang/Object;","getGlobalDecl(Ljava/lang/String;I)Ljava/lang/Object;","getGlobalDeclFromGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;ILjava/lang/String;)Ljava/lang/Object;","getGlobalElementDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;","getGlobalGroupDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSGroupDecl;","getGlobalNotationDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;","getGlobalTypeDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;","getGrammar(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","getGrpOrAttrGrpRedefinedByRestriction(ILcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lorg/w3c/dom/Element;)Ljava/lang/Object;","getIDConstraintDecl(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/impl/xs/identity/IdentityConstraint;","getIDRegistry()Ljava/util/Map;","getIDRegistry_sub()Ljava/util/Map;","getSchemaDocument(Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSInputSource;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;)Lorg/w3c/dom/Element;","getSchemaDocument(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/DOMInputSource;ZSLorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getSchemaDocument(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SAXInputSource;ZSLorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getSchemaDocument(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/StAXInputSource;ZSLorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getSchemaDocument(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;ZSLorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getSchemaDocument0(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler$XSDKey;Ljava/lang/String;Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getSchemaDocument1(ZZLcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Lorg/w3c/dom/Element;Ljava/io/IOException;)Lorg/w3c/dom/Element;","getSchemaGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","isExistingGrammar(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Z)Z","needReportTNSError(Ljava/lang/String;)Z","nonAnnotationContent(Lorg/w3c/dom/Element;)Z","null2EmptyString(Ljava/lang/String;)Ljava/lang/String;","parseSchema(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;Ljava/util/Map;)Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;","prepareForParse()V","prepareForTraverse()V","removeParticle(Lcom/sun/org/apache/xerces/internal/impl/xs/XSModelGroupImpl;Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;)Z","renameRedefiningComponents(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","reportSchemaErr(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;SLjava/lang/Exception;)V","reportSchemaError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reportSchemaError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;Ljava/lang/Exception;)V","reportSchemaFatalError(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reportSchemaWarning(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;)V","reportSchemaWarning(Ljava/lang/String;[Ljava/lang/Object;Lorg/w3c/dom/Element;Ljava/lang/Exception;)V","reportSharingError(Ljava/lang/String;Ljava/lang/String;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","resolveKeyRefs()V","resolveSchema(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;ZLorg/w3c/dom/Element;Z)Lorg/w3c/dom/Element;","resolveSchema(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;ZLorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","resolveSchemaSource(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDDescription;ZLorg/w3c/dom/Element;Z)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","schemaDocument2SystemId(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Ljava/lang/String;","setDVFactory(Lcom/sun/org/apache/xerces/internal/impl/dv/SchemaDVFactory;)V","setDeclPool(Lcom/sun/org/apache/xerces/internal/impl/xs/XSDeclarationPool;)V","setGenerateSyntheticAnnotations(Z)V","setSchemasVisible(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)V","storeKeyRef(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;)V","traverseGlobalDecl(ILorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Ljava/lang/Object;","traverseLocalElements()V","traverseSchemas(Ljava/util/List;)V","updateImportDependencies(Ljava/util/Map;)V","updateImportList(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;Ljava/util/List;Ljava/util/List;)V","updateImportListFor(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","updateImportListWith(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V","validateAnnotations(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDKeyrefTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDKeyrefTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractIDConstraintTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverse(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDNotationTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDNotationTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverse(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSNotationDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDSimpleTypeTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDSimpleTypeTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","checkBuiltIn(Ljava/lang/String;Ljava/lang/String;)Z","errorType(Ljava/lang/String;Ljava/lang/String;S)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","findDTValidator(Lorg/w3c/dom/Element;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/QName;SLcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","genAnonTypeName(Lorg/w3c/dom/Element;)Ljava/lang/String;","getSimpleType(Ljava/lang/String;Lorg/w3c/dom/Element;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","isListDatatype(Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;)Z","traverseGlobal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","traverseLocal(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;","traverseSimpleTypeDecl(Lorg/w3c/dom/Element;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/dv/XSSimpleType;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDUniqueOrKeyTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDUniqueOrKeyTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractIDConstraintTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverse(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/XSElementDecl;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDWildcardTraverser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDWildcardTraverser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDAbstractTraverser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDHandler;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;)V","traverseAny(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl;","traverseAnyAttribute(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;","traverseWildcardDecl(Lorg/w3c/dom/Element;[Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaGrammar;)Lcom/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/traversers/XSDocumentInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/w3c/dom/Element;Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAttributeChecker;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addAllowedNS(Ljava/lang/String;)V","addAnnotation(Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAnnotationInfo;)V","backupNSSupport(Lcom/sun/org/apache/xerces/internal/impl/xs/SchemaNamespaceSupport;)V","getAnnotations()Lcom/sun/org/apache/xerces/internal/impl/xs/traversers/XSAnnotationInfo;","getSchemaAttrs()[Ljava/lang/Object;","initNamespaceSupport(Lorg/w3c/dom/Element;)V","isAllowedNS(Ljava/lang/String;)Z","needReportTNSError(Ljava/lang/String;)Z","restoreNSSupport()V","returnSchemaAttrs()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/ObjectListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/ObjectListImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/datatypes/ObjectList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;I)V","contains(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","getLength()I","item(I)Ljava/lang/Object;","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toArray0([Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/ShortListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/ShortListImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/ShortList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([SI)V","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","get(I)Ljava/lang/Short;","getLength()I","item(I)S","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/SimpleLocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;","setValues(Ljava/lang/String;Ljava/lang/String;III)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/StringListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/StringListImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/StringList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","<init>([Ljava/lang/String;I)V","contains(Ljava/lang/String;)Z","get(I)Ljava/lang/Object;","get(I)Ljava/lang/String;","getLength()I","item(I)Ljava/lang/String;","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toArray0([Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XInt;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XInt.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","intValue()I","shortValue()S","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XIntPool;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XIntPool.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getXInt(I)Lcom/sun/org/apache/xerces/internal/impl/xs/util/XInt;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XS10TypeHelper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XS10TypeHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getSchemaTypeName(Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSInputSource.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMap4Types;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMap4Types.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolHash;S)V","getLength()I","item(I)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","itemByName(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSObject;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$1$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$1$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$1;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$1.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl;I[Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$XSNamedMapEntry;)V","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$XSNamedMapEntry;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl$XSNamedMapEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/namespace/QName;Lcom/sun/org/apache/xerces/internal/xs/XSObject;)V","getKey()Ljava/lang/Object;","getKey()Ljavax/xml/namespace/QName;","getValue()Lcom/sun/org/apache/xerces/internal/xs/XSObject;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSNamedMapImpl.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSNamedMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolHash;)V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","get(Ljava/lang/Object;)Ljava/lang/Object;","getLength()I","isEqual(Ljava/lang/String;Ljava/lang/String;)Z","item(I)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","itemByName(Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl$EmptyIterator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl$EmptyIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["hasNext()Z","next()Lcom/sun/org/apache/xerces/internal/xs/XSObject;","next()Ljava/lang/Object;","remove()V","set(Lcom/sun/org/apache/xerces/internal/xs/XSObject;)V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl$XSObjectListIterator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl$XSObjectListIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl;I)V","hasNext()Z","next()Lcom/sun/org/apache/xerces/internal/xs/XSObject;","next()Ljava/lang/Object;","remove()V","set(Lcom/sun/org/apache/xerces/internal/xs/XSObject;)V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/impl/xs/util/XSObjectListImpl.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>([Lcom/sun/org/apache/xerces/internal/xs/XSObject;I)V","addXSObject(ILcom/sun/org/apache/xerces/internal/xs/XSObject;)V","addXSObject(Lcom/sun/org/apache/xerces/internal/xs/XSObject;)V","contains(Ljava/lang/Object;)Z","containsNull()Z","containsObject(Ljava/lang/Object;)Z","get(I)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","get(I)Ljava/lang/Object;","getLength()I","item(I)Lcom/sun/org/apache/xerces/internal/xs/XSObject;","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","listIterator0(I)Ljava/util/ListIterator;","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toArray0([Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/DefaultValidationErrorHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/DefaultValidationErrorHandler.class",
    "super": "Lorg/xml/sax/helpers/DefaultHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Locale;)V","error(Lorg/xml/sax/SAXParseException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/DocumentBuilderFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/DocumentBuilderFactoryImpl.class",
    "super": "Ljavax/xml/parsers/DocumentBuilderFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getSchema()Ljavax/xml/validation/Schema;","isXIncludeAware()Z","newDocumentBuilder()Ljavax/xml/parsers/DocumentBuilder;","setAttribute(Ljava/lang/String;Ljava/lang/Object;)V","setFeature(Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/DocumentBuilderImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/DocumentBuilderImpl.class",
    "super": "Ljavax/xml/parsers/DocumentBuilder;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/jaxp/JAXPConstants;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/DocumentBuilderFactoryImpl;Ljava/util/Map;Ljava/util/Map;)V","<init>(Lcom/sun/org/apache/xerces/internal/jaxp/DocumentBuilderFactoryImpl;Ljava/util/Map;Ljava/util/Map;Z)V","isValidating()Z","parse(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;","reset()V","resetSchemaValidator()V","setDocumentBuilderFactoryAttributes(Ljava/util/Map;)V","setEntityResolver(Lorg/xml/sax/EntityResolver;)V","setErrorHandler(Lorg/xml/sax/ErrorHandler;)V","setFeatures(Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPConstants;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$1.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerProxy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$2;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/ls/LSResourceResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$3;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$3.class",
    "super": "Ljavax/xml/validation/TypeInfoProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$SAX2XNI;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$SAX2XNI.class",
    "super": "Lorg/xml/sax/helpers/DefaultHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$XNI2SAX;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent$XNI2SAX.class",
    "super": "Lcom/sun/org/apache/xerces/internal/impl/xs/opti/DefaultXMLDocumentHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setContentHandler(Lorg/xml/sax/ContentHandler;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/JAXPValidatorComponent.class",
    "super": "Lcom/sun/org/apache/xerces/internal/jaxp/TeeXMLDocumentFilterImpl;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/validation/ValidatorHandler;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/SAXParserFactoryImpl.class",
    "super": "Ljavax/xml/parsers/SAXParserFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFromFeatures(Ljava/lang/String;)Z","getSchema()Ljavax/xml/validation/Schema;","isNamespaceAware()Z","isValidating()Z","isXIncludeAware()Z","newSAXParser()Ljavax/xml/parsers/SAXParser;","newSAXParserImpl()Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserImpl;","putInFeatures(Ljava/lang/String;Z)V","setFeature(Ljava/lang/String;Z)V","setNamespaceAware(Z)V","setValidating(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserImpl$JAXPSAXParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/SAXParserImpl$JAXPSAXParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/SAXParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserImpl;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager;)V","getFeature(Ljava/lang/String;)Z","getLocale()Ljava/util/Locale;","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getXMLParserConfiguration()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;","parse(Lorg/xml/sax/InputSource;)V","resetSchemaValidator()V","setFeature(Ljava/lang/String;Z)V","setFeature0(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setProperty0(Ljava/lang/String;Ljava/lang/Object;)V","setSchemaValidatorFeature(Ljava/lang/String;Z)V","setSchemaValidatorProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/SAXParserImpl.class",
    "super": "Ljavax/xml/parsers/SAXParser;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/jaxp/JAXPConstants;","Lcom/sun/org/apache/xerces/internal/xs/PSVIProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserFactoryImpl;Ljava/util/Map;)V","<init>(Lcom/sun/org/apache/xerces/internal/jaxp/SAXParserFactoryImpl;Ljava/util/Map;Z)V","getXMLReader()Lorg/xml/sax/XMLReader;","isValidating()Z","parse(Lorg/xml/sax/InputSource;Lorg/xml/sax/helpers/DefaultHandler;)V","setFeatures(Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/SchemaValidatorConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/SchemaValidatorConfiguration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;Lcom/sun/org/apache/xerces/internal/jaxp/validation/XSGrammarPoolContainer;Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationManager;)V","getFeature(Ljava/lang/String;)Z","getFeature(Ljava/lang/String;Z)Z","getFeatureState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","getPropertyState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/TeeXMLDocumentFilterImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/TeeXMLDocumentFilterImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","setSide(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/UnparsedEntityHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/UnparsedEntityHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDFilter;","Lcom/sun/org/apache/xerces/internal/impl/validation/EntityState;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/validation/ValidationManager;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","isEntityUnparsed(Ljava/lang/String;)Z","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset()V","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setDTDSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/datatype/DatatypeFactoryImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/datatype/DatatypeFactoryImpl.class",
    "super": "Ljavax/xml/datatype/DatatypeFactory;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/jaxp/validation/XSGrammarPoolContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/jaxp/validation/XSGrammarPoolContainer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractDOMParser$Abort;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractDOMParser$Abort.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Throwable.UNASSIGNED_STACK",
    "invokedMethods": ["<clinit>()V","<init>()V","fillInStackTrace()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractDOMParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractDOMParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractXMLDocumentParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","createAttrNode(Lcom/sun/org/apache/xerces/internal/xni/QName;)Lorg/w3c/dom/Attr;","createElementNode(Lcom/sun/org/apache/xerces/internal/xni/QName;)Lorg/w3c/dom/Element;","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","dropDocumentReferences()V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getDocument()Lorg/w3c/dom/Document;","handleBaseURI(I)V","handleBaseURI(Lorg/w3c/dom/Node;)V","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset()V","setCharacterData(Z)V","setDocumentClassName(Ljava/lang/String;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$2;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$2.class",
    "super": "Lorg/xml/sax/helpers/LocatorImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$AttributesProxy;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$AttributesProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/AttributeList;","Lorg/xml/sax/ext/Attributes2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLength()I","getLocalName(I)Ljava/lang/String;","getQName(I)Ljava/lang/String;","getType(I)Ljava/lang/String;","getURI(I)Ljava/lang/String;","getValue(I)Ljava/lang/String;","getValue(Ljava/lang/String;)Ljava/lang/String;","setAttributes(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$LocatorProxy;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractSAXParser$LocatorProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/ext/Locator2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser;Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;)V","getColumnNumber()I","getLineNumber()I","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractSAXParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractXMLDocumentParser;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/PSVIProvider;","Lorg/xml/sax/Parser;","Lorg/xml/sax/XMLReader;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endNamespaceMapping()V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getDeclHandler()Lorg/xml/sax/ext/DeclHandler;","getEntityResolver()Lorg/xml/sax/EntityResolver;","getErrorHandler()Lorg/xml/sax/ErrorHandler;","getFeature(Ljava/lang/String;)Z","getLexicalHandler()Lorg/xml/sax/ext/LexicalHandler;","getProperty(Ljava/lang/String;)Ljava/lang/Object;","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","parse(Lorg/xml/sax/InputSource;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset()V","setContentHandler(Lorg/xml/sax/ContentHandler;)V","setDTDHandler(Lorg/xml/sax/DTDHandler;)V","setDeclHandler(Lorg/xml/sax/ext/DeclHandler;)V","setDocumentHandler(Lorg/xml/sax/DocumentHandler;)V","setEntityResolver(Lorg/xml/sax/EntityResolver;)V","setErrorHandler(Lorg/xml/sax/ErrorHandler;)V","setFeature(Ljava/lang/String;Z)V","setLexicalHandler(Lorg/xml/sax/ext/LexicalHandler;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startNamespaceMapping()V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractXMLDocumentParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/AbstractXMLDocumentParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/XMLParser;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;","Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","any(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","element(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","empty(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endContentModel(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","occurrence(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","pcdata(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reset()V","separator(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","setDTDContentModelSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;)V","setDTDSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startContentModel(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGroup(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/BasicParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/BasicParserConfiguration.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/ParserConfigurationSettings;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","addComponent(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","checkFeature(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","checkProperty(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","getLocale()Ljava/util/Locale;","reset()V","setDTDContentModelHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;)V","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setEntityResolver(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;)V","setFeature(Ljava/lang/String;Z)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/DOMParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/DOMParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractDOMParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;)V","getEntityResolver()Lorg/xml/sax/EntityResolver;","getErrorHandler()Lorg/xml/sax/ErrorHandler;","getFeature(Ljava/lang/String;)Z","getXMLParserConfiguration()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;","parse(Lorg/xml/sax/InputSource;)V","setEntityResolver(Lorg/xml/sax/EntityResolver;)V","setErrorHandler(Lorg/xml/sax/ErrorHandler;)V","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setProperty0(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/SAXParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/SAXParser.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/AbstractSAXParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XIncludeAwareParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XIncludeAwareParserConfiguration.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/XML11Configuration;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","configurePipeline()V","configureXML11Pipeline()V","getFeatureState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","setFeature(Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XIncludeParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XIncludeParserConfiguration.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/XML11Configuration;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","configurePipeline()V","configureXML11Pipeline()V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XML11Configurable;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XML11Configurable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XML11Configuration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XML11Configuration.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/ParserConfigurationSettings;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLPullParserConfiguration;","Lcom/sun/org/apache/xerces/internal/parsers/XML11Configurable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","addCommonComponent(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","addComponent(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","addRecognizedParamsAndSetDefaults(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","addXML11Component(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;)V","checkFeature(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","checkProperty(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","cleanup()V","configurePipeline()V","configureXML11Pipeline()V","getFeatureState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","getFeatureState0(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","getLocale()Ljava/util/Locale;","getPropertyState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","initXML11Components()V","parse(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","parse(Z)Z","reset()V","resetCommon()V","resetSymbolTable()V","resetXML11()V","setDTDContentModelHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;)V","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setFeature(Ljava/lang/String;Z)V","setInputSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","setLocale(Ljava/util/Locale;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XMLParser;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XMLParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","parse(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/parsers/XPointerParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/parsers/XPointerParserConfiguration.class",
    "super": "Lcom/sun/org/apache/xerces/internal/parsers/XML11Configuration;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","configurePipeline()V","configureXML11Pipeline()V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/AttributesProxy;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/AttributesProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/AttributeList;","Lorg/xml/sax/ext/Attributes2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","setAttributes(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$LargeContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/AugmentationsImpl$LargeContainer.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl;)V","clear()V","expand()Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer;","getItem(Ljava/lang/Object;)Ljava/lang/Object;","isFull()Z","putItem(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$SmallContainer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/AugmentationsImpl$SmallContainer.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl;)V","clear()V","expand()Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl$AugmentationsItemsContainer;","getItem(Ljava/lang/Object;)Ljava/lang/Object;","isFull()Z","putItem(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/AugmentationsImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/AugmentationsImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/Augmentations;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getItem(Ljava/lang/String;)Ljava/lang/Object;","putItem(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","removeAllItems()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/DOMInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/DOMInputSource.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/DOMUtil;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/DOMUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getAnnotation(Lorg/w3c/dom/Node;)Ljava/lang/String;","getAttr(Lorg/w3c/dom/Element;Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttrValue(Lorg/w3c/dom/Element;Ljava/lang/String;)Ljava/lang/String;","getAttrs(Lorg/w3c/dom/Element;)[Lorg/w3c/dom/Attr;","getDocument(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Document;","getFirstChildElement(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Element;","getFirstVisibleChildElement(Lorg/w3c/dom/Node;Ljava/util/Map;)Lorg/w3c/dom/Element;","getLocalName(Lorg/w3c/dom/Node;)Ljava/lang/String;","getName(Lorg/w3c/dom/Node;)Ljava/lang/String;","getNamespaceURI(Lorg/w3c/dom/Node;)Ljava/lang/String;","getNextSiblingElement(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Element;","getNextVisibleSiblingElement(Lorg/w3c/dom/Node;Ljava/util/Map;)Lorg/w3c/dom/Element;","getParent(Lorg/w3c/dom/Element;)Lorg/w3c/dom/Element;","getPrefix(Lorg/w3c/dom/Node;)Ljava/lang/String;","getRoot(Lorg/w3c/dom/Document;)Lorg/w3c/dom/Element;","getSyntheticAnnotation(Lorg/w3c/dom/Node;)Ljava/lang/String;","getValue(Lorg/w3c/dom/Attr;)Ljava/lang/String;","isHidden(Lorg/w3c/dom/Node;Ljava/util/Map;)Z","setHidden(Lorg/w3c/dom/Node;Ljava/util/Map;)V","setVisible(Lorg/w3c/dom/Node;Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/DefaultErrorHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/DefaultErrorHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/io/PrintWriter;)V","error(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","fatalError(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","printError(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","warning(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/EncodingMap;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/EncodingMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","getIANA2JavaMapping(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/EntityResolver2Wrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/EntityResolver2Wrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/impl/ExternalSubsetResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/xml/sax/ext/EntityResolver2;)V","createXMLInputSource(Lorg/xml/sax/InputSource;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","getEntityResolver()Lorg/xml/sax/ext/EntityResolver2;","getExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLDTDDescription;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","resolveEntity(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","setEntityResolver(Lorg/xml/sax/ext/EntityResolver2;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/EntityResolverWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/EntityResolverWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/xml/sax/EntityResolver;)V","getEntityResolver()Lorg/xml/sax/EntityResolver;","resolveEntity(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","setEntityResolver(Lorg/xml/sax/EntityResolver;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerProxy;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/ErrorHandlerProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/ErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","error(Lorg/xml/sax/SAXParseException;)V","fatalError(Lorg/xml/sax/SAXParseException;)V","warning(Lorg/xml/sax/SAXParseException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerWrapper$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/ErrorHandlerWrapper$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;II)V","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/ErrorHandlerWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/ErrorHandlerWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/xml/sax/ErrorHandler;)V","createSAXParseException(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)Lorg/xml/sax/SAXParseException;","createXMLParseException(Lorg/xml/sax/SAXParseException;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;","createXNIException(Lorg/xml/sax/SAXException;)Lcom/sun/org/apache/xerces/internal/xni/XNIException;","error(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","fatalError(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","getErrorHandler()Lorg/xml/sax/ErrorHandler;","setErrorHandler(Lorg/xml/sax/ErrorHandler;)V","warning(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/FeatureState;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/FeatureState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/Status;Z)V","is(Z)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","isExceptional()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/HTTPInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/HTTPInputSource.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getFollowHTTPRedirects()Z","getHTTPRequestProperties()Ljava/util/Iterator;","setHTTPRequestProperty(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/IntStack;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/IntStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","elementAt(I)I","ensureCapacity(I)V","peek()I","pop()I","push(I)V","size()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/JAXPNamespaceContextWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/JAXPNamespaceContextWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","declarePrefix(Ljava/lang/String;Ljava/lang/String;)Z","getAllPrefixes()Ljava/util/Enumeration;","getDeclaredPrefixAt(I)Ljava/lang/String;","getDeclaredPrefixCount()I","getPrefix(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","popContext()V","pushContext()V","reset()V","setDeclaredPrefixes(Ljava/util/List;)V","setNamespaceContext(Ljavax/xml/namespace/NamespaceContext;)V","setSymbolTable(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/LocatorProxy;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/LocatorProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/ext/Locator2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/MessageFormatter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/NamespaceSupport$Prefixes;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/NamespaceSupport$Prefixes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/NamespaceSupport;[Ljava/lang/String;I)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;","nextElement()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/NamespaceSupport;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/NamespaceSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","containsPrefixInCurrentContext(Ljava/lang/String;)Z","declarePrefix(Ljava/lang/String;Ljava/lang/String;)Z","getAllPrefixes()Ljava/util/Enumeration;","getDeclaredPrefixAt(I)Ljava/lang/String;","getDeclaredPrefixCount()I","getPrefix(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;)Ljava/lang/String;","popContext()V","pushContext()V","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/ParserConfigurationSettings;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/ParserConfigurationSettings.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","addRecognizedFeatures([Ljava/lang/String;)V","addRecognizedProperties([Ljava/lang/String;)V","checkFeature(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","checkProperty(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","getFeature(Ljava/lang/String;)Z","getFeature(Ljava/lang/String;Z)Z","getFeatureState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/FeatureState;","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","getPropertyState(Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","setFeature(Ljava/lang/String;Z)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/PrimeNumberSequenceGenerator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/PrimeNumberSequenceGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["generateSequence([I)V","lambda$generateSequence$0([ILjava/util/Random;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/PropertyState;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/PropertyState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xerces/internal/util/Status;Ljava/lang/Object;)V","is(Ljava/lang/Object;)Lcom/sun/org/apache/xerces/internal/util/PropertyState;","isExceptional()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SAXInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SAXInputSource.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SAXLocatorWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SAXLocatorWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;","setLocator(Lorg/xml/sax/Locator;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SAXMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SAXMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["formatMessage(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SecurityManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SecurityManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/StAXInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/StAXInputSource.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/StAXLocationWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/StAXLocationWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;","setLocation(Ljavax/xml/stream/Location;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/Status;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/Status.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isExceptional()Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SymbolHash$Entry;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SymbolHash$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/util/SymbolHash$Entry;)V","makeClone()Lcom/sun/org/apache/xerces/internal/util/SymbolHash$Entry;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SymbolHash;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SymbolHash.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","clear()V","get(Ljava/lang/Object;)Ljava/lang/Object;","getEntries()[Ljava/lang/Object;","getLength()I","getValues([Ljava/lang/Object;I)I","hash(Ljava/lang/Object;)I","hash0(Ljava/lang/String;)I","makeClone()Lcom/sun/org/apache/xerces/internal/util/SymbolHash;","put(Ljava/lang/Object;Ljava/lang/Object;)V","rebalance()V","rehash()V","rehashCommon(I)V","search(Ljava/lang/Object;I)Lcom/sun/org/apache/xerces/internal/util/SymbolHash$Entry;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SymbolTable$Entry;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SymbolTable$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/util/SymbolTable$Entry;)V","<init>([CIILcom/sun/org/apache/xerces/internal/util/SymbolTable$Entry;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/SymbolTable;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/SymbolTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(IF)V","addSymbol(Ljava/lang/String;)Ljava/lang/String;","addSymbol([CII)Ljava/lang/String;","addSymbol0(Ljava/lang/String;II)Ljava/lang/String;","addSymbol0([CIIII)Ljava/lang/String;","hash(Ljava/lang/String;)I","hash([CII)I","hash0(Ljava/lang/String;)I","hash0([CII)I","rebalance()V","rehash()V","rehashCommon(I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/URI$MalformedURIException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/URI$MalformedURIException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/URI;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/URI.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/URI;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/util/URI;Ljava/lang/String;Z)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Z)V","absolutize(Lcom/sun/org/apache/xerces/internal/util/URI;)V","equals(Ljava/lang/Object;)Z","getAuthority()Ljava/lang/String;","getFragment()Ljava/lang/String;","getHost()Ljava/lang/String;","getPath()Ljava/lang/String;","getPort()I","getQueryString()Ljava/lang/String;","getRegBasedAuthority()Ljava/lang/String;","getScheme()Ljava/lang/String;","getSchemeSpecificPart()Ljava/lang/String;","getUserinfo()Ljava/lang/String;","hashCode()I","initialize(Lcom/sun/org/apache/xerces/internal/util/URI;)V","initialize(Lcom/sun/org/apache/xerces/internal/util/URI;Ljava/lang/String;)V","initialize(Lcom/sun/org/apache/xerces/internal/util/URI;Ljava/lang/String;Z)V","initializeAuthority(Ljava/lang/String;)Z","initializePath(Ljava/lang/String;I)V","initializeScheme(Ljava/lang/String;)V","isAbsoluteURI()Z","isAlpha(C)Z","isAlphanum(C)Z","isConformantSchemeName(Ljava/lang/String;)Z","isDigit(C)Z","isGenericURI()Z","isHex(C)Z","isPathCharacter(C)Z","isSchemeCharacter(C)Z","isURICharacter(C)Z","isURIString(Ljava/lang/String;)Z","isUserinfoCharacter(C)Z","isValidRegistryBasedAuthority(Ljava/lang/String;)Z","isValidServerBasedAuthority(Ljava/lang/String;ILjava/lang/String;)Z","isWellFormedAddress(Ljava/lang/String;)Z","isWellFormedIPv4Address(Ljava/lang/String;)Z","isWellFormedIPv6Reference(Ljava/lang/String;)Z","scanHexSequence(Ljava/lang/String;II[I)I","setFragment(Ljava/lang/String;)V","setHost(Ljava/lang/String;)V","setPath(Ljava/lang/String;)V","setPort(I)V","setQueryString(Ljava/lang/String;)V","setScheme(Ljava/lang/String;)V","setUserinfo(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XML11Char;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XML11Char.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","isXML11Content(I)Z","isXML11InternalEntityContent(I)Z","isXML11Invalid(I)Z","isXML11NCName(I)Z","isXML11NCNameStart(I)Z","isXML11Name(I)Z","isXML11NameHighSurrogate(I)Z","isXML11NameStart(I)Z","isXML11Space(I)Z","isXML11Valid(I)Z","isXML11ValidLiteral(I)Z","isXML11ValidNCName(Ljava/lang/String;)Z","isXML11ValidName(Ljava/lang/String;)Z","isXML11ValidNmtoken(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl$Attribute;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLAttributesImpl$Attribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLAttributesImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;","Lcom/sun/xml/internal/stream/XMLBufferListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","addAttribute(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Ljava/lang/String;)I","addAttribute(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)I","addAttributeNS(Lcom/sun/org/apache/xerces/internal/xni/QName;Ljava/lang/String;Ljava/lang/String;)V","checkDuplicatesNS()Lcom/sun/org/apache/xerces/internal/xni/QName;","checkManyDuplicatesNS()Lcom/sun/org/apache/xerces/internal/xni/QName;","cleanTableView()V","getAugmentations(I)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","getIndex(Ljava/lang/String;)I","getIndex(Ljava/lang/String;Ljava/lang/String;)I","getIndexFast(Ljava/lang/String;)I","getIndexFast(Ljava/lang/String;Ljava/lang/String;)I","getLength()I","getLocalName(I)Ljava/lang/String;","getName(ILcom/sun/org/apache/xerces/internal/xni/QName;)V","getNonNormalizedValue(I)Ljava/lang/String;","getPrefix(I)Ljava/lang/String;","getQName(I)Ljava/lang/String;","getReportableType(Ljava/lang/String;)Ljava/lang/String;","getTableViewBucket(Ljava/lang/String;)I","getTableViewBucket(Ljava/lang/String;Ljava/lang/String;)I","getType(I)Ljava/lang/String;","getURI(I)Ljava/lang/String;","getValue(I)Ljava/lang/String;","getValue(Ljava/lang/String;)Ljava/lang/String;","getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","growTableView()V","hash(Ljava/lang/String;)I","hash(Ljava/lang/String;Ljava/lang/String;)I","hash0(Ljava/lang/String;)I","isSpecified(I)Z","prepareAndPopulateTableView()V","prepareAndPopulateTableView(I)V","prepareAndPopulateTableViewNS(I)V","prepareTableView()V","rebalanceTableView(I)V","rebalanceTableViewNS(I)V","refresh()V","refresh(I)V","removeAllAttributes()V","removeAttributeAt(I)V","setName(ILcom/sun/org/apache/xerces/internal/xni/QName;)V","setNonNormalizedValue(ILjava/lang/String;)V","setSpecified(IZ)V","setType(ILjava/lang/String;)V","setURI(ILjava/lang/String;)V","setValue(ILjava/lang/String;)V","setValue(ILjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLAttributesIteratorImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLAttributesIteratorImpl.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","hasNext()Z","next()Lcom/sun/org/apache/xerces/internal/util/XMLAttributesImpl$Attribute;","next()Ljava/lang/Object;","remove()V","removeAllAttributes()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLChar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLChar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","highSurrogate(I)C","isContent(I)Z","isHighSurrogate(I)Z","isInvalid(I)Z","isLowSurrogate(I)Z","isMarkup(I)Z","isNCName(I)Z","isNCNameStart(I)Z","isName(I)Z","isNameStart(I)Z","isPubid(I)Z","isSpace(I)Z","isSupplemental(I)Z","isValid(I)Z","isValidIANAEncoding(Ljava/lang/String;)Z","isValidJavaEncoding(Ljava/lang/String;)Z","isValidNCName(Ljava/lang/String;)Z","isValidName(Ljava/lang/String;)Z","isValidNmtoken(Ljava/lang/String;)Z","lowSurrogate(I)C","supplemental(CC)I","trim(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLLocatorWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLLocatorWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBaseSystemId()Ljava/lang/String;","getCharacterOffset()I","getColumnNumber()I","getEncoding()Ljava/lang/String;","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getLiteralSystemId()Ljava/lang/String;","getPublicId()Ljava/lang/String;","setLocator(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLResourceIdentifierImpl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLResourceIdentifierImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","clear()V","getBaseSystemId()Ljava/lang/String;","getExpandedSystemId()Ljava/lang/String;","getLiteralSystemId()Ljava/lang/String;","getNamespace()Ljava/lang/String;","getPublicId()Ljava/lang/String;","hashCode()I","setBaseSystemId(Ljava/lang/String;)V","setExpandedSystemId(Ljava/lang/String;)V","setLiteralSystemId(Ljava/lang/String;)V","setNamespace(Ljava/lang/String;)V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLStringBuffer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLStringBuffer.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/XMLString;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","append(C)V","append(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","append(Ljava/lang/String;)V","append([CII)V","clear()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/util/XMLSymbols;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/util/XMLSymbols.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/ConfigurationError;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/ConfigurationError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Exception;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/ObjectFactory;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/ObjectFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.invoke.MethodHandle.invokeBasic(Object)",
    "invokedMethods": ["<clinit>()V","debugPrintln(Ljava/util/function/Supplier;)V","findClassLoader()Ljava/lang/ClassLoader;","findProviderClass(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/lang/Class;","findProviderClass(Ljava/lang/String;Z)Ljava/lang/Class;","isDebugEnabled()Z","lambda$newInstance$0(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/String;","newInstance(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/lang/Object;","newInstance(Ljava/lang/String;Z)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addValue(ILjava/lang/String;I)V","addValue(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Ljava/lang/String;I)V","debugPrint(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager;)V","endEntity(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Ljava/lang/String;)V","getTotalValue(I)I","getTotalValue(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;)I","getValue(I)I","getValue(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;)I","reset(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;)V","startEntity(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["defaultValue()I","equalsAPIPropertyName(Ljava/lang/String;)Z","key()Ljava/lang/String;","secureValue()I","systemProperty()Ljava/lang/String;","values()[Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$NameMap;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityManager$NameMap.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getOldName(Ljava/lang/String;)Ljava/lang/String;","values()[Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$NameMap;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["literal()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Z)V","convert(Ljava/lang/Object;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager;)Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager;","debugPrint(Lcom/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer;)V","getIndex(Ljava/lang/String;)I","getLimit(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;)I","getLimitAsString(Ljava/lang/String;)Ljava/lang/String;","getLimitValueByIndex(I)Ljava/lang/String;","getStateLiteral(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;)Ljava/lang/String;","getSystemProperty(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Ljava/lang/String;)Z","isNoLimit(I)Z","isOverLimit(ILcom/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer;)Z","isOverLimit(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Lcom/sun/org/apache/xerces/internal/utils/XMLLimitAnalyzer;)Z","isSecureProcessing()Z","printWarning(Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/SAXException;)V","readSystemProperties()V","setLimit(ILcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State;I)V","setLimit(ILcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State;Ljava/lang/Object;)V","setLimit(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$Limit;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State;I)V","setLimit(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityManager$State;Ljava/lang/Object;)Z","setSecureProcessing(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["defaultValue()Ljava/lang/String;","equalsName(Ljava/lang/String;)Z","values()[Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$State;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getIndex(Ljava/lang/String;)I","getSystemProperty(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property;Ljava/lang/String;)V","getValue(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property;)Ljava/lang/String;","getValue(Ljava/lang/String;)Ljava/lang/String;","getValueByIndex(I)Ljava/lang/String;","readSystemProperties()V","setValue(ILcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$State;Ljava/lang/String;)V","setValue(Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$Property;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$State;Ljava/lang/String;)V","setValue(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/utils/XMLSecurityPropertyManager$State;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/MultipleScopeNamespaceSupport;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/MultipleScopeNamespaceSupport.class",
    "super": "Lcom/sun/org/apache/xerces/internal/util/NamespaceSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAllPrefixes()Ljava/util/Enumeration;","getPrefix(Ljava/lang/String;)Ljava/lang/String;","getPrefix(Ljava/lang/String;II)Ljava/lang/String;","getScopeForContext(I)I","getURI(Ljava/lang/String;)Ljava/lang/String;","getURI(Ljava/lang/String;I)Ljava/lang/String;","getURI(Ljava/lang/String;II)Ljava/lang/String;","popScope()V","pushScope()V","reset()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XInclude11TextReader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XInclude11TextReader.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeTextReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler;I)V","isValid(I)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$Notation;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$Notation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","isDuplicate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$UnparsedEntity;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$UnparsedEntity.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","isDuplicate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.String.intern()",
    "invokedMethods": ["<clinit>()V","<init>()V","addNotation(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","addUnparsedEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","checkAndSendNotation(Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$Notation;)V","checkAndSendUnparsedEntity(Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler$UnparsedEntity;)V","checkMultipleRootElements()V","checkNotation(Ljava/lang/String;)V","checkUnparsedEntity(Ljava/lang/String;)V","checkWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","copyFeatures(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;Lcom/sun/org/apache/xerces/internal/util/ParserConfigurationSettings;)V","copyFeatures(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","copyFeatures1(Ljava/util/Enumeration;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;Lcom/sun/org/apache/xerces/internal/util/ParserConfigurationSettings;)V","copyFeatures1(Ljava/util/Enumeration;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;)V","createInputSource(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","doctypeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endAttlist(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endConditional(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDocument(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","escapeHref(Ljava/lang/String;)Ljava/lang/String;","externalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","getBaseURI(I)Ljava/lang/String;","getDocumentHandler()Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","getFeatureDefault(Ljava/lang/String;)Ljava/lang/Boolean;","getIncludeParentBaseURI()Ljava/lang/String;","getIncludeParentDepth()I","getIncludeParentLanguage()Ljava/lang/String;","getLanguage(I)Ljava/lang/String;","getPropertyDefault(Ljava/lang/String;)Ljava/lang/Object;","getRecognizedFeatures()[Ljava/lang/String;","getRecognizedProperties()[Ljava/lang/String;","getRelativeBaseURI()Ljava/lang/String;","getRelativeURI(I)Ljava/lang/String;","getResultDepth()I","getRootElementProcessed()Z","getSawFallback(I)Z","getSawInclude(I)Z","getState()I","getState(I)I","handleFallbackElement()V","handleIncludeElement(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)Z","hasXIncludeNamespace(Lcom/sun/org/apache/xerces/internal/xni/QName;)Z","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignoredCharacters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","internalEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","isFallbackElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)Z","isIncludeElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)Z","isRootDocument()Z","isTopLevelIncludedItem()Z","isTopLevelIncludedItemViaFallback()Z","isTopLevelIncludedItemViaInclude()Z","isValidInHTTPHeader(Ljava/lang/String;)Z","modifyAugmentations(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","modifyAugmentations(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;Z)Lcom/sun/org/apache/xerces/internal/xni/Augmentations;","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","processAttributes(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;","processXMLBaseAttributes(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","processXMLLangAttributes(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reportError(Ljava/lang/String;[Ljava/lang/Object;SLjava/lang/Exception;)V","reportFatalError(Ljava/lang/String;)V","reportFatalError(Ljava/lang/String;[Ljava/lang/Object;)V","reportFatalError(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Exception;)V","reportResourceError(Ljava/lang/String;[Ljava/lang/Object;)V","reportResourceError(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Exception;)V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","restoreBaseURI()V","restoreLanguage()Ljava/lang/String;","sameBaseURIAsIncludeParent()Z","sameLanguageAsIncludeParent()Z","saveBaseURI()V","saveLanguage(Ljava/lang/String;)V","scopeOfBaseURI(I)I","scopeOfLanguage(I)I","searchForRecursiveIncludes(Ljava/lang/String;)Z","setDTDHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;)V","setDTDSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;)V","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setDocumentSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;)V","setErrorReporter(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","setFeature(Ljava/lang/String;Z)V","setHref(Ljava/lang/String;)V","setParent(Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","setRootElementProcessed(Z)V","setSawFallback(IZ)V","setSawInclude(IZ)V","setState(I)V","setXIncludeLocator(Lcom/sun/org/apache/xerces/internal/util/XMLLocatorWrapper;)V","setupCurrentBaseURI(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;)V","startAttlist(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startConditional(SLcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startDocument(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startExternalSubset(Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startGeneralEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startParameterEntity(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","textDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","unparsedEntityDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","xmlDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatMessage(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeNamespaceSupport;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeNamespaceSupport.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xinclude/MultipleScopeNamespaceSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getURIFromIncludeParent(Ljava/lang/String;)Ljava/lang/String;","pushContext()V","setContextInvalid()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeTextReader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xinclude/XIncludeTextReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler;I)V","close()V","consumeBOM(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;","createASCIIReader(Ljava/io/InputStream;)Ljava/io/Reader;","createLatin1Reader(Ljava/io/InputStream;)Ljava/io/Reader;","createUTF16Reader(Ljava/io/InputStream;Z)Ljava/io/Reader;","createUTF8Reader(Ljava/io/InputStream;)Ljava/io/Reader;","getEncodingName(Ljava/io/InputStream;)Ljava/lang/String;","getEncodingName([B)Ljava/lang/String;","getReader(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)Ljava/io/Reader;","isValid(I)Z","parse()V","setBufferSize(I)V","setErrorReporter(Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","setInputSource(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/Augmentations;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/Augmentations.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/NamespaceContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/QName;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/QName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","clear()V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","hashCode()I","setValues(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLAttributes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLDTDHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLDocumentHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLLocator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XMLString;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XMLString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>([CII)V","clear()V","equals(Ljava/lang/String;)Z","equals([CII)Z","setValues(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)V","setValues([CII)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/XNIException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/XNIException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Exception;)V","getCause()Ljava/lang/Throwable;","getException()Ljava/lang/Exception;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/Grammar.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLDTDDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XMLDTDDescription.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarLoader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLSchemaDescription;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XMLSchemaDescription.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/grammars/XSGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/grammars/XSGrammar.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/grammars/Grammar;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponent;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLComponent.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLConfigurationException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLConfigurationException.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/XNIException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/Status;Ljava/lang/String;)V","getIdentifier()Ljava/lang/String;","getType()Lcom/sun/org/apache/xerces/internal/util/Status;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelFilter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelFilter.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDTDContentModelHandler;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDFilter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDFilter.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDTDHandler;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDScanner.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDContentModelSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDTDSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDocumentFilter.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;","Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentScanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDocumentScanner.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLDocumentSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLInputSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/Reader;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","<init>(Lorg/xml/sax/InputSource;Z)V","getBaseSystemId()Ljava/lang/String;","getByteStream()Ljava/io/InputStream;","getCharacterStream()Ljava/io/Reader;","getEncoding()Ljava/lang/String;","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","isCreatedByResolver()Z","setByteStream(Ljava/io/InputStream;)V","setCharacterStream(Ljava/io/Reader;)V","setEncoding(Ljava/lang/String;)V","setSystemId(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLParseException.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xni/XNIException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;)V","<init>(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Ljava/lang/String;Ljava/lang/Exception;)V","getColumnNumber()I","getExpandedSystemId()Ljava/lang/String;","getLineNumber()I","getPublicId()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xni/parser/XMLPullParserConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xni/parser/XMLPullParserConfiguration.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParserConfiguration;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$1.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Scanner;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Tokens;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Scanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Scanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Tokens;I)V","scanExpr(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Tokens;Ljava/lang/String;II)Z","scanNCName(Ljava/lang/String;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Tokens;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer$Tokens.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(I)V","addToken(Ljava/lang/String;)V","getTokenCount()I","getTokenString(I)Ljava/lang/String;","hasMore()Z","nextToken()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/ElementSchemePointer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xpointer/XPointerPart;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/impl/XMLErrorReporter;)V","checkMatch()Z","init()V","initErrorReporter()V","isChildFragmentResolved()Z","matchChildSequence(Lcom/sun/org/apache/xerces/internal/xni/QName;I)Z","parseXPointer(Ljava/lang/String;)V","reportError(Ljava/lang/String;[Ljava/lang/Object;)V","resolveXPointer(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;I)Z","setSchemeData(Ljava/lang/String;)V","setSchemeName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/ShortHandPointer;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/ShortHandPointer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xpointer/XPointerPart;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","getChildrenSchemaDeterminedID(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;I)Ljava/lang/String;","getDTDDeterminedID(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;I)Ljava/lang/String;","getSchemaDeterminedID(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;I)Ljava/lang/String;","hasMatchingIdentifier(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;I)Z","isChildFragmentResolved()Z","resolveXPointer(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;I)Z","setSchemeName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerErrorHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerErrorHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/io/PrintWriter;)V","error(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","fatalError(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","printError(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V","warning(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/parser/XMLParseException;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$1;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerHandler$1.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Scanner;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Tokens;I)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Scanner;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Scanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Tokens;I)V","scanData(Ljava/lang/String;Ljava/lang/StringBuffer;II)I","scanExpr(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Tokens;Ljava/lang/String;II)Z","scanNCName(Ljava/lang/String;II)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Tokens;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerHandler$Tokens.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","addToken(I)V","addToken(Ljava/lang/String;)V","getTokenString(I)Ljava/lang/String;","hasMore()Z","nextToken()I","peekToken()I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerHandler;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerHandler.class",
    "super": "Lcom/sun/org/apache/xerces/internal/xinclude/XIncludeHandler;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xpointer/XPointerProcessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","characters(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","comment(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","emptyElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ignorableWhitespace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","init()V","initErrorReporter()V","isChildFragmentResolved()Z","isXPointerResolved()Z","parseXPointer(Ljava/lang/String;)V","processingInstruction(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","reportError(Ljava/lang/String;[Ljava/lang/Object;)V","reportWarning(Ljava/lang/String;[Ljava/lang/Object;)V","resolveXPointer(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;I)Z","setDocumentHandler(Lcom/sun/org/apache/xerces/internal/xni/XMLDocumentHandler;)V","setProperty(Ljava/lang/String;Ljava/lang/Object;)V","startCDATA(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerMessageFormatter;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerMessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/util/MessageFormatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatMessage(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerPart;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerPart.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xpointer/XPointerProcessor;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xpointer/XPointerProcessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/AttributePSVI;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/AttributePSVI.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/ItemPSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/ElementPSVI;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/ElementPSVI.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/ItemPSVI;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/ItemPSVI;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/ItemPSVI.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/PSVIProvider;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/PSVIProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/ShortList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/ShortList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/StringList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/StringList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSAnnotation;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSAnnotation.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSAttributeDeclaration.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSAttributeGroupDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSAttributeGroupDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSAttributeUse;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSAttributeUse.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSComplexTypeDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSComplexTypeDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSElementDeclaration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSElementDeclaration.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSTerm;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSException;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(SLjava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSIDCDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSIDCDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSLoader;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSModel;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSModel.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSModelGroup;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSModelGroup.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSTerm;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSModelGroupDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSModelGroupDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSNamedMap;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSNamedMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItem;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSNamespaceItem.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSNamespaceItemList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSNamespaceItemList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSNotationDeclaration;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSNotationDeclaration.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSObject;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSObject.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSObjectList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSObjectList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSParticle;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSParticle.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSTerm;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSTerm.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSTypeDefinition;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSTypeDefinition.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSValue;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSValue.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/XSWildcard;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/XSWildcard.class",
    "super": "null",
    "interfaces": ["Lcom/sun/org/apache/xerces/internal/xs/XSTerm;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/ByteList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/ByteList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/ObjectList;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/ObjectList.class",
    "super": "null",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDateTime;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/XSDateTime.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDecimal;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/XSDecimal.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSDouble;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/XSDouble.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSFloat;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/XSFloat.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xerces/internal/xs/datatypes/XSQName;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/org/apache/xerces/internal/xs/datatypes/XSQName.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/Init$1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/Init$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/Init;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/Init.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","dynamicInit()V","fileInit(Ljava/io/InputStream;)V","init()V","isInitialized()Z","lambda$init$0()Ljava/io/InputStream;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/Algorithm;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/Algorithm.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/SignatureElementProxy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/ClassLoaderUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/ClassLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","loadClass2(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/JCEMapper$Algorithm;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/JCEMapper$Algorithm.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V","<init>(Lorg/w3c/dom/Element;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/JCEMapper;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/JCEMapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","register(Ljava/lang/String;Lcom/sun/org/apache/xml/internal/security/algorithms/JCEMapper$Algorithm;)V","registerDefaultAlgorithms()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithm;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithm.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/Algorithm;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","register(Ljava/lang/String;Ljava/lang/String;)V","registerDefaultAlgorithms()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacMD5;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacMD5.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacRIPEMD160;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacRIPEMD160.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA224;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA224.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA256;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA256.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA384;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA384.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA512;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac$IntegrityHmacSHA512.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/IntegrityHmac.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSAMD5;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSAMD5.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSARIPEMD160;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSARIPEMD160.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA1MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA1MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA224;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA224.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA224MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA224MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA256;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA256.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA256MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA256MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA384;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA384.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA384MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA384MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_224MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_224MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_256MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_256MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_384MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_384MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_512MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA3_512MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA512;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA512.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA512MGF1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA$SignatureRSASHA512MGF1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureBaseRSA.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureDSA$SHA256;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureDSA$SHA256.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureDSA;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureDSA.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSARIPEMD160;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSARIPEMD160.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA1;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA1.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA224;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA224.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA256;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA256.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA384;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA384.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA512;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA$SignatureECDSASHA512.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/algorithms/implementations/SignatureECDSA.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/algorithms/SignatureAlgorithmSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/Canonicalizer;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/Canonicalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","register(Ljava/lang/String;Ljava/lang/String;)V","registerDefaultAlgorithms()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/CanonicalizerSpi;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/CanonicalizerSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/ClassLoaderUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/ClassLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","loadClass2(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/helper/AttrCompare;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/helper/AttrCompare.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Lorg/w3c/dom/Attr;Lorg/w3c/dom/Attr;)I"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer11_OmitComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer11_OmitComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer11_WithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer11_WithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315Excl;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315Excl.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315ExclOmitComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315ExclOmitComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315Excl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315ExclWithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315ExclWithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315Excl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315OmitComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315OmitComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315WithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315WithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/Canonicalizer20010315;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerBase;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerBase.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/CanonicalizerSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerPhysical;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerPhysical.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/c14n/implementations/CanonicalizerBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/exceptions/AlgorithmAlreadyRegisteredException;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/exceptions/AlgorithmAlreadyRegisteredException.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/exceptions/XMLSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/exceptions/XMLSecurityException;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/exceptions/XMLSecurityException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;Ljava/lang/String;[Ljava/lang/Object;)V","<init>(Ljava/lang/String;[Ljava/lang/Object;)V","printStackTrace()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/ClassLoaderUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/ClassLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","loadClass2(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;)V","registerClassNames(Ljava/util/List;)V","registerDefaultResolvers()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setGlobalResolver(Z)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/DEREncodedKeyValueResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/DEREncodedKeyValueResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/DSAKeyValueResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/DSAKeyValueResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/ECKeyValueResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/ECKeyValueResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/KeyInfoReferenceResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/KeyInfoReferenceResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/RSAKeyValueResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/RSAKeyValueResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/RetrievalMethodResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/RetrievalMethodResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509CertificateResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509CertificateResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509DigestResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509DigestResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509IssuerSerialResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509IssuerSerialResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509SKIResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509SKIResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509SubjectNameResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/keys/keyresolver/implementations/X509SubjectNameResolver.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/signature/XMLSignatureException;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/signature/XMLSignatureException.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/exceptions/XMLSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/ClassLoaderUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/ClassLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","loadClass2(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/Transform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/Transform.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/SignatureElementProxy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","register(Ljava/lang/String;Ljava/lang/String;)V","registerDefaultAlgorithms()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/TransformSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformBase64Decode;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformBase64Decode.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N11;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N11.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N11_WithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N11_WithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14N.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NExclusive;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NExclusive.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NExclusiveWithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NExclusiveWithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NWithComments;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformC14NWithComments.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformEnvelopedSignature;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformEnvelopedSignature.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformXPath2Filter;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformXPath2Filter.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformXPath;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformXPath.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/transforms/implementations/TransformXSLT;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/transforms/implementations/TransformXSLT.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/transforms/TransformSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/ElementProxy;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/ElementProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","registerDefaultPrefixes()V","setDefaultPrefix(Ljava/lang/String;Ljava/lang/String;)V","setNamespacePrefix(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/I18n;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/I18n.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getExceptionMessage(Ljava/lang/String;)Ljava/lang/String;","getExceptionMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","init(Ljava/lang/String;Ljava/lang/String;)V","translate(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/JavaUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/JavaUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","checkRegisterPermission()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/SignatureElementProxy;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/SignatureElementProxy.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/ElementProxy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/XMLUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/XMLUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.invoke.MethodHandle.invokeBasic()",
    "invokedMethods": ["<clinit>()V","buildDocumentBuilder(Z)Ljavax/xml/parsers/DocumentBuilder;","getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;","getContextClassLoader()Ljava/lang/ClassLoader;","getDocumentBuilder(ZLjava/util/Queue;)Ljavax/xml/parsers/DocumentBuilder;","getDocumentBuilderQueue(ZLjava/lang/ClassLoader;)Ljava/util/Queue;","lambda$static$0()Ljava/lang/Boolean;","lambda$static$1()Ljava/lang/Integer;","read(Ljava/io/InputStream;Z)Lorg/w3c/dom/Document;","repoolDocumentBuilder(Ljavax/xml/parsers/DocumentBuilder;Ljava/util/Queue;)V","selectNodes(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)[Lorg/w3c/dom/Element;","setDs11Prefix(Ljava/lang/String;)V","setDsPrefix(Ljava/lang/String;)V","setXencPrefix(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ClassLoaderUtils;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/ClassLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","loadClass(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","loadClass2(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolver;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;)V","register(Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;Z)V","register(Ljava/lang/Class;Z)V","register(Ljava/lang/String;)V","registerDefaultResolvers()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverDirectHTTP;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverDirectHTTP.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverFragment;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverFragment.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverLocalFilesystem;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverLocalFilesystem.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverXPointer;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/apache/xml/internal/security/utils/resolver/implementations/ResolverXPointer.class",
    "super": "Lcom/sun/org/apache/xml/internal/security/utils/resolver/ResourceResolverSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lcom/sun/org/slf4j/internal/Logger;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/slf4j/internal/Logger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","debug(Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","debug(Ljava/lang/String;[Ljava/lang/Object;)V","error(Ljava/lang/String;)V","error(Ljava/lang/String;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lcom/sun/org/slf4j/internal/LoggerFactory;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/com/sun/org/slf4j/internal/LoggerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getLogger(Ljava/lang/Class;)Lcom/sun/org/slf4j/internal/Logger;"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/ClientFactoryImpl;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/ClientFactoryImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/sasl/SaslClientFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/Provider$1;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/Provider$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/security/sasl/Provider;Lcom/sun/security/sasl/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/Provider$ProviderService;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/Provider$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/Provider;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/Provider.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$100(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$200(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$300(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$400(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$500(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$600(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V","access$700(Lcom/sun/security/sasl/Provider;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/ServerFactoryImpl;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/ServerFactoryImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/sasl/SaslServerFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/digest/FactoryImpl;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/digest/FactoryImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/sasl/SaslClientFactory;","Ljavax/security/sasl/SaslServerFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/gsskerb/FactoryImpl;",
    "module": "jdk.security.jgss",
    "source": "/jdk.security.jgss/com/sun/security/sasl/gsskerb/FactoryImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/sasl/SaslClientFactory;","Ljavax/security/sasl/SaslServerFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/gsskerb/JdkSASL$1;",
    "module": "jdk.security.jgss",
    "source": "/jdk.security.jgss/com/sun/security/sasl/gsskerb/JdkSASL$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/security/sasl/gsskerb/JdkSASL;Ljava/security/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/gsskerb/JdkSASL$ProviderService;",
    "module": "jdk.security.jgss",
    "source": "/jdk.security.jgss/com/sun/security/sasl/gsskerb/JdkSASL$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/gsskerb/JdkSASL;",
    "module": "jdk.security.jgss",
    "source": "/jdk.security.jgss/com/sun/security/sasl/gsskerb/JdkSASL.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lcom/sun/security/sasl/gsskerb/JdkSASL;Ljava/security/Provider$Service;)V","access$100(Lcom/sun/security/sasl/gsskerb/JdkSASL;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lcom/sun/security/sasl/ntlm/FactoryImpl;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/com/sun/security/sasl/ntlm/FactoryImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/sasl/SaslClientFactory;","Ljavax/security/sasl/SaslServerFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/Entity$ExternalEntity;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/Entity$ExternalEntity.class",
    "super": "Lcom/sun/xml/internal/stream/Entity;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/lang/String;Z)V","isExternal()Z","isUnparsed()Z"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/Entity$InternalEntity;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/Entity$InternalEntity.class",
    "super": "Lcom/sun/xml/internal/stream/Entity;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Z)V","isExternal()Z","isUnparsed()Z"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/Entity$ScannedEntity;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/Entity$ScannedEntity.class",
    "super": "Lcom/sun/xml/internal/stream/Entity;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZLjava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Ljava/io/InputStream;Ljava/io/Reader;Ljava/lang/String;ZZZ)V","close()V","isEncodingExternallySpecified()Z","isExternal()Z","isUnparsed()Z","setEncodingExternallySpecified(Z)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/Entity;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/Entity.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;Z)V","clear()V","isEntityDeclInExternalSubset()Z"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/StaxEntityResolverWrapper;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/StaxEntityResolverWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/StaxXMLInputSource;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/StaxXMLInputSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;Z)V","getXMLInputSource()Lcom/sun/org/apache/xerces/internal/xni/parser/XMLInputSource;","hasXMLStreamOrXMLEventReader()Z","isCreatedByResolver()Z"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/XMLBufferListener;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/XMLBufferListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/XMLEntityStorage;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/XMLEntityStorage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/impl/XMLEntityManager;)V","addExternalEntity(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","addInternalEntity(Ljava/lang/String;Ljava/lang/String;)V","addUnparsedEntity(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","endExternalSubset()V","expandSystemId(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","fixURI(Ljava/lang/String;)Ljava/lang/String;","getEntity(Ljava/lang/String;)Lcom/sun/xml/internal/stream/Entity;","getUserDir()Ljava/lang/String;","isDeclaredEntity(Ljava/lang/String;)Z","isEntityDeclInExternalSubset(Ljava/lang/String;)Z","isExternalEntity(Ljava/lang/String;)Z","isUnparsedEntity(Ljava/lang/String;)Z","reset()V","reset(Lcom/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager;)V","startExternalSubset()V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/DTDGrammarUtil;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/DTDGrammarUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/xml/internal/stream/dtd/nonvalidating/DTDGrammar;Lcom/sun/org/apache/xerces/internal/util/SymbolTable;Lcom/sun/org/apache/xerces/internal/xni/NamespaceContext;)V","addDTDDefaultAttrs(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","endElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","ensureStackCapacity(I)V","getAttributeTypeName(Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLAttributeDecl;)Ljava/lang/String;","handleEndElement(Lcom/sun/org/apache/xerces/internal/xni/QName;)V","handleStartElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V","isIgnorableWhiteSpace(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","isInElementContent()Z","normalizeAttrValue(Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;I)Z","startElement(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/org/apache/xerces/internal/xni/XMLAttributes;)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/nonvalidating/DTDGrammar;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/nonvalidating/DTDGrammar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lcom/sun/org/apache/xerces/internal/util/SymbolTable;)V","attributeDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/XMLString;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","createAttributeDecl()I","createElementDecl()I","elementDecl(Ljava/lang/String;Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","endDTD(Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","ensureAttributeDeclCapacity(I)V","ensureElementDeclCapacity(I)V","getAttributeDecl(ILcom/sun/xml/internal/stream/dtd/nonvalidating/XMLAttributeDecl;)Z","getAttributeDeclIndex(ILjava/lang/String;)I","getContentSpecType(I)S","getElementDeclIndex(Lcom/sun/org/apache/xerces/internal/xni/QName;)I","getElementDeclIndex(Ljava/lang/String;)I","getFirstAttributeDeclIndex(I)I","getNextAttributeDeclIndex(I)I","normalizeDefaultAttrValue(Lcom/sun/org/apache/xerces/internal/xni/XMLString;)Z","notationDecl(Ljava/lang/String;Lcom/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V","resize([[II)[[I","resize([[Lcom/sun/org/apache/xerces/internal/xni/QName;I)[[Lcom/sun/org/apache/xerces/internal/xni/QName;","resize([[Ljava/lang/String;I)[[Ljava/lang/String;","resize([[SI)[[S","resize([[[Ljava/lang/String;I)[[[Ljava/lang/String;","setAttributeDecl(IILcom/sun/xml/internal/stream/dtd/nonvalidating/XMLAttributeDecl;)V","setElementDecl(ILcom/sun/xml/internal/stream/dtd/nonvalidating/XMLElementDecl;)V","startDTD(Lcom/sun/org/apache/xerces/internal/xni/XMLLocator;Lcom/sun/org/apache/xerces/internal/xni/Augmentations;)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLAttributeDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/nonvalidating/XMLAttributeDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setValues(Lcom/sun/org/apache/xerces/internal/xni/QName;Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLSimpleType;Z)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLElementDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/nonvalidating/XMLElementDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLNotationDecl;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/nonvalidating/XMLNotationDecl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setValues(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLSimpleType;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/dtd/nonvalidating/XMLSimpleType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","setValues(Lcom/sun/xml/internal/stream/dtd/nonvalidating/XMLSimpleType;)V","setValues(SLjava/lang/String;[Ljava/lang/String;ZSLjava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/util/BufferAllocator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/util/BufferAllocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getByteBuffer(I)[B","getCharBuffer(I)[C","returnByteBuffer([B)V","returnCharBuffer([C)V"]
  }
,
  {
    "className": "Lcom/sun/xml/internal/stream/util/ThreadLocalBufferAllocator;",
    "module": "java.xml",
    "source": "/java.xml/com/sun/xml/internal/stream/util/ThreadLocalBufferAllocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","getBufferAllocator()Lcom/sun/xml/internal/stream/util/BufferAllocator;"]
  }
,
  {
    "className": "Ljava/awt/AWTError;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/AWTError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/awt/AWTEvent$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/AWTEvent$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/AWTAccessor$AWTEventAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/AWTEvent;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/AWTEvent.class",
    "super": "Ljava/util/EventObject;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.Toolkit.loaded",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Ljava/awt/Color;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Color.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/Paint;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.Toolkit.loaded",
    "invokedMethods": ["<clinit>()V","<init>(I)V","<init>(III)V","<init>(IIII)V","<init>(IZ)V","equals(Ljava/lang/Object;)Z","getBlue()I","getColorComponents(Ljava/awt/color/ColorSpace;[F)[F","getGreen()I","getRGB()I","getRed()I","hashCode()I","testColorValueRange(IIII)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/Component$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Component$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/AWTAccessor$ComponentAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Component$AWTTreeLock;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Component$AWTTreeLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Component$DummyRequestFocusController;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Component$DummyRequestFocusController.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/RequestFocusController;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Component;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Component.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/image/ImageObserver;","Ljava/awt/MenuContainer;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.util.logging.PlatformLogger.loggers",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Ljava/awt/EventQueue$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/EventQueue$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()V"]
  }
,
  {
    "className": "Ljava/awt/EventQueue$2;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/EventQueue$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/AWTAccessor$EventQueueAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/EventQueue$3;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/EventQueue$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/EventQueue;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/EventQueue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.awt.AWTAccessor.eventQueueAccessor",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Ljava/awt/GraphicsEnvironment$LocalGE;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/GraphicsEnvironment$LocalGE.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.security.AccessController.doPrivileged(PrivilegedAction)",
    "invokedMethods": ["<clinit>()V","createGE()Ljava/awt/GraphicsEnvironment;"]
  }
,
  {
    "className": "Ljava/awt/GraphicsEnvironment;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/GraphicsEnvironment.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLocalGraphicsEnvironment()Ljava/awt/GraphicsEnvironment;","isHeadless()Z"]
  }
,
  {
    "className": "Ljava/awt/Image$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Image$1.class",
    "super": "Lsun/awt/image/SurfaceManager$ImageAccessor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Image;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Image.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.awt.image.SurfaceManager.imgaccessor",
    "invokedMethods": ["<clinit>()V","<init>()V","getScaledInstance(III)Ljava/awt/Image;"]
  }
,
  {
    "className": "Ljava/awt/ImageCapabilities;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/ImageCapabilities.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/MenuContainer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/MenuContainer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/Paint;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Paint.class",
    "super": "null",
    "interfaces": ["Ljava/awt/Transparency;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/Point;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Point.class",
    "super": "Ljava/awt/geom/Point2D;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(II)V","equals(Ljava/lang/Object;)Z","getX()D","getY()D","move(II)V","setLocation(II)V","setLocation(Ljava/awt/Point;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/Queue;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Queue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Rectangle;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Rectangle.class",
    "super": "Ljava/awt/geom/Rectangle2D;",
    "interfaces": ["Ljava/awt/Shape;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.Toolkit.loaded",
    "invokedMethods": ["<clinit>()V","<init>(IIII)V","equals(Ljava/lang/Object;)Z","getHeight()D","getLocation()Ljava/awt/Point;","getWidth()D","getX()D","getY()D","intersection(Ljava/awt/Rectangle;)Ljava/awt/Rectangle;","isEmpty()Z","move(II)V","reshape(IIII)V","setBounds(IIII)V","setBounds(Ljava/awt/Rectangle;)V","setLocation(II)V","setLocation(Ljava/awt/Point;)V","toString()Ljava/lang/String;","translate(II)V"]
  }
,
  {
    "className": "Ljava/awt/Shape;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Shape.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/Toolkit$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Properties;)V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/Toolkit$2;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/awt/Toolkit$3;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/awt/Toolkit$4;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/AWTAccessor$ToolkitAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/awt/Toolkit$5;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/awt/Toolkit$DesktopPropertyChangeSupport;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit$DesktopPropertyChangeSupport.class",
    "super": "Ljava/beans/PropertyChangeSupport;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/awt/Toolkit;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Toolkit.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","createPropertyChangeSupport(Ljava/awt/Toolkit;)Ljava/beans/PropertyChangeSupport;","getDefaultToolkit()Ljava/awt/Toolkit;","initAssistiveTechnologies()V","initIDs()V","loadLibraries()V"]
  }
,
  {
    "className": "Ljava/awt/Transparency;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/Transparency.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/color/CMMException;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/CMMException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/awt/color/ColorSpace;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ColorSpace.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","getInstance(I)Ljava/awt/color/ColorSpace;","getMaxValue(I)F","getMinValue(I)F","getNumComponents()I","getType()I","isCS_sRGB()Z"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_ColorSpace;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_ColorSpace.class",
    "super": "Ljava/awt/color/ColorSpace;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/color/ICC_Profile;)V","fromCIEXYZ([F)[F","getMaxValue(I)F","getMinValue(I)F","getProfile()Ljava/awt/color/ICC_Profile;","setComponentScaling()V","setMinMax()V","toCIEXYZ([F)[F","toRGB([F)[F"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_Profile$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_Profile$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/cmm/ProfileActivator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/color/ICC_Profile;)V","activate()V"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_Profile$2;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_Profile$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/awt/color/ICC_Profile;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_Profile$3;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_Profile$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_Profile$4;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_Profile$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_Profile;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_Profile.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/java2d/cmm/Profile;)V","<init>(Lsun/java2d/cmm/ProfileDeferralInfo;)V","activateDeferredProfile()V","getColorSpaceType()I","getColorSpaceType(Lsun/java2d/cmm/Profile;)I","getData(I)[B","getData(Lsun/java2d/cmm/Profile;I)[B","getDeferredInstance(Lsun/java2d/cmm/ProfileDeferralInfo;)Ljava/awt/color/ICC_Profile;","getInstance(I)Ljava/awt/color/ICC_Profile;","getInstance(Ljava/io/InputStream;)Ljava/awt/color/ICC_Profile;","getInstance(Ljava/lang/String;)Ljava/awt/color/ICC_Profile;","getInstance([B)Ljava/awt/color/ICC_Profile;","getNumComponents()I","getProfileClass()I","getProfileDataFromStream(Ljava/io/InputStream;)[B","getProfileFile(Ljava/lang/String;)Ljava/io/File;","getStandardProfile(Ljava/lang/String;)Ljava/awt/color/ICC_Profile;","getStandardProfileInputStream(Ljava/lang/String;)Ljava/io/InputStream;","iccCStoJCS(I)I","intFromBigEndian([BI)I","isChildOf(Ljava/io/File;Ljava/lang/String;)Z","standardProfileExists(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_ProfileGray;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_ProfileGray.class",
    "super": "Ljava/awt/color/ICC_Profile;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/java2d/cmm/Profile;)V","<init>(Lsun/java2d/cmm/ProfileDeferralInfo;)V"]
  }
,
  {
    "className": "Ljava/awt/color/ICC_ProfileRGB;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ICC_ProfileRGB.class",
    "super": "Ljava/awt/color/ICC_Profile;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/java2d/cmm/Profile;)V","<init>(Lsun/java2d/cmm/ProfileDeferralInfo;)V"]
  }
,
  {
    "className": "Ljava/awt/color/ProfileDataException;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/color/ProfileDataException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/awt/geom/Point2D;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/geom/Point2D.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/awt/geom/Rectangle2D;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/geom/Rectangle2D.class",
    "super": "Ljava/awt/geom/RectangularShape;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/awt/geom/RectangularShape;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/geom/RectangularShape.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/Shape;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/image/AreaAveragingScaleFilter;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/AreaAveragingScaleFilter.class",
    "super": "Ljava/awt/image/ReplicateScaleFilter;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.image.ColorModel.RGBdefault",
    "invokedMethods": ["<clinit>()V","<init>(II)V"]
  }
,
  {
    "className": "Ljava/awt/image/BufferedImage$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/BufferedImage$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/image/BufferedImage;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/BufferedImage.class",
    "super": "Ljava/awt/Image;",
    "interfaces": ["Ljava/awt/image/WritableRenderedImage;","Ljava/awt/Transparency;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(III)V","<init>(Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;ZLjava/util/Hashtable;)V","coerceData(Z)V","createGraphics()Ljava/awt/Graphics2D;","getColorModel()Ljava/awt/image/ColorModel;","getGraphics()Ljava/awt/Graphics;","getHeight()I","getRGB(II)I","getRaster()Ljava/awt/image/WritableRaster;","getSampleModel()Ljava/awt/image/SampleModel;","getSource()Ljava/awt/image/ImageProducer;","getSubimage(IIII)Ljava/awt/image/BufferedImage;","getWidth()I","getWritableTile(II)Ljava/awt/image/WritableRaster;","initIDs()V","isStandard(Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/image/BufferedImageOp;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/BufferedImageOp.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/ColorConvertOp;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ColorConvertOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/image/BufferedImageOp;","Ljava/awt/image/RasterOp;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.java2d.cmm.ProfileDeferralMgr.deferring",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/color/ColorSpace;Ljava/awt/color/ColorSpace;Ljava/awt/RenderingHints;)V","getMinMaxValsFromColorSpaces(Ljava/awt/color/ColorSpace;Ljava/awt/color/ColorSpace;)V"]
  }
,
  {
    "className": "Ljava/awt/image/ColorModel$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ColorModel$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/awt/image/ColorModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ColorModel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/Transparency;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.security.AccessController.doPrivileged(PrivilegedAction)",
    "invokedMethods": ["<clinit>()V","<init>(I[ILjava/awt/color/ColorSpace;ZZII)V","coerceData(Ljava/awt/image/WritableRaster;Z)Ljava/awt/image/ColorModel;","getAlpha(Ljava/lang/Object;)I","getBlue(Ljava/lang/Object;)I","getColorSpace()Ljava/awt/color/ColorSpace;","getComponentSize()[I","getComponentSize(I)I","getDefaultTransferType(I)I","getGray16TosRGB8LUT(Ljava/awt/color/ICC_ColorSpace;)[B","getGray8TosRGB8LUT(Ljava/awt/color/ICC_ColorSpace;)[B","getGreen(Ljava/lang/Object;)I","getLinearGray16ToOtherGray16LUT(Ljava/awt/color/ICC_ColorSpace;)[S","getLinearGray16ToOtherGray8LUT(Ljava/awt/color/ICC_ColorSpace;)[B","getLinearRGB16TosRGB8LUT()[B","getLinearRGB8TosRGB8LUT()[B","getNormalizedComponents([II[FI)[F","getNumComponents()I","getPixelSize()I","getRGB(Ljava/lang/Object;)I","getRGBdefault()Ljava/awt/image/ColorModel;","getRed(Ljava/lang/Object;)I","getTransferType()I","getTransparency()I","getsRGB8ToLinearRGB16LUT()[S","getsRGB8ToLinearRGB8LUT()[B","hasAlpha()Z","initIDs()V","isAlphaPremultiplied()Z","isLinearGRAYspace(Ljava/awt/color/ColorSpace;)Z","isLinearRGBspace(Ljava/awt/color/ColorSpace;)Z","loadLibraries()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/image/ComponentColorModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ComponentColorModel.class",
    "super": "Ljava/awt/image/ColorModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/color/ColorSpace;ZZII)V","<init>(Ljava/awt/color/ColorSpace;[IZZII)V","bitsArrayHelper([IILjava/awt/color/ColorSpace;Z)[I","bitsHelper(ILjava/awt/color/ColorSpace;Z)I","coerceData(Ljava/awt/image/WritableRaster;Z)Ljava/awt/image/ColorModel;","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","equals(Ljava/lang/Object;)Z","extractComponent(Ljava/lang/Object;II)I","getAlpha(Ljava/lang/Object;)I","getBlue(Ljava/lang/Object;)I","getGreen(Ljava/lang/Object;)I","getNormalizedComponents(Ljava/lang/Object;[FI)[F","getRGB(Ljava/lang/Object;)I","getRGBComponent(Ljava/lang/Object;I)I","getRed(Ljava/lang/Object;)I","hashCode()I","initScale()V","isCompatibleRaster(Ljava/awt/image/Raster;)Z","isCompatibleSampleModel(Ljava/awt/image/SampleModel;)Z","setupLUTs()V"]
  }
,
  {
    "className": "Ljava/awt/image/ComponentSampleModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ComponentSampleModel.class",
    "super": "Ljava/awt/image/SampleModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIIII[I)V","<init>(IIIII[I[I)V","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","createDataBuffer()Ljava/awt/image/DataBuffer;","createSubsetSampleModel([I)Ljava/awt/image/SampleModel;","equals(Ljava/lang/Object;)Z","getBandOffsets()[I","getBankIndices()[I","getBufferSize()I","getDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)Ljava/lang/Object;","getNumDataElements()I","getOffset(II)I","getPixel(II[ILjava/awt/image/DataBuffer;)[I","getPixelStride()I","getPixels(IIII[ILjava/awt/image/DataBuffer;)[I","getSampleDouble(IIILjava/awt/image/DataBuffer;)D","getSampleFloat(IIILjava/awt/image/DataBuffer;)F","getSampleSize()[I","getSampleSize(I)I","getScanlineStride()I","hashCode()I","orderBands([II)[I","setDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)V","setPixel(II[ILjava/awt/image/DataBuffer;)V","setPixels(IIII[ILjava/awt/image/DataBuffer;)V","setSample(IIIDLjava/awt/image/DataBuffer;)V","setSample(IIIFLjava/awt/image/DataBuffer;)V","setSample(IIIILjava/awt/image/DataBuffer;)V","verify()V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBuffer$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBuffer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/awt/image/SunWritableRaster$DataStealer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getData(Ljava/awt/image/DataBufferByte;I)[B","getData(Ljava/awt/image/DataBufferInt;I)[I","getData(Ljava/awt/image/DataBufferUShort;I)[S","getTrackable(Ljava/awt/image/DataBuffer;)Lsun/java2d/StateTrackableDelegate;"]
  }
,
  {
    "className": "Ljava/awt/image/DataBuffer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.awt.image.SunWritableRaster.stealer",
    "invokedMethods": ["<clinit>()V","<init>(Lsun/java2d/StateTrackable$State;II)V","<init>(Lsun/java2d/StateTrackable$State;III)V","getDataType()I","getDataTypeSize(I)I","getElemDouble(II)D","getElemFloat(II)F","getNumBanks()I","getOffset()I","setElemDouble(IID)V","setElemFloat(IIF)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferByte;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferByte.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(II)V","getData()[B","getElem(I)I","getElem(II)I","setElem(II)V","setElem(III)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferDouble;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferDouble.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","getData()[D","getElem(I)I","getElem(II)I","getElemDouble(II)D","getElemFloat(II)F","setElem(II)V","setElem(III)V","setElemDouble(IID)V","setElemFloat(IIF)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferFloat;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferFloat.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","getData()[F","getElem(I)I","getElem(II)I","getElemDouble(II)D","getElemFloat(II)F","setElem(II)V","setElem(III)V","setElemDouble(IID)V","setElemFloat(IIF)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferInt;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferInt.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(II)V","getData()[I","getElem(I)I","getElem(II)I","setElem(II)V","setElem(III)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferShort;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferShort.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","getData()[S","getElem(I)I","getElem(II)I","setElem(II)V","setElem(III)V"]
  }
,
  {
    "className": "Ljava/awt/image/DataBufferUShort;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DataBufferUShort.class",
    "super": "Ljava/awt/image/DataBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(II)V","getData()[S","getElem(I)I","getElem(II)I","setElem(II)V","setElem(III)V"]
  }
,
  {
    "className": "Ljava/awt/image/DirectColorModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/DirectColorModel.class",
    "super": "Ljava/awt/image/PackedColorModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIII)V","<init>(IIIII)V","<init>(Ljava/awt/color/ColorSpace;IIIIIZI)V","coerceData(Ljava/awt/image/WritableRaster;Z)Ljava/awt/image/ColorModel;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","getAlpha(I)I","getAlphaMask()I","getBlue(I)I","getBlueMask()I","getComponents(I[II)[I","getDefaultRGBComponents(I)[F","getGreen(I)I","getGreenMask()I","getRGB(I)I","getRGB(Ljava/lang/Object;)I","getRed(I)I","getRedMask()I","getsRGBComponentFromLinearRGB(II)I","getsRGBComponentFromsRGB(II)I","isCompatibleRaster(Ljava/awt/image/Raster;)Z","setFields()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/image/FilteredImageSource;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/FilteredImageSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/image/ImageProducer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/image/ImageProducer;Ljava/awt/image/ImageFilter;)V"]
  }
,
  {
    "className": "Ljava/awt/image/ImageConsumer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ImageConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/ImageFilter;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ImageFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/image/ImageConsumer;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/awt/image/ImageObserver;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ImageObserver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/ImageProducer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ImageProducer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/IndexColorModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/IndexColorModel.class",
    "super": "Ljava/awt/image/ColorModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(II[B[B[B)V","<init>(II[B[B[BI)V","<init>(II[B[B[B[B)V","<init>(II[IIZII)V","calcRealMapSize(II)I","calculatePixelMask()V","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","equals(Ljava/lang/Object;)Z","getAlpha(I)I","getAlphas([B)V","getBlue(I)I","getBlues([B)V","getComponentSize()[I","getGreen(I)I","getGreens([B)V","getMapSize()I","getRed(I)I","getReds([B)V","getTransparency()I","hashCode()I","initIDs()V","isCompatibleRaster(Ljava/awt/image/Raster;)Z","isCompatibleSampleModel(Ljava/awt/image/SampleModel;)Z","setRGBs(I[B[B[B[B)V","setRGBs(I[IIZ)V","setTransparency(I)V","setTransparentPixel(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/awt/image/MultiPixelPackedSampleModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/MultiPixelPackedSampleModel.class",
    "super": "Ljava/awt/image/SampleModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIII)V","<init>(IIIIII)V","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","createDataBuffer()Ljava/awt/image/DataBuffer;","createSubsetSampleModel([I)Ljava/awt/image/SampleModel;","equals(Ljava/lang/Object;)Z","getBitOffset(I)I","getDataBitOffset()I","getDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)Ljava/lang/Object;","getNumDataElements()I","getOffset(II)I","getPixel(II[ILjava/awt/image/DataBuffer;)[I","getPixelBitStride()I","getSample(IIILjava/awt/image/DataBuffer;)I","getSampleSize()[I","getSampleSize(I)I","getScanlineStride()I","getTransferType()I","hashCode()I","setDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)V","setPixel(II[ILjava/awt/image/DataBuffer;)V","setSample(IIIILjava/awt/image/DataBuffer;)V"]
  }
,
  {
    "className": "Ljava/awt/image/PackedColorModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/PackedColorModel.class",
    "super": "Ljava/awt/image/ColorModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/color/ColorSpace;IIIIIZII)V","DecomposeMask(IILjava/lang/String;)V","countBits(I)I","createBitsArray(IIII)[I","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","equals(Ljava/lang/Object;)Z","getMask(I)I","hashCode()I","isCompatibleSampleModel(Ljava/awt/image/SampleModel;)Z"]
  }
,
  {
    "className": "Ljava/awt/image/PixelInterleavedSampleModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/PixelInterleavedSampleModel.class",
    "super": "Ljava/awt/image/ComponentSampleModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIIII[I)V","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","createSubsetSampleModel([I)Ljava/awt/image/SampleModel;","hashCode()I"]
  }
,
  {
    "className": "Ljava/awt/image/Raster;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/Raster.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.image.ColorModel.loaded",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Rectangle;Ljava/awt/Point;Ljava/awt/image/Raster;)V","createChild(IIIIII[I)Ljava/awt/image/Raster;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","createInterleavedRaster(IIIII[ILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createInterleavedRaster(IIIILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createInterleavedRaster(Ljava/awt/image/DataBuffer;IIII[ILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createPackedRaster(IIIIILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createPackedRaster(III[ILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createPackedRaster(Ljava/awt/image/DataBuffer;IIILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createPackedRaster(Ljava/awt/image/DataBuffer;III[ILjava/awt/Point;)Ljava/awt/image/WritableRaster;","createWritableRaster(Ljava/awt/image/SampleModel;Ljava/awt/Point;)Ljava/awt/image/WritableRaster;","createWritableRaster(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Point;)Ljava/awt/image/WritableRaster;","getBounds()Ljava/awt/Rectangle;","getDataBuffer()Ljava/awt/image/DataBuffer;","getDataElements(IILjava/lang/Object;)Ljava/lang/Object;","getHeight()I","getMinX()I","getMinY()I","getNumBands()I","getNumDataElements()I","getPixel(II[I)[I","getPixels(IIII[D)[D","getPixels(IIII[F)[F","getPixels(IIII[I)[I","getSampleModel()Ljava/awt/image/SampleModel;","getSampleModelTranslateX()I","getSampleModelTranslateY()I","getTransferType()I","getWidth()I","initIDs()V"]
  }
,
  {
    "className": "Ljava/awt/image/RasterFormatException;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/RasterFormatException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/awt/image/RasterOp;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/RasterOp.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/RenderedImage;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/RenderedImage.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/image/ReplicateScaleFilter;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/ReplicateScaleFilter.class",
    "super": "Ljava/awt/image/ImageFilter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V"]
  }
,
  {
    "className": "Ljava/awt/image/SampleModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/SampleModel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.image.ColorModel.loaded",
    "invokedMethods": ["<clinit>()V","<init>(IIII)V","getDataType()I","getHeight()I","getNumBands()I","getPixels(IIII[DLjava/awt/image/DataBuffer;)[D","getPixels(IIII[FLjava/awt/image/DataBuffer;)[F","getPixels(IIII[ILjava/awt/image/DataBuffer;)[I","getSampleDouble(IIILjava/awt/image/DataBuffer;)D","getSampleFloat(IIILjava/awt/image/DataBuffer;)F","getTransferType()I","getWidth()I","initIDs()V","setDataElements(IIIILjava/lang/Object;Ljava/awt/image/DataBuffer;)V","setPixels(IIII[DLjava/awt/image/DataBuffer;)V","setPixels(IIII[FLjava/awt/image/DataBuffer;)V","setPixels(IIII[ILjava/awt/image/DataBuffer;)V","setSample(IIIDLjava/awt/image/DataBuffer;)V","setSample(IIIFLjava/awt/image/DataBuffer;)V"]
  }
,
  {
    "className": "Ljava/awt/image/SinglePixelPackedSampleModel;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/SinglePixelPackedSampleModel.class",
    "super": "Ljava/awt/image/SampleModel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(IIII[I)V","<init>(III[I)V","createCompatibleSampleModel(II)Ljava/awt/image/SampleModel;","createDataBuffer()Ljava/awt/image/DataBuffer;","createSubsetSampleModel([I)Ljava/awt/image/SampleModel;","equals(Ljava/lang/Object;)Z","getBitMasks()[I","getBitOffsets()[I","getBufferSize()J","getDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)Ljava/lang/Object;","getNumDataElements()I","getOffset(II)I","getPixel(II[ILjava/awt/image/DataBuffer;)[I","getPixels(IIII[ILjava/awt/image/DataBuffer;)[I","getSample(IIILjava/awt/image/DataBuffer;)I","getSampleSize()[I","getSampleSize(I)I","getScanlineStride()I","hashCode()I","initIDs()V","setDataElements(IILjava/lang/Object;Ljava/awt/image/DataBuffer;)V","setPixel(II[ILjava/awt/image/DataBuffer;)V","setPixels(IIII[ILjava/awt/image/DataBuffer;)V","setSample(IIIILjava/awt/image/DataBuffer;)V"]
  }
,
  {
    "className": "Ljava/awt/image/WritableRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/WritableRaster.class",
    "super": "Ljava/awt/image/Raster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Rectangle;Ljava/awt/Point;Ljava/awt/image/WritableRaster;)V","createWritableChild(IIIIII[I)Ljava/awt/image/WritableRaster;","setDataElements(IIIILjava/lang/Object;)V","setDataElements(IILjava/lang/Object;)V","setPixel(II[I)V","setPixels(IIII[D)V","setPixels(IIII[F)V","setPixels(IIII[I)V","setRect(IILjava/awt/image/Raster;)V","setRect(Ljava/awt/image/Raster;)V","setSample(IIII)V"]
  }
,
  {
    "className": "Ljava/awt/image/WritableRenderedImage;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/image/WritableRenderedImage.class",
    "super": "null",
    "interfaces": ["Ljava/awt/image/RenderedImage;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/awt/peer/KeyboardFocusManagerPeer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/awt/peer/KeyboardFocusManagerPeer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/BeanDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/BeanDescriptor.class",
    "super": "Ljava/beans/FeatureDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;)V","appendTo(Ljava/lang/StringBuilder;)V","getBeanClass()Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljava/beans/BeanInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/BeanInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/BeanProperty;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/BeanProperty.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/ChangeListenerMap;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/ChangeListenerMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/beans/ConstructorProperties;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/ConstructorProperties.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/Customizer;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/Customizer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/EventSetDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/EventSetDescriptor.class",
    "super": "Ljava/beans/FeatureDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/EventSetDescriptor;Ljava/beans/EventSetDescriptor;)V","<init>(Ljava/lang/String;Lcom/sun/beans/introspect/EventSetInfo;[Ljava/lang/reflect/Method;)V","appendTo(Ljava/lang/StringBuilder;)V","getMethod(Ljava/beans/MethodDescriptor;)Ljava/lang/reflect/Method;","setAddListenerMethod(Ljava/lang/reflect/Method;)V","setGetListenerMethod(Ljava/lang/reflect/Method;)V","setListenerMethods([Ljava/lang/reflect/Method;)V","setListenerType(Ljava/lang/Class;)V","setRemoveListenerMethod(Ljava/lang/reflect/Method;)V","setUnicast(Z)V"]
  }
,
  {
    "className": "Ljava/beans/FeatureDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/FeatureDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/beans/FeatureDescriptor;)V","<init>(Ljava/beans/FeatureDescriptor;Ljava/beans/FeatureDescriptor;)V","addTable(Ljava/util/Hashtable;)V","appendTo(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V","appendTo(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/ref/Reference;)V","appendTo(Ljava/lang/StringBuilder;Ljava/lang/String;Z)V","getClass0()Ljava/lang/Class;","getName()Ljava/lang/String;","getParameterTypes(Ljava/lang/Class;Ljava/lang/reflect/Method;)[Ljava/lang/Class;","getReturnType(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/Class;","getSoftReference(Ljava/lang/Object;)Ljava/lang/ref/Reference;","getTable()Ljava/util/Hashtable;","getValue(Ljava/lang/String;)Ljava/lang/Object;","getWeakReference(Ljava/lang/Object;)Ljava/lang/ref/Reference;","setClass0(Ljava/lang/Class;)V","setExpert(Z)V","setHidden(Z)V","setName(Ljava/lang/String;)V","setPreferred(Z)V","setShortDescription(Ljava/lang/String;)V","setTransient(Ljava/beans/Transient;)V","setValue(Ljava/lang/String;Ljava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/beans/GenericBeanInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/GenericBeanInfo.class",
    "super": "Ljava/beans/SimpleBeanInfo;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/BeanDescriptor;[Ljava/beans/EventSetDescriptor;I[Ljava/beans/PropertyDescriptor;I[Ljava/beans/MethodDescriptor;Ljava/beans/BeanInfo;)V","getBeanDescriptor()Ljava/beans/BeanDescriptor;","getDefaultEventIndex()I","getDefaultPropertyIndex()I","getEventSetDescriptors()[Ljava/beans/EventSetDescriptor;","getMethodDescriptors()[Ljava/beans/MethodDescriptor;","getPropertyDescriptors()[Ljava/beans/PropertyDescriptor;"]
  }
,
  {
    "className": "Ljava/beans/IndexedPropertyDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/IndexedPropertyDescriptor.class",
    "super": "Ljava/beans/PropertyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/IndexedPropertyDescriptor;)V","<init>(Ljava/beans/PropertyDescriptor;Ljava/beans/PropertyDescriptor;)V","<init>(Ljava/util/Map$Entry;Z)V","appendTo(Ljava/lang/StringBuilder;)V","equals(Ljava/lang/Object;)Z","findIndexedPropertyType(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljava/lang/Class;","getIndexedPropertyType()Ljava/lang/Class;","getIndexedPropertyType0()Ljava/lang/Class;","getIndexedReadMethod()Ljava/lang/reflect/Method;","getIndexedWriteMethod()Ljava/lang/reflect/Method;","hashCode()I","setIndexedPropertyType(Ljava/lang/Class;)V","setIndexedReadMethod(Ljava/lang/reflect/Method;)V","setIndexedReadMethod0(Ljava/lang/reflect/Method;)V","setIndexedWriteMethod(Ljava/lang/reflect/Method;)V","setIndexedWriteMethod0(Ljava/lang/reflect/Method;)V","updateGenericsFor(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljava/beans/IntrospectionException;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/IntrospectionException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/beans/Introspector$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/Introspector$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaBeansAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConstructorPropertiesValue(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/beans/Introspector;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/Introspector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.internal.misc.SharedSecrets.javaBeansAccess",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;Ljava/lang/Class;I)V","addEvent(Ljava/beans/EventSetDescriptor;)V","addMethod(Ljava/beans/MethodDescriptor;)V","addPropertyDescriptor(Ljava/beans/PropertyDescriptor;)V","addPropertyDescriptors([Ljava/beans/PropertyDescriptor;)V","decapitalize(Ljava/lang/String;)Ljava/lang/String;","findCustomizerClass(Ljava/lang/Class;)Ljava/lang/Class;","findExplicitBeanInfo(Ljava/lang/Class;)Ljava/beans/BeanInfo;","findMethod(Ljava/lang/Class;Ljava/lang/String;I)Ljava/lang/reflect/Method;","findMethod(Ljava/lang/Class;Ljava/lang/String;I[Ljava/lang/Class;)Ljava/lang/reflect/Method;","getBeanInfo()Ljava/beans/BeanInfo;","getBeanInfo(Ljava/lang/Class;)Ljava/beans/BeanInfo;","getBeanInfo(Ljava/lang/Class;I)Ljava/beans/BeanInfo;","getBeanInfo(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/beans/BeanInfo;","getPropertyDescriptors(Ljava/beans/BeanInfo;)[Ljava/beans/PropertyDescriptor;","getTargetBeanDescriptor()Ljava/beans/BeanDescriptor;","getTargetDefaultEventIndex()I","getTargetDefaultPropertyIndex()I","getTargetEventInfo()[Ljava/beans/EventSetDescriptor;","getTargetMethodInfo()[Ljava/beans/MethodDescriptor;","getTargetPropertyInfo()[Ljava/beans/PropertyDescriptor;","internalFindMethod(Ljava/lang/Class;Ljava/lang/String;I[Ljava/lang/Class;)Ljava/lang/reflect/Method;","isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z","isEventHandler(Ljava/lang/reflect/Method;)Z","isSubclass(Ljava/lang/Class;Ljava/lang/Class;)Z","makeQualifiedMethodName(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;","mergePropertyDescriptor(Ljava/beans/IndexedPropertyDescriptor;Ljava/beans/IndexedPropertyDescriptor;)Ljava/beans/IndexedPropertyDescriptor;","mergePropertyDescriptor(Ljava/beans/IndexedPropertyDescriptor;Ljava/beans/PropertyDescriptor;)Ljava/beans/PropertyDescriptor;","mergePropertyDescriptor(Ljava/beans/PropertyDescriptor;Ljava/beans/PropertyDescriptor;)Ljava/beans/PropertyDescriptor;","mergePropertyWithIndexedProperty(Ljava/beans/PropertyDescriptor;Ljava/beans/IndexedPropertyDescriptor;)Ljava/beans/PropertyDescriptor;","processPropertyDescriptors()V"]
  }
,
  {
    "className": "Ljava/beans/JavaBean;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/JavaBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/MethodDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/MethodDescriptor.class",
    "super": "Ljava/beans/FeatureDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/MethodDescriptor;Ljava/beans/MethodDescriptor;)V","<init>(Ljava/lang/reflect/Method;)V","<init>(Ljava/lang/reflect/Method;[Ljava/beans/ParameterDescriptor;)V","appendTo(Ljava/lang/StringBuilder;)V","getMethod()Ljava/lang/reflect/Method;","getParamNames()[Ljava/lang/String;","getParams()[Ljava/lang/Class;","resolve(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","setMethod(Ljava/lang/reflect/Method;)V","setParams([Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljava/beans/MethodRef;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/MethodRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","find(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;","get()Ljava/lang/reflect/Method;","isSet()Z","set(Ljava/lang/reflect/Method;)V"]
  }
,
  {
    "className": "Ljava/beans/NameGenerator;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/NameGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["capitalize(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/beans/ParameterDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/ParameterDescriptor.class",
    "super": "Ljava/beans/FeatureDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/PropertyChangeEvent;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyChangeEvent.class",
    "super": "Ljava/util/EventObject;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","appendTo(Ljava/lang/StringBuilder;)V","getNewValue()Ljava/lang/Object;","getOldValue()Ljava/lang/Object;","getPropagationId()Ljava/lang/Object;","getPropertyName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/beans/PropertyChangeListener;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyChangeListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/PropertyChangeSupport$PropertyChangeListenerMap;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyChangeSupport$PropertyChangeListenerMap.class",
    "super": "Ljava/beans/ChangeListenerMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/beans/PropertyChangeSupport;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyChangeSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Integer.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/beans/PropertyDescriptor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyDescriptor.class",
    "super": "Ljava/beans/FeatureDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/PropertyDescriptor;)V","<init>(Ljava/beans/PropertyDescriptor;Ljava/beans/PropertyDescriptor;)V","<init>(Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V","<init>(Ljava/util/Map$Entry;Z)V","appendTo(Ljava/lang/StringBuilder;)V","compareMethods(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","equals(Ljava/lang/Object;)Z","findPropertyType(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljava/lang/Class;","getBaseName()Ljava/lang/String;","getPropertyEditorClass()Ljava/lang/Class;","getPropertyType()Ljava/lang/Class;","getPropertyType0()Ljava/lang/Class;","getReadMethod()Ljava/lang/reflect/Method;","getWriteMethod()Ljava/lang/reflect/Method;","hashCode()I","isAssignable(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","isBound()Z","isConstrained()Z","setBound(Z)V","setClass0(Ljava/lang/Class;)V","setConstrained(Z)V","setPropertyEditorClass(Ljava/lang/Class;)V","setPropertyType(Ljava/lang/Class;)V","setReadMethod(Ljava/lang/reflect/Method;)V","setReadMethod0(Ljava/lang/reflect/Method;)V","setWriteMethod(Ljava/lang/reflect/Method;)V","setWriteMethod0(Ljava/lang/reflect/Method;)V","updateGenericsFor(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljava/beans/PropertyEditor;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyEditor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/PropertyEditorSupport;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyEditorSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/beans/PropertyEditor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","firePropertyChange()V","getValue()Ljava/lang/Object;","setSource(Ljava/lang/Object;)V","setValue(Ljava/lang/Object;)V","unsafeClone(Ljava/util/Vector;)Ljava/util/Vector;"]
  }
,
  {
    "className": "Ljava/beans/PropertyVetoException;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/PropertyVetoException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/SimpleBeanInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/SimpleBeanInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/beans/BeanInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAdditionalBeanInfo()[Ljava/beans/BeanInfo;"]
  }
,
  {
    "className": "Ljava/beans/ThreadGroupContext$1;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/ThreadGroupContext$1.class",
    "super": "Ljava/beans/WeakIdentityMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["create(Ljava/lang/Object;)Ljava/beans/ThreadGroupContext;","create(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/beans/ThreadGroupContext;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/ThreadGroupContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBeanInfo(Ljava/lang/Class;)Ljava/beans/BeanInfo;","getBeanInfoFinder()Lcom/sun/beans/finder/BeanInfoFinder;","getContext()Ljava/beans/ThreadGroupContext;","putBeanInfo(Ljava/lang/Class;Ljava/beans/BeanInfo;)Ljava/beans/BeanInfo;"]
  }
,
  {
    "className": "Ljava/beans/Transient;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/Transient.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/beans/WeakIdentityMap$Entry;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/WeakIdentityMap$Entry.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/beans/WeakIdentityMap$Entry;)V","isMatched(Ljava/lang/Object;I)Z"]
  }
,
  {
    "className": "Ljava/beans/WeakIdentityMap;",
    "module": "java.desktop",
    "source": "/java.desktop/java/beans/WeakIdentityMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/lang/Object;)Ljava/lang/Object;","getIndex([Ljava/beans/WeakIdentityMap$Entry;I)I","newTable(I)[Ljava/beans/WeakIdentityMap$Entry;","removeStaleEntries()V","transfer([Ljava/beans/WeakIdentityMap$Entry;[Ljava/beans/WeakIdentityMap$Entry;)V"]
  }
,
  {
    "className": "Ljava/dyn/Coroutine$StealResult;",
    "module": "java.base",
    "source": "/java.base/java/dyn/Coroutine$StealResult.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/dyn/Coroutine;",
    "module": "java.base",
    "source": "/java.base/java/dyn/Coroutine.class",
    "super": "Ljava/dyn/CoroutineBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(J)V","registerNatives()V","setWispTask(ILjava/lang/Object;Ljava/lang/Object;)V","setWispTask(JILjava/lang/Object;Ljava/lang/Object;)V","steal(Z)Ljava/dyn/Coroutine$StealResult;"]
  }
,
  {
    "className": "Ljava/dyn/CoroutineBase;",
    "module": "java.base",
    "source": "/java.base/java/dyn/CoroutineBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/dyn/CoroutineSupport;",
    "module": "java.base",
    "source": "/java.base/java/dyn/CoroutineSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.dyn.CoroutineSupport.registerNatives()",
    "invokedMethods": ["<clinit>()V","checkAndThrowException(Ljava/dyn/Coroutine;)Z","registerNatives()V","shouldThrowException0(J)Z"]
  }
,
  {
    "className": "Ljava/io/Bits;",
    "module": "java.base",
    "source": "/java.base/java/io/Bits.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getBoolean([BI)Z","getChar([BI)C","getDouble([BI)D","getFloat([BI)F","getInt([BI)I","getLong([BI)J","getShort([BI)S","putBoolean([BIZ)V","putChar([BIC)V","putDouble([BID)V","putFloat([BIF)V","putInt([BII)V","putLong([BIJ)V","putShort([BIS)V"]
  }
,
  {
    "className": "Ljava/io/BufferedInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/BufferedInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/InputStream;I)V","available()I","close()V","fill()V","getBufIfOpen()[B","getInIfOpen()Ljava/io/InputStream;","mark(I)V","markSupported()Z","read()I","read([BII)I","read1([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/BufferedOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/BufferedOutputStream.class",
    "super": "Ljava/io/FilterOutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","<init>(Ljava/io/OutputStream;I)V","flush()V","flushBuffer()V","write(I)V","write([BII)V"]
  }
,
  {
    "className": "Ljava/io/BufferedReader;",
    "module": "java.base",
    "source": "/java.base/java/io/BufferedReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/Reader;)V","<init>(Ljava/io/Reader;I)V","close()V","ensureOpen()V","fill()V","read()I","read([CII)I","read1([CII)I","readLine()Ljava/lang/String;","readLine(Z)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/BufferedWriter;",
    "module": "java.base",
    "source": "/java.base/java/io/BufferedWriter.class",
    "super": "Ljava/io/Writer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/Writer;)V","<init>(Ljava/io/Writer;I)V","close()V","ensureOpen()V","flush()V","flushBuffer()V","min(II)I","newLine()V","write(I)V","write(Ljava/lang/String;II)V"]
  }
,
  {
    "className": "Ljava/io/ByteArrayInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ByteArrayInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","<init>([BII)V","available()I","close()V","mark(I)V","markSupported()Z","read()I","read([BII)I","readAllBytes()[B","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/ByteArrayOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ByteArrayOutputStream.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","close()V","ensureCapacity(I)V","grow(I)V","hugeCapacity(I)I","reset()V","size()I","toByteArray()[B","toString()Ljava/lang/String;","toString(Ljava/lang/String;)Ljava/lang/String;","write(I)V","write([BII)V"]
  }
,
  {
    "className": "Ljava/io/CharConversionException;",
    "module": "java.base",
    "source": "/java.base/java/io/CharConversionException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/io/Closeable;",
    "module": "java.base",
    "source": "/java.base/java/io/Closeable.class",
    "super": "null",
    "interfaces": ["Ljava/lang/AutoCloseable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/Console$2;",
    "module": "java.base",
    "source": "/java.base/java/io/Console$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaIOAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["console()Ljava/io/Console;"]
  }
,
  {
    "className": "Ljava/io/Console$3;",
    "module": "java.base",
    "source": "/java.base/java/io/Console$3.class",
    "super": "Ljava/io/PrintWriter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/Console;Ljava/io/Writer;Z)V","close()V"]
  }
,
  {
    "className": "Ljava/io/Console$LineReader;",
    "module": "java.base",
    "source": "/java.base/java/io/Console$LineReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/Console;Ljava/io/Reader;)V","close()V"]
  }
,
  {
    "className": "Ljava/io/Console;",
    "module": "java.base",
    "source": "/java.base/java/io/Console.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Flushable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","encoding()Ljava/lang/String;","istty()Z"]
  }
,
  {
    "className": "Ljava/io/DataInput;",
    "module": "java.base",
    "source": "/java.base/java/io/DataInput.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/DataInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/DataInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": ["Ljava/io/DataInput;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","read([B)I","read([BII)I","readBoolean()Z","readByte()B","readChar()C","readDouble()D","readFloat()F","readFully([B)V","readFully([BII)V","readInt()I","readLong()J","readShort()S","readUTF()Ljava/lang/String;","readUTF(Ljava/io/DataInput;)Ljava/lang/String;","readUnsignedShort()I","skipBytes(I)I"]
  }
,
  {
    "className": "Ljava/io/DataOutput;",
    "module": "java.base",
    "source": "/java.base/java/io/DataOutput.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/DataOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/DataOutputStream.class",
    "super": "Ljava/io/FilterOutputStream;",
    "interfaces": ["Ljava/io/DataOutput;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","flush()V","incCount(I)V","write(I)V","write([BII)V","writeByte(I)V","writeChar(I)V","writeDouble(D)V","writeFloat(F)V","writeInt(I)V","writeLong(J)V","writeShort(I)V","writeUTF(Ljava/lang/String;)V","writeUTF(Ljava/lang/String;Ljava/io/DataOutput;)I"]
  }
,
  {
    "className": "Ljava/io/EOFException;",
    "module": "java.base",
    "source": "/java.base/java/io/EOFException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/ExpiringCache$1;",
    "module": "java.base",
    "source": "/java.base/java/io/ExpiringCache$1.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["removeEldestEntry(Ljava/util/Map$Entry;)Z"]
  }
,
  {
    "className": "Ljava/io/ExpiringCache$Entry;",
    "module": "java.base",
    "source": "/java.base/java/io/ExpiringCache$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JLjava/lang/String;)V","setTimestamp(J)V","setVal(Ljava/lang/String;)V","timestamp()J","val()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/ExpiringCache;",
    "module": "java.base",
    "source": "/java.base/java/io/ExpiringCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["cleanup()V","clear()V","entryFor(Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;","get(Ljava/lang/String;)Ljava/lang/String;","put(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/Externalizable;",
    "module": "java.base",
    "source": "/java.base/java/io/Externalizable.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/File$PathStatus;",
    "module": "java.base",
    "source": "/java.base/java/io/File$PathStatus.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/File;",
    "module": "java.base",
    "source": "/java.base/java/io/File.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;Ljava/lang/String;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;Ljava/io/File;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/net/URI;)V","canRead()Z","compareTo(Ljava/io/File;)I","compareTo(Ljava/lang/Object;)I","delete()Z","equals(Ljava/lang/Object;)Z","exists()Z","getAbsoluteFile()Ljava/io/File;","getAbsolutePath()Ljava/lang/String;","getCanonicalFile()Ljava/io/File;","getCanonicalPath()Ljava/lang/String;","getName()Ljava/lang/String;","getParent()Ljava/lang/String;","getParentFile()Ljava/io/File;","getPath()Ljava/lang/String;","getPrefixLength()I","hashCode()I","isAbsolute()Z","isDirectory()Z","isFile()Z","isInvalid()Z","lastModified()J","length()J","list()[Ljava/lang/String;","listFiles()[Ljava/io/File;","mkdir()Z","mkdirs()Z","slashify(Ljava/lang/String;Z)Ljava/lang/String;","toPath()Ljava/nio/file/Path;","toString()Ljava/lang/String;","toURI()Ljava/net/URI;"]
  }
,
  {
    "className": "Ljava/io/FileCleanable;",
    "module": "java.base",
    "source": "/java.base/java/io/FileCleanable.class",
    "super": "Ljdk/internal/ref/PhantomCleanable;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/FileDescriptor;Ljava/lang/ref/Cleaner;IJ)V","cleanupClose0(IJ)V","performCleanup()V","register(Ljava/io/FileDescriptor;)V"]
  }
,
  {
    "className": "Ljava/io/FileDescriptor$1;",
    "module": "java.base",
    "source": "/java.base/java/io/FileDescriptor$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaIOFileDescriptorAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["close(Ljava/io/FileDescriptor;)V","get(Ljava/io/FileDescriptor;)I","getAppend(Ljava/io/FileDescriptor;)Z","getHandle(Ljava/io/FileDescriptor;)J","registerCleanup(Ljava/io/FileDescriptor;Ljdk/internal/ref/PhantomCleanable;)V","set(Ljava/io/FileDescriptor;I)V","setAppend(Ljava/io/FileDescriptor;Z)V","unregisterCleanup(Ljava/io/FileDescriptor;)V"]
  }
,
  {
    "className": "Ljava/io/FileDescriptor;",
    "module": "java.base",
    "source": "/java.base/java/io/FileDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","attach(Ljava/io/Closeable;)V","close()V","close0()V","closeAll(Ljava/io/Closeable;)V","initIDs()V","registerCleanup(Ljdk/internal/ref/PhantomCleanable;)V","set(I)V","unregisterCleanup()V","valid()Z"]
  }
,
  {
    "className": "Ljava/io/FileInputStream$1;",
    "module": "java.base",
    "source": "/java.base/java/io/FileInputStream$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FileInputStream;)V","close()V"]
  }
,
  {
    "className": "Ljava/io/FileInputStream$AltFinalizer;",
    "module": "java.base",
    "source": "/java.base/java/io/FileInputStream$AltFinalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FileInputStream;)V"]
  }
,
  {
    "className": "Ljava/io/FileInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/FileInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;)V","<init>(Ljava/io/FileDescriptor;)V","<init>(Ljava/lang/String;)V","available()I","available0()I","close()V","getChannel()Ljava/nio/channels/FileChannel;","getFinalizer(Ljava/io/FileInputStream;)Ljava/lang/Object;","initIDs()V","open(Ljava/lang/String;)V","open0(Ljava/lang/String;)V","read()I","read([B)I","read([BII)I","read0()I","readBytes([BII)I","readBytes0([BII)I","skip(J)J","skip0(J)J"]
  }
,
  {
    "className": "Ljava/io/FileNotFoundException;",
    "module": "java.base",
    "source": "/java.base/java/io/FileNotFoundException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/FileOutputStream$1;",
    "module": "java.base",
    "source": "/java.base/java/io/FileOutputStream$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FileOutputStream;)V","close()V"]
  }
,
  {
    "className": "Ljava/io/FileOutputStream$AltFinalizer;",
    "module": "java.base",
    "source": "/java.base/java/io/FileOutputStream$AltFinalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FileOutputStream;)V"]
  }
,
  {
    "className": "Ljava/io/FileOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/FileOutputStream.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;)V","<init>(Ljava/io/File;Z)V","<init>(Ljava/io/FileDescriptor;)V","<init>(Ljava/lang/String;)V","close()V","getFinalizer(Ljava/io/FileOutputStream;)Ljava/lang/Object;","initIDs()V","open(Ljava/lang/String;Z)V","open0(Ljava/lang/String;Z)V","write(I)V","write(IZ)V","write([B)V","write([BII)V","writeBytes([BIIZ)V","writeBytes0([BIIZ)V"]
  }
,
  {
    "className": "Ljava/io/FilePermission$1;",
    "module": "java.base",
    "source": "/java.base/java/io/FilePermission$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaIOFilePermissionAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/io/FilePermission;",
    "module": "java.base",
    "source": "/java.base/java/io/FilePermission.class",
    "super": "Ljava/security/Permission;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Ljava/io/FilePermission;Ljava/nio/file/Path;Ljava/nio/file/Path;ILjava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getActions()Ljava/lang/String;","getActions(I)Ljava/lang/String;","getMask()I","getMask(Ljava/lang/String;)I","hashCode()I","init(I)V","newPermissionCollection()Ljava/security/PermissionCollection;","withNewActions(I)Ljava/io/FilePermission;"]
  }
,
  {
    "className": "Ljava/io/FilePermissionCollection$1;",
    "module": "java.base",
    "source": "/java.base/java/io/FilePermissionCollection$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/BiFunction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FilePermissionCollection;)V","apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/security/Permission;Ljava/security/Permission;)Ljava/security/Permission;"]
  }
,
  {
    "className": "Ljava/io/FilePermissionCollection;",
    "module": "java.base",
    "source": "/java.base/java/io/FilePermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljava/io/FileReader;",
    "module": "java.base",
    "source": "/java.base/java/io/FileReader.class",
    "super": "Ljava/io/InputStreamReader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/FileSystem;",
    "module": "java.base",
    "source": "/java.base/java/io/FileSystem.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/FilterInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/FilterInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","available()I","close()V","mark(I)V","markSupported()Z","read()I","read([B)I","read([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/FilterOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/FilterOutputStream.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","close()V","write([B)V"]
  }
,
  {
    "className": "Ljava/io/Flushable;",
    "module": "java.base",
    "source": "/java.base/java/io/Flushable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/IOException;",
    "module": "java.base",
    "source": "/java.base/java/io/IOException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/io/InputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/InputStream.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","available()I","close()V","mark(I)V","markSupported()Z","read([B)I","read([BII)I","readAllBytes()[B","readNBytes(I)[B","readNBytes([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/InputStreamReader;",
    "module": "java.base",
    "source": "/java.base/java/io/InputStreamReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/InputStream;Ljava/lang/String;)V","<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V","<init>(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V","close()V","read()I","read([CII)I","ready()Z"]
  }
,
  {
    "className": "Ljava/io/InterruptedIOException;",
    "module": "java.base",
    "source": "/java.base/java/io/InterruptedIOException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/InvalidClassException;",
    "module": "java.base",
    "source": "/java.base/java/io/InvalidClassException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/InvalidObjectException;",
    "module": "java.base",
    "source": "/java.base/java/io/InvalidObjectException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/NotActiveException;",
    "module": "java.base",
    "source": "/java.base/java/io/NotActiveException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/NotSerializableException;",
    "module": "java.base",
    "source": "/java.base/java/io/NotSerializableException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectInput;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInput.class",
    "super": "null",
    "interfaces": ["Ljava/io/DataInput;","Ljava/lang/AutoCloseable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputFilter$Config$Global;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputFilter$Config$Global.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/ObjectInputFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["checkInput(Ljava/io/ObjectInputFilter$FilterInfo;)Ljava/io/ObjectInputFilter$Status;","lambda$checkInput$10(Ljava/io/ObjectInputFilter$Status;)Z","lambda$checkInput$9(Ljava/lang/Class;Ljava/util/function/Function;)Ljava/io/ObjectInputFilter$Status;","lambda$new$4(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/ObjectInputFilter$Status;","lambda$new$7(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/ObjectInputFilter$Status;","lambda$new$8(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Class;)Ljava/io/ObjectInputFilter$Status;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/ObjectInputFilter$Config;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputFilter$Config.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getSerialFilter()Ljava/io/ObjectInputFilter;"]
  }
,
  {
    "className": "Ljava/io/ObjectInputFilter$FilterInfo;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputFilter$FilterInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputFilter$Status;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputFilter$Status.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputFilter;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$BlockDataInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$BlockDataInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": ["Ljava/io/DataInput;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V","available()I","close()V","currentBlockRemaining()I","getBlockDataMode()Z","getBytesRead()J","peek()I","peekByte()B","read()I","read([BII)I","read([BIIZ)I","readBlockHeader(Z)I","readBooleans([ZII)V","readByte()B","readChars([CII)V","readDoubles([DII)V","readFloats([FII)V","readFully([BIIZ)V","readInt()I","readInts([III)V","readLong()J","readLongUTF()Ljava/lang/String;","readLongs([JII)V","readShort()S","readShorts([SII)V","readUTF()Ljava/lang/String;","readUTFBody(J)Ljava/lang/String;","readUTFChar(Ljava/lang/StringBuilder;J)I","readUTFSpan(Ljava/lang/StringBuilder;J)J","readUnsignedShort()I","refill()V","setBlockDataMode(Z)Z","skip(J)J","skipBlockData()V"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$Caches;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$Caches.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$FieldValues;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$FieldValues.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectInputStream;[B[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$FilterValues;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$FilterValues.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/ObjectInputFilter$FilterInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;JJJJ)V","arrayLength()J","depth()J","references()J","serialClass()Ljava/lang/Class;","streamBytes()J"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$HandleTable$HandleList;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$HandleTable$HandleList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(I)V","get(I)I","size()I"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$HandleTable;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$HandleTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","assign(Ljava/lang/Object;)I","clear()V","finish(I)V","grow()V","lookupException(I)Ljava/lang/ClassNotFoundException;","lookupObject(I)Ljava/lang/Object;","markDependency(II)V","markException(ILjava/lang/ClassNotFoundException;)V","setObject(ILjava/lang/Object;)V","size()I"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$Logging;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$Logging.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$PeekInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$PeekInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","available()I","close()V","getBytesRead()J","peek()I","read()I","read([BII)I","readFully([BII)V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$ValidationList$1;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$ValidationList$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectInputStream$ValidationList;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$ValidationList$Callback;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$ValidationList$Callback.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectInputStream$ValidationList;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream$ValidationList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","doCallbacks()V"]
  }
,
  {
    "className": "Ljava/io/ObjectInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": ["Ljava/io/ObjectInput;","Ljava/io/ObjectStreamConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","available()I","bytesToDoubles([BI[DII)V","bytesToFloats([BI[FII)V","checkResolve(Ljava/lang/Object;)Ljava/lang/Object;","clear()V","cloneArray(Ljava/lang/Object;)Ljava/lang/Object;","close()V","defaultCheckFieldValues(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Ljava/io/ObjectInputStream$FieldValues;)V","defaultReadFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)Ljava/io/ObjectInputStream$FieldValues;","defaultSetFieldValues(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Ljava/io/ObjectInputStream$FieldValues;)V","filterCheck(Ljava/lang/Class;I)V","freeze()V","handleReset()V","isCustomSubclass()Z","latestUserDefinedLoader()Ljava/lang/ClassLoader;","read()I","read([BII)I","readArray(Z)Ljava/lang/Object;","readByte()B","readClass(Z)Ljava/lang/Class;","readClassDesc(Z)Ljava/io/ObjectStreamClass;","readClassDescriptor()Ljava/io/ObjectStreamClass;","readEnum(Z)Ljava/lang/Enum;","readExternalData(Ljava/io/Externalizable;Ljava/io/ObjectStreamClass;)V","readFatalException()Ljava/io/IOException;","readHandle(Z)Ljava/lang/Object;","readLong()J","readNonProxyDesc(Z)Ljava/io/ObjectStreamClass;","readNull()Ljava/lang/Object;","readObject()Ljava/lang/Object;","readObject(Ljava/lang/Class;)Ljava/lang/Object;","readObject0(Ljava/lang/Class;Z)Ljava/lang/Object;","readObjectOverride()Ljava/lang/Object;","readOrdinaryObject(Z)Ljava/lang/Object;","readProxyDesc(Z)Ljava/io/ObjectStreamClass;","readSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V","readShort()S","readStreamHeader()V","readString(Z)Ljava/lang/String;","readTypeString()Ljava/lang/String;","readUTF()Ljava/lang/String;","resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;","resolveObject(Ljava/lang/Object;)Ljava/lang/Object;","resolveProxyClass([Ljava/lang/String;)Ljava/lang/Class;","setObjectInputFilter(Ljava/io/ObjectInputFilter;)V","skipCustomData()V","verifySubclass()V"]
  }
,
  {
    "className": "Ljava/io/ObjectOutput;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectOutput.class",
    "super": "null",
    "interfaces": ["Ljava/io/DataOutput;","Ljava/lang/AutoCloseable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectOutputStream$BlockDataOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectOutputStream$BlockDataOutputStream.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": ["Ljava/io/DataOutput;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","close()V","drain()V","flush()V","getUTFLength(Ljava/lang/String;)J","setBlockDataMode(Z)Z","write(I)V","write([B)V","write([BII)V","write([BIIZ)V","writeBlockHeader(I)V","writeBooleans([ZII)V","writeByte(I)V","writeBytes(Ljava/lang/String;)V","writeChars([CII)V","writeDoubles([DII)V","writeFloats([FII)V","writeInt(I)V","writeInts([III)V","writeLong(J)V","writeLongUTF(Ljava/lang/String;J)V","writeLongs([JII)V","writeShort(I)V","writeShorts([SII)V","writeUTF(Ljava/lang/String;)V","writeUTF(Ljava/lang/String;J)V","writeUTFBody(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectOutputStream$HandleTable;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectOutputStream$HandleTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IF)V","assign(Ljava/lang/Object;)I","clear()V","growEntries()V","growSpine()V","hash(Ljava/lang/Object;)I","insert(Ljava/lang/Object;I)V","lookup(Ljava/lang/Object;)I","size()I"]
  }
,
  {
    "className": "Ljava/io/ObjectOutputStream$ReplaceTable;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectOutputStream$ReplaceTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IF)V","assign(Ljava/lang/Object;Ljava/lang/Object;)V","clear()V","grow()V","lookup(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/io/ObjectOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectOutputStream.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": ["Ljava/io/ObjectOutput;","Ljava/io/ObjectStreamConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","annotateClass(Ljava/lang/Class;)V","annotateProxyClass(Ljava/lang/Class;)V","clear()V","close()V","defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V","doublesToBytes([DI[BII)V","floatsToBytes([FI[BII)V","flush()V","getProtocolVersion()I","isCustomSubclass()Z","replaceObject(Ljava/lang/Object;)Ljava/lang/Object;","reset()V","verifySubclass()V","write(I)V","write([B)V","write([BII)V","writeArray(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V","writeByte(I)V","writeClass(Ljava/lang/Class;Z)V","writeClassDesc(Ljava/io/ObjectStreamClass;Z)V","writeClassDescriptor(Ljava/io/ObjectStreamClass;)V","writeEnum(Ljava/lang/Enum;Ljava/io/ObjectStreamClass;Z)V","writeExternalData(Ljava/io/Externalizable;)V","writeFatalException(Ljava/io/IOException;)V","writeHandle(I)V","writeLong(J)V","writeNonProxyDesc(Ljava/io/ObjectStreamClass;Z)V","writeNull()V","writeObject(Ljava/lang/Object;)V","writeObject0(Ljava/lang/Object;Z)V","writeObjectOverride(Ljava/lang/Object;)V","writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V","writeProxyDesc(Ljava/io/ObjectStreamClass;Z)V","writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V","writeShort(I)V","writeStreamHeader()V","writeString(Ljava/lang/String;Z)V","writeTypeString(Ljava/lang/String;)V","writeUTF(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$1;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectStreamClass;)V","run()Ljava/lang/Long;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$2;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectStreamClass;Ljava/lang/Class;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$3;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/io/ObjectStreamClass$MemberSignature;Ljava/io/ObjectStreamClass$MemberSignature;)I","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$4;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/io/ObjectStreamClass$MemberSignature;Ljava/io/ObjectStreamClass$MemberSignature;)I","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$5;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/io/ObjectStreamClass$MemberSignature;Ljava/io/ObjectStreamClass$MemberSignature;)I","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$Caches;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$Caches.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$ClassDataSlot;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$ClassDataSlot.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectStreamClass;Z)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$EntryFuture$1;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$EntryFuture$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/ObjectStreamClass$EntryFuture;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$EntryFuture;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$EntryFuture.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","get()Ljava/lang/Object;","getOwner()Ljava/lang/Thread;","set(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$ExceptionInfo;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$ExceptionInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","newInvalidClassException()Ljava/io/InvalidClassException;"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$FieldReflector;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$FieldReflector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/io/ObjectStreamField;)V","checkObjectFieldValueTypes(Ljava/lang/Object;[Ljava/lang/Object;)V","getFields()[Ljava/io/ObjectStreamField;","getObjFieldValues(Ljava/lang/Object;[Ljava/lang/Object;)V","getPrimFieldValues(Ljava/lang/Object;[B)V","setObjFieldValues(Ljava/lang/Object;[Ljava/lang/Object;)V","setObjFieldValues(Ljava/lang/Object;[Ljava/lang/Object;Z)V","setPrimFieldValues(Ljava/lang/Object;[B)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$FieldReflectorKey;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$FieldReflectorKey.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/io/ObjectStreamField;Ljava/lang/ref/ReferenceQueue;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$MemberSignature;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$MemberSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;)V","<init>(Ljava/lang/reflect/Field;)V","<init>(Ljava/lang/reflect/Method;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass$WeakClassKey;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass$WeakClassKey.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/ref/ReferenceQueue;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamClass;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamClass.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Class;)V","checkDefaultSerialize()V","checkDeserialize()V","checkInitialized()V","checkObjFieldValueTypes(Ljava/lang/Object;[Ljava/lang/Object;)V","checkSerialize()V","classNamesEqual(Ljava/lang/String;Ljava/lang/String;)Z","computeDefaultSUID(Ljava/lang/Class;)J","computeFieldOffsets()V","forClass()Ljava/lang/Class;","getClassDataLayout()[Ljava/io/ObjectStreamClass$ClassDataSlot;","getClassDataLayout0()[Ljava/io/ObjectStreamClass$ClassDataSlot;","getDeclaredSUID(Ljava/lang/Class;)Ljava/lang/Long;","getDeclaredSerialFields(Ljava/lang/Class;)[Ljava/io/ObjectStreamField;","getDefaultSerialFields(Ljava/lang/Class;)[Ljava/io/ObjectStreamField;","getExternalizableConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getFields(Z)[Ljava/io/ObjectStreamField;","getInheritableMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;","getMethodSignature([Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/String;","getName()Ljava/lang/String;","getNumObjFields()I","getObjFieldValues(Ljava/lang/Object;[Ljava/lang/Object;)V","getPrimDataSize()I","getPrimFieldValues(Ljava/lang/Object;[B)V","getPrivateMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;","getProtectionDomains(Ljava/lang/reflect/Constructor;Ljava/lang/Class;)[Ljava/security/ProtectionDomain;","getReflector([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)Ljava/io/ObjectStreamClass$FieldReflector;","getResolveException()Ljava/lang/ClassNotFoundException;","getSerialFields(Ljava/lang/Class;)[Ljava/io/ObjectStreamField;","getSerialVersionUID()J","getSerializableConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getSuperDesc()Ljava/io/ObjectStreamClass;","getVariantFor(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;","hasBlockExternalData()Z","hasReadObjectMethod()Z","hasReadObjectNoDataMethod()Z","hasReadResolveMethod()Z","hasStaticInitializer(Ljava/lang/Class;)Z","hasWriteObjectData()Z","hasWriteObjectMethod()Z","hasWriteReplaceMethod()Z","initNonProxy(Ljava/io/ObjectStreamClass;Ljava/lang/Class;Ljava/lang/ClassNotFoundException;Ljava/io/ObjectStreamClass;)V","initProxy(Ljava/lang/Class;Ljava/lang/ClassNotFoundException;Ljava/io/ObjectStreamClass;)V","invokeReadObject(Ljava/lang/Object;Ljava/io/ObjectInputStream;)V","invokeReadObjectNoData(Ljava/lang/Object;)V","invokeReadResolve(Ljava/lang/Object;)Ljava/lang/Object;","invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V","invokeWriteReplace(Ljava/lang/Object;)Ljava/lang/Object;","isEnum()Z","isExternalizable()Z","isInstantiable()Z","isProxy()Z","lambda$newInstance$0()Ljava/lang/Object;","lookup(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;","lookup(Ljava/lang/Class;Z)Ljava/io/ObjectStreamClass;","matchFields([Ljava/io/ObjectStreamField;Ljava/io/ObjectStreamClass;)[Ljava/io/ObjectStreamField;","newInstance()Ljava/lang/Object;","packageEquals(Ljava/lang/Class;Ljava/lang/Class;)Z","processQueue(Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V","readNonProxy(Ljava/io/ObjectInputStream;)V","requireInitialized()V","setObjFieldValues(Ljava/lang/Object;[Ljava/lang/Object;)V","setPrimFieldValues(Ljava/lang/Object;[B)V","throwMiscException(Ljava/lang/Throwable;)V","toString()Ljava/lang/String;","writeNonProxy(Ljava/io/ObjectOutputStream;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamConstants;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/ObjectStreamException;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/ObjectStreamField;",
    "module": "java.base",
    "source": "/java.base/java/io/ObjectStreamField.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;)V","<init>(Ljava/lang/String;Ljava/lang/Class;Z)V","<init>(Ljava/lang/String;Ljava/lang/String;Z)V","<init>(Ljava/lang/reflect/Field;ZZ)V","appendClassSignature(Ljava/lang/StringBuilder;Ljava/lang/Class;)Ljava/lang/StringBuilder;","compareTo(Ljava/lang/Object;)I","getClassSignature(Ljava/lang/Class;)Ljava/lang/String;","getField()Ljava/lang/reflect/Field;","getName()Ljava/lang/String;","getOffset()I","getPrimitiveSignature(Ljava/lang/Class;)Ljava/lang/String;","getSignature()Ljava/lang/String;","getTypeCode()C","getTypeString()Ljava/lang/String;","isPrimitive()Z","isUnshared()Z","setOffset(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/OptionalDataException;",
    "module": "java.base",
    "source": "/java.base/java/io/OptionalDataException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Z)V"]
  }
,
  {
    "className": "Ljava/io/OutputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/OutputStream.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;","Ljava/io/Flushable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","close()V","flush()V","write([B)V"]
  }
,
  {
    "className": "Ljava/io/OutputStreamWriter;",
    "module": "java.base",
    "source": "/java.base/java/io/OutputStreamWriter.class",
    "super": "Ljava/io/Writer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","<init>(Ljava/io/OutputStream;Ljava/lang/String;)V","<init>(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V","close()V","flush()V","flushBuffer()V","write(I)V","write(Ljava/lang/String;II)V","write([CII)V"]
  }
,
  {
    "className": "Ljava/io/PrintStream;",
    "module": "java.base",
    "source": "/java.base/java/io/PrintStream.class",
    "super": "Ljava/io/FilterOutputStream;",
    "interfaces": ["Ljava/lang/Appendable;","Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","<init>(Ljava/io/OutputStream;Z)V","<init>(ZLjava/io/OutputStream;)V","append(C)Ljava/io/PrintStream;","append(C)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;)Ljava/io/PrintStream;","append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;II)Ljava/io/PrintStream;","append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;","close()V","ensureOpen()V","flush()V","format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;","newLine()V","print(C)V","print(Ljava/lang/Object;)V","print(Ljava/lang/String;)V","printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;","println()V","println(Ljava/lang/Object;)V","println(Ljava/lang/String;)V","requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","write(I)V","write(Ljava/lang/String;)V","write([BII)V"]
  }
,
  {
    "className": "Ljava/io/PrintWriter;",
    "module": "java.base",
    "source": "/java.base/java/io/PrintWriter.class",
    "super": "Ljava/io/Writer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;)V","<init>(Ljava/io/OutputStream;Z)V","<init>(Ljava/io/OutputStream;ZLjava/nio/charset/Charset;)V","<init>(Ljava/io/Writer;)V","<init>(Ljava/io/Writer;Z)V","close()V","ensureOpen()V","flush()V","newLine()V","print(C)V","print(I)V","print(Ljava/lang/String;)V","println()V","println(Ljava/lang/Object;)V","println(Ljava/lang/String;)V","write(I)V","write(Ljava/lang/String;)V","write(Ljava/lang/String;II)V"]
  }
,
  {
    "className": "Ljava/io/RandomAccessFile$1;",
    "module": "java.base",
    "source": "/java.base/java/io/RandomAccessFile$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/RandomAccessFile;)V","close()V"]
  }
,
  {
    "className": "Ljava/io/RandomAccessFile$2;",
    "module": "java.base",
    "source": "/java.base/java/io/RandomAccessFile$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaIORandomAccessFileAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","openAndDelete(Ljava/io/File;Ljava/lang/String;)Ljava/io/RandomAccessFile;"]
  }
,
  {
    "className": "Ljava/io/RandomAccessFile;",
    "module": "java.base",
    "source": "/java.base/java/io/RandomAccessFile.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/DataOutput;","Ljava/io/DataInput;","Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/io/File;Ljava/lang/String;)V","<init>(Ljava/io/File;Ljava/lang/String;Z)V","close()V","getFilePointer()J","initIDs()V","length()J","open(Ljava/lang/String;I)V","open0(Ljava/lang/String;I)V","read()I","read([BII)I","read0()I","readBytes([BII)I","readBytes0([BII)I","readFully([BII)V","seek(J)V","seek0(J)V","write([BII)V","writeBytes([BII)V","writeBytes0([BII)V"]
  }
,
  {
    "className": "Ljava/io/Reader;",
    "module": "java.base",
    "source": "/java.base/java/io/Reader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Readable;","Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;)V","read(Ljava/nio/CharBuffer;)I","read([C)I"]
  }
,
  {
    "className": "Ljava/io/SequenceInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/SequenceInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Enumeration;)V","available()I","close()V","nextStream()V","peekNextStream()V","read()I","read([BII)I"]
  }
,
  {
    "className": "Ljava/io/SerialCallbackContext;",
    "module": "java.base",
    "source": "/java.base/java/io/SerialCallbackContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V","check()V","setUsed()V"]
  }
,
  {
    "className": "Ljava/io/Serializable;",
    "module": "java.base",
    "source": "/java.base/java/io/Serializable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/io/StreamCorruptedException;",
    "module": "java.base",
    "source": "/java.base/java/io/StreamCorruptedException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/StreamTokenizer;",
    "module": "java.base",
    "source": "/java.base/java/io/StreamTokenizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/io/Reader;)V","commentChar(I)V","eolIsSignificant(Z)V","lineno()I","lowerCaseMode(Z)V","nextToken()I","parseNumbers()V","quoteChar(I)V","read()I","resetSyntax()V","slashSlashComments(Z)V","slashStarComments(Z)V","toString()Ljava/lang/String;","whitespaceChars(II)V","wordChars(II)V"]
  }
,
  {
    "className": "Ljava/io/StringBufferInputStream;",
    "module": "java.base",
    "source": "/java.base/java/io/StringBufferInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","available()I","read()I","read([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/io/StringReader;",
    "module": "java.base",
    "source": "/java.base/java/io/StringReader.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","close()V","ensureOpen()V","read()I","read([CII)I","reset()V"]
  }
,
  {
    "className": "Ljava/io/StringWriter;",
    "module": "java.base",
    "source": "/java.base/java/io/StringWriter.class",
    "super": "Ljava/io/Writer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","close()V","flush()V","toString()Ljava/lang/String;","write(I)V","write(Ljava/lang/String;)V","write(Ljava/lang/String;II)V"]
  }
,
  {
    "className": "Ljava/io/SyncFailedException;",
    "module": "java.base",
    "source": "/java.base/java/io/SyncFailedException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/UTFDataFormatException;",
    "module": "java.base",
    "source": "/java.base/java/io/UTFDataFormatException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/UncheckedIOException;",
    "module": "java.base",
    "source": "/java.base/java/io/UncheckedIOException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/IOException;)V","<init>(Ljava/lang/String;Ljava/io/IOException;)V","getCause()Ljava/io/IOException;","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/io/UnixFileSystem;",
    "module": "java.base",
    "source": "/java.base/java/io/UnixFileSystem.class",
    "super": "Ljava/io/FileSystem;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["canonicalize(Ljava/lang/String;)Ljava/lang/String;","canonicalize0(Ljava/lang/String;)Ljava/lang/String;","checkAccess(Ljava/io/File;I)Z","compare(Ljava/io/File;Ljava/io/File;)I","createDirectory(Ljava/io/File;)Z","delete(Ljava/io/File;)Z","delete0(Ljava/io/File;)Z","fromURIPath(Ljava/lang/String;)Ljava/lang/String;","getBooleanAttributes(Ljava/io/File;)I","getBooleanAttributes0(Ljava/io/File;)I","getDefaultParent()Ljava/lang/String;","getLastModifiedTime(Ljava/io/File;)J","getLength(Ljava/io/File;)J","hashCode(Ljava/io/File;)I","initIDs()V","isAbsolute(Ljava/io/File;)Z","list(Ljava/io/File;)[Ljava/lang/String;","normalize(Ljava/lang/String;)Ljava/lang/String;","normalize(Ljava/lang/String;II)Ljava/lang/String;","prefixLength(Ljava/lang/String;)I","resolve(Ljava/io/File;)Ljava/lang/String;","resolve(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/UnsupportedEncodingException;",
    "module": "java.base",
    "source": "/java.base/java/io/UnsupportedEncodingException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/io/WriteAbortedException;",
    "module": "java.base",
    "source": "/java.base/java/io/WriteAbortedException.class",
    "super": "Ljava/io/ObjectStreamException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Exception;)V","getCause()Ljava/lang/Throwable;","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/io/Writer;",
    "module": "java.base",
    "source": "/java.base/java/io/Writer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Appendable;","Ljava/io/Closeable;","Ljava/io/Flushable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;)V","append(C)Ljava/io/Writer;","append(C)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;)Ljava/io/Writer;","append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;II)Ljava/io/Writer;","append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;","write(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/AbstractStringBuilder;",
    "module": "java.base",
    "source": "/java.base/java/lang/AbstractStringBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Appendable;","Ljava/lang/CharSequence;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","append(C)Ljava/lang/AbstractStringBuilder;","append(D)Ljava/lang/AbstractStringBuilder;","append(F)Ljava/lang/AbstractStringBuilder;","append(I)Ljava/lang/AbstractStringBuilder;","append(J)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;","append(Z)Ljava/lang/AbstractStringBuilder;","append([C)Ljava/lang/AbstractStringBuilder;","append([CII)Ljava/lang/AbstractStringBuilder;","appendChars(Ljava/lang/CharSequence;II)V","appendChars([CII)V","appendCodePoint(I)Ljava/lang/AbstractStringBuilder;","appendNull()Ljava/lang/AbstractStringBuilder;","capacity()I","charAt(I)C","checkRange(III)V","checkRangeSIOOBE(III)V","codePointAt(I)I","codePointBefore(I)I","compareTo(Ljava/lang/AbstractStringBuilder;)I","delete(II)Ljava/lang/AbstractStringBuilder;","deleteCharAt(I)Ljava/lang/AbstractStringBuilder;","ensureCapacity(I)V","ensureCapacityInternal(I)V","getBytes([BIB)V","getChars(II[CI)V","getCoder()B","getValue()[B","hugeCapacity(I)I","indexOf(Ljava/lang/String;I)I","inflate()V","insert(IC)Ljava/lang/AbstractStringBuilder;","insert(IJ)Ljava/lang/AbstractStringBuilder;","insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;","insert(I[C)Ljava/lang/AbstractStringBuilder;","isLatin1()Z","lastIndexOf(Ljava/lang/String;I)I","length()I","newCapacity(I)I","offsetByCodePoints(II)I","putCharsAt(I[CII)V","putStringAt(ILjava/lang/String;)V","replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;","reverse()Ljava/lang/AbstractStringBuilder;","setCharAt(IC)V","setLength(I)V","shift(II)V","subSequence(II)Ljava/lang/CharSequence;","substring(I)Ljava/lang/String;","substring(II)Ljava/lang/String;","trimToSize()V"]
  }
,
  {
    "className": "Ljava/lang/Appendable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Appendable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ApplicationShutdownHooks;",
    "module": "java.base",
    "source": "/java.base/java/lang/ApplicationShutdownHooks.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["add(Ljava/lang/Thread;)V","remove(Ljava/lang/Thread;)Z","runHooks()V"]
  }
,
  {
    "className": "Ljava/lang/ArithmeticException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ArithmeticException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/ArrayIndexOutOfBoundsException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ArrayIndexOutOfBoundsException.class",
    "super": "Ljava/lang/IndexOutOfBoundsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/ArrayStoreException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ArrayStoreException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/AssertionError;",
    "module": "java.base",
    "source": "/java.base/java/lang/AssertionError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/AutoCloseable;",
    "module": "java.base",
    "source": "/java.base/java/lang/AutoCloseable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Boolean;",
    "module": "java.base",
    "source": "/java.base/java/lang/Boolean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Z)V","booleanValue()Z","compare(ZZ)I","compareTo(Ljava/lang/Boolean;)I","compareTo(Ljava/lang/Object;)I","equals(Ljava/lang/Object;)Z","getBoolean(Ljava/lang/String;)Z","hashCode()I","hashCode(Z)I","parseBoolean(Ljava/lang/String;)Z","toString()Ljava/lang/String;","toString(Z)Ljava/lang/String;","valueOf(Ljava/lang/String;)Ljava/lang/Boolean;","valueOf(Z)Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Ljava/lang/Byte$ByteCache;",
    "module": "java.base",
    "source": "/java.base/java/lang/Byte$ByteCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Byte;",
    "module": "java.base",
    "source": "/java.base/java/lang/Byte.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["byteValue()B","compare(BB)I","compareTo(Ljava/lang/Byte;)I","compareTo(Ljava/lang/Object;)I","decode(Ljava/lang/String;)Ljava/lang/Byte;","doubleValue()D","equals(Ljava/lang/Object;)Z","floatValue()F","hashCode()I","hashCode(B)I","intValue()I","longValue()J","parseByte(Ljava/lang/String;I)B","shortValue()S","toString()Ljava/lang/String;","toUnsignedInt(B)I","valueOf(B)Ljava/lang/Byte;","valueOf(Ljava/lang/String;)Ljava/lang/Byte;","valueOf(Ljava/lang/String;I)Ljava/lang/Byte;"]
  }
,
  {
    "className": "Ljava/lang/CharSequence;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharSequence.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Character$CharacterCache;",
    "module": "java.base",
    "source": "/java.base/java/lang/Character$CharacterCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Character$Subset;",
    "module": "java.base",
    "source": "/java.base/java/lang/Character$Subset.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/Character$UnicodeBlock;",
    "module": "java.base",
    "source": "/java.base/java/lang/Character$UnicodeBlock.class",
    "super": "Ljava/lang/Character$Subset;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["forName(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;","of(I)Ljava/lang/Character$UnicodeBlock;"]
  }
,
  {
    "className": "Ljava/lang/Character$UnicodeScript;",
    "module": "java.base",
    "source": "/java.base/java/lang/Character$UnicodeScript.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forName(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;","of(I)Ljava/lang/Character$UnicodeScript;","valueOf(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;"]
  }
,
  {
    "className": "Ljava/lang/Character;",
    "module": "java.base",
    "source": "/java.base/java/lang/Character.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["charCount(I)I","charValue()C","codePointAt(Ljava/lang/CharSequence;I)I","codePointBefore(Ljava/lang/CharSequence;I)I","codePointOf(Ljava/lang/String;)I","compare(CC)I","compareTo(Ljava/lang/Character;)I","compareTo(Ljava/lang/Object;)I","digit(CI)I","digit(II)I","equals(Ljava/lang/Object;)Z","forDigit(II)C","getName(I)Ljava/lang/String;","getType(C)I","getType(I)I","hashCode()I","hashCode(C)I","highSurrogate(I)C","isAlphabetic(I)Z","isBmpCodePoint(I)Z","isDefined(I)Z","isDigit(C)Z","isDigit(I)Z","isHighSurrogate(C)Z","isISOControl(C)Z","isISOControl(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLetter(C)Z","isLetter(I)Z","isLetterOrDigit(C)Z","isLetterOrDigit(I)Z","isLowSurrogate(C)Z","isLowerCase(C)Z","isLowerCase(I)Z","isMirrored(I)Z","isSpaceChar(C)Z","isSpaceChar(I)Z","isSupplementaryCodePoint(I)Z","isSurrogate(C)Z","isSurrogatePair(CC)Z","isTitleCase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(C)Z","isUpperCase(I)Z","isValidCodePoint(I)Z","isWhitespace(C)Z","isWhitespace(I)Z","lowSurrogate(I)C","offsetByCodePoints(Ljava/lang/CharSequence;II)I","toChars(I)[C","toChars(I[CI)I","toCodePoint(CC)I","toLowerCase(C)C","toLowerCase(I)I","toString()Ljava/lang/String;","toString(C)Ljava/lang/String;","toSurrogates(I[CI)V","toUpperCase(C)C","toUpperCase(I)I","toUpperCaseCharArray(I)[C","toUpperCaseEx(I)I","valueOf(C)Ljava/lang/Character;"]
  }
,
  {
    "className": "Ljava/lang/CharacterData00;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterData00.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","findInCharMap(I)I","getProperties(I)I","getPropertiesEx(I)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I","toUpperCaseCharArray(I)[C","toUpperCaseEx(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterData01;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterData01.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getProperties(I)I","getPropertiesEx(I)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterData02;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterData02.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getProperties(I)I","getPropertiesEx(I)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterData0E;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterData0E.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getProperties(I)I","getPropertiesEx(I)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterData;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isIdeographic(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","of(I)Ljava/lang/CharacterData;","toUpperCaseCharArray(I)[C","toUpperCaseEx(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterDataLatin1;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterDataLatin1.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getProperties(I)I","getPropertiesEx(I)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isIdeographic(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isOtherAlphabetic(I)Z","isOtherLowercase(I)Z","isOtherUppercase(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I","toUpperCaseCharArray(I)[C","toUpperCaseEx(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterDataPrivateUse;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterDataPrivateUse.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterDataUndefined;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterDataUndefined.class",
    "super": "Ljava/lang/CharacterData;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["digit(II)I","getType(I)I","isDigit(I)Z","isIdentifierIgnorable(I)Z","isJavaIdentifierPart(I)Z","isJavaIdentifierStart(I)Z","isLowerCase(I)Z","isMirrored(I)Z","isUnicodeIdentifierPart(I)Z","isUnicodeIdentifierStart(I)Z","isUpperCase(I)Z","isWhitespace(I)Z","toLowerCase(I)I","toUpperCase(I)I"]
  }
,
  {
    "className": "Ljava/lang/CharacterName$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterName$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharacterName;)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/CharacterName;",
    "module": "java.base",
    "source": "/java.base/java/lang/CharacterName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addCp(IIII)I","getCodePoint(Ljava/lang/String;)I","getCp(I)I","getCpHash(I)I","getCpNext(I)I","getInstance()Ljava/lang/CharacterName;","getName(I)Ljava/lang/String;","hashN([BII)I"]
  }
,
  {
    "className": "Ljava/lang/Class$ReflectionData;",
    "module": "java.base",
    "source": "/java.base/java/lang/Class$ReflectionData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Class;",
    "module": "java.base",
    "source": "/java.base/java/lang/Class.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/reflect/GenericDeclaration;","Ljava/lang/reflect/Type;","Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ClassCastException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassCastException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/ClassFormatError;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassFormatError.class",
    "super": "Ljava/lang/LinkageError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/ClassLoader$ParallelLoaders;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassLoader$ParallelLoaders.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["isRegistered(Ljava/lang/Class;)Z","register(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Ljava/lang/ClassLoader;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","<init>(Ljava/lang/Void;Ljava/lang/String;Ljava/lang/ClassLoader;)V","checkCreateClassLoader()Ljava/lang/Void;","checkCreateClassLoader(Ljava/lang/String;)Ljava/lang/Void;","checkName(Ljava/lang/String;)Z","createOrGetClassLoaderValueMap()Ljava/util/concurrent/ConcurrentHashMap;","defineClass(Ljava/lang/String;[BII)Ljava/lang/Class;","definePackage(Ljava/lang/Class;)Ljava/lang/Package;","definePackage(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/Package;","findLoadedClass(Ljava/lang/String;)Ljava/lang/Class;","findLoadedClass0(Ljava/lang/String;Z)Ljava/lang/Class;","getBuiltinPlatformClassLoader()Ljava/lang/ClassLoader;","getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;","getDefinedPackage(Ljava/lang/String;)Ljava/lang/Package;","getName()Ljava/lang/String;","getPackage(Ljava/lang/String;)Ljava/lang/Package;","getParent()Ljava/lang/ClassLoader;","getPlatformClassLoader()Ljava/lang/ClassLoader;","getResource(Ljava/lang/String;)Ljava/net/URL;","getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","getResources(Ljava/lang/String;)Ljava/util/Enumeration;","getSystemClassLoader()Ljava/lang/ClassLoader;","getSystemResource(Ljava/lang/String;)Ljava/net/URL;","getSystemResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","getSystemResources(Ljava/lang/String;)Ljava/util/Enumeration;","getUnnamedModule()Ljava/lang/Module;","lambda$definePackage$1(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/NamedPackage;)Ljava/lang/NamedPackage;","loadClass(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;","loadClass(Ljava/lang/String;)Ljava/lang/Class;","loadLibrary(Ljava/lang/Class;Ljava/lang/String;Z)V","nameAndId(Ljava/lang/ClassLoader;)Ljava/lang/String;","registerAsParallelCapable()Z","toPackage(Ljava/lang/String;Ljava/lang/NamedPackage;Ljava/lang/Module;)Ljava/lang/Package;","trySetObjectField(Ljava/lang/String;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/lang/ClassLoaderHelper;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassLoaderHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["mapAlternativeName(Ljava/io/File;)Ljava/io/File;"]
  }
,
  {
    "className": "Ljava/lang/ClassNotFoundException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ClassNotFoundException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/lang/CloneNotSupportedException;",
    "module": "java.base",
    "source": "/java.base/java/lang/CloneNotSupportedException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Cloneable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Cloneable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Comparable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Comparable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ConditionalSpecialCasing$Entry;",
    "module": "java.base",
    "source": "/java.base/java/lang/ConditionalSpecialCasing$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getCondition()I","getLanguage()Ljava/lang/String;","getLowerCase()[C","getUpperCase()[C"]
  }
,
  {
    "className": "Ljava/lang/ConditionalSpecialCasing;",
    "module": "java.base",
    "source": "/java.base/java/lang/ConditionalSpecialCasing.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["isAfterI(Ljava/lang/String;I)Z","isAfterSoftDotted(Ljava/lang/String;I)Z","isBeforeDot(Ljava/lang/String;I)Z","isCased(I)Z","isConditionMet(Ljava/lang/String;ILjava/util/Locale;I)Z","isFinalCased(Ljava/lang/String;ILjava/util/Locale;)Z","isMoreAbove(Ljava/lang/String;I)Z","isSoftDotted(I)Z","lookUpTable(Ljava/lang/String;ILjava/util/Locale;Z)[C","toLowerCaseCharArray(Ljava/lang/String;ILjava/util/Locale;)[C","toLowerCaseEx(Ljava/lang/String;ILjava/util/Locale;)I","toUpperCaseCharArray(Ljava/lang/String;ILjava/util/Locale;)[C","toUpperCaseEx(Ljava/lang/String;ILjava/util/Locale;)I"]
  }
,
  {
    "className": "Ljava/lang/Double;",
    "module": "java.base",
    "source": "/java.base/java/lang/Double.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(D)V","<init>(Ljava/lang/String;)V","byteValue()B","compare(DD)I","compareTo(Ljava/lang/Double;)I","compareTo(Ljava/lang/Object;)I","doubleToLongBits(D)J","doubleToRawLongBits(D)J","doubleValue()D","equals(Ljava/lang/Object;)Z","floatValue()F","hashCode()I","hashCode(D)I","intValue()I","isFinite(D)Z","isInfinite(D)Z","isNaN(D)Z","longBitsToDouble(J)D","longValue()J","parseDouble(Ljava/lang/String;)D","shortValue()S","toHexString(D)Ljava/lang/String;","toString()Ljava/lang/String;","toString(D)Ljava/lang/String;","valueOf(D)Ljava/lang/Double;","valueOf(Ljava/lang/String;)Ljava/lang/Double;"]
  }
,
  {
    "className": "Ljava/lang/Enum;",
    "module": "java.base",
    "source": "/java.base/java/lang/Enum.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","clone()Ljava/lang/Object;","compareTo(Ljava/lang/Enum;)I","compareTo(Ljava/lang/Object;)I","equals(Ljava/lang/Object;)Z","getDeclaringClass()Ljava/lang/Class;","hashCode()I","name()Ljava/lang/String;","ordinal()I","toString()Ljava/lang/String;","valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;"]
  }
,
  {
    "className": "Ljava/lang/Error;",
    "module": "java.base",
    "source": "/java.base/java/lang/Error.class",
    "super": "Ljava/lang/Throwable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/Exception;",
    "module": "java.base",
    "source": "/java.base/java/lang/Exception.class",
    "super": "Ljava/lang/Throwable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/ExceptionInInitializerError;",
    "module": "java.base",
    "source": "/java.base/java/lang/ExceptionInInitializerError.class",
    "super": "Ljava/lang/LinkageError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/lang/FdLibm$Cbrt;",
    "module": "java.base",
    "source": "/java.base/java/lang/FdLibm$Cbrt.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["compute(D)D"]
  }
,
  {
    "className": "Ljava/lang/FdLibm;",
    "module": "java.base",
    "source": "/java.base/java/lang/FdLibm.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["__HI(D)I","__HI(DI)D","__LO(DI)D"]
  }
,
  {
    "className": "Ljava/lang/Float;",
    "module": "java.base",
    "source": "/java.base/java/lang/Float.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(F)V","<init>(Ljava/lang/String;)V","byteValue()B","compare(FF)I","compareTo(Ljava/lang/Float;)I","compareTo(Ljava/lang/Object;)I","doubleValue()D","equals(Ljava/lang/Object;)Z","floatToIntBits(F)I","floatToRawIntBits(F)I","floatValue()F","hashCode()I","hashCode(F)I","intBitsToFloat(I)F","intValue()I","isNaN(F)Z","longValue()J","parseFloat(Ljava/lang/String;)F","shortValue()S","toString()Ljava/lang/String;","toString(F)Ljava/lang/String;","valueOf(F)Ljava/lang/Float;","valueOf(Ljava/lang/String;)Ljava/lang/Float;"]
  }
,
  {
    "className": "Ljava/lang/IllegalAccessError;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalAccessError.class",
    "super": "Ljava/lang/IncompatibleClassChangeError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalAccessException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalAccessException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalArgumentException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalArgumentException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalCallerException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalCallerException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalMonitorStateException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalMonitorStateException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalStateException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalStateException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/IllegalThreadStateException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IllegalThreadStateException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/IncompatibleClassChangeError;",
    "module": "java.base",
    "source": "/java.base/java/lang/IncompatibleClassChangeError.class",
    "super": "Ljava/lang/LinkageError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/IndexOutOfBoundsException;",
    "module": "java.base",
    "source": "/java.base/java/lang/IndexOutOfBoundsException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/InheritableThreadLocal;",
    "module": "java.base",
    "source": "/java.base/java/lang/InheritableThreadLocal.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createMap(Ljava/lang/Thread;Ljava/lang/Object;)V","getMap(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;","lambda$createMap$0(Ljava/lang/Object;)Ljava/lang/ThreadLocal$ThreadLocalMap;"]
  }
,
  {
    "className": "Ljava/lang/InstantiationError;",
    "module": "java.base",
    "source": "/java.base/java/lang/InstantiationError.class",
    "super": "Ljava/lang/IncompatibleClassChangeError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/InstantiationException;",
    "module": "java.base",
    "source": "/java.base/java/lang/InstantiationException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Integer$IntegerCache;",
    "module": "java.base",
    "source": "/java.base/java/lang/Integer$IntegerCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Integer;",
    "module": "java.base",
    "source": "/java.base/java/lang/Integer.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/String;)V","bitCount(I)I","byteValue()B","compare(II)I","compareTo(Ljava/lang/Integer;)I","compareTo(Ljava/lang/Object;)I","decode(Ljava/lang/String;)Ljava/lang/Integer;","doubleValue()D","equals(Ljava/lang/Object;)Z","floatValue()F","formatUnsignedInt(II[BII)V","getChars(II[B)I","getInteger(Ljava/lang/String;)Ljava/lang/Integer;","getInteger(Ljava/lang/String;I)Ljava/lang/Integer;","getInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;","hashCode()I","hashCode(I)I","highestOneBit(I)I","intValue()I","longValue()J","max(II)I","numberOfLeadingZeros(I)I","numberOfTrailingZeros(I)I","parseInt(Ljava/lang/CharSequence;III)I","parseInt(Ljava/lang/String;)I","parseInt(Ljava/lang/String;I)I","parseUnsignedInt(Ljava/lang/String;)I","parseUnsignedInt(Ljava/lang/String;I)I","reverseBytes(I)I","rotateLeft(II)I","shortValue()S","stringSize(I)I","sum(II)I","toHexString(I)Ljava/lang/String;","toString()Ljava/lang/String;","toString(I)Ljava/lang/String;","toString(II)Ljava/lang/String;","toUnsignedLong(I)J","toUnsignedString0(II)Ljava/lang/String;","valueOf(I)Ljava/lang/Integer;","valueOf(Ljava/lang/String;)Ljava/lang/Integer;","valueOf(Ljava/lang/String;I)Ljava/lang/Integer;"]
  }
,
  {
    "className": "Ljava/lang/InternalError;",
    "module": "java.base",
    "source": "/java.base/java/lang/InternalError.class",
    "super": "Ljava/lang/VirtualMachineError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/InterruptedException;",
    "module": "java.base",
    "source": "/java.base/java/lang/InterruptedException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/Iterable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Iterable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forEach(Ljava/util/function/Consumer;)V"]
  }
,
  {
    "className": "Ljava/lang/LinkageError;",
    "module": "java.base",
    "source": "/java.base/java/lang/LinkageError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Long$LongCache;",
    "module": "java.base",
    "source": "/java.base/java/lang/Long$LongCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Long;",
    "module": "java.base",
    "source": "/java.base/java/lang/Long.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J)V","<init>(Ljava/lang/String;)V","bitCount(J)I","byteValue()B","compare(JJ)I","compareTo(Ljava/lang/Long;)I","compareTo(Ljava/lang/Object;)I","decode(Ljava/lang/String;)Ljava/lang/Long;","divideUnsigned(JJ)J","doubleValue()D","equals(Ljava/lang/Object;)Z","fastUUID(JJ)Ljava/lang/String;","floatValue()F","formatUnsignedLong0(JI[BII)V","getChars(JI[B)I","getLong(Ljava/lang/String;)Ljava/lang/Long;","getLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;","hashCode()I","hashCode(J)I","highestOneBit(J)J","intValue()I","longValue()J","numberOfLeadingZeros(J)I","numberOfTrailingZeros(J)I","parseLong(Ljava/lang/CharSequence;III)J","parseLong(Ljava/lang/String;)J","parseLong(Ljava/lang/String;I)J","remainderUnsigned(JJ)J","reverseBytes(J)J","rotateLeft(JI)J","shortValue()S","signum(J)I","stringSize(J)I","toBinaryString(J)Ljava/lang/String;","toHexString(J)Ljava/lang/String;","toOctalString(J)Ljava/lang/String;","toString()Ljava/lang/String;","toString(J)Ljava/lang/String;","toString(JI)Ljava/lang/String;","toUnsignedBigInteger(J)Ljava/math/BigInteger;","toUnsignedString(J)Ljava/lang/String;","toUnsignedString(JI)Ljava/lang/String;","toUnsignedString0(JI)Ljava/lang/String;","valueOf(J)Ljava/lang/Long;","valueOf(Ljava/lang/String;)Ljava/lang/Long;","valueOf(Ljava/lang/String;I)Ljava/lang/Long;"]
  }
,
  {
    "className": "Ljava/lang/Math;",
    "module": "java.base",
    "source": "/java.base/java/lang/Math.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["abs(D)D","abs(I)I","abs(J)J","addExact(II)I","addExact(JJ)J","cbrt(D)D","ceil(D)D","copySign(DD)D","floor(D)D","floorDiv(II)I","floorDiv(JI)J","floorDiv(JJ)J","floorMod(II)I","floorMod(JI)I","floorMod(JJ)J","getExponent(D)I","log(D)D","max(DD)D","max(FF)F","max(II)I","max(JJ)J","min(FF)F","min(II)I","min(JJ)J","multiplyExact(II)I","multiplyExact(JI)J","multiplyExact(JJ)J","pow(DD)D","powerOfTwoD(I)D","round(D)J","round(F)I","scalb(DI)D","sqrt(D)D","subtractExact(JJ)J","toIntExact(J)I"]
  }
,
  {
    "className": "Ljava/lang/Module$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/Module$1.class",
    "super": "Ljdk/internal/org/objectweb/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Module;ILjdk/internal/org/objectweb/asm/ClassVisitor;Ljdk/internal/org/objectweb/asm/ClassWriter;)V","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitAttribute(Ljdk/internal/org/objectweb/asm/Attribute;)V","visitModule(Ljava/lang/String;ILjava/lang/String;)Ljdk/internal/org/objectweb/asm/ModuleVisitor;"]
  }
,
  {
    "className": "Ljava/lang/Module$1DummyModuleInfo;",
    "module": "java.base",
    "source": "/java.base/java/lang/Module$1DummyModuleInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Module$2;",
    "module": "java.base",
    "source": "/java.base/java/lang/Module$2.class",
    "super": "Ljava/lang/ClassLoader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Module;Ljava/lang/ClassLoader;[B)V"]
  }
,
  {
    "className": "Ljava/lang/Module;",
    "module": "java.base",
    "source": "/java.base/java/lang/Module.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","allows(Ljava/util/Set;Ljava/lang/Module;)Z","canRead(Ljava/lang/Module;)Z","canUse(Ljava/lang/Class;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getClassLoader()Ljava/lang/ClassLoader;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getDescriptor()Ljava/lang/module/ModuleDescriptor;","getName()Ljava/lang/String;","getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","implIsExportedOrOpen(Ljava/lang/String;Ljava/lang/Module;Z)Z","isExported(Ljava/lang/String;)Z","isExported(Ljava/lang/String;Ljava/lang/Module;)Z","isNamed()Z","isOpen(Ljava/lang/String;)Z","isOpen(Ljava/lang/String;Ljava/lang/Module;)Z","isReflectivelyExported(Ljava/lang/String;Ljava/lang/Module;)Z","isReflectivelyExportedOrOpen(Ljava/lang/String;Ljava/lang/Module;Z)Z","isReflectivelyOpened(Ljava/lang/String;Ljava/lang/Module;)Z","isStaticallyExportedOrOpen(Ljava/lang/String;Ljava/lang/Module;Z)Z","loadModuleInfoClass()Ljava/lang/Class;","loadModuleInfoClass(Ljava/io/InputStream;)Ljava/lang/Class;","moduleInfoClass()Ljava/lang/Class;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/ModuleLayer;",
    "module": "java.base",
    "source": "/java.base/java/lang/ModuleLayer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/NamedPackage;",
    "module": "java.base",
    "source": "/java.base/java/lang/NamedPackage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Module;)V","module()Ljava/lang/Module;","packageName()Ljava/lang/String;","toPackage(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/Package;"]
  }
,
  {
    "className": "Ljava/lang/NegativeArraySizeException;",
    "module": "java.base",
    "source": "/java.base/java/lang/NegativeArraySizeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/NoClassDefFoundError;",
    "module": "java.base",
    "source": "/java.base/java/lang/NoClassDefFoundError.class",
    "super": "Ljava/lang/LinkageError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/NoSuchFieldError;",
    "module": "java.base",
    "source": "/java.base/java/lang/NoSuchFieldError.class",
    "super": "Ljava/lang/IncompatibleClassChangeError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/NoSuchFieldException;",
    "module": "java.base",
    "source": "/java.base/java/lang/NoSuchFieldException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/NoSuchMethodError;",
    "module": "java.base",
    "source": "/java.base/java/lang/NoSuchMethodError.class",
    "super": "Ljava/lang/IncompatibleClassChangeError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/NoSuchMethodException;",
    "module": "java.base",
    "source": "/java.base/java/lang/NoSuchMethodException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/NullPointerException;",
    "module": "java.base",
    "source": "/java.base/java/lang/NullPointerException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Number;",
    "module": "java.base",
    "source": "/java.base/java/lang/Number.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","byteValue()B","shortValue()S"]
  }
,
  {
    "className": "Ljava/lang/NumberFormatException;",
    "module": "java.base",
    "source": "/java.base/java/lang/NumberFormatException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","forCharSequence(Ljava/lang/CharSequence;III)Ljava/lang/NumberFormatException;","forInputString(Ljava/lang/String;)Ljava/lang/NumberFormatException;"]
  }
,
  {
    "className": "Ljava/lang/Object;",
    "module": "java.base",
    "source": "/java.base/java/lang/Object.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getClass()Ljava/lang/Class;","hashCode()I","notify()V","notifyAll()V","toString()Ljava/lang/String;","wait()V","wait(J)V","wait(JI)V"]
  }
,
  {
    "className": "Ljava/lang/OutOfMemoryError;",
    "module": "java.base",
    "source": "/java.base/java/lang/OutOfMemoryError.class",
    "super": "Ljava/lang/VirtualMachineError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Package$1PackageInfoProxy;",
    "module": "java.base",
    "source": "/java.base/java/lang/Package$1PackageInfoProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Package$VersionInfo;",
    "module": "java.base",
    "source": "/java.base/java/lang/Package$VersionInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)V","getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;)Ljava/lang/Package$VersionInfo;"]
  }
,
  {
    "className": "Ljava/lang/Package;",
    "module": "java.base",
    "source": "/java.base/java/lang/Package.class",
    "super": "Ljava/lang/NamedPackage;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Module;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;Ljava/lang/ClassLoader;)V","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getImplementationTitle()Ljava/lang/String;","getImplementationVersion()Ljava/lang/String;","getName()Ljava/lang/String;","getPackage(Ljava/lang/String;)Ljava/lang/Package;","getPackageInfo()Ljava/lang/Class;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$ExternalData;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$ExternalData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[B)V","equals(Ljava/lang/Object;)Z","getBytes()[B","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringEntry;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map$Entry;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getKey()Ljava/lang/String;","getValue()Ljava/lang/Object;","getValue()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringEntrySet$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringEntrySet$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ProcessEnvironment$StringEntrySet;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringEntrySet$2;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringEntrySet$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","getKey()Ljava/lang/Object;","getKey()Ljava/lang/ProcessEnvironment$Variable;","getValue()Ljava/lang/Object;","getValue()Ljava/lang/ProcessEnvironment$Value;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringEntrySet;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringEntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","clear()V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","vvEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringEnvironment;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringEnvironment.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","clear()V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","get(Ljava/lang/Object;)Ljava/lang/String;","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/String;","size()I","toString(Ljava/lang/ProcessEnvironment$Value;)Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringKeySet$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringKeySet$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ProcessEnvironment$StringKeySet;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/lang/String;","remove()V"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringKeySet;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringKeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","clear()V","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringValues$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringValues$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ProcessEnvironment$StringValues;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/lang/String;","remove()V"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$StringValues;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$StringValues.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","clear()V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$Value;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$Value.class",
    "super": "Ljava/lang/ProcessEnvironment$ExternalData;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[B)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/ProcessEnvironment$Value;)I","equals(Ljava/lang/Object;)Z","valueOf(Ljava/lang/String;)Ljava/lang/ProcessEnvironment$Value;","valueOf([B)Ljava/lang/ProcessEnvironment$Value;","valueOfQueryOnly(Ljava/lang/Object;)Ljava/lang/ProcessEnvironment$Value;","valueOfQueryOnly(Ljava/lang/String;)Ljava/lang/ProcessEnvironment$Value;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment$Variable;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment$Variable.class",
    "super": "Ljava/lang/ProcessEnvironment$ExternalData;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[B)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/ProcessEnvironment$Variable;)I","equals(Ljava/lang/Object;)Z","valueOf(Ljava/lang/String;)Ljava/lang/ProcessEnvironment$Variable;","valueOf([B)Ljava/lang/ProcessEnvironment$Variable;","valueOfQueryOnly(Ljava/lang/Object;)Ljava/lang/ProcessEnvironment$Variable;","valueOfQueryOnly(Ljava/lang/String;)Ljava/lang/ProcessEnvironment$Variable;"]
  }
,
  {
    "className": "Ljava/lang/ProcessEnvironment;",
    "module": "java.base",
    "source": "/java.base/java/lang/ProcessEnvironment.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","arrayCompare([B[B)I","arrayEquals([B[B)Z","arrayHash([B)I","environ()[[B","getenv()Ljava/util/Map;","getenv(Ljava/lang/String;)Ljava/lang/String;","validateValue(Ljava/lang/String;)V","validateVariable(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/Readable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Readable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ReflectiveOperationException;",
    "module": "java.base",
    "source": "/java.base/java/lang/ReflectiveOperationException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/Runnable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Runnable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Runtime$Version;",
    "module": "java.base",
    "source": "/java.base/java/lang/Runtime$Version.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V","build()Ljava/util/Optional;","compare(Ljava/lang/Runtime$Version;Z)I","compareBuild(Ljava/lang/Runtime$Version;)I","compareOptional(Ljava/lang/Runtime$Version;)I","comparePre(Ljava/lang/Runtime$Version;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/Runtime$Version;)I","compareVersion(Ljava/lang/Runtime$Version;)I","equals(Ljava/lang/Object;)Z","equalsIgnoreOptional(Ljava/lang/Object;)Z","feature()I","hashCode()I","isSimpleNumber(Ljava/lang/String;)Z","lambda$toString$0(Ljava/lang/StringBuilder;Ljava/lang/String;)V","optional()Ljava/util/Optional;","parse(Ljava/lang/String;)Ljava/lang/Runtime$Version;","pre()Ljava/util/Optional;","toString()Ljava/lang/String;","version()Ljava/util/List;"]
  }
,
  {
    "className": "Ljava/lang/Runtime$VersionPattern;",
    "module": "java.base",
    "source": "/java.base/java/lang/Runtime$VersionPattern.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Runtime;",
    "module": "java.base",
    "source": "/java.base/java/lang/Runtime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addShutdownHook(Ljava/lang/Thread;)V","availableProcessors()I","exit(I)V","freeMemory()J","gc()V","getRuntime()Ljava/lang/Runtime;","loadLibrary0(Ljava/lang/Class;Ljava/lang/String;)V","maxMemory()J","removeShutdownHook(Ljava/lang/Thread;)Z","totalMemory()J"]
  }
,
  {
    "className": "Ljava/lang/RuntimeException;",
    "module": "java.base",
    "source": "/java.base/java/lang/RuntimeException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/RuntimePermission;",
    "module": "java.base",
    "source": "/java.base/java/lang/RuntimePermission.class",
    "super": "Ljava/security/BasicPermission;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/SecurityException;",
    "module": "java.base",
    "source": "/java.base/java/lang/SecurityException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/SecurityManager;",
    "module": "java.base",
    "source": "/java.base/java/lang/SecurityManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getClassContext()[Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljava/lang/Short$ShortCache;",
    "module": "java.base",
    "source": "/java.base/java/lang/Short$ShortCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Short;",
    "module": "java.base",
    "source": "/java.base/java/lang/Short.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["byteValue()B","compare(SS)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/Short;)I","decode(Ljava/lang/String;)Ljava/lang/Short;","doubleValue()D","equals(Ljava/lang/Object;)Z","floatValue()F","hashCode()I","hashCode(S)I","intValue()I","longValue()J","parseShort(Ljava/lang/String;I)S","shortValue()S","toString()Ljava/lang/String;","toUnsignedInt(S)I","valueOf(Ljava/lang/String;)Ljava/lang/Short;","valueOf(Ljava/lang/String;I)Ljava/lang/Short;","valueOf(S)Ljava/lang/Short;"]
  }
,
  {
    "className": "Ljava/lang/Shutdown$Lock;",
    "module": "java.base",
    "source": "/java.base/java/lang/Shutdown$Lock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Shutdown;",
    "module": "java.base",
    "source": "/java.base/java/lang/Shutdown.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["add(IZLjava/lang/Runnable;)V","beforeHalt()V","exit(I)V","halt(I)V","halt0(I)V","runHooks()V","shutdown()V"]
  }
,
  {
    "className": "Ljava/lang/StackOverflowError;",
    "module": "java.base",
    "source": "/java.base/java/lang/StackOverflowError.class",
    "super": "Ljava/lang/VirtualMachineError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/StackTraceElement;",
    "module": "java.base",
    "source": "/java.base/java/lang/StackTraceElement.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","dropClassLoaderName()Z","dropModuleVersion()Z","equals(Ljava/lang/Object;)Z","getClassName()Ljava/lang/String;","getFileName()Ljava/lang/String;","getLineNumber()I","getMethodName()Ljava/lang/String;","hashCode()I","isNativeMethod()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StackWalker$Option;",
    "module": "java.base",
    "source": "/java.base/java/lang/StackWalker$Option.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/StackWalker$StackFrame;",
    "module": "java.base",
    "source": "/java.base/java/lang/StackWalker$StackFrame.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/StackWalker;",
    "module": "java.base",
    "source": "/java.base/java/lang/StackWalker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/EnumSet;)V","<init>(Ljava/util/EnumSet;ILjava/lang/StackWalker$ExtendedOption;)V","checkPermission(Ljava/util/Set;)V","getInstance()Ljava/lang/StackWalker;","getInstance(Ljava/lang/StackWalker$Option;)Ljava/lang/StackWalker;","getInstance(Ljava/util/Set;)Ljava/lang/StackWalker;","hasOption(Ljava/lang/StackWalker$Option;)Z","toEnumSet(Ljava/util/Set;)Ljava/util/EnumSet;","walk(Ljava/util/function/Function;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/StrictMath;",
    "module": "java.base",
    "source": "/java.base/java/lang/StrictMath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["cbrt(D)D","ceil(D)D","floor(D)D","floorOrCeil(DDDD)D"]
  }
,
  {
    "className": "Ljava/lang/String$CaseInsensitiveComparator;",
    "module": "java.base",
    "source": "/java.base/java/lang/String$CaseInsensitiveComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/lang/String;Ljava/lang/String;)I"]
  }
,
  {
    "className": "Ljava/lang/String;",
    "module": "java.base",
    "source": "/java.base/java/lang/String.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;","Ljava/lang/CharSequence;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/AbstractStringBuilder;Ljava/lang/Void;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/StringBuilder;)V","<init>([B)V","<init>([BB)V","<init>([BII)V","<init>([BIII)V","<init>([BIILjava/lang/String;)V","<init>([BIILjava/nio/charset/Charset;)V","<init>([BLjava/lang/String;)V","<init>([BLjava/nio/charset/Charset;)V","<init>([C)V","<init>([CII)V","<init>([CIILjava/lang/Void;)V","<init>([III)V","charAt(I)C","chars()Ljava/util/stream/IntStream;","checkBoundsBeginEnd(III)V","checkBoundsOffCount(III)V","checkIndex(II)V","checkOffset(II)V","codePointAt(I)I","codePointBefore(I)I","codePointCount(II)I","coder()B","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/String;)I","compareToIgnoreCase(Ljava/lang/String;)I","concat(Ljava/lang/String;)Ljava/lang/String;","contains(Ljava/lang/CharSequence;)Z","copyValueOf([CII)Ljava/lang/String;","endsWith(Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","equalsIgnoreCase(Ljava/lang/String;)Z","format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getBytes()[B","getBytes(II[BI)V","getBytes(Ljava/lang/String;)[B","getBytes(Ljava/nio/charset/Charset;)[B","getBytes([BIB)V","getChars(II[CI)V","hashCode()I","indexOf(I)I","indexOf(II)I","indexOf(Ljava/lang/String;)I","indexOf(Ljava/lang/String;I)I","indexOf([BBILjava/lang/String;I)I","intern()Ljava/lang/String;","isEmpty()Z","isLatin1()Z","join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;","lastIndexOf(I)I","lastIndexOf(II)I","lastIndexOf(Ljava/lang/String;)I","lastIndexOf(Ljava/lang/String;I)I","lastIndexOf([BBILjava/lang/String;I)I","length()I","matches(Ljava/lang/String;)Z","offsetByCodePoints(II)I","rangeCheck([CII)Ljava/lang/Void;","regionMatches(ILjava/lang/String;II)Z","regionMatches(ZILjava/lang/String;II)Z","replace(CC)Ljava/lang/String;","replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;","replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","replaceFirst(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","split(Ljava/lang/String;)[Ljava/lang/String;","split(Ljava/lang/String;I)[Ljava/lang/String;","startsWith(Ljava/lang/String;)Z","startsWith(Ljava/lang/String;I)Z","subSequence(II)Ljava/lang/CharSequence;","substring(I)Ljava/lang/String;","substring(II)Ljava/lang/String;","toCharArray()[C","toLowerCase()Ljava/lang/String;","toLowerCase(Ljava/util/Locale;)Ljava/lang/String;","toString()Ljava/lang/String;","toUpperCase()Ljava/lang/String;","toUpperCase(Ljava/util/Locale;)Ljava/lang/String;","trim()Ljava/lang/String;","value()[B","valueOf(C)Ljava/lang/String;","valueOf(D)Ljava/lang/String;","valueOf(F)Ljava/lang/String;","valueOf(I)Ljava/lang/String;","valueOf(J)Ljava/lang/String;","valueOf(Ljava/lang/Object;)Ljava/lang/String;","valueOf(Z)Ljava/lang/String;","valueOf([C)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StringBuffer;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringBuffer.class",
    "super": "Ljava/lang/AbstractStringBuilder;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;","Ljava/lang/CharSequence;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/lang/String;)V","append(C)Ljava/lang/StringBuffer;","append(I)Ljava/lang/StringBuffer;","append(J)Ljava/lang/StringBuffer;","append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;","append(Ljava/lang/Object;)Ljava/lang/StringBuffer;","append(Ljava/lang/String;)Ljava/lang/StringBuffer;","append([C)Ljava/lang/StringBuffer;","append([CII)Ljava/lang/StringBuffer;","charAt(I)C","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/StringBuffer;)I","delete(II)Ljava/lang/StringBuffer;","deleteCharAt(I)Ljava/lang/StringBuffer;","getBytes([BIB)V","insert(IC)Ljava/lang/StringBuffer;","length()I","reverse()Ljava/lang/StringBuffer;","setCharAt(IC)V","setLength(I)V","subSequence(II)Ljava/lang/CharSequence;","substring(I)Ljava/lang/String;","substring(II)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StringBuilder;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringBuilder.class",
    "super": "Ljava/lang/AbstractStringBuilder;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;","Ljava/lang/CharSequence;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/lang/CharSequence;)V","<init>(Ljava/lang/String;)V","append(C)Ljava/lang/AbstractStringBuilder;","append(C)Ljava/lang/Appendable;","append(C)Ljava/lang/StringBuilder;","append(D)Ljava/lang/StringBuilder;","append(F)Ljava/lang/StringBuilder;","append(I)Ljava/lang/StringBuilder;","append(J)Ljava/lang/StringBuilder;","append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;","append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;","append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;","append(Ljava/lang/Object;)Ljava/lang/StringBuilder;","append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;","append(Ljava/lang/String;)Ljava/lang/StringBuilder;","append(Z)Ljava/lang/StringBuilder;","append([C)Ljava/lang/AbstractStringBuilder;","append([C)Ljava/lang/StringBuilder;","append([CII)Ljava/lang/StringBuilder;","appendCodePoint(I)Ljava/lang/StringBuilder;","capacity()I","charAt(I)C","codePointAt(I)I","codePointBefore(I)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/StringBuilder;)I","delete(II)Ljava/lang/StringBuilder;","deleteCharAt(I)Ljava/lang/StringBuilder;","ensureCapacity(I)V","getChars(II[CI)V","indexOf(Ljava/lang/String;I)I","insert(IC)Ljava/lang/StringBuilder;","insert(IJ)Ljava/lang/StringBuilder;","insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;","insert(ILjava/lang/String;)Ljava/lang/StringBuilder;","insert(I[C)Ljava/lang/StringBuilder;","lastIndexOf(Ljava/lang/String;I)I","length()I","offsetByCodePoints(II)I","replace(IILjava/lang/String;)Ljava/lang/StringBuilder;","reverse()Ljava/lang/StringBuilder;","setCharAt(IC)V","setLength(I)V","subSequence(II)Ljava/lang/CharSequence;","substring(I)Ljava/lang/String;","substring(II)Ljava/lang/String;","toString()Ljava/lang/String;","trimToSize()V"]
  }
,
  {
    "className": "Ljava/lang/StringCoding$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringCoding$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Ljava/lang/StringCoding$Result;"]
  }
,
  {
    "className": "Ljava/lang/StringCoding$Result;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringCoding$Result.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","with()Ljava/lang/StringCoding$Result;","with([BB)Ljava/lang/StringCoding$Result;","with([CII)Ljava/lang/StringCoding$Result;"]
  }
,
  {
    "className": "Ljava/lang/StringCoding$StringDecoder;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringCoding$StringDecoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;Ljava/lang/String;)V","charsetName()Ljava/lang/String;","decode([BII)Ljava/lang/StringCoding$Result;","requestedCharsetName()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StringCoding$StringEncoder;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringCoding$StringEncoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;Ljava/lang/String;)V","charsetName()Ljava/lang/String;","encode(B[B)[B","requestedCharsetName()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StringCoding;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringCoding.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decode(Ljava/lang/String;[BII)Ljava/lang/StringCoding$Result;","decode(Ljava/nio/charset/Charset;[BII)Ljava/lang/StringCoding$Result;","decode([BII)Ljava/lang/StringCoding$Result;","decodeASCII([BII)Ljava/lang/StringCoding$Result;","decodeLatin1([BII)Ljava/lang/StringCoding$Result;","decodeUTF8([BIIZ)Ljava/lang/StringCoding$Result;","decodeUTF8_0([BIIZ)Ljava/lang/StringCoding$Result;","deref(Ljava/lang/ThreadLocal;)Ljava/lang/Object;","encode(B[B)[B","encode(Ljava/lang/String;B[B)[B","encode(Ljava/nio/charset/Charset;B[B)[B","encode8859_1(B[B)[B","encode8859_1(B[BZ)[B","encodeASCII(B[B)[B","encodeUTF8(B[BZ)[B","encodeUTF8_UTF16([BZ)[B","getBytesUTF8NoRepl(Ljava/lang/String;)[B","hasNegatives([BII)Z","implEncodeISOArray([BI[BII)I","isMalformed3(III)Z","isMalformed3_2(II)Z","isMalformed4(III)Z","isMalformed4_2(II)Z","isMalformed4_3(I)Z","isNotContinuation(I)Z","lookupCharset(Ljava/lang/String;)Ljava/nio/charset/Charset;","malformedN([BII)I","newStringUTF8NoRepl([BII)Ljava/lang/String;","safeTrim([BIZ)[B","scale(IF)I","set(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V","throwMalformed(II)V","throwUnmappable(II)V"]
  }
,
  {
    "className": "Ljava/lang/StringConcatHelper;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringConcatHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkOverflow(I)I","mixCoder(BB)B","mixCoder(BC)B","mixCoder(BI)B","mixCoder(BJ)B","mixCoder(BLjava/lang/String;)B","mixCoder(BS)B","mixCoder(BZ)B","mixLen(IB)I","mixLen(IC)I","mixLen(II)I","mixLen(IJ)I","mixLen(ILjava/lang/String;)I","mixLen(IS)I","mixLen(IZ)I","newString([BIB)Ljava/lang/String;","prepend(I[BBB)I","prepend(I[BBC)I","prepend(I[BBI)I","prepend(I[BBJ)I","prepend(I[BBLjava/lang/String;)I","prepend(I[BBS)I","prepend(I[BBZ)I"]
  }
,
  {
    "className": "Ljava/lang/StringIndexOutOfBoundsException;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringIndexOutOfBoundsException.class",
    "super": "Ljava/lang/IndexOutOfBoundsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/StringLatin1$CharsSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringLatin1$CharsSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","<init>([BIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/IntConsumer;)Z","trySplit()Ljava/util/Spliterator$OfInt;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/lang/StringLatin1;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringLatin1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["canEncode(I)Z","charAt([BI)C","compareTo([B[B)I","compareTo([B[BII)I","compareToCI([B[B)I","compareToCI_UTF16([B[B)I","compareToUTF16([B[B)I","compareToUTF16([B[BII)I","compareToUTF16Values([B[BII)I","equals([B[B)Z","fillNull([BII)V","getBytes([BII[BI)V","getChar([BI)C","getChars([BII[CI)V","hashCode([B)I","indexOf([BII)I","indexOf([BI[BII)I","indexOf([B[B)I","inflate([BI[BII)V","inflate([BI[CII)V","lastIndexOf([BII)I","lastIndexOf([BI[BII)I","length([B)I","newString([BII)Ljava/lang/String;","regionMatchesCI([BI[BII)Z","regionMatchesCI_UTF16([BI[BII)Z","replace([BCC)Ljava/lang/String;","toBytes(C)[B","toBytes([III)[B","toChars([B)[C","toLowerCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;","toLowerCaseEx(Ljava/lang/String;[BILjava/util/Locale;Z)Ljava/lang/String;","toUpperCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;","toUpperCaseEx(Ljava/lang/String;[BILjava/util/Locale;Z)Ljava/lang/String;","trim([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/StringUTF16$CharsSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringUTF16$CharsSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","<init>([BIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/IntConsumer;)Z","trySplit()Ljava/util/Spliterator$OfInt;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/lang/StringUTF16;",
    "module": "java.base",
    "source": "/java.base/java/lang/StringUTF16.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["charAt([BI)C","checkBoundsBeginEnd(II[B)V","checkBoundsOffCount(II[B)V","checkIndex(I[B)V","checkOffset(I[B)V","codePointAt([BII)I","codePointAt([BIIZ)I","codePointAtSB([BII)I","codePointBefore([BI)I","codePointBefore([BIZ)I","codePointBeforeSB([BI)I","codePointCount([BII)I","codePointCount([BIIZ)I","compareTo([B[B)I","compareTo([B[BII)I","compareToCI([B[B)I","compareToCI_Latin1([B[B)I","compareToLatin1([B[B)I","compareToLatin1([B[BII)I","compareValues([B[BII)I","compress([BII)[B","compress([BI[BII)I","compress([CII)[B","compress([CI[BII)I","equals([B[B)Z","fillNull([BII)V","getBytes([BII[BI)V","getChar([BI)C","getChars(III[B)I","getChars(II[B)I","getChars(JII[B)I","getChars(JI[B)I","getChars([BII[CI)V","hashCode([B)I","indexOf([BII)I","indexOf([BI[BII)I","indexOf([B[B)I","indexOfChar([BIII)I","indexOfCharUnsafe([BIII)I","indexOfLatin1([BI[BII)I","indexOfLatin1([B[B)I","indexOfLatin1Unsafe([BI[BII)I","indexOfSupplementary([BIII)I","indexOfUnsafe([BI[BII)I","lastIndexOf([BII)I","lastIndexOf([BI[BII)I","lastIndexOfLatin1([BI[BII)I","lastIndexOfSupplementary([BII)I","length([B)I","newBytesFor(I)[B","newString([BII)Ljava/lang/String;","putChar([BII)V","putCharSB([BII)V","putChars([BI[CII)V","putCharsAt([BICCCC)I","putCharsAt([BICCCCC)I","putCharsSB([BILjava/lang/CharSequence;II)V","putCharsSB([BI[CII)V","regionMatchesCI([BI[BII)Z","regionMatchesCI_Latin1([BI[BII)Z","replace([BCC)Ljava/lang/String;","reverse([BI)V","reverseAllValidSurrogatePairs([BI)V","toBytes(C)[B","toBytes([CII)[B","toBytes([III)[B","toChars([B)[C","toLowerCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;","toLowerCaseEx(Ljava/lang/String;[B[BILjava/util/Locale;Z)Ljava/lang/String;","toUpperCase(Ljava/lang/String;[BLjava/util/Locale;)Ljava/lang/String;","toUpperCaseEx(Ljava/lang/String;[B[BILjava/util/Locale;Z)Ljava/lang/String;","trim([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/System$2;",
    "module": "java.base",
    "source": "/java.base/java/lang/System$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaLangAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["blockedOn(Lsun/nio/ch/Interruptible;)V","createOrGetClassLoaderValueMap(Ljava/lang/ClassLoader;)Ljava/util/concurrent/ConcurrentHashMap;","currentThread0()Ljava/lang/Thread;","fastUUID(JJ)Ljava/lang/String;","getBytesUTF8NoRepl(Ljava/lang/String;)[B","getDeclaredPublicMethods(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/util/List;","getEnumConstantsShared(Ljava/lang/Class;)[Ljava/lang/Enum;","getInheritedResourceContainer(Ljava/lang/Thread;)Lcom/alibaba/rcm/internal/AbstractResourceContainer;","getServicesCatalog(Ljava/lang/ModuleLayer;)Ljdk/internal/module/ServicesCatalog;","getWispTask(Ljava/lang/Thread;)Lcom/alibaba/wisp/engine/WispTask;","isReflectivelyExported(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Module;)Z","isReflectivelyOpened(Ljava/lang/Module;Ljava/lang/String;Ljava/lang/Module;)Z","newStringUTF8NoRepl([BII)Ljava/lang/String;","setWispAlive(Ljava/lang/Thread;Z)V","setWispTask(Ljava/lang/Thread;Lcom/alibaba/wisp/engine/WispTask;)V","yield0()V"]
  }
,
  {
    "className": "Ljava/lang/System$Logger$Level;",
    "module": "java.base",
    "source": "/java.base/java/lang/System$Logger$Level.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getName()Ljava/lang/String;","getSeverity()I"]
  }
,
  {
    "className": "Ljava/lang/System$Logger;",
    "module": "java.base",
    "source": "/java.base/java/lang/System$Logger.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["log(Ljava/lang/System$Logger$Level;Ljava/lang/String;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/System$LoggerFinder;",
    "module": "java.base",
    "source": "/java.base/java/lang/System$LoggerFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Void;)V","accessProvider()Ljava/lang/System$LoggerFinder;","checkPermission()Ljava/lang/Void;","getLoggerFinder()Ljava/lang/System$LoggerFinder;","lambda$accessProvider$0()Ljava/lang/System$LoggerFinder;"]
  }
,
  {
    "className": "Ljava/lang/System;",
    "module": "java.base",
    "source": "/java.base/java/lang/System.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V","checkKey(Ljava/lang/String;)V","clearProperty(Ljava/lang/String;)Ljava/lang/String;","console()Ljava/io/Console;","currentTimeMillis()J","exit(I)V","gc()V","getLogger(Ljava/lang/String;)Ljava/lang/System$Logger;","getProperties()Ljava/util/Properties;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getSecurityManager()Ljava/lang/SecurityManager;","getenv()Ljava/util/Map;","getenv(Ljava/lang/String;)Ljava/lang/String;","identityHashCode(Ljava/lang/Object;)I","lineSeparator()Ljava/lang/String;","loadLibrary(Ljava/lang/String;)V","mapLibraryName(Ljava/lang/String;)Ljava/lang/String;","nanoTime()J","setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/Thread$State;",
    "module": "java.base",
    "source": "/java.base/java/lang/Thread$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Thread$UncaughtExceptionHandler;",
    "module": "java.base",
    "source": "/java.base/java/lang/Thread$UncaughtExceptionHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/Thread;",
    "module": "java.base",
    "source": "/java.base/java/lang/Thread.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Runnable;Ljava/lang/String;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/ThreadGroup;Z)V","<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V","<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JLjava/security/AccessControlContext;Z)V","<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JZ)V","blockedOn(Lsun/nio/ch/Interruptible;)V","checkAccess()V","clone()Ljava/lang/Object;","currentThread()Ljava/lang/Thread;","currentThread0()Ljava/lang/Thread;","exit()V","getContextClassLoader()Ljava/lang/ClassLoader;","getCoroutineSupport()Ljava/dyn/CoroutineSupport;","getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;","getId()J","getName()Ljava/lang/String;","getPriority()I","getStackTrace()[Ljava/lang/StackTraceElement;","getState()Ljava/lang/Thread$State;","getThreadGroup()Ljava/lang/ThreadGroup;","getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;","holdsLock(Ljava/lang/Object;)Z","interrupt()V","interrupt0()V","interrupted()Z","isAlive()Z","isCallingFromRootTenantToNonRoot()Z","isDaemon()Z","isInterrupted()Z","isInterrupted(Z)Z","join()V","join(J)V","nextThreadID()J","nextThreadNum()I","run()V","setContextClassLoader(Ljava/lang/ClassLoader;)V","setDaemon(Z)V","setName(Ljava/lang/String;)V","setNativeName(Ljava/lang/String;)V","setPriority(I)V","setPriority0(I)V","setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V","sleep(J)V","start()V","start0()V","toString()Ljava/lang/String;","yield()V","yield0()V"]
  }
,
  {
    "className": "Ljava/lang/ThreadDeath;",
    "module": "java.base",
    "source": "/java.base/java/lang/ThreadDeath.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/ThreadGroup;",
    "module": "java.base",
    "source": "/java.base/java/lang/ThreadGroup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Thread$UncaughtExceptionHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)V","<init>(Ljava/lang/Void;Ljava/lang/ThreadGroup;Ljava/lang/String;)V","add(Ljava/lang/Thread;)V","add(Ljava/lang/ThreadGroup;)V","addUnstarted()V","checkAccess()V","checkParentAccess(Ljava/lang/ThreadGroup;)Ljava/lang/Void;","destroy()V","getMaxPriority()I","getName()Ljava/lang/String;","getParent()Ljava/lang/ThreadGroup;","remove(Ljava/lang/Thread;)V","remove(Ljava/lang/ThreadGroup;)V","threadStartFailed(Ljava/lang/Thread;)V","threadTerminated(Ljava/lang/Thread;)V","toString()Ljava/lang/String;","uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;",
    "module": "java.base",
    "source": "/java.base/java/lang/ThreadLocal$ThreadLocalMap$Entry.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/lang/ThreadLocal$ThreadLocalMap;",
    "module": "java.base",
    "source": "/java.base/java/lang/ThreadLocal$ThreadLocalMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V","cleanSomeSlots(II)Z","expungeStaleEntries()V","expungeStaleEntry(I)I","getEntry(Ljava/lang/ThreadLocal;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;","getEntryAfterMiss(Ljava/lang/ThreadLocal;ILjava/lang/ThreadLocal$ThreadLocalMap$Entry;)Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;","nextIndex(II)I","prevIndex(II)I","rehash()V","remove(Ljava/lang/ThreadLocal;)V","replaceStaleEntry(Ljava/lang/ThreadLocal;Ljava/lang/Object;I)V","resize()V","set(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V","setThreshold(I)V"]
  }
,
  {
    "className": "Ljava/lang/ThreadLocal;",
    "module": "java.base",
    "source": "/java.base/java/lang/ThreadLocal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","createMap(Ljava/lang/Thread;Ljava/lang/Object;)V","get()Ljava/lang/Object;","getMap(Ljava/lang/Thread;)Ljava/lang/ThreadLocal$ThreadLocalMap;","initialValue()Ljava/lang/Object;","isPresent()Z","lambda$createMap$0(Ljava/lang/Object;)Ljava/lang/ThreadLocal$ThreadLocalMap;","nextHashCode()I","remove()V","set(Ljava/lang/Object;)V","setInitialValue()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/Throwable$PrintStreamOrWriter;",
    "module": "java.base",
    "source": "/java.base/java/lang/Throwable$PrintStreamOrWriter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/Throwable$WrappedPrintStream;",
    "module": "java.base",
    "source": "/java.base/java/lang/Throwable$WrappedPrintStream.class",
    "super": "Ljava/lang/Throwable$PrintStreamOrWriter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/PrintStream;)V","lock()Ljava/lang/Object;","println(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/lang/Throwable$WrappedPrintWriter;",
    "module": "java.base",
    "source": "/java.base/java/lang/Throwable$WrappedPrintWriter.class",
    "super": "Ljava/lang/Throwable$PrintStreamOrWriter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/PrintWriter;)V","lock()Ljava/lang/Object;","println(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/lang/Throwable;",
    "module": "java.base",
    "source": "/java.base/java/lang/Throwable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V","addSuppressed(Ljava/lang/Throwable;)V","fillInStackTrace()Ljava/lang/Throwable;","getCause()Ljava/lang/Throwable;","getLocalizedMessage()Ljava/lang/String;","getMessage()Ljava/lang/String;","getOurStackTrace()[Ljava/lang/StackTraceElement;","getStackTrace()[Ljava/lang/StackTraceElement;","getSuppressed()[Ljava/lang/Throwable;","initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;","printEnclosedStackTrace(Ljava/lang/Throwable$PrintStreamOrWriter;[Ljava/lang/StackTraceElement;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V","printStackTrace()V","printStackTrace(Ljava/io/PrintStream;)V","printStackTrace(Ljava/io/PrintWriter;)V","printStackTrace(Ljava/lang/Throwable$PrintStreamOrWriter;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/TypeNotPresentException;",
    "module": "java.base",
    "source": "/java.base/java/lang/TypeNotPresentException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/UnsatisfiedLinkError;",
    "module": "java.base",
    "source": "/java.base/java/lang/UnsatisfiedLinkError.class",
    "super": "Ljava/lang/LinkageError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/UnsupportedOperationException;",
    "module": "java.base",
    "source": "/java.base/java/lang/UnsupportedOperationException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/VirtualMachineError;",
    "module": "java.base",
    "source": "/java.base/java/lang/VirtualMachineError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/lang/Void;",
    "module": "java.base",
    "source": "/java.base/java/lang/Void.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/annotation/Annotation;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/Annotation.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/annotation/AnnotationFormatError;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/AnnotationFormatError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/annotation/ElementType;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/ElementType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/annotation/Inherited;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/Inherited.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/annotation/Repeatable;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/Repeatable.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/annotation/RetentionPolicy;",
    "module": "java.base",
    "source": "/java.base/java/lang/annotation/RetentionPolicy.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/DelegatingMethodHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/DelegatingMethodHandle.class",
    "super": "Ljava/lang/invoke/MethodHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/MethodHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/MethodHandle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/MethodHandleStatics;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/MethodHandleStatics.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["newIllegalArgumentException(Ljava/lang/String;)Ljava/lang/RuntimeException;"]
  }
,
  {
    "className": "Ljava/lang/invoke/MethodHandles$Lookup;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/MethodHandles$Lookup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;I)V","checkUnprivilegedlookupClass(Ljava/lang/Class;)V","defineClass([B)Ljava/lang/Class;","lookupClass()Ljava/lang/Class;","lookupModes()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/invoke/MethodHandles;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/MethodHandles.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["lookup()Ljava/lang/invoke/MethodHandles$Lookup;","privateLookupIn(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/invoke/MethodHandles$Lookup;"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarForm;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarForm.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandle$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandle$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/lang/String;)Ljava/lang/ArrayIndexOutOfBoundsException;"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["acquireFence()V","fullFence()V","releaseFence()V"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle.class",
    "super": "Ljava/lang/invoke/VarHandleByteArrayAsInts$ByteArrayViewVarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["index([BI)I","set(Ljava/lang/invoke/VarHandleByteArrayAsInts$ArrayHandle;Ljava/lang/Object;II)V"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsInts$ByteArrayViewVarHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsInts$ByteArrayViewVarHandle.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsInts;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsInts.class",
    "super": "Ljava/lang/invoke/VarHandleByteArrayBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle.class",
    "super": "Ljava/lang/invoke/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get(Ljava/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle;Ljava/lang/Object;I)J","index([BI)I","set(Ljava/lang/invoke/VarHandleByteArrayAsLongs$ArrayHandle;Ljava/lang/Object;IJ)V"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsLongs$ByteArrayViewVarHandle.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayAsLongs;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayAsLongs.class",
    "super": "Ljava/lang/invoke/VarHandleByteArrayBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleByteArrayBase;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleByteArrayBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleInts$FieldInstanceReadOnly;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleInts$FieldInstanceReadOnly.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadOnly;Ljava/lang/Object;)I","getAcquire(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadOnly;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.class",
    "super": "Ljava/lang/invoke/VarHandleInts$FieldInstanceReadOnly;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareAndSet(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;II)Z","getAndAdd(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;I)I","getAndBitwiseOr(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;I)I","set(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;I)V","setOpaque(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;I)V","setRelease(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;I)V","weakCompareAndSet(Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite;Ljava/lang/Object;II)Z"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleInts;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleInts.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadOnly;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleLongs$FieldInstanceReadOnly.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadWrite;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleLongs$FieldInstanceReadWrite.class",
    "super": "Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadOnly;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareAndSet(Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadWrite;Ljava/lang/Object;JJ)Z","getAndAdd(Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadWrite;Ljava/lang/Object;J)J","weakCompareAndSet(Ljava/lang/invoke/VarHandleLongs$FieldInstanceReadWrite;Ljava/lang/Object;JJ)Z"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleLongs;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleLongs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects$Array;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects$Array.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareAndSet(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z","get(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;I)Ljava/lang/Object;","getAcquire(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;I)Ljava/lang/Object;","getAndSet(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;","reflectiveTypeCheck([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","runtimeTypeCheck(Ljava/lang/invoke/VarHandleObjects$Array;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","setRelease(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;ILjava/lang/Object;)V","setVolatile(Ljava/lang/invoke/VarHandleObjects$Array;Ljava/lang/Object;ILjava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadOnly;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects$FieldInstanceReadOnly.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadOnly;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.class",
    "super": "Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadOnly;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareAndSet(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z","getAndSet(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","set(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;Ljava/lang/Object;Ljava/lang/Object;)V","setRelease(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;Ljava/lang/Object;Ljava/lang/Object;)V","weakCompareAndSet(Ljava/lang/invoke/VarHandleObjects$FieldInstanceReadWrite;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects$FieldStaticReadOnly;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects$FieldStaticReadOnly.class",
    "super": "Ljava/lang/invoke/VarHandle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects$FieldStaticReadWrite;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects$FieldStaticReadWrite.class",
    "super": "Ljava/lang/invoke/VarHandleObjects$FieldStaticReadOnly;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareAndSet(Ljava/lang/invoke/VarHandleObjects$FieldStaticReadWrite;Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/lang/invoke/VarHandleObjects;",
    "module": "java.base",
    "source": "/java.base/java/lang/invoke/VarHandleObjects.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/BufferPoolMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/BufferPoolMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/ClassLoadingMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/ClassLoadingMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/CompilationMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/CompilationMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/GarbageCollectorMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/GarbageCollectorMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/MemoryManagerMXBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/ManagementFactory;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/ManagementFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getPlatformMBeanServer()Ljavax/management/MBeanServer;","getPlatformMXBean(Ljava/lang/Class;)Ljava/lang/management/PlatformManagedObject;","getRuntimeMXBean()Ljava/lang/management/RuntimeMXBean;"]
  }
,
  {
    "className": "Ljava/lang/management/MemoryMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/MemoryMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/MemoryManagerMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/MemoryManagerMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/MemoryPoolMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/MemoryPoolMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/OperatingSystemMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/OperatingSystemMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/PlatformManagedObject;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/PlatformManagedObject.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/RuntimeMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/RuntimeMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/management/ThreadMXBean;",
    "module": "java.management",
    "source": "/java.management/java/lang/management/ThreadMXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/management/PlatformManagedObject;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Exports;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Exports.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor$Exports;)I","equals(Ljava/lang/Object;)Z","hashCode()I","modifiers()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Modifier;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Modifier.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Opens;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Opens.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor$Opens;)I","equals(Ljava/lang/Object;)Z","hashCode()I","modifiers()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Provides;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Provides.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor$Provides;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Requires$Modifier;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Requires$Modifier.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Requires;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Requires.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor$Requires;)I","equals(Ljava/lang/Object;)Z","hashCode()I","modifiers()Ljava/util/Set;","name()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor$Version;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor$Version.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["cmp(Ljava/lang/Object;Ljava/lang/Object;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor$Version;)I","compareTokens(Ljava/util/List;Ljava/util/List;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/module/ModuleDescriptor;",
    "module": "java.base",
    "source": "/java.base/java/lang/module/ModuleDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/util/Set;Ljava/util/Set;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/lang/module/ModuleDescriptor;)I","equals(Ljava/lang/Object;)Z","hashCode()I","isAutomatic()Z","isOpen()Z","lambda$toString$0(Ljava/lang/Object;)Ljava/lang/String;","modifiers()Ljava/util/Set;","modsValue(Ljava/util/Set;)J","name()Ljava/lang/String;","packages()Ljava/util/Set;","toNameAndVersion()Ljava/lang/String;","toString()Ljava/lang/String;","toString(Ljava/util/Set;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/ref/Cleaner$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/Cleaner$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/lang/ref/Cleaner;)Ljdk/internal/ref/CleanerImpl;"]
  }
,
  {
    "className": "Ljava/lang/ref/Cleaner$Cleanable;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/Cleaner$Cleanable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ref/Cleaner;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/Cleaner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["register(Ljava/lang/Object;Ljava/lang/Runnable;)Ljava/lang/ref/Cleaner$Cleanable;"]
  }
,
  {
    "className": "Ljava/lang/ref/FinalReference;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/FinalReference.class",
    "super": "Ljava/lang/ref/Reference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ref/PhantomReference;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/PhantomReference.class",
    "super": "Ljava/lang/ref/Reference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/ref/Reference$1;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/Reference$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaLangRefAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["waitForReferenceProcessing()Z"]
  }
,
  {
    "className": "Ljava/lang/ref/Reference;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/Reference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/ref/ReferenceQueue$Lock;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/ReferenceQueue$Lock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/ref/ReferenceQueue$Null;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/ReferenceQueue$Null.class",
    "super": "Ljava/lang/ref/ReferenceQueue;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["enqueue(Ljava/lang/ref/Reference;)Z"]
  }
,
  {
    "className": "Ljava/lang/ref/ReferenceQueue;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/ReferenceQueue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","enqueue(Ljava/lang/ref/Reference;)Z","poll()Ljava/lang/ref/Reference;","reallyPoll()Ljava/lang/ref/Reference;","remove()Ljava/lang/ref/Reference;","remove(J)Ljava/lang/ref/Reference;"]
  }
,
  {
    "className": "Ljava/lang/ref/SoftReference;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/SoftReference.class",
    "super": "Ljava/lang/ref/Reference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/ref/WeakReference;",
    "module": "java.base",
    "source": "/java.base/java/lang/ref/WeakReference.class",
    "super": "Ljava/lang/ref/Reference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V"]
  }
,
  {
    "className": "Ljava/lang/reflect/AccessibleObject;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/AccessibleObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","checkAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)V","checkCanSetAccessible(Ljava/lang/Class;Ljava/lang/Class;)V","checkCanSetAccessible(Ljava/lang/Class;Ljava/lang/Class;Z)Z","checkPermission()V","getAnnotations()[Ljava/lang/annotation/Annotation;","isAccessible()Z","isAnnotationPresent(Ljava/lang/Class;)Z","isSubclassOf(Ljava/lang/Class;Ljava/lang/Class;)Z","logIfExportedForIllegalAccess(Ljava/lang/Class;Ljava/lang/Class;)V","logIfOpenedForIllegalAccess(Ljava/lang/Class;Ljava/lang/Class;)V","printStackTraceWhenAccessFails()Z","setAccessible0(Z)Z","slowVerifyAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)Z","verifyAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)Z"]
  }
,
  {
    "className": "Ljava/lang/reflect/AnnotatedElement;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/AnnotatedElement.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","isAnnotationPresent(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Ljava/lang/reflect/Array;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Array.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/lang/Object;I)Ljava/lang/Object;","getLength(Ljava/lang/Object;)I","multiNewArray(Ljava/lang/Class;[I)Ljava/lang/Object;","newInstance(Ljava/lang/Class;I)Ljava/lang/Object;","newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;","set(Ljava/lang/Object;ILjava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/lang/reflect/Constructor;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Constructor.class",
    "super": "Ljava/lang/reflect/Executable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B)V","acquireConstructorAccessor()Ljdk/internal/reflect/ConstructorAccessor;","checkCanSetAccessible(Ljava/lang/Class;)V","copy()Ljava/lang/reflect/Constructor;","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaringClass()Ljava/lang/Class;","getExceptionTypes()[Ljava/lang/Class;","getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getGenericInfo()Lsun/reflect/generics/repository/ConstructorRepository;","getGenericParameterTypes()[Ljava/lang/reflect/Type;","getModifiers()I","getName()Ljava/lang/String;","getParameterAnnotations()[[Ljava/lang/annotation/Annotation;","getParameterCount()I","getParameterTypes()[Ljava/lang/Class;","getRawAnnotations()[B","getRawParameterAnnotations()[B","getRoot()Ljava/lang/reflect/AccessibleObject;","getRoot()Ljava/lang/reflect/Constructor;","getSharedParameterTypes()[Ljava/lang/Class;","getSignature()Ljava/lang/String;","getSlot()I","getTypeParameters()[Ljava/lang/reflect/TypeVariable;","hasGenericInformation()Z","hashCode()I","isVarArgs()Z","newInstance([Ljava/lang/Object;)Ljava/lang/Object;","setAccessible(Z)V","setConstructorAccessor(Ljdk/internal/reflect/ConstructorAccessor;)V","specificToStringHeader(Ljava/lang/StringBuilder;)V","toShortString()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/Executable;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Executable.class",
    "super": "Ljava/lang/reflect/AccessibleObject;",
    "interfaces": ["Ljava/lang/reflect/Member;","Ljava/lang/reflect/GenericDeclaration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","declaredAnnotations()Ljava/util/Map;","equalParamTypes([Ljava/lang/Class;[Ljava/lang/Class;)Z","getAllGenericParameterTypes()[Ljava/lang/reflect/Type;","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getGenericExceptionTypes()[Ljava/lang/reflect/Type;","getGenericParameterTypes()[Ljava/lang/reflect/Type;","getParameters()[Ljava/lang/reflect/Parameter;","hasRealParameterData()Z","isSynthetic()Z","isVarArgs()Z","printModifiersIfNonzero(Ljava/lang/StringBuilder;IZ)V","privateGetParameters()[Ljava/lang/reflect/Parameter;","sharedGetParameterAnnotations([Ljava/lang/Class;[B)[[Ljava/lang/annotation/Annotation;","sharedToGenericString(IZ)Ljava/lang/String;","sharedToString(IZ[Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/Field;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Field.class",
    "super": "Ljava/lang/reflect/AccessibleObject;",
    "interfaces": ["Ljava/lang/reflect/Member;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;IILjava/lang/String;[B)V","acquireFieldAccessor(Z)Ljdk/internal/reflect/FieldAccessor;","checkAccess(Ljava/lang/Class;Ljava/lang/Object;)V","checkCanSetAccessible(Ljava/lang/Class;)V","copy()Ljava/lang/reflect/Field;","declaredAnnotations()Ljava/util/Map;","equals(Ljava/lang/Object;)Z","get(Ljava/lang/Object;)Ljava/lang/Object;","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaringClass()Ljava/lang/Class;","getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getFieldAccessor(Ljava/lang/Object;)Ljdk/internal/reflect/FieldAccessor;","getGenericInfo()Lsun/reflect/generics/repository/FieldRepository;","getGenericSignature()Ljava/lang/String;","getGenericType()Ljava/lang/reflect/Type;","getLong(Ljava/lang/Object;)J","getModifiers()I","getName()Ljava/lang/String;","getType()Ljava/lang/Class;","hashCode()I","set(Ljava/lang/Object;Ljava/lang/Object;)V","setAccessible(Z)V","toShortString()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/GenericArrayType;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/GenericArrayType.class",
    "super": "null",
    "interfaces": ["Ljava/lang/reflect/Type;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/GenericDeclaration;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/GenericDeclaration.class",
    "super": "null",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/GenericSignatureFormatError;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/GenericSignatureFormatError.class",
    "super": "Ljava/lang/ClassFormatError;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/reflect/InaccessibleObjectException;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/InaccessibleObjectException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/lang/reflect/InvocationHandler;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/InvocationHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/InvocationTargetException;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/InvocationTargetException.class",
    "super": "Ljava/lang/ReflectiveOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V","getCause()Ljava/lang/Throwable;","getTargetException()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/lang/reflect/MalformedParameterizedTypeException;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/MalformedParameterizedTypeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/lang/reflect/Member;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Member.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/Method;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Method.class",
    "super": "Ljava/lang/reflect/Executable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B[B)V","acquireMethodAccessor()Ljdk/internal/reflect/MethodAccessor;","checkCanSetAccessible(Ljava/lang/Class;)V","copy()Ljava/lang/reflect/Method;","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaringClass()Ljava/lang/Class;","getDefaultValue()Ljava/lang/Object;","getExceptionTypes()[Ljava/lang/Class;","getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getGenericExceptionTypes()[Ljava/lang/reflect/Type;","getGenericInfo()Lsun/reflect/generics/repository/ConstructorRepository;","getGenericInfo()Lsun/reflect/generics/repository/MethodRepository;","getGenericParameterTypes()[Ljava/lang/reflect/Type;","getGenericReturnType()Ljava/lang/reflect/Type;","getGenericSignature()Ljava/lang/String;","getModifiers()I","getName()Ljava/lang/String;","getParameterAnnotations()[[Ljava/lang/annotation/Annotation;","getParameterCount()I","getParameterTypes()[Ljava/lang/Class;","getReturnType()Ljava/lang/Class;","getRoot()Ljava/lang/reflect/AccessibleObject;","getRoot()Ljava/lang/reflect/Method;","getSharedParameterTypes()[Ljava/lang/Class;","getTypeParameters()[Ljava/lang/reflect/TypeVariable;","hasGenericInformation()Z","hashCode()I","invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;","isBridge()Z","isDefault()Z","isSynthetic()Z","isVarArgs()Z","setAccessible(Z)V","specificToGenericStringHeader(Ljava/lang/StringBuilder;)V","specificToStringHeader(Ljava/lang/StringBuilder;)V","toGenericString()Ljava/lang/String;","toShortString()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/Modifier;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Modifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["constructorModifiers()I","isAbstract(I)Z","isFinal(I)Z","isMandated(I)Z","isPrivate(I)Z","isProtected(I)Z","isPublic(I)Z","isStatic(I)Z","isSynthetic(I)Z","isVolatile(I)Z","methodModifiers()I","toString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/Parameter;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Parameter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["declaredAnnotations()Ljava/util/Map;","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getModifiers()I","getName()Ljava/lang/String;","getParameterizedType()Ljava/lang/reflect/Type;","hashCode()I","isImplicit()Z","isNamePresent()Z","isSynthetic()Z","isVarArgs()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/ParameterizedType;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/ParameterizedType.class",
    "super": "null",
    "interfaces": ["Ljava/lang/reflect/Type;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/Proxy;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Proxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkNewProxyPermission(Ljava/lang/Class;Ljava/lang/Class;)V","getInvocationHandler(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;","getProxyClass(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;","getProxyConstructor(Ljava/lang/Class;Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","isProxyClass(Ljava/lang/Class;)Z","newProxyInstance(Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;","newProxyInstance(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/lang/reflect/ReflectAccess;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/ReflectAccess.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/reflect/LangReflectAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["copyConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;","copyField(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;","copyMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","getConstructorAnnotations(Ljava/lang/reflect/Constructor;)[B","getConstructorParameterAnnotations(Ljava/lang/reflect/Constructor;)[B","getConstructorSignature(Ljava/lang/reflect/Constructor;)Ljava/lang/String;","getConstructorSlot(Ljava/lang/reflect/Constructor;)I","getExecutableSharedParameterTypes(Ljava/lang/reflect/Executable;)[Ljava/lang/Class;","newConstructor(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B)Ljava/lang/reflect/Constructor;","setConstructorAccessor(Ljava/lang/reflect/Constructor;Ljdk/internal/reflect/ConstructorAccessor;)V"]
  }
,
  {
    "className": "Ljava/lang/reflect/Type;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/Type.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTypeName()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/lang/reflect/TypeVariable;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/TypeVariable.class",
    "super": "null",
    "interfaces": ["Ljava/lang/reflect/Type;","Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/lang/reflect/UndeclaredThrowableException;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/UndeclaredThrowableException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/lang/reflect/WildcardType;",
    "module": "java.base",
    "source": "/java.base/java/lang/reflect/WildcardType.class",
    "super": "null",
    "interfaces": ["Ljava/lang/reflect/Type;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/math/BigDecimal$1;",
    "module": "java.base",
    "source": "/java.base/java/math/BigDecimal$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Ljava/math/BigDecimal$StringBuilderHelper;"]
  }
,
  {
    "className": "Ljava/math/BigDecimal$LongOverflow;",
    "module": "java.base",
    "source": "/java.base/java/math/BigDecimal$LongOverflow.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["check(Ljava/math/BigDecimal;)V"]
  }
,
  {
    "className": "Ljava/math/BigDecimal$StringBuilderHelper;",
    "module": "java.base",
    "source": "/java.base/java/math/BigDecimal$StringBuilderHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getCompactCharArray()[C","getStringBuilder()Ljava/lang/StringBuilder;","putIntCompact(J)I"]
  }
,
  {
    "className": "Ljava/math/BigDecimal;",
    "module": "java.base",
    "source": "/java.base/java/math/BigDecimal.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/String;)V","<init>(Ljava/math/BigInteger;I)V","<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V","<init>(Ljava/math/BigInteger;JII)V","<init>([CII)V","<init>([CIILjava/math/MathContext;)V","abs()Ljava/math/BigDecimal;","add(JIJI)Ljava/math/BigDecimal;","add(JILjava/math/BigInteger;I)Ljava/math/BigDecimal;","add(JJ)J","add(JJI)Ljava/math/BigDecimal;","add(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","add(Ljava/math/BigInteger;ILjava/math/BigInteger;I)Ljava/math/BigDecimal;","adjustScale(IJ)I","bigDigitLength(Ljava/math/BigInteger;)I","bigMultiplyPowerTen(I)Ljava/math/BigInteger;","bigMultiplyPowerTen(JI)Ljava/math/BigInteger;","bigMultiplyPowerTen(Ljava/math/BigInteger;I)Ljava/math/BigInteger;","bigTenToThe(I)Ljava/math/BigInteger;","checkScale(J)I","checkScale(JJ)I","checkScale(Ljava/math/BigInteger;J)I","checkScaleNonZero(J)I","commonNeedIncrement(IIIZ)Z","compactValFor(Ljava/math/BigInteger;)J","compareMagnitude(Ljava/math/BigDecimal;)I","compareMagnitudeNormalized(JIJI)I","compareMagnitudeNormalized(JILjava/math/BigInteger;I)I","compareMagnitudeNormalized(Ljava/math/BigInteger;ILjava/math/BigInteger;I)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/math/BigDecimal;)I","createAndStripZerosToMatchScale(JIJ)Ljava/math/BigDecimal;","createAndStripZerosToMatchScale(Ljava/math/BigInteger;IJ)Ljava/math/BigDecimal;","divRemNegativeLong(JJ)[J","divide(JIJIII)Ljava/math/BigDecimal;","divide(JIJIJLjava/math/MathContext;)Ljava/math/BigDecimal;","divide(JILjava/math/BigInteger;III)Ljava/math/BigDecimal;","divide(JILjava/math/BigInteger;IJLjava/math/MathContext;)Ljava/math/BigDecimal;","divide(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;","divide(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;","divide(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;","divide(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;","divide(Ljava/math/BigInteger;IJIII)Ljava/math/BigDecimal;","divide(Ljava/math/BigInteger;IJIJLjava/math/MathContext;)Ljava/math/BigDecimal;","divide(Ljava/math/BigInteger;ILjava/math/BigInteger;III)Ljava/math/BigDecimal;","divide(Ljava/math/BigInteger;ILjava/math/BigInteger;IJLjava/math/MathContext;)Ljava/math/BigDecimal;","divideAndRemainder(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;","divideAndRound(JJI)J","divideAndRound(JJIII)Ljava/math/BigDecimal;","divideAndRound(Ljava/math/BigInteger;JI)Ljava/math/BigInteger;","divideAndRound(Ljava/math/BigInteger;JIII)Ljava/math/BigDecimal;","divideAndRound(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger;","divideAndRound(Ljava/math/BigInteger;Ljava/math/BigInteger;III)Ljava/math/BigDecimal;","divideAndRound128(JJJIIII)Ljava/math/BigDecimal;","divideAndRoundByTenPow(Ljava/math/BigInteger;II)Ljava/math/BigInteger;","divideSmallFastPath(JIJIJLjava/math/MathContext;)Ljava/math/BigDecimal;","divideToIntegralValue(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","doRound(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;","doubleValue()D","equals(Ljava/lang/Object;)Z","expandBigIntegerTenPowers(I)Ljava/math/BigInteger;","floatValue()F","fractionOnly()Z","getValueString(ILjava/lang/String;I)Ljava/lang/String;","hashCode()I","inflated()Ljava/math/BigInteger;","intValue()I","layoutChars(Z)Ljava/lang/String;","longCompareMagnitude(JJ)I","longDigitLength(J)I","longMultiplyPowerTen(JI)J","longValue()J","longValueExact()J","make64(JJ)J","movePointLeft(I)Ljava/math/BigDecimal;","movePointRight(I)Ljava/math/BigDecimal;","mulsub(JJJJJ)J","multiply(JJ)J","multiply(JJI)Ljava/math/BigDecimal;","multiply(JLjava/math/BigInteger;I)Ljava/math/BigDecimal;","multiply(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","multiply(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigDecimal;","multiplyDivideAndRound(JJJIII)Ljava/math/BigDecimal;","needIncrement(JIIJJ)Z","needIncrement(JIILjava/math/MutableBigInteger;J)Z","needIncrement(Ljava/math/MutableBigInteger;IILjava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Z","negate()Ljava/math/BigDecimal;","parseExp([CII)J","pow(I)Ljava/math/BigDecimal;","precision()I","remainder(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","roundedTenPower(IIII)Ljava/math/BigDecimal;","saturateLong(J)I","scale()I","scaleByPowerOfTen(I)Ljava/math/BigDecimal;","scaledTenPow(III)Ljava/math/BigDecimal;","setScale(I)Ljava/math/BigDecimal;","setScale(II)Ljava/math/BigDecimal;","setScale(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;","signum()I","stripTrailingZeros()Ljava/math/BigDecimal;","stripZerosToMatchScale(Ljava/math/BigInteger;JII)Ljava/math/BigDecimal;","subtract(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;","toBigInteger()Ljava/math/BigInteger;","toBigIntegerExact()Ljava/math/BigInteger;","toPlainString()Ljava/lang/String;","toString()Ljava/lang/String;","unscaledValue()Ljava/math/BigInteger;","unsignedLongCompare(JJ)Z","valueOf(J)Ljava/math/BigDecimal;","valueOf(JI)Ljava/math/BigDecimal;","valueOf(JII)Ljava/math/BigDecimal;","valueOf(Ljava/math/BigInteger;II)Ljava/math/BigDecimal;","zeroValueOf(I)Ljava/math/BigDecimal;"]
  }
,
  {
    "className": "Ljava/math/BigInteger;",
    "module": "java.base",
    "source": "/java.base/java/math/BigInteger.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/util/Random;)V","<init>(I[B)V","<init>(I[BII)V","<init>(I[I)V","<init>(J)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;I)V","<init>([B)V","<init>([BII)V","<init>([CII)V","<init>([II)V","abs()Ljava/math/BigInteger;","add(J)Ljava/math/BigInteger;","add(Ljava/math/BigInteger;)Ljava/math/BigInteger;","add([IJ)[I","add([I[I)[I","addOne([IIII)I","bitLength()I","bitLength([II)I","bitLengthForInt(I)I","checkRange()V","compareMagnitude(J)I","compareMagnitude(Ljava/math/BigInteger;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/math/BigInteger;)I","destructiveMulAdd([III)V","divide(Ljava/math/BigInteger;)Ljava/math/BigInteger;","divideAndRemainder(Ljava/math/BigInteger;)[Ljava/math/BigInteger;","divideAndRemainderBurnikelZiegler(Ljava/math/BigInteger;)[Ljava/math/BigInteger;","divideAndRemainderKnuth(Ljava/math/BigInteger;)[Ljava/math/BigInteger;","divideBurnikelZiegler(Ljava/math/BigInteger;)Ljava/math/BigInteger;","divideKnuth(Ljava/math/BigInteger;)Ljava/math/BigInteger;","doubleValue()D","equals(Ljava/lang/Object;)Z","exactDivideBy3()Ljava/math/BigInteger;","firstNonzeroIntNum()I","floatValue()F","getInt(I)I","getLower(I)Ljava/math/BigInteger;","getLowestSetBit()I","getRadixConversionCache(II)Ljava/math/BigInteger;","getToomSlice(IIII)Ljava/math/BigInteger;","getUpper(I)Ljava/math/BigInteger;","hashCode()I","implMontgomeryMultiply([I[I[IIJ[I)[I","implMontgomeryMultiplyChecks([I[I[II[I)V","implMontgomerySquare([I[IIJ[I)[I","implMulAdd([I[IIII)I","implMulAddCheck([I[IIII)V","implMultiplyToLen([II[II[I)[I","implSquareToLen([II[II)[I","implSquareToLenChecks([II[II)V","intArrayCmpToLen([I[II)I","intValue()I","javaIncrement([I)[I","leftShift([III)[I","longValue()J","makePositive([BII)[I","materialize([II)[I","mod(Ljava/math/BigInteger;)Ljava/math/BigInteger;","mod2(I)Ljava/math/BigInteger;","modInverse(Ljava/math/BigInteger;)Ljava/math/BigInteger;","modPow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;","modPow2(Ljava/math/BigInteger;I)Ljava/math/BigInteger;","montReduce([I[III)[I","montgomeryMultiply([I[I[IIJ[I)[I","montgomerySquare([I[IIJ[I)[I","mulAdd([I[IIII)I","multiply(J)Ljava/math/BigInteger;","multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;","multiply(Ljava/math/BigInteger;Z)Ljava/math/BigInteger;","multiplyByInt([III)Ljava/math/BigInteger;","multiplyKaratsuba(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;","multiplyToLen([II[II[I)[I","multiplyToLenCheck([II)V","multiplyToomCook3(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;","negate()Ljava/math/BigInteger;","oddModPow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;","parseInt([CII)I","pow(I)Ljava/math/BigInteger;","primitiveLeftShift([III)V","primitiveRightShift([III)V","randomBits(ILjava/util/Random;)[B","remainder(Ljava/math/BigInteger;)Ljava/math/BigInteger;","remainderBurnikelZiegler(Ljava/math/BigInteger;)Ljava/math/BigInteger;","remainderKnuth(Ljava/math/BigInteger;)Ljava/math/BigInteger;","reportOverflow()V","shiftLeft(I)Ljava/math/BigInteger;","shiftLeft([II)[I","shiftRight(I)Ljava/math/BigInteger;","shiftRightImpl(I)Ljava/math/BigInteger;","signInt()I","signum()I","smallToString(I)Ljava/lang/String;","square()Ljava/math/BigInteger;","square(Z)Ljava/math/BigInteger;","squareKaratsuba()Ljava/math/BigInteger;","squareToLen([II[I)[I","squareToomCook3()Ljava/math/BigInteger;","stripLeadingZeroBytes([BII)[I","stripLeadingZeroInts([I)[I","subN([I[II)I","subtract(J[I)[I","subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;","subtract([IJ)[I","subtract([I[I)[I","testBit(I)Z","toByteArray()[B","toString()Ljava/lang/String;","toString(I)Ljava/lang/String;","toString(Ljava/math/BigInteger;Ljava/lang/StringBuilder;II)V","trustedStripLeadingZeroInts([I)[I","valueOf(J)Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/math/MathContext;",
    "module": "java.base",
    "source": "/java.base/java/math/MathContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(ILjava/math/RoundingMode;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/math/MutableBigInteger;",
    "module": "java.base",
    "source": "/java.base/java/math/MutableBigInteger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/math/BigInteger;)V","<init>(Ljava/math/MutableBigInteger;)V","<init>([I)V","add(Ljava/math/MutableBigInteger;)V","addDisjoint(Ljava/math/MutableBigInteger;I)V","addLower(Ljava/math/MutableBigInteger;I)V","addShifted(Ljava/math/MutableBigInteger;I)V","bitLength()J","clear()V","compare(Ljava/math/MutableBigInteger;)I","compareHalf(Ljava/math/MutableBigInteger;)I","compareShifted(Ljava/math/MutableBigInteger;I)I","copyAndShift([III[III)V","copyValue(Ljava/math/MutableBigInteger;)V","divWord(JI)J","divadd([I[II)I","divaddLong(II[II)I","divide(JLjava/math/MutableBigInteger;)J","divide(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divide(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;Z)Ljava/math/MutableBigInteger;","divide2n1n(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divide3n2n(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divideAndRemainderBurnikelZiegler(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divideKnuth(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divideKnuth(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;Z)Ljava/math/MutableBigInteger;","divideLongMagnitude(JLjava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","divideMagnitude(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;Z)Ljava/math/MutableBigInteger;","divideOneWord(ILjava/math/MutableBigInteger;)I","euclidModInverse(I)Ljava/math/MutableBigInteger;","fixup(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;I)Ljava/math/MutableBigInteger;","getBlock(III)Ljava/math/MutableBigInteger;","getLower(I)Ljava/math/BigInteger;","getLowestSetBit()I","getMagnitudeArray()[I","inverseMod32(I)I","inverseMod64(J)J","isEven()Z","isOdd()Z","isOne()Z","isZero()Z","keepLower(I)V","leftShift(I)V","modInverse(Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","modInverseBP2(Ljava/math/MutableBigInteger;I)Ljava/math/MutableBigInteger;","modInverseMP2(I)Ljava/math/MutableBigInteger;","mul(ILjava/math/MutableBigInteger;)V","mulsub([I[IIII)I","mulsubBorrow([I[IIII)I","mulsubLong([IIIII)I","multiply(Ljava/math/MutableBigInteger;Ljava/math/MutableBigInteger;)V","mutableModInverse(Ljava/math/MutableBigInteger;)Ljava/math/MutableBigInteger;","normalize()V","ones(I)V","primitiveLeftShift(I)V","primitiveRightShift(I)V","reset()V","rightShift(I)V","safeLeftShift(I)V","safeRightShift(I)V","setValue([II)V","subtract(Ljava/math/MutableBigInteger;)I","toBigDecimal(II)Ljava/math/BigDecimal;","toBigInteger()Ljava/math/BigInteger;","toBigInteger(I)Ljava/math/BigInteger;","toCompactValue(I)J","toIntArray()[I","toLong()J","toString()Ljava/lang/String;","unsignedLongCompare(JJ)Z"]
  }
,
  {
    "className": "Ljava/math/RoundingMode;",
    "module": "java.base",
    "source": "/java.base/java/math/RoundingMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/math/SignedMutableBigInteger;",
    "module": "java.base",
    "source": "/java.base/java/math/SignedMutableBigInteger.class",
    "super": "Ljava/math/MutableBigInteger;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","signedAdd(Ljava/math/MutableBigInteger;)V","signedAdd(Ljava/math/SignedMutableBigInteger;)V","signedSubtract(Ljava/math/SignedMutableBigInteger;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/AbstractPlainDatagramSocketImpl$1;",
    "module": "java.base",
    "source": "/java.base/java/net/AbstractPlainDatagramSocketImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/AbstractPlainDatagramSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/AbstractPlainDatagramSocketImpl.class",
    "super": "Ljava/net/DatagramSocketImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","bind(ILjava/net/InetAddress;)V","close()V","connect(Ljava/net/InetAddress;I)V","create()V","disconnect()V","getOption(I)Ljava/lang/Object;","isClosed()Z","isReusePortAvailable()Z","isReusePortAvailable0()Z","nativeConnectDisabled()Z","receive(Ljava/net/DatagramPacket;)V","setOption(ILjava/lang/Object;)V","supportedOptions()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/net/AbstractPlainSocketImpl$1;",
    "module": "java.base",
    "source": "/java.base/java/net/AbstractPlainSocketImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/AbstractPlainSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/AbstractPlainSocketImpl.class",
    "super": "Ljava/net/SocketImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","acquireFD()Ljava/io/FileDescriptor;","available()I","bind(Ljava/net/InetAddress;I)V","close()V","connect(Ljava/lang/String;I)V","connect(Ljava/net/InetAddress;I)V","connect(Ljava/net/SocketAddress;I)V","connectToAddress(Ljava/net/InetAddress;II)V","create(Z)V","doConnect(Ljava/net/InetAddress;II)V","getInputStream()Ljava/io/InputStream;","getOption(I)Ljava/lang/Object;","getOutputStream()Ljava/io/OutputStream;","getTimeout()I","isClosedOrPending()Z","isConnectionReset()Z","isReusePortAvailable()Z","isReusePortAvailable0()Z","releaseFD()V","setConnectionReset()V","setOption(ILjava/lang/Object;)V","socketClose()V","socketPreClose()V","supportedOptions()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/net/Authenticator;",
    "module": "java.base",
    "source": "/java.base/java/net/Authenticator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["requestPasswordAuthentication(Ljava/lang/String;Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/PasswordAuthentication;"]
  }
,
  {
    "className": "Ljava/net/BindException;",
    "module": "java.base",
    "source": "/java.base/java/net/BindException.class",
    "super": "Ljava/net/SocketException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/ConnectException;",
    "module": "java.base",
    "source": "/java.base/java/net/ConnectException.class",
    "super": "Ljava/net/SocketException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/DatagramPacket$1;",
    "module": "java.base",
    "source": "/java.base/java/net/DatagramPacket$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/DatagramPacket;",
    "module": "java.base",
    "source": "/java.base/java/net/DatagramPacket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>([BI)V","<init>([BII)V","<init>([BIILjava/net/InetAddress;I)V","<init>([BILjava/net/InetAddress;I)V","getAddress()Ljava/net/InetAddress;","getData()[B","getLength()I","getOffset()I","getPort()I","getSocketAddress()Ljava/net/SocketAddress;","init()V","setAddress(Ljava/net/InetAddress;)V","setData([BII)V","setLength(I)V","setPort(I)V","setSocketAddress(Ljava/net/SocketAddress;)V"]
  }
,
  {
    "className": "Ljava/net/DatagramSocket$1;",
    "module": "java.base",
    "source": "/java.base/java/net/DatagramSocket$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/DatagramSocket;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/DatagramSocket;",
    "module": "java.base",
    "source": "/java.base/java/net/DatagramSocket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(ILjava/net/InetAddress;)V","<init>(Ljava/net/DatagramSocketImpl;)V","<init>(Ljava/net/SocketAddress;)V","bind(Ljava/net/SocketAddress;)V","checkAddress(Ljava/net/InetAddress;Ljava/lang/String;)V","checkFiltering(Ljava/net/DatagramPacket;)Z","checkOldImpl()V","close()V","connect(Ljava/net/InetAddress;I)V","connectInternal(Ljava/net/InetAddress;I)V","createImpl()V","disconnect()V","getImpl()Ljava/net/DatagramSocketImpl;","getLocalPort()I","getReceiveBufferSize()I","isBound()Z","isClosed()Z","receive(Ljava/net/DatagramPacket;)V","send(Ljava/net/DatagramPacket;)V","setSoTimeout(I)V"]
  }
,
  {
    "className": "Ljava/net/DatagramSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/DatagramSocketImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/SocketOptions;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","connect(Ljava/net/InetAddress;I)V","dataAvailable()I","disconnect()V","getDatagramSocket()Ljava/net/DatagramSocket;","getLocalPort()I","setDatagramSocket(Ljava/net/DatagramSocket;)V","supportedOptions()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/net/DefaultDatagramSocketImplFactory;",
    "module": "java.base",
    "source": "/java.base/java/net/DefaultDatagramSocketImplFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","createDatagramSocketImpl(Z)Ljava/net/DatagramSocketImpl;"]
  }
,
  {
    "className": "Ljava/net/DefaultInterface;",
    "module": "java.base",
    "source": "/java.base/java/net/DefaultInterface.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDefault()Ljava/net/NetworkInterface;"]
  }
,
  {
    "className": "Ljava/net/FileNameMap;",
    "module": "java.base",
    "source": "/java.base/java/net/FileNameMap.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/HttpURLConnection;",
    "module": "java.base",
    "source": "/java.base/java/net/HttpURLConnection.class",
    "super": "Ljava/net/URLConnection;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/Inet4Address;",
    "module": "java.base",
    "source": "/java.base/java/net/Inet4Address.class",
    "super": "Ljava/net/InetAddress;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Ljava/lang/String;[B)V","equals(Ljava/lang/Object;)Z","getAddress()[B","getHostAddress()Ljava/lang/String;","hashCode()I","init()V","isAnyLocalAddress()Z","isLinkLocalAddress()Z","isLoopbackAddress()Z","numericToTextFormat([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/Inet4AddressImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/Inet4AddressImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddressImpl;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","anyLocalAddress()Ljava/net/InetAddress;","getHostByAddr([B)Ljava/lang/String;","getLocalHostName()Ljava/lang/String;","lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;","loopbackAddress()Ljava/net/InetAddress;"]
  }
,
  {
    "className": "Ljava/net/Inet6Address$Inet6AddressHolder;",
    "module": "java.base",
    "source": "/java.base/java/net/Inet6Address$Inet6AddressHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/Inet6Address;)V","equals(Ljava/lang/Object;)Z","getHostAddress()Ljava/lang/String;","hashCode()I","init([BI)V","init([BLjava/net/NetworkInterface;)V","isAnyLocalAddress()Z","isLinkLocalAddress()Z","isLoopbackAddress()Z","setAddr([B)V"]
  }
,
  {
    "className": "Ljava/net/Inet6Address;",
    "module": "java.base",
    "source": "/java.base/java/net/Inet6Address.class",
    "super": "Ljava/net/InetAddress;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Ljava/lang/String;[B)V","<init>(Ljava/lang/String;[BI)V","<init>(Ljava/lang/String;[BLjava/lang/String;)V","deriveNumericScope([BLjava/net/NetworkInterface;)I","equals(Ljava/lang/Object;)Z","getAddress()[B","getHostAddress()Ljava/lang/String;","getScopeId()I","hashCode()I","init()V","initif(Ljava/lang/String;[BLjava/net/NetworkInterface;)V","initstr(Ljava/lang/String;[BLjava/lang/String;)V","isAnyLocalAddress()Z","isDifferentLocalAddressType([B[B)Z","isLinkLocalAddress()Z","isLinkLocalAddress([B)Z","isLoopbackAddress()Z","isSiteLocalAddress([B)Z","numericToTextFormat([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/Inet6AddressImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/Inet6AddressImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddressImpl;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","anyLocalAddress()Ljava/net/InetAddress;","getHostByAddr([B)Ljava/lang/String;","getLocalHostName()Ljava/lang/String;","lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;","loopbackAddress()Ljava/net/InetAddress;"]
  }
,
  {
    "className": "Ljava/net/InetAddress$1;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/InetAddress$2;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaNetInetAddressAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/net/InetAddress$Addresses;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$Addresses.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/InetAddress$CachedAddresses;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$CachedAddresses.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddress$Addresses;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/net/InetAddress;J)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/net/InetAddress$CachedAddresses;)I","get()[Ljava/net/InetAddress;"]
  }
,
  {
    "className": "Ljava/net/InetAddress$CachedLocalHost;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$CachedLocalHost.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/net/InetAddress;)V"]
  }
,
  {
    "className": "Ljava/net/InetAddress$HostsFileNameService;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$HostsFileNameService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddress$NameService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","addrToString([B)Ljava/lang/String;","createAddressByteArray(Ljava/lang/String;)[B","extractHost(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","extractHostAddr(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getHostByAddr([B)Ljava/lang/String;","lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;","removeComments(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/InetAddress$InetAddressHolder;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$InetAddressHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAddress()I","getFamily()I","getHostName()Ljava/lang/String;","init(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Ljava/net/InetAddress$NameService;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$NameService.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/InetAddress$NameServiceAddresses;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$NameServiceAddresses.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddress$Addresses;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/net/InetAddress;)V","get()[Ljava/net/InetAddress;"]
  }
,
  {
    "className": "Ljava/net/InetAddress$PlatformNameService;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress$PlatformNameService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/InetAddress$NameService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getHostByAddr([B)Ljava/lang/String;","lookupAllHostAddr(Ljava/lang/String;)[Ljava/net/InetAddress;"]
  }
,
  {
    "className": "Ljava/net/InetAddress;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddress.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","anyLocalAddress()Ljava/net/InetAddress;","checkNumericZone(Ljava/lang/String;)I","createNameService()Ljava/net/InetAddress$NameService;","equals(Ljava/lang/Object;)Z","getAddress()[B","getAddressesFromNameService(Ljava/lang/String;Ljava/net/InetAddress;)[Ljava/net/InetAddress;","getAllByName(Ljava/lang/String;)[Ljava/net/InetAddress;","getAllByName(Ljava/lang/String;Ljava/net/InetAddress;)[Ljava/net/InetAddress;","getAllByName0(Ljava/lang/String;Ljava/net/InetAddress;ZZ)[Ljava/net/InetAddress;","getAllByName0(Ljava/lang/String;Z)[Ljava/net/InetAddress;","getByAddress(Ljava/lang/String;[B)Ljava/net/InetAddress;","getByAddress([B)Ljava/net/InetAddress;","getByName(Ljava/lang/String;)Ljava/net/InetAddress;","getHostAddress()Ljava/lang/String;","getHostFromNameService(Ljava/net/InetAddress;Z)Ljava/lang/String;","getHostName()Ljava/lang/String;","getHostName(Z)Ljava/lang/String;","getLocalHost()Ljava/net/InetAddress;","hashCode()I","holder()Ljava/net/InetAddress$InetAddressHolder;","init()V","isAnyLocalAddress()Z","isLinkLocalAddress()Z","isLoopbackAddress()Z","loadImpl(Ljava/lang/String;)Ljava/net/InetAddressImpl;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/InetAddressContainer;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddressContainer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/net/InetAddressImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddressImpl.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/InetAddressImplFactory;",
    "module": "java.base",
    "source": "/java.base/java/net/InetAddressImplFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["create()Ljava/net/InetAddressImpl;","isIPv6Supported()Z"]
  }
,
  {
    "className": "Ljava/net/InetSocketAddress$InetSocketAddressHolder;",
    "module": "java.base",
    "source": "/java.base/java/net/InetSocketAddress$InetSocketAddressHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/net/InetAddress;I)V","equals(Ljava/lang/Object;)Z","getAddress()Ljava/net/InetAddress;","getHostName()Ljava/lang/String;","getHostString()Ljava/lang/String;","getPort()I","hashCode()I","isUnresolved()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/InetSocketAddress;",
    "module": "java.base",
    "source": "/java.base/java/net/InetSocketAddress.class",
    "super": "Ljava/net/SocketAddress;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(ILjava/lang/String;)V","<init>(Ljava/lang/String;I)V","<init>(Ljava/net/InetAddress;I)V","checkHost(Ljava/lang/String;)Ljava/lang/String;","checkPort(I)I","createUnresolved(Ljava/lang/String;I)Ljava/net/InetSocketAddress;","equals(Ljava/lang/Object;)Z","getAddress()Ljava/net/InetAddress;","getHostName()Ljava/lang/String;","getHostString()Ljava/lang/String;","getPort()I","hashCode()I","isUnresolved()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/InterfaceAddress;",
    "module": "java.base",
    "source": "/java.base/java/net/InterfaceAddress.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/JarURLConnection;",
    "module": "java.base",
    "source": "/java.base/java/net/JarURLConnection.class",
    "super": "Ljava/net/URLConnection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/MalformedURLException;",
    "module": "java.base",
    "source": "/java.base/java/net/MalformedURLException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/MulticastSocket;",
    "module": "java.base",
    "source": "/java.base/java/net/MulticastSocket.class",
    "super": "Ljava/net/DatagramSocket;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/NetworkInterface$1;",
    "module": "java.base",
    "source": "/java.base/java/net/NetworkInterface$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/NetworkInterface$2;",
    "module": "java.base",
    "source": "/java.base/java/net/NetworkInterface$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/net/NetworkInterface;",
    "module": "java.base",
    "source": "/java.base/java/net/NetworkInterface.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","enumerationFromArray([Ljava/lang/Object;)Ljava/util/Enumeration;","equals(Ljava/lang/Object;)Z","getAll()[Ljava/net/NetworkInterface;","getByIndex(I)Ljava/net/NetworkInterface;","getByIndex0(I)Ljava/net/NetworkInterface;","getByInetAddress(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;","getByInetAddress0(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;","getByName(Ljava/lang/String;)Ljava/net/NetworkInterface;","getByName0(Ljava/lang/String;)Ljava/net/NetworkInterface;","getCheckedInetAddresses()[Ljava/net/InetAddress;","getHardwareAddress()[B","getInetAddresses()Ljava/util/Enumeration;","getMacAddr0([BLjava/lang/String;I)[B","getName()Ljava/lang/String;","getNetworkInterfaces()Ljava/util/Enumeration;","hashCode()I","init()V","isVirtual()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/NoRouteToHostException;",
    "module": "java.base",
    "source": "/java.base/java/net/NoRouteToHostException.class",
    "super": "Ljava/net/SocketException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/PasswordAuthentication;",
    "module": "java.base",
    "source": "/java.base/java/net/PasswordAuthentication.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/PlainDatagramSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/PlainDatagramSocketImpl.class",
    "super": "Ljava/net/AbstractPlainDatagramSocketImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","bind0(ILjava/net/InetAddress;)V","connect0(Ljava/net/InetAddress;I)V","dataAvailable()I","datagramSocketClose()V","datagramSocketCreate()V","disconnect0(I)V","init()V","peek(Ljava/net/InetAddress;)I","peekData(Ljava/net/DatagramPacket;)I","receive0(Ljava/net/DatagramPacket;)V","send(Ljava/net/DatagramPacket;)V","socketGetOption(I)Ljava/lang/Object;","socketSetOption(ILjava/lang/Object;)V","socketSetOption0(ILjava/lang/Object;)V","supportedOptions()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/net/PlainSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/PlainSocketImpl.class",
    "super": "Ljava/net/AbstractPlainSocketImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","addExtSocketOptions(Ljava/util/Set;Ljava/util/Set;)V","initProto()V","lambda$addExtSocketOptions$0(Ljava/util/Set;Ljava/net/SocketOption;)V","socketAvailable()I","socketBind(Ljava/net/InetAddress;I)V","socketClose0(Z)V","socketConnect(Ljava/net/InetAddress;II)V","socketCreate(Z)V","socketGetOption(ILjava/lang/Object;)I","socketSetOption(IZLjava/lang/Object;)V","socketSetOption0(IZLjava/lang/Object;)V","supportedOptions()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/net/PortUnreachableException;",
    "module": "java.base",
    "source": "/java.base/java/net/PortUnreachableException.class",
    "super": "Ljava/net/SocketException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/ProtocolException;",
    "module": "java.base",
    "source": "/java.base/java/net/ProtocolException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/ProtocolFamily;",
    "module": "java.base",
    "source": "/java.base/java/net/ProtocolFamily.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/Proxy$Type;",
    "module": "java.base",
    "source": "/java.base/java/net/Proxy$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/Proxy;",
    "module": "java.base",
    "source": "/java.base/java/net/Proxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/Proxy$Type;Ljava/net/SocketAddress;)V","address()Ljava/net/SocketAddress;","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;","type()Ljava/net/Proxy$Type;"]
  }
,
  {
    "className": "Ljava/net/ProxySelector;",
    "module": "java.base",
    "source": "/java.base/java/net/ProxySelector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getDefault()Ljava/net/ProxySelector;"]
  }
,
  {
    "className": "Ljava/net/Socket$1;",
    "module": "java.base",
    "source": "/java.base/java/net/Socket$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/Socket;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/net/Socket$2;",
    "module": "java.base",
    "source": "/java.base/java/net/Socket$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/Socket;)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/net/Socket$3;",
    "module": "java.base",
    "source": "/java.base/java/net/Socket$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/Socket;)V","run()Ljava/io/OutputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/net/Socket;",
    "module": "java.base",
    "source": "/java.base/java/net/Socket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/InetAddress;I)V","<init>(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Z)V","bind(Ljava/net/SocketAddress;)V","checkAddress(Ljava/net/InetAddress;Ljava/lang/String;)V","checkOldImpl()V","close()V","connect(Ljava/net/SocketAddress;)V","connect(Ljava/net/SocketAddress;I)V","createImpl(Z)V","getImpl()Ljava/net/SocketImpl;","getInputStream()Ljava/io/InputStream;","getOutputStream()Ljava/io/OutputStream;","getSoTimeout()I","isBound()Z","isClosed()Z","isConnected()Z","isInputShutdown()Z","isOutputShutdown()Z","setBound()V","setConnected()V","setCreated()V","setImpl()V","setSoTimeout(I)V","setTcpNoDelay(Z)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/SocketAddress;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketAddress.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/net/SocketCleanable;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketCleanable.class",
    "super": "Ljdk/internal/ref/PhantomCleanable;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/FileDescriptor;Ljava/lang/ref/Cleaner;I)V","cleanupClose0(I)V","performCleanup()V","register(Ljava/io/FileDescriptor;)V","unregister(Ljava/io/FileDescriptor;)V"]
  }
,
  {
    "className": "Ljava/net/SocketException;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/SocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/SocketOptions;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getFileDescriptor()Ljava/io/FileDescriptor;","getInetAddress()Ljava/net/InetAddress;","getLocalPort()I","getPort()I","getSocket()Ljava/net/Socket;","setSocket(Ljava/net/Socket;)V","supportedOptions()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/SocketInputStream;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketInputStream.class",
    "super": "Ljava/io/FileInputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/net/AbstractPlainSocketImpl;)V","available()I","close()V","init()V","read()I","read([B)I","read([BII)I","read([BIII)I","skip(J)J","socketRead(Ljava/io/FileDescriptor;[BIII)I","socketRead0(Ljava/io/FileDescriptor;[BIII)I"]
  }
,
  {
    "className": "Ljava/net/SocketOption;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketOption.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/SocketOptions;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketOptions.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/SocketOutputStream;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketOutputStream.class",
    "super": "Ljava/io/FileOutputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/net/AbstractPlainSocketImpl;)V","close()V","init()V","socketWrite([BII)V","socketWrite0(Ljava/io/FileDescriptor;[BII)V","write(I)V","write([B)V","write([BII)V"]
  }
,
  {
    "className": "Ljava/net/SocketTimeoutException;",
    "module": "java.base",
    "source": "/java.base/java/net/SocketTimeoutException.class",
    "super": "Ljava/io/InterruptedIOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/net/SocksConsts;",
    "module": "java.base",
    "source": "/java.base/java/net/SocksConsts.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/SocksSocketImpl$1;",
    "module": "java.base",
    "source": "/java.base/java/net/SocksSocketImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/SocksSocketImpl;Ljava/lang/String;II)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/net/SocksSocketImpl$2;",
    "module": "java.base",
    "source": "/java.base/java/net/SocksSocketImpl$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/SocksSocketImpl;Ljava/net/InetAddress;)V","run()Ljava/lang/Object;","run()Ljava/net/PasswordAuthentication;"]
  }
,
  {
    "className": "Ljava/net/SocksSocketImpl$3;",
    "module": "java.base",
    "source": "/java.base/java/net/SocksSocketImpl$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/SocksSocketImpl;)V","run()Ljava/lang/Object;","run()Ljava/net/ProxySelector;"]
  }
,
  {
    "className": "Ljava/net/SocksSocketImpl;",
    "module": "java.base",
    "source": "/java.base/java/net/SocksSocketImpl.class",
    "super": "Ljava/net/PlainSocketImpl;",
    "interfaces": ["Ljava/net/SocksConsts;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","authenticate(BLjava/io/InputStream;Ljava/io/BufferedOutputStream;J)Z","close()V","connect(Ljava/net/SocketAddress;I)V","connectV4(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/net/InetSocketAddress;J)V","getInetAddress()Ljava/net/InetAddress;","getLocalPort()I","getPort()I","getUserName()Ljava/lang/String;","privilegedConnect(Ljava/lang/String;II)V","readSocksReply(Ljava/io/InputStream;[BJ)I","remainingMillis(J)I","superConnectServer(Ljava/lang/String;II)V","useV4(Ljava/net/Proxy;)Z"]
  }
,
  {
    "className": "Ljava/net/StandardProtocolFamily;",
    "module": "java.base",
    "source": "/java.base/java/net/StandardProtocolFamily.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/net/ProtocolFamily;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/StandardSocketOptions$StdSocketOption;",
    "module": "java.base",
    "source": "/java.base/java/net/StandardSocketOptions$StdSocketOption.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/SocketOption;"],
    "safeForPreinit": "true",
    "invokedMethods": ["name()Ljava/lang/String;","toString()Ljava/lang/String;","type()Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljava/net/StandardSocketOptions;",
    "module": "java.base",
    "source": "/java.base/java/net/StandardSocketOptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/net/URI$Parser;",
    "module": "java.base",
    "source": "/java.base/java/net/URI$Parser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/URI;Ljava/lang/String;)V","at(IIC)Z","at(IILjava/lang/String;)Z","checkChar(IJJLjava/lang/String;)V","checkChars(IIJJLjava/lang/String;)V","fail(Ljava/lang/String;)V","fail(Ljava/lang/String;I)V","failExpecting(Ljava/lang/String;I)V","parse(Z)V","parseAuthority(II)I","parseHierarchical(II)I","parseHostname(II)I","parseIPv4Address(II)I","parseIPv6Reference(II)I","parseServer(II)I","scan(IIC)I","scan(IIJJ)I","scan(IILjava/lang/String;)I","scan(IILjava/lang/String;Ljava/lang/String;)I","scanByte(II)I","scanEscape(IIC)I","scanHexPost(II)I","scanHexSeq(II)I","scanIPv4Address(IIZ)I","takeIPv4Address(IILjava/lang/String;)I"]
  }
,
  {
    "className": "Ljava/net/URI;",
    "module": "java.base",
    "source": "/java.base/java/net/URI.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","appendAuthority(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","appendEncoded(Ljava/lang/StringBuilder;C)V","appendEscape(Ljava/lang/StringBuilder;B)V","appendFragment(Ljava/lang/StringBuilder;Ljava/lang/String;)V","appendSchemeSpecificPart(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V","checkPath(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","compare(Ljava/lang/String;Ljava/lang/String;)I","compareIgnoringCase(Ljava/lang/String;Ljava/lang/String;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/net/URI;)I","create(Ljava/lang/String;)Ljava/net/URI;","decode(C)I","decode(CC)B","decode(Ljava/lang/String;)Ljava/lang/String;","decode(Ljava/lang/String;Z)Ljava/lang/String;","defineString()Ljava/lang/String;","encode(Ljava/lang/String;)Ljava/lang/String;","equal(Ljava/lang/String;Ljava/lang/String;)Z","equalIgnoringCase(Ljava/lang/String;Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","getAuthority()Ljava/lang/String;","getHost()Ljava/lang/String;","getPath()Ljava/lang/String;","getPort()I","getQuery()Ljava/lang/String;","getRawAuthority()Ljava/lang/String;","getRawFragment()Ljava/lang/String;","getRawPath()Ljava/lang/String;","getRawQuery()Ljava/lang/String;","getRawSchemeSpecificPart()Ljava/lang/String;","getScheme()Ljava/lang/String;","getSchemeSpecificPart()Ljava/lang/String;","getUserInfo()Ljava/lang/String;","hash(ILjava/lang/String;)I","hashCode()I","hashIgnoringCase(ILjava/lang/String;)I","isAbsolute()Z","isOpaque()Z","join([C[I)I","match(CJJ)Z","maybeAddLeadingDot([C[I)V","needsNormalization(Ljava/lang/String;)I","normalize(Ljava/lang/String;)Ljava/lang/String;","normalizedHash(ILjava/lang/String;)I","quote(Ljava/lang/String;JJ)Ljava/lang/String;","removeDots([C[I)V","resolve(Ljava/net/URI;)Ljava/net/URI;","resolve(Ljava/net/URI;Ljava/net/URI;)Ljava/net/URI;","resolvePath(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;","split([C[I)V","toASCIIString()Ljava/lang/String;","toLower(C)I","toString()Ljava/lang/String;","toString(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","toURL()Ljava/net/URL;","toUpper(C)I"]
  }
,
  {
    "className": "Ljava/net/URISyntaxException;",
    "module": "java.base",
    "source": "/java.base/java/net/URISyntaxException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;I)V","getMessage()Ljava/lang/String;","getReason()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/URL;",
    "module": "java.base",
    "source": "/java.base/java/net/URL.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/net/URL;Ljava/lang/String;)V","<init>(Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V","equals(Ljava/lang/Object;)Z","fromURI(Ljava/net/URI;)Ljava/net/URL;","getAuthority()Ljava/lang/String;","getDefaultPort()I","getFile()Ljava/lang/String;","getHost()Ljava/lang/String;","getPath()Ljava/lang/String;","getPort()I","getProtocol()Ljava/lang/String;","getQuery()Ljava/lang/String;","getRef()Ljava/lang/String;","getURLStreamHandler(Ljava/lang/String;)Ljava/net/URLStreamHandler;","getUserInfo()Ljava/lang/String;","hashCode()I","isBuiltinStreamHandler(Ljava/lang/String;)Z","isBuiltinStreamHandler(Ljava/net/URLStreamHandler;)Z","isValidProtocol(Ljava/lang/String;)Z","openConnection()Ljava/net/URLConnection;","openConnection(Ljava/net/Proxy;)Ljava/net/URLConnection;","openStream()Ljava/io/InputStream;","set(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","toExternalForm()Ljava/lang/String;","toLowerCase(Ljava/lang/String;)Ljava/lang/String;","toString()Ljava/lang/String;","toURI()Ljava/net/URI;"]
  }
,
  {
    "className": "Ljava/net/URLClassLoader;",
    "module": "java.base",
    "source": "/java.base/java/net/URLClassLoader.class",
    "super": "Ljava/security/SecureClassLoader;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/net/URL;Ljava/lang/ClassLoader;)V","close()V","getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","getURLs()[Ljava/net/URL;"]
  }
,
  {
    "className": "Ljava/net/URLConnection$1;",
    "module": "java.base",
    "source": "/java.base/java/net/URLConnection$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/FileNameMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getContentTypeFor(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/URLConnection;",
    "module": "java.base",
    "source": "/java.base/java/net/URLConnection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/URL;)V","checkConnected()V","checkfpx(Ljava/io/InputStream;)Z","getContentLengthLong()J","getContentType()Ljava/lang/String;","getDefaultUseCaches(Ljava/lang/String;)Z","getFileNameMap()Ljava/net/FileNameMap;","getHeaderField(Ljava/lang/String;)Ljava/lang/String;","getHeaderFieldDate(Ljava/lang/String;J)J","getHeaderFieldLong(Ljava/lang/String;J)J","getLastModified()J","guessContentTypeFromName(Ljava/lang/String;)Ljava/lang/String;","guessContentTypeFromStream(Ljava/io/InputStream;)Ljava/lang/String;","readBytes([IILjava/io/InputStream;)I","setUseCaches(Z)V","skipForward(Ljava/io/InputStream;J)J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/URLDecoder;",
    "module": "java.base",
    "source": "/java.base/java/net/URLDecoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decode(Ljava/lang/String;)Ljava/lang/String;","decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","decode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/URLStreamHandler;",
    "module": "java.base",
    "source": "/java.base/java/net/URLStreamHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/net/URL;Ljava/net/URL;)Z","getDefaultPort()I","getHostAddress(Ljava/net/URL;)Ljava/net/InetAddress;","hashCode(Ljava/net/URL;)I","hostsEqual(Ljava/net/URL;Ljava/net/URL;)Z","openConnection(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/URLConnection;","parseURL(Ljava/net/URL;Ljava/lang/String;II)V","sameFile(Ljava/net/URL;Ljava/net/URL;)Z","setURL(Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","toExternalForm(Ljava/net/URL;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/net/UnknownHostException;",
    "module": "java.base",
    "source": "/java.base/java/net/UnknownHostException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/Bits;",
    "module": "java.base",
    "source": "/java.base/java/nio/Bits.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["pageSize()I","reserveMemory(JI)V","tryReserveMemory(JI)Z","unreserveMemory(JI)V"]
  }
,
  {
    "className": "Ljava/nio/Buffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/Buffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIII)V","capacity()I","checkBounds(III)V","checkIndex(I)I","checkIndex(II)I","clear()Ljava/nio/Buffer;","createCapacityException(I)Ljava/lang/IllegalArgumentException;","createLimitException(I)Ljava/lang/IllegalArgumentException;","createPositionException(I)Ljava/lang/IllegalArgumentException;","createSameBufferException()Ljava/lang/IllegalArgumentException;","discardMark()V","flip()Ljava/nio/Buffer;","hasRemaining()Z","limit()I","limit(I)Ljava/nio/Buffer;","mark()Ljava/nio/Buffer;","markValue()I","nextGetIndex()I","nextGetIndex(I)I","nextPutIndex()I","position()I","position(I)Ljava/nio/Buffer;","remaining()I","reset()Ljava/nio/Buffer;","rewind()Ljava/nio/Buffer;"]
  }
,
  {
    "className": "Ljava/nio/BufferMismatch;",
    "module": "java.base",
    "source": "/java.base/java/nio/BufferMismatch.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["mismatch(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)I","mismatch(Ljava/nio/CharBuffer;ILjava/nio/CharBuffer;II)I"]
  }
,
  {
    "className": "Ljava/nio/BufferOverflowException;",
    "module": "java.base",
    "source": "/java.base/java/nio/BufferOverflowException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/BufferUnderflowException;",
    "module": "java.base",
    "source": "/java.base/java/nio/BufferUnderflowException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/ByteBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/ByteBuffer.class",
    "super": "Ljava/nio/Buffer;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIII)V","<init>(IIII[BI)V","alignedSlice(I)Ljava/nio/ByteBuffer;","alignmentOffset(II)I","allocate(I)Ljava/nio/ByteBuffer;","allocateDirect(I)Ljava/nio/ByteBuffer;","array()[B","arrayOffset()I","base()Ljava/lang/Object;","clear()Ljava/nio/ByteBuffer;","compare(BB)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/ByteBuffer;)I","equals(Ljava/lang/Object;)Z","flip()Ljava/nio/ByteBuffer;","get([B)Ljava/nio/ByteBuffer;","get([BII)Ljava/nio/ByteBuffer;","hasArray()Z","hashCode()I","limit(I)Ljava/nio/Buffer;","limit(I)Ljava/nio/ByteBuffer;","mark()Ljava/nio/ByteBuffer;","order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;","position(I)Ljava/nio/Buffer;","position(I)Ljava/nio/ByteBuffer;","put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;","put([B)Ljava/nio/ByteBuffer;","put([BII)Ljava/nio/ByteBuffer;","reset()Ljava/nio/ByteBuffer;","rewind()Ljava/nio/Buffer;","rewind()Ljava/nio/ByteBuffer;","toString()Ljava/lang/String;","wrap([B)Ljava/nio/ByteBuffer;","wrap([BII)Ljava/nio/ByteBuffer;"]
  }
,
  {
    "className": "Ljava/nio/ByteOrder;",
    "module": "java.base",
    "source": "/java.base/java/nio/ByteOrder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["nativeOrder()Ljava/nio/ByteOrder;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/CharBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/CharBuffer.class",
    "super": "Ljava/nio/Buffer;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/lang/Appendable;","Ljava/lang/CharSequence;","Ljava/lang/Readable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIII)V","<init>(IIII[CI)V","allocate(I)Ljava/nio/CharBuffer;","array()[C","arrayOffset()I","base()Ljava/lang/Object;","charAt(I)C","clear()Ljava/nio/CharBuffer;","compare(CC)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/CharBuffer;)I","equals(Ljava/lang/Object;)Z","flip()Ljava/nio/CharBuffer;","hasArray()Z","hashCode()I","length()I","limit(I)Ljava/nio/Buffer;","limit(I)Ljava/nio/CharBuffer;","mark()Ljava/nio/CharBuffer;","position(I)Ljava/nio/Buffer;","position(I)Ljava/nio/CharBuffer;","put(Ljava/lang/String;)Ljava/nio/CharBuffer;","put(Ljava/lang/String;II)Ljava/nio/CharBuffer;","put(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;","reset()Ljava/nio/CharBuffer;","toString()Ljava/lang/String;","wrap(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;","wrap(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;","wrap([C)Ljava/nio/CharBuffer;","wrap([CII)Ljava/nio/CharBuffer;"]
  }
,
  {
    "className": "Ljava/nio/DirectByteBuffer$Deallocator;",
    "module": "java.base",
    "source": "/java.base/java/nio/DirectByteBuffer$Deallocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JJI)V","run()V"]
  }
,
  {
    "className": "Ljava/nio/DirectByteBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/DirectByteBuffer.class",
    "super": "Ljava/nio/MappedByteBuffer;",
    "interfaces": ["Lsun/nio/ch/DirectBuffer;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(JI)V","<init>(Lsun/nio/ch/DirectBuffer;IIIII)V","address()J","base()Ljava/lang/Object;","cleaner()Ljdk/internal/ref/Cleaner;","duplicate()Ljava/nio/ByteBuffer;","get()B","get(I)B","get([BII)Ljava/nio/ByteBuffer;","isDirect()Z","isReadOnly()Z","ix(I)J","put(B)Ljava/nio/ByteBuffer;","put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;","put([BII)Ljava/nio/ByteBuffer;","slice(II)Ljava/nio/ByteBuffer;"]
  }
,
  {
    "className": "Ljava/nio/HeapByteBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/HeapByteBuffer.class",
    "super": "Ljava/nio/ByteBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","<init>([BII)V","<init>([BIIIII)V","byteOffset(J)J","compact()Ljava/nio/ByteBuffer;","duplicate()Ljava/nio/ByteBuffer;","get()B","get(I)B","get([BII)Ljava/nio/ByteBuffer;","getInt()I","getLong()J","isDirect()Z","isReadOnly()Z","ix(I)I","put(B)Ljava/nio/ByteBuffer;","put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;","put([BII)Ljava/nio/ByteBuffer;"]
  }
,
  {
    "className": "Ljava/nio/HeapCharBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/HeapCharBuffer.class",
    "super": "Ljava/nio/CharBuffer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","<init>([CII)V","<init>([CIIIII)V","charRegionOrder()Ljava/nio/ByteOrder;","compact()Ljava/nio/CharBuffer;","get()C","get(I)C","isReadOnly()Z","ix(I)I","order()Ljava/nio/ByteOrder;","put(C)Ljava/nio/CharBuffer;","put(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;","put([CII)Ljava/nio/CharBuffer;","slice()Ljava/nio/CharBuffer;","subSequence(II)Ljava/lang/CharSequence;","subSequence(II)Ljava/nio/CharBuffer;","toString(II)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/InvalidMarkException;",
    "module": "java.base",
    "source": "/java.base/java/nio/InvalidMarkException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/MappedByteBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/MappedByteBuffer.class",
    "super": "Ljava/nio/ByteBuffer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIII)V","flip()Ljava/nio/ByteBuffer;","flip()Ljava/nio/MappedByteBuffer;","limit(I)Ljava/nio/Buffer;","limit(I)Ljava/nio/ByteBuffer;","limit(I)Ljava/nio/MappedByteBuffer;","position(I)Ljava/nio/Buffer;","position(I)Ljava/nio/ByteBuffer;","position(I)Ljava/nio/MappedByteBuffer;","rewind()Ljava/nio/ByteBuffer;","rewind()Ljava/nio/MappedByteBuffer;"]
  }
,
  {
    "className": "Ljava/nio/ReadOnlyBufferException;",
    "module": "java.base",
    "source": "/java.base/java/nio/ReadOnlyBufferException.class",
    "super": "Ljava/lang/UnsupportedOperationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/StringCharBuffer;",
    "module": "java.base",
    "source": "/java.base/java/nio/StringCharBuffer.class",
    "super": "Ljava/nio/CharBuffer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;II)V","<init>(Ljava/lang/CharSequence;IIIII)V","charRegionOrder()Ljava/nio/ByteOrder;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/CharBuffer;)I","equals(Ljava/lang/Object;)Z","get()C","get(I)C","subSequence(II)Ljava/lang/CharSequence;","subSequence(II)Ljava/nio/CharBuffer;","toString(II)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/channels/AlreadyBoundException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/AlreadyBoundException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/AlreadyConnectedException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/AlreadyConnectedException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/AsynchronousChannelGroup;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/AsynchronousChannelGroup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/AsynchronousCloseException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/AsynchronousCloseException.class",
    "super": "Ljava/nio/channels/ClosedChannelException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/ByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/ReadableByteChannel;","Ljava/nio/channels/WritableByteChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/Channel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/Channel.class",
    "super": "null",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/Channels;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/Channels.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newInputStream(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;","newReader(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;"]
  }
,
  {
    "className": "Ljava/nio/channels/ClosedByInterruptException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ClosedByInterruptException.class",
    "super": "Ljava/nio/channels/AsynchronousCloseException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/ClosedChannelException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ClosedChannelException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/ConnectionPendingException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ConnectionPendingException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/DatagramChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/DatagramChannel.class",
    "super": "Ljava/nio/channels/spi/AbstractSelectableChannel;",
    "interfaces": ["Ljava/nio/channels/ByteChannel;","Ljava/nio/channels/ScatteringByteChannel;","Ljava/nio/channels/GatheringByteChannel;","Ljava/nio/channels/MulticastChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/channels/spi/SelectorProvider;)V","open()Ljava/nio/channels/DatagramChannel;","open(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;"]
  }
,
  {
    "className": "Ljava/nio/channels/FileChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/FileChannel.class",
    "super": "Ljava/nio/channels/spi/AbstractInterruptibleChannel;",
    "interfaces": ["Ljava/nio/channels/SeekableByteChannel;","Ljava/nio/channels/GatheringByteChannel;","Ljava/nio/channels/ScatteringByteChannel;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/FileLock;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/FileLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/AutoCloseable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/GatheringByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/GatheringByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/WritableByteChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/IllegalBlockingModeException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/IllegalBlockingModeException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/InterruptibleChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/InterruptibleChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/MulticastChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/MulticastChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/NetworkChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/NetworkChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/NetworkChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/NoConnectionPendingException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/NoConnectionPendingException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/NonReadableChannelException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/NonReadableChannelException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/NotYetBoundException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/NotYetBoundException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/NotYetConnectedException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/NotYetConnectedException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/ReadableByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ReadableByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/ScatteringByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/ScatteringByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/ReadableByteChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/SeekableByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/SeekableByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/ByteChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/SelectableChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/SelectableChannel.class",
    "super": "Ljava/nio/channels/spi/AbstractInterruptibleChannel;",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/SelectionKey;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/SelectionKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/SocketChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/SocketChannel.class",
    "super": "Ljava/nio/channels/spi/AbstractSelectableChannel;",
    "interfaces": ["Ljava/nio/channels/ByteChannel;","Ljava/nio/channels/ScatteringByteChannel;","Ljava/nio/channels/GatheringByteChannel;","Ljava/nio/channels/NetworkChannel;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/channels/spi/SelectorProvider;)V","open()Ljava/nio/channels/SocketChannel;"]
  }
,
  {
    "className": "Ljava/nio/channels/UnresolvedAddressException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/UnresolvedAddressException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/UnsupportedAddressTypeException;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/UnsupportedAddressTypeException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/channels/WritableByteChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/WritableByteChannel.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/channels/spi/AbstractInterruptibleChannel$1;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/spi/AbstractInterruptibleChannel$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/nio/ch/Interruptible;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/channels/spi/AbstractInterruptibleChannel;)V","interrupt(Ljava/lang/Thread;)V"]
  }
,
  {
    "className": "Ljava/nio/channels/spi/AbstractInterruptibleChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/spi/AbstractInterruptibleChannel.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/channels/Channel;","Ljava/nio/channels/InterruptibleChannel;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","begin()V","blockedOn(Lsun/nio/ch/Interruptible;)V","close()V","end(Z)V","isOpen()Z"]
  }
,
  {
    "className": "Ljava/nio/channels/spi/AbstractSelectableChannel;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/spi/AbstractSelectableChannel.class",
    "super": "Ljava/nio/channels/SelectableChannel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/channels/spi/SelectorProvider;)V","blockingLock()Ljava/lang/Object;","configureBlocking(Z)Ljava/nio/channels/SelectableChannel;","haveValidKeys()Z","implCloseChannel()V","isBlocking()Z","isRegistered()Z"]
  }
,
  {
    "className": "Ljava/nio/channels/spi/SelectorProvider;",
    "module": "java.base",
    "source": "/java.base/java/nio/channels/spi/SelectorProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["provider()Ljava/nio/channels/spi/SelectorProvider;"]
  }
,
  {
    "className": "Ljava/nio/charset/CharacterCodingException;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CharacterCodingException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/charset/Charset;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/Charset.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V","checkName(Ljava/lang/String;)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/charset/Charset;)I","defaultCharset()Ljava/nio/charset/Charset;","encode(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;","equals(Ljava/lang/Object;)Z","forName(Ljava/lang/String;)Ljava/nio/charset/Charset;","hashCode()I","isSupported(Ljava/lang/String;)Z","lookup(Ljava/lang/String;)Ljava/nio/charset/Charset;","name()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/charset/CharsetDecoder;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CharsetDecoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;FF)V","<init>(Ljava/nio/charset/Charset;FFLjava/lang/String;)V","averageCharsPerByte()F","charset()Ljava/nio/charset/Charset;","decode(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;","decode(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;","flush(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","implFlush(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","implOnMalformedInput(Ljava/nio/charset/CodingErrorAction;)V","implOnUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)V","implReplaceWith(Ljava/lang/String;)V","implReset()V","maxCharsPerByte()F","onMalformedInput(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;","onUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;","replaceWith(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;","reset()Ljava/nio/charset/CharsetDecoder;","throwIllegalStateException(II)V"]
  }
,
  {
    "className": "Ljava/nio/charset/CharsetEncoder;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CharsetEncoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;FF)V","<init>(Ljava/nio/charset/Charset;FF[B)V","averageBytesPerChar()F","charset()Ljava/nio/charset/Charset;","encode(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;","encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;","flush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","implFlush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","implOnMalformedInput(Ljava/nio/charset/CodingErrorAction;)V","implOnUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)V","implReplaceWith([B)V","implReset()V","isLegalReplacement([B)Z","maxBytesPerChar()F","onMalformedInput(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;","onUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;","replaceWith([B)Ljava/nio/charset/CharsetEncoder;","reset()Ljava/nio/charset/CharsetEncoder;","throwIllegalStateException(II)V"]
  }
,
  {
    "className": "Ljava/nio/charset/CoderMalfunctionError;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CoderMalfunctionError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;)V"]
  }
,
  {
    "className": "Ljava/nio/charset/CoderResult$Cache;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CoderResult$Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/charset/CoderResult;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CoderResult.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","isError()Z","isMalformed()Z","isOverflow()Z","isUnderflow()Z","isUnmappable()Z","lambda$malformedForLength$0(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;","lambda$unmappableForLength$1(Ljava/lang/Integer;)Ljava/nio/charset/CoderResult;","length()I","malformedForLength(I)Ljava/nio/charset/CoderResult;","throwException()V","toString()Ljava/lang/String;","unmappableForLength(I)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Ljava/nio/charset/CodingErrorAction;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/CodingErrorAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/charset/IllegalCharsetNameException;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/IllegalCharsetNameException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/charset/MalformedInputException;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/MalformedInputException.class",
    "super": "Ljava/nio/charset/CharacterCodingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/charset/StandardCharsets;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/StandardCharsets.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/charset/UnmappableCharacterException;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/UnmappableCharacterException.class",
    "super": "Ljava/nio/charset/CharacterCodingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/charset/UnsupportedCharsetException;",
    "module": "java.base",
    "source": "/java.base/java/nio/charset/UnsupportedCharsetException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/AccessDeniedException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/AccessDeniedException.class",
    "super": "Ljava/nio/file/FileSystemException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/AccessMode;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/AccessMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/CopyOption;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/CopyOption.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/DirectoryIteratorException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/DirectoryIteratorException.class",
    "super": "Ljava/util/ConcurrentModificationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/IOException;)V","getCause()Ljava/io/IOException;","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljava/nio/file/DirectoryStream$Filter;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/DirectoryStream$Filter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/DirectoryStream;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/DirectoryStream.class",
    "super": "null",
    "interfaces": ["Ljava/io/Closeable;","Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/FileAlreadyExistsException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileAlreadyExistsException.class",
    "super": "Ljava/nio/file/FileSystemException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/FileSystem;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileSystem.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/file/FileSystemException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileSystemException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getMessage()Ljava/lang/String;","getReason()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/file/FileSystemNotFoundException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileSystemNotFoundException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/FileSystems$DefaultFileSystemHolder;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileSystems$DefaultFileSystemHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/FileSystems;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/FileSystems.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDefault()Ljava/nio/file/FileSystem;"]
  }
,
  {
    "className": "Ljava/nio/file/Files$AcceptAllFilter;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Files$AcceptAllFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/DirectoryStream$Filter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Ljava/lang/Object;)Z","accept(Ljava/nio/file/Path;)Z"]
  }
,
  {
    "className": "Ljava/nio/file/Files;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Files.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["createDirectory(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","createFile(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","createTempFile(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","exists(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z","followLinks([Ljava/nio/file/LinkOption;)Z","isAccessible(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)Z","isDirectory(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z","isReadable(Ljava/nio/file/Path;)Z","newByteChannel(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;","newByteChannel(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;","newDirectoryStream(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;","newInputStream(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;","provider(Ljava/nio/file/Path;)Ljava/nio/file/spi/FileSystemProvider;","readAttributes(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;"]
  }
,
  {
    "className": "Ljava/nio/file/InvalidPathException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/InvalidPathException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;I)V","getMessage()Ljava/lang/String;","getReason()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/file/LinkOption;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/LinkOption.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/nio/file/OpenOption;","Ljava/nio/file/CopyOption;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/NoSuchFileException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/NoSuchFileException.class",
    "super": "Ljava/nio/file/FileSystemException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/NotDirectoryException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/NotDirectoryException.class",
    "super": "Ljava/nio/file/FileSystemException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/nio/file/OpenOption;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/OpenOption.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/Path$1;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Path$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/file/Path;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/nio/file/Path;"]
  }
,
  {
    "className": "Ljava/nio/file/Path;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Path.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/lang/Iterable;","Ljava/nio/file/Watchable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["iterator()Ljava/util/Iterator;","of(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;","of(Ljava/net/URI;)Ljava/nio/file/Path;","toFile()Ljava/io/File;"]
  }
,
  {
    "className": "Ljava/nio/file/Paths;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Paths.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;","get(Ljava/net/URI;)Ljava/nio/file/Path;"]
  }
,
  {
    "className": "Ljava/nio/file/ProviderMismatchException;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/ProviderMismatchException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/nio/file/SecureDirectoryStream;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/SecureDirectoryStream.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/DirectoryStream;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/StandardOpenOption;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/StandardOpenOption.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/nio/file/OpenOption;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/TempFileHelper$PosixPermissions;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/TempFileHelper$PosixPermissions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/TempFileHelper;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/TempFileHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","create(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Z[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;","generatePath(Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;"]
  }
,
  {
    "className": "Ljava/nio/file/Watchable;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/Watchable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/AttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/AttributeView.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/BasicFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/BasicFileAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/FileAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/BasicFileAttributes;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/BasicFileAttributes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/DosFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/DosFileAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/DosFileAttributes;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/DosFileAttributes.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/FileAttribute;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/FileAttribute.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/FileAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/FileAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/AttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/FileOwnerAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/FileOwnerAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/FileAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/FileTime$1;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/FileTime$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/FileTime;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/FileTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JLjava/util/concurrent/TimeUnit;Ljava/time/Instant;)V","append(Ljava/lang/StringBuilder;II)Ljava/lang/StringBuilder;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/file/attribute/FileTime;)I","equals(Ljava/lang/Object;)Z","from(JLjava/util/concurrent/TimeUnit;)Ljava/nio/file/attribute/FileTime;","hashCode()I","scale(JJJ)J","toDays()J","toExcessNanos(J)J","toInstant()Ljava/time/Instant;","toMillis()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/nio/file/attribute/PosixFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/PosixFileAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributeView;","Ljava/nio/file/attribute/FileOwnerAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/PosixFileAttributes;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/PosixFileAttributes.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/PosixFilePermission;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/PosixFilePermission.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/PosixFilePermissions$1;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/PosixFilePermissions$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/FileAttribute;"],
    "safeForPreinit": "true",
    "invokedMethods": ["name()Ljava/lang/String;","value()Ljava/lang/Object;","value()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/nio/file/attribute/PosixFilePermissions;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/PosixFilePermissions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/attribute/UserDefinedFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/attribute/UserDefinedFileAttributeView.class",
    "super": "null",
    "interfaces": ["Ljava/nio/file/attribute/FileAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/nio/file/spi/FileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/java/nio/file/spi/FileSystemProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Void;)V","checkPermission()Ljava/lang/Void;","installedProviders()Ljava/util/List;","newInputStream(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;"]
  }
,
  {
    "className": "Ljava/security/AccessControlContext;",
    "module": "java.base",
    "source": "/java.base/java/security/AccessControlContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/AccessControlContext;Ljava/security/DomainCombiner;Z)V","<init>([Ljava/security/ProtectionDomain;)V","<init>([Ljava/security/ProtectionDomain;Ljava/security/AccessControlContext;)V","calculateFields(Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;[Ljava/security/Permission;)V","combine([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)[Ljava/security/ProtectionDomain;","containsAllLimits(Ljava/security/AccessControlContext;)Z","containsAllPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z","equalContext(Ljava/security/AccessControlContext;)Z","equalLimitedContext(Ljava/security/AccessControlContext;)Z","equalPDs([Ljava/security/ProtectionDomain;[Ljava/security/ProtectionDomain;)Z","equals(Ljava/lang/Object;)Z","getCombiner()Ljava/security/DomainCombiner;","getContext()[Ljava/security/ProtectionDomain;","getDebug()Lsun/security/util/Debug;","getNextPC(Ljava/security/AccessControlContext;)Ljava/security/AccessControlContext;","hashCode()I","optimize()Ljava/security/AccessControlContext;"]
  }
,
  {
    "className": "Ljava/security/AccessControlException;",
    "module": "java.base",
    "source": "/java.base/java/security/AccessControlException.class",
    "super": "Ljava/lang/SecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/AccessController;",
    "module": "java.base",
    "source": "/java.base/java/security/AccessController.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkPermission(Ljava/security/Permission;)V","doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;","doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;","doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;[Ljava/security/Permission;)Ljava/lang/Object;","doPrivileged(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;","doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;","getContext()Ljava/security/AccessControlContext;","getInheritedAccessControlContext()Ljava/security/AccessControlContext;"]
  }
,
  {
    "className": "Ljava/security/AlgorithmParameterGeneratorSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/AlgorithmParameterGeneratorSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/AlgorithmParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/AlgorithmParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/AlgorithmParametersSpi;Ljava/security/Provider;Ljava/lang/String;)V","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getInstance(Ljava/lang/String;)Ljava/security/AlgorithmParameters;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/AlgorithmParameters;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/AlgorithmParameters;","getParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","init(Ljava/security/spec/AlgorithmParameterSpec;)V","init([B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/AlgorithmParametersSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/AlgorithmParametersSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/AllPermission;",
    "module": "java.base",
    "source": "/java.base/java/security/AllPermission.class",
    "super": "Ljava/security/Permission;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getActions()Ljava/lang/String;","hashCode()I","newPermissionCollection()Ljava/security/PermissionCollection;"]
  }
,
  {
    "className": "Ljava/security/AllPermissionCollection$1;",
    "module": "java.base",
    "source": "/java.base/java/security/AllPermissionCollection$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/AllPermissionCollection;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;","nextElement()Ljava/security/Permission;"]
  }
,
  {
    "className": "Ljava/security/AllPermissionCollection;",
    "module": "java.base",
    "source": "/java.base/java/security/AllPermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljava/security/AuthProvider;",
    "module": "java.base",
    "source": "/java.base/java/security/AuthProvider.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/BasicPermission;",
    "module": "java.base",
    "source": "/java.base/java/security/BasicPermission.class",
    "super": "Ljava/security/Permission;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getActions()Ljava/lang/String;","getCanonicalName()Ljava/lang/String;","hashCode()I","init(Ljava/lang/String;)V","newPermissionCollection()Ljava/security/PermissionCollection;"]
  }
,
  {
    "className": "Ljava/security/BasicPermissionCollection;",
    "module": "java.base",
    "source": "/java.base/java/security/BasicPermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljava/security/CodeSigner;",
    "module": "java.base",
    "source": "/java.base/java/security/CodeSigner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/CodeSource;",
    "module": "java.base",
    "source": "/java.base/java/security/CodeSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/URL;[Ljava/security/cert/Certificate;)V","equals(Ljava/lang/Object;)Z","getLocation()Ljava/net/URL;","hashCode()I","matchCerts(Ljava/security/CodeSource;Z)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/DigestException;",
    "module": "java.base",
    "source": "/java.base/java/security/DigestException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/DigestInputStream;",
    "module": "java.base",
    "source": "/java.base/java/security/DigestInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;Ljava/security/MessageDigest;)V","read()I","read([BII)I","setMessageDigest(Ljava/security/MessageDigest;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/DrbgParameters$Capability;",
    "module": "java.base",
    "source": "/java.base/java/security/DrbgParameters$Capability.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["supportsPredictionResistance()Z","supportsReseeding()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/DrbgParameters$Instantiation;",
    "module": "java.base",
    "source": "/java.base/java/security/DrbgParameters$Instantiation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/SecureRandomParameters;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/security/DrbgParameters$Capability;[B)V","getCapability()Ljava/security/DrbgParameters$Capability;","getPersonalizationString()[B","getStrength()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/DrbgParameters$NextBytes;",
    "module": "java.base",
    "source": "/java.base/java/security/DrbgParameters$NextBytes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/SecureRandomParameters;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IZ[B)V","getAdditionalInput()[B","getPredictionResistance()Z","getStrength()I"]
  }
,
  {
    "className": "Ljava/security/DrbgParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/DrbgParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["instantiation(ILjava/security/DrbgParameters$Capability;[B)Ljava/security/DrbgParameters$Instantiation;","nextBytes(IZ[B)Ljava/security/DrbgParameters$NextBytes;"]
  }
,
  {
    "className": "Ljava/security/GeneralSecurityException;",
    "module": "java.base",
    "source": "/java.base/java/security/GeneralSecurityException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/Guard;",
    "module": "java.base",
    "source": "/java.base/java/security/Guard.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/InvalidAlgorithmParameterException;",
    "module": "java.base",
    "source": "/java.base/java/security/InvalidAlgorithmParameterException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/InvalidKeyException;",
    "module": "java.base",
    "source": "/java.base/java/security/InvalidKeyException.class",
    "super": "Ljava/security/KeyException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/InvalidParameterException;",
    "module": "java.base",
    "source": "/java.base/java/security/InvalidParameterException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/Key;",
    "module": "java.base",
    "source": "/java.base/java/security/Key.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/KeyException;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/KeyFactory;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/security/KeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V","generatePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","generatePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","getInstance(Ljava/lang/String;)Ljava/security/KeyFactory;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyFactory;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyFactory;","nextSpi(Ljava/security/KeyFactorySpi;)Ljava/security/KeyFactorySpi;","translateKey(Ljava/security/Key;)Ljava/security/Key;"]
  }
,
  {
    "className": "Ljava/security/KeyFactorySpi;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/KeyManagementException;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyManagementException.class",
    "super": "Ljava/security/KeyException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/KeyPairGenerator;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/KeyPairGeneratorSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyPairGeneratorSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/KeyStore$1;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/KeyStore$Builder$1;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$Builder$1.class",
    "super": "Ljava/security/KeyStore$Builder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/KeyStore;Ljava/security/KeyStore$ProtectionParameter;)V"]
  }
,
  {
    "className": "Ljava/security/KeyStore$Builder;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$Builder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newInstance(Ljava/security/KeyStore;Ljava/security/KeyStore$ProtectionParameter;)Ljava/security/KeyStore$Builder;"]
  }
,
  {
    "className": "Ljava/security/KeyStore$Entry$Attribute;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$Entry$Attribute.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/KeyStore$Entry;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$Entry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/KeyStore$PasswordProtection;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$PasswordProtection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/KeyStore$ProtectionParameter;","Ljavax/security/auth/Destroyable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([C)V"]
  }
,
  {
    "className": "Ljava/security/KeyStore$ProtectionParameter;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore$ProtectionParameter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/KeyStore;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/KeyStoreSpi;Ljava/security/Provider;Ljava/lang/String;)V","aliases()Ljava/util/Enumeration;","getCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","getCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","getDefaultType()Ljava/lang/String;","getInstance(Ljava/lang/String;)Ljava/security/KeyStore;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyStore;","getKey(Ljava/lang/String;[C)Ljava/security/Key;","getProvider()Ljava/security/Provider;","isCertificateEntry(Ljava/lang/String;)Z","isKeyEntry(Ljava/lang/String;)Z","load(Ljava/io/InputStream;[C)V"]
  }
,
  {
    "className": "Ljava/security/KeyStoreException;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStoreException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/KeyStoreSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/KeyStoreSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/MessageDigest$Delegate;",
    "module": "java.base",
    "source": "/java.base/java/security/MessageDigest$Delegate.class",
    "super": "Ljava/security/MessageDigest;",
    "interfaces": ["Lsun/security/util/MessageDigestSpi2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/MessageDigestSpi;Ljava/lang/String;)V","clone()Ljava/lang/Object;","engineDigest()[B","engineDigest([BII)I","engineGetDigestLength()I","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V"]
  }
,
  {
    "className": "Ljava/security/MessageDigest;",
    "module": "java.base",
    "source": "/java.base/java/security/MessageDigest.class",
    "super": "Ljava/security/MessageDigestSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","clone()Ljava/lang/Object;","digest()[B","digest([B)[B","digest([BII)I","getAlgorithm()Ljava/lang/String;","getDigestLength()I","getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;","getProvider()Ljava/security/Provider;","getProviderName()Ljava/lang/String;","isEqual([B[B)Z","reset()V","toString()Ljava/lang/String;","update(B)V","update([B)V","update([BII)V"]
  }
,
  {
    "className": "Ljava/security/MessageDigestSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/MessageDigestSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/security/NoSuchAlgorithmException;",
    "module": "java.base",
    "source": "/java.base/java/security/NoSuchAlgorithmException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/NoSuchProviderException;",
    "module": "java.base",
    "source": "/java.base/java/security/NoSuchProviderException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/PKCS12Attribute;",
    "module": "java.base",
    "source": "/java.base/java/security/PKCS12Attribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/KeyStore$Entry$Attribute;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","hashCode()I","parse([B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Permission;",
    "module": "java.base",
    "source": "/java.base/java/security/Permission.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/Guard;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/PermissionCollection;",
    "module": "java.base",
    "source": "/java.base/java/security/PermissionCollection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isReadOnly()Z","setReadOnly()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Permissions$1;",
    "module": "java.base",
    "source": "/java.base/java/security/Permissions$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Permissions;Ljava/security/Permission;Z)V","apply(Ljava/lang/Class;)Ljava/security/PermissionCollection;","apply(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/security/Permissions;",
    "module": "java.base",
    "source": "/java.base/java/security/Permissions.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;","getPermissionCollection(Ljava/security/Permission;Z)Ljava/security/PermissionCollection;","getUnresolvedPermissions(Ljava/security/Permission;)Ljava/security/PermissionCollection;"]
  }
,
  {
    "className": "Ljava/security/PermissionsEnumerator;",
    "module": "java.base",
    "source": "/java.base/java/security/PermissionsEnumerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;)V","getNextEnumWithMore()Ljava/util/Enumeration;","hasMoreElements()Z","nextElement()Ljava/lang/Object;","nextElement()Ljava/security/Permission;"]
  }
,
  {
    "className": "Ljava/security/PermissionsHash;",
    "module": "java.base",
    "source": "/java.base/java/security/PermissionsHash.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljava/security/Policy$Parameters;",
    "module": "java.base",
    "source": "/java.base/java/security/Policy$Parameters.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/Policy;",
    "module": "java.base",
    "source": "/java.base/java/security/Policy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getPolicyNoCheck()Ljava/security/Policy;","isSet()Z"]
  }
,
  {
    "className": "Ljava/security/PolicySpi;",
    "module": "java.base",
    "source": "/java.base/java/security/PolicySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/Principal;",
    "module": "java.base",
    "source": "/java.base/java/security/Principal.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/PrivateKey;",
    "module": "java.base",
    "source": "/java.base/java/security/PrivateKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/Key;","Ljavax/security/auth/Destroyable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/PrivilegedAction;",
    "module": "java.base",
    "source": "/java.base/java/security/PrivilegedAction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/PrivilegedActionException;",
    "module": "java.base",
    "source": "/java.base/java/security/PrivilegedActionException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;)V","getCause()Ljava/lang/Throwable;","getException()Ljava/lang/Exception;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/PrivilegedExceptionAction;",
    "module": "java.base",
    "source": "/java.base/java/security/PrivilegedExceptionAction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/ProtectionDomain$1;",
    "module": "java.base",
    "source": "/java.base/java/security/ProtectionDomain$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/ProtectionDomain;)V","run()Ljava/lang/Object;","run()Ljava/security/PermissionCollection;"]
  }
,
  {
    "className": "Ljava/security/ProtectionDomain$JavaSecurityAccessImpl;",
    "module": "java.base",
    "source": "/java.base/java/security/ProtectionDomain$JavaSecurityAccessImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaSecurityAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["doIntersectionPrivilege(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;)Ljava/lang/Object;","getCombinedACC(Ljava/security/AccessControlContext;Ljava/security/AccessControlContext;)Ljava/security/AccessControlContext;"]
  }
,
  {
    "className": "Ljava/security/ProtectionDomain$Key;",
    "module": "java.base",
    "source": "/java.base/java/security/ProtectionDomain$Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/ProtectionDomain;)V"]
  }
,
  {
    "className": "Ljava/security/ProtectionDomain;",
    "module": "java.base",
    "source": "/java.base/java/security/ProtectionDomain.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V","<init>(Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V","getCodeSource()Ljava/security/CodeSource;","getPermissions()Ljava/security/PermissionCollection;","mergePermissions()Ljava/security/PermissionCollection;","seeAllp()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Provider$EngineDescription;",
    "module": "java.base",
    "source": "/java.base/java/security/Provider$EngineDescription.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/Provider$Service;",
    "module": "java.base",
    "source": "/java.base/java/security/Provider$Service.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/Provider;)V","<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V","addAlias(Ljava/lang/String;)V","addAttribute(Ljava/lang/String;Ljava/lang/String;)V","getAlgorithm()Ljava/lang/String;","getAliases()Ljava/util/List;","getAttribute(Ljava/lang/String;)Ljava/lang/String;","getClassName()Ljava/lang/String;","getImplClass()Ljava/lang/Class;","getKeyClass(Ljava/lang/String;)Ljava/lang/Class;","getProvider()Ljava/security/Provider;","getType()Ljava/lang/String;","hasKeyAttributes()Z","isValid()Z","newInstance(Ljava/lang/Object;)Ljava/lang/Object;","supportsKeyClass(Ljava/security/Key;)Z","supportsKeyFormat(Ljava/security/Key;)Z","supportsParameter(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Provider$ServiceKey;",
    "module": "java.base",
    "source": "/java.base/java/security/Provider$ServiceKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","hashCode()I","matches(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Ljava/security/Provider$UString;",
    "module": "java.base",
    "source": "/java.base/java/security/Provider$UString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Provider;",
    "module": "java.base",
    "source": "/java.base/java/security/Provider.class",
    "super": "Ljava/util/Properties;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","check(Ljava/lang/String;)V","checkInitialized()V","checkLegacy(Ljava/lang/Object;)Z","clear()V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","configure(Ljava/lang/String;)Ljava/security/Provider;","elements()Ljava/util/Enumeration;","ensureLegacyParsed()V","entrySet()Ljava/util/Set;","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getDefaultSecureRandomService()Ljava/security/Provider$Service;","getEngineName(Ljava/lang/String;)Ljava/lang/String;","getName()Ljava/lang/String;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getService(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider$Service;","getServices()Ljava/util/Set;","getTypeAndAlgorithm(Ljava/lang/String;)[Ljava/lang/String;","implClear()V","implComputeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","implPut(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","implPutAll(Ljava/util/Map;)V","implRemove(Ljava/lang/Object;)Ljava/lang/Object;","implRemoveService(Ljava/security/Provider$Service;)V","keySet()Ljava/util/Set;","keys()Ljava/util/Enumeration;","newInstanceUtil(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","parseLegacyPut(Ljava/lang/String;Ljava/lang/String;)V","parseVersionStr(Ljava/lang/String;)D","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putId()V","putPropertyStrings(Ljava/security/Provider$Service;)V","putService(Ljava/security/Provider$Service;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","removeInvalidServices(Ljava/util/Map;)V","removePropertyStrings(Ljava/security/Provider$Service;)V","toString()Ljava/lang/String;","updateSecureRandomEntries(ZLjava/lang/String;)V","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/security/ProviderException;",
    "module": "java.base",
    "source": "/java.base/java/security/ProviderException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/PublicKey;",
    "module": "java.base",
    "source": "/java.base/java/security/PublicKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/Key;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/SecureClassLoader;",
    "module": "java.base",
    "source": "/java.base/java/security/SecureClassLoader.class",
    "super": "Ljava/lang/ClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V"]
  }
,
  {
    "className": "Ljava/security/SecureRandom;",
    "module": "java.base",
    "source": "/java.base/java/security/SecureRandom.class",
    "super": "Ljava/util/Random;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/security/SecureRandomSpi;Ljava/security/Provider;Ljava/lang/String;)V","getDefaultPRNG(Z[B)V","getInstance(Ljava/lang/String;)Ljava/security/SecureRandom;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/SecureRandom;","getThreadSafe()Z","longToByteArray(J)[B","next(I)I","nextBytes([B)V","setSeed(J)V","setSeed([B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/SecureRandomParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/SecureRandomParameters.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/SecureRandomSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/SecureRandomSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/Security;",
    "module": "java.base",
    "source": "/java.base/java/security/Security.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getImpl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/Object;","getImpl(Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)[Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getProvider(Ljava/lang/String;)Ljava/security/Provider;","getProviders()[Ljava/security/Provider;","getSpiClass(Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljava/security/SecurityPermission;",
    "module": "java.base",
    "source": "/java.base/java/security/SecurityPermission.class",
    "super": "Ljava/security/BasicPermission;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/Signature$CipherAdapter;",
    "module": "java.base",
    "source": "/java.base/java/security/Signature$CipherAdapter.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/Cipher;)V"]
  }
,
  {
    "className": "Ljava/security/Signature$Delegate;",
    "module": "java.base",
    "source": "/java.base/java/security/Signature$Delegate.class",
    "super": "Ljava/security/Signature;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/Provider$Service;Ljava/util/Iterator;Ljava/lang/String;)V","<init>(Ljava/security/SignatureSpi;Ljava/lang/String;)V","chooseFirstProvider()V","clone()Ljava/lang/Object;","newInstance(Ljava/security/Provider$Service;)Ljava/security/SignatureSpi;"]
  }
,
  {
    "className": "Ljava/security/Signature;",
    "module": "java.base",
    "source": "/java.base/java/security/Signature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getAlgorithm()Ljava/lang/String;","getInstance(Ljava/lang/String;)Ljava/security/Signature;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Signature;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/Signature;","getInstance(Lsun/security/jca/GetInstance$Instance;Ljava/lang/String;)Ljava/security/Signature;","getInstanceRSA(Ljava/security/Provider;)Ljava/security/Signature;","isSpi(Ljava/security/Provider$Service;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/SignatureSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/SignatureSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/security/URIParameter;",
    "module": "java.base",
    "source": "/java.base/java/security/URIParameter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/Policy$Parameters;","Ljavax/security/auth/login/Configuration$Parameters;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/UnrecoverableEntryException;",
    "module": "java.base",
    "source": "/java.base/java/security/UnrecoverableEntryException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/UnrecoverableKeyException;",
    "module": "java.base",
    "source": "/java.base/java/security/UnrecoverableKeyException.class",
    "super": "Ljava/security/UnrecoverableEntryException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/UnresolvedPermission;",
    "module": "java.base",
    "source": "/java.base/java/security/UnresolvedPermission.class",
    "super": "Ljava/security/Permission;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/UnresolvedPermissionCollection;",
    "module": "java.base",
    "source": "/java.base/java/security/UnresolvedPermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/CRL;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CRL.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/CRLReason;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CRLReason.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/CertPathBuilderException;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertPathBuilderException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/cert/CertPathBuilderSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertPathBuilderSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/cert/CertPathValidatorSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertPathValidatorSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/cert/CertStoreParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertStoreParameters.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/CertStoreSpi;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertStoreSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/cert/CertStoreParameters;)V"]
  }
,
  {
    "className": "Ljava/security/cert/Certificate;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/Certificate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/security/cert/CertificateEncodingException;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertificateEncodingException.class",
    "super": "Ljava/security/cert/CertificateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/cert/CertificateException;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertificateException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/cert/CertificateFactory;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertificateFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/cert/CertificateFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V","generateCertificate(Ljava/io/InputStream;)Ljava/security/cert/Certificate;","getInstance(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;"]
  }
,
  {
    "className": "Ljava/security/cert/CertificateFactorySpi;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertificateFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/cert/CertificateParsingException;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CertificateParsingException.class",
    "super": "Ljava/security/cert/CertificateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/cert/CollectionCertStoreParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/CollectionCertStoreParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/cert/CertStoreParameters;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/Extension;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/Extension.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/LDAPCertStoreParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/LDAPCertStoreParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/cert/CertStoreParameters;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/PolicyQualifierInfo;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/PolicyQualifierInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","getEncoded()[B","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/cert/URICertStoreParameters;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/URICertStoreParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/cert/CertStoreParameters;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/X509CRL;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/X509CRL.class",
    "super": "Ljava/security/cert/CRL;",
    "interfaces": ["Ljava/security/cert/X509Extension;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/cert/X509Certificate;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/X509Certificate.class",
    "super": "Ljava/security/cert/Certificate;",
    "interfaces": ["Ljava/security/cert/X509Extension;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/security/cert/X509Extension;",
    "module": "java.base",
    "source": "/java.base/java/security/cert/X509Extension.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/DSAKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/DSAKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/DSAParams;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/DSAParams.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/DSAPrivateKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/DSAPrivateKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/interfaces/DSAKey;","Ljava/security/PrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/DSAPublicKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/DSAPublicKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/interfaces/DSAKey;","Ljava/security/PublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/ECKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/ECKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/ECPrivateKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/ECPrivateKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/PrivateKey;","Ljava/security/interfaces/ECKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/ECPublicKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/ECPublicKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/PublicKey;","Ljava/security/interfaces/ECKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/RSAKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/RSAKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getParams()Ljava/security/spec/AlgorithmParameterSpec;"]
  }
,
  {
    "className": "Ljava/security/interfaces/RSAPrivateCrtKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/RSAPrivateCrtKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/interfaces/RSAPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/RSAPrivateKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/RSAPrivateKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/PrivateKey;","Ljava/security/interfaces/RSAKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/RSAPublicKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/RSAPublicKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/PublicKey;","Ljava/security/interfaces/RSAKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/XECKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/XECKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/XECPrivateKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/XECPrivateKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/interfaces/XECKey;","Ljava/security/PrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/interfaces/XECPublicKey;",
    "module": "java.base",
    "source": "/java.base/java/security/interfaces/XECPublicKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/interfaces/XECKey;","Ljava/security/PublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/AlgorithmParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/AlgorithmParameterSpec.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/DSAParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/DSAParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;","Ljava/security/interfaces/DSAParams;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getP()Ljava/math/BigInteger;","getQ()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/DSAPrivateKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/DSAPrivateKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getP()Ljava/math/BigInteger;","getQ()Ljava/math/BigInteger;","getX()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/DSAPublicKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/DSAPublicKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getP()Ljava/math/BigInteger;","getQ()Ljava/math/BigInteger;","getY()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/ECField;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECField.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/ECFieldF2m;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECFieldF2m.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/ECField;"],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getFieldSize()I","hashCode()I"]
  }
,
  {
    "className": "Ljava/security/spec/ECFieldFp;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECFieldFp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/ECField;"],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getFieldSize()I","hashCode()I"]
  }
,
  {
    "className": "Ljava/security/spec/ECGenParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECGenParameterSpec.class",
    "super": "Ljava/security/spec/NamedParameterSpec;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/spec/ECParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getCofactor()I","getCurve()Ljava/security/spec/EllipticCurve;","getGenerator()Ljava/security/spec/ECPoint;","getOrder()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/ECPoint;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECPoint.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V","equals(Ljava/lang/Object;)Z","getAffineX()Ljava/math/BigInteger;","getAffineY()Ljava/math/BigInteger;","hashCode()I"]
  }
,
  {
    "className": "Ljava/security/spec/ECPrivateKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECPrivateKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)V","getParams()Ljava/security/spec/ECParameterSpec;","getS()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/ECPublicKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/ECPublicKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V","getParams()Ljava/security/spec/ECParameterSpec;","getW()Ljava/security/spec/ECPoint;"]
  }
,
  {
    "className": "Ljava/security/spec/EllipticCurve;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/EllipticCurve.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getField()Ljava/security/spec/ECField;","hashCode()I"]
  }
,
  {
    "className": "Ljava/security/spec/EncodedKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/EncodedKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","getEncoded()[B"]
  }
,
  {
    "className": "Ljava/security/spec/InvalidKeySpecException;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/InvalidKeySpecException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/security/spec/InvalidParameterSpecException;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/InvalidParameterSpecException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/security/spec/KeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/KeySpec.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/MGF1ParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/MGF1ParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getDigestAlgorithm()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/spec/NamedParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/NamedParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getName()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/spec/PKCS8EncodedKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/PKCS8EncodedKeySpec.class",
    "super": "Ljava/security/spec/EncodedKeySpec;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","getEncoded()[B"]
  }
,
  {
    "className": "Ljava/security/spec/PSSParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/PSSParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;II)V","getDigestAlgorithm()Ljava/lang/String;","getMGFAlgorithm()Ljava/lang/String;","getMGFParameters()Ljava/security/spec/AlgorithmParameterSpec;","getSaltLength()I","getTrailerField()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/security/spec/RSAKeyGenParameterSpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/RSAKeyGenParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/math/BigInteger;)V","<init>(ILjava/math/BigInteger;Ljava/security/spec/AlgorithmParameterSpec;)V","getKeyParams()Ljava/security/spec/AlgorithmParameterSpec;","getKeysize()I","getPublicExponent()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljava/security/spec/RSAPrivateCrtKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/RSAPrivateCrtKeySpec.class",
    "super": "Ljava/security/spec/RSAPrivateKeySpec;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/RSAPrivateKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/RSAPrivateKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/RSAPublicKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/RSAPublicKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/X509EncodedKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/X509EncodedKeySpec.class",
    "super": "Ljava/security/spec/EncodedKeySpec;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","getEncoded()[B"]
  }
,
  {
    "className": "Ljava/security/spec/XECPrivateKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/XECPrivateKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/security/spec/XECPublicKeySpec;",
    "module": "java.base",
    "source": "/java.base/java/security/spec/XECPublicKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/Annotation;",
    "module": "java.base",
    "source": "/java.base/java/text/Annotation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/AttributeEntry;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributeEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getKey()Ljava/text/AttributedCharacterIterator$Attribute;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/AttributedCharacterIterator$Attribute;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributedCharacterIterator$Attribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/AttributedCharacterIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributedCharacterIterator.class",
    "super": "null",
    "interfaces": ["Ljava/text/CharacterIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/AttributedString$AttributeMap;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributedString$AttributeMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/AttributedString;III)V","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/text/AttributedString$AttributedStringIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributedString$AttributedStringIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/AttributedCharacterIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/AttributedString;[Ljava/text/AttributedCharacterIterator$Attribute;II)V","clone()Ljava/lang/Object;","current()C","equals(Ljava/lang/Object;)Z","first()C","getAllAttributeKeys()Ljava/util/Set;","getAttribute(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;","getAttributes()Ljava/util/Map;","getBeginIndex()I","getEndIndex()I","getIndex()I","getRunLimit()I","getRunLimit(Ljava/text/AttributedCharacterIterator$Attribute;)I","getRunStart(Ljava/text/AttributedCharacterIterator$Attribute;)I","getString()Ljava/text/AttributedString;","hashCode()I","internalSetIndex(I)C","next()C","setIndex(I)C","updateRunInfo()V"]
  }
,
  {
    "className": "Ljava/text/AttributedString;",
    "module": "java.base",
    "source": "/java.base/java/text/AttributedString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/text/AttributedCharacterIterator;)V","<init>(Ljava/text/AttributedCharacterIterator;II[Ljava/text/AttributedCharacterIterator$Attribute;)V","<init>([Ljava/text/AttributedCharacterIterator;)V","addAttribute(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V","addAttribute(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V","addAttributeImpl(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V","addAttributeRunData(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V","appendContents(Ljava/lang/StringBuffer;Ljava/text/CharacterIterator;)V","charAt(I)C","createRunAttributeDataVectors()V","ensureRunBreak(I)I","ensureRunBreak(IZ)I","getAttribute(Ljava/text/AttributedCharacterIterator$Attribute;I)Ljava/lang/Object;","getAttributeCheckRange(Ljava/text/AttributedCharacterIterator$Attribute;III)Ljava/lang/Object;","getIterator()Ljava/text/AttributedCharacterIterator;","getIterator([Ljava/text/AttributedCharacterIterator$Attribute;II)Ljava/text/AttributedCharacterIterator;","length()I","mapsDiffer(Ljava/util/Map;Ljava/util/Map;)Z","setAttributes(Ljava/util/Map;I)V","valuesMatch(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/text/BreakIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/BreakIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["clone()Ljava/lang/Object;","getWordInstance(Ljava/util/Locale;)Ljava/text/BreakIterator;","setText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/text/CalendarBuilder;",
    "module": "java.base",
    "source": "/java.base/java/text/CalendarBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addYear(I)Ljava/text/CalendarBuilder;","clear(I)Ljava/text/CalendarBuilder;","establish(Ljava/util/Calendar;)Ljava/util/Calendar;","isSet(I)Z","isValidDayOfWeek(I)Z","set(II)Ljava/text/CalendarBuilder;","toCalendarDayOfWeek(I)I","toISODayOfWeek(I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/CharacterIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/CharacterIterator.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/CharacterIteratorFieldDelegate;",
    "module": "java.base",
    "source": "/java.base/java/text/CharacterIteratorFieldDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/Format$FieldDelegate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatted(ILjava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V","formatted(Ljava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V","getIterator(Ljava/lang/String;)Ljava/text/AttributedCharacterIterator;"]
  }
,
  {
    "className": "Ljava/text/ChoiceFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/ChoiceFormat.class",
    "super": "Ljava/text/NumberFormat;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","applyPattern(Ljava/lang/String;)V","clone()Ljava/lang/Object;","doubleArraySize([D)[D","doubleArraySize([Ljava/lang/String;)[Ljava/lang/String;","equals(Ljava/lang/Object;)Z","format(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","hashCode()I","nextDouble(D)D","nextDouble(DZ)D","parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"]
  }
,
  {
    "className": "Ljava/text/CollationElementIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/CollationElementIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/text/RuleBasedCollator;)V","isLaoBaseConsonant(I)Z","isLaoPreVowel(I)Z","isThaiBaseConsonant(I)Z","isThaiPreVowel(I)Z","makeReorderedBuffer(II[IZ)[I","next()I","nextContractChar(I)I","prevContractChar(I)I","primaryOrder(I)I","secondaryOrder(I)S","setText(Ljava/lang/String;)V","strengthOrder(I)I","tertiaryOrder(I)S"]
  }
,
  {
    "className": "Ljava/text/Collator;",
    "module": "java.base",
    "source": "/java.base/java/text/Collator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","equals(Ljava/lang/Object;)Z","getDecomposition()I","getInstance()Ljava/text/Collator;","getInstance(Ljava/util/Locale;)Ljava/text/Collator;","getStrength()I","setDecomposition(I)V","setStrength(I)V"]
  }
,
  {
    "className": "Ljava/text/DateFormat$Field;",
    "module": "java.base",
    "source": "/java.base/java/text/DateFormat$Field.class",
    "super": "Ljava/text/Format$Field;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/DateFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/DateFormat.class",
    "super": "Ljava/text/Format;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/util/Date;)Ljava/lang/String;","get(IIILjava/util/Locale;)Ljava/text/DateFormat;","get(Lsun/util/locale/provider/LocaleProviderAdapter;IILjava/util/Locale;)Ljava/text/DateFormat;","getCalendar()Ljava/util/Calendar;","getDateInstance(ILjava/util/Locale;)Ljava/text/DateFormat;","getDateTimeInstance(IILjava/util/Locale;)Ljava/text/DateFormat;","getTimeInstance(ILjava/util/Locale;)Ljava/text/DateFormat;","getTimeZone()Ljava/util/TimeZone;","isLenient()Z","parse(Ljava/lang/String;)Ljava/util/Date;","setLenient(Z)V","setTimeZone(Ljava/util/TimeZone;)V"]
  }
,
  {
    "className": "Ljava/text/DateFormatSymbols;",
    "module": "java.base",
    "source": "/java.base/java/text/DateFormatSymbols.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Locale;)V","<init>(Z)V","clone()Ljava/lang/Object;","copyMembers(Ljava/text/DateFormatSymbols;Ljava/text/DateFormatSymbols;)V","equals(Ljava/lang/Object;)Z","getAmPmStrings()[Ljava/lang/String;","getEras()[Ljava/lang/String;","getInstance(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;","getInstanceRef(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;","getMonths()[Ljava/lang/String;","getProviderInstance(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;","getShortMonths()[Ljava/lang/String;","getShortWeekdays()[Ljava/lang/String;","getWeekdays()[Ljava/lang/String;","getZoneIndex(Ljava/lang/String;)I","getZoneStrings()[[Ljava/lang/String;","getZoneStringsImpl(Z)[[Ljava/lang/String;","getZoneStringsWrapper()[[Ljava/lang/String;","hashCode()I","initializeData(Ljava/util/Locale;)V","isSubclassObject()Z","toOneBasedArray([Ljava/lang/String;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/DecimalFormat$DigitArrays;",
    "module": "java.base",
    "source": "/java.base/java/text/DecimalFormat$DigitArrays.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/DecimalFormat$FastPathData;",
    "module": "java.base",
    "source": "/java.base/java/text/DecimalFormat$FastPathData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/text/DecimalFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/DecimalFormat.class",
    "super": "Ljava/text/NumberFormat;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V","addAffixes([C[C[C)V","append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/text/Format$FieldDelegate;[Ljava/text/FieldPosition;Ljava/text/Format$Field;)V","appendAffix(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/String;Z)V","appendAffix(Ljava/lang/StringBuffer;Ljava/lang/String;Z)V","appendSuffix([CI[C)V","applyPattern(Ljava/lang/String;)V","applyPattern(Ljava/lang/String;Z)V","checkAndSetFastPathStatus()Z","clone()Ljava/lang/Object;","collectFractionalDigits(I[CI)V","collectIntegralDigits(I[CI)V","equals(Ljava/lang/Object;)Z","exactRoundUp(DI)Z","expandAffix(Ljava/lang/String;)[Ljava/text/FieldPosition;","expandAffix(Ljava/lang/String;Ljava/lang/StringBuffer;)Ljava/lang/String;","expandAffixes()V","fastDoubleFormat(DZ)V","fastFormat(D)Ljava/lang/String;","format(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(DLjava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;)Ljava/lang/StringBuffer;","format(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(JLjava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;)Ljava/lang/StringBuffer;","format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/math/BigDecimal;Ljava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;)Ljava/lang/StringBuffer;","format(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/math/BigInteger;Ljava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;Z)Ljava/lang/StringBuffer;","formatToCharacterIterator(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;","getBigDecimalMultiplier()Ljava/math/BigDecimal;","getBigIntegerMultiplier()Ljava/math/BigInteger;","getDecimalFormatSymbols()Ljava/text/DecimalFormatSymbols;","getGroupingSize()I","getMaximumFractionDigits()I","getMaximumIntegerDigits()I","getMinimumFractionDigits()I","getMinimumIntegerDigits()I","getNegativePrefix()Ljava/lang/String;","getNegativePrefixFieldPositions()[Ljava/text/FieldPosition;","getNegativeSuffix()Ljava/lang/String;","getNegativeSuffixFieldPositions()[Ljava/text/FieldPosition;","getPositivePrefix()Ljava/lang/String;","getPositivePrefixFieldPositions()[Ljava/text/FieldPosition;","getPositiveSuffix()Ljava/lang/String;","getPositiveSuffixFieldPositions()[Ljava/text/FieldPosition;","hashCode()I","isParseBigDecimal()Z","localizeDigits([C)V","parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;","prependPrefix([CI[C)V","resetFastPathData(Z)V","setCurrency(Ljava/util/Currency;)V","setDecimalSeparatorAlwaysShown(Z)V","setGroupingUsed(Z)V","setMaximumFractionDigits(I)V","setMaximumIntegerDigits(I)V","setMinimumFractionDigits(I)V","setMinimumIntegerDigits(I)V","setParseBigDecimal(Z)V","setRoundingMode(Ljava/math/RoundingMode;)V","subformat(Ljava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;ZZIIII)Ljava/lang/StringBuffer;","subparse(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/String;Ljava/lang/String;Ljava/text/DigitList;Z[Z)Z","toPattern()Ljava/lang/String;","toPattern(Z)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/DecimalFormatSymbols;",
    "module": "java.base",
    "source": "/java.base/java/text/DecimalFormatSymbols.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Locale;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getCurrency()Ljava/util/Currency;","getCurrencySymbol()Ljava/lang/String;","getDecimalSeparator()C","getDigit()C","getExponentSeparator()Ljava/lang/String;","getGroupingSeparator()C","getInfinity()Ljava/lang/String;","getInstance(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;","getInternationalCurrencySymbol()Ljava/lang/String;","getMinusSign()C","getMonetaryDecimalSeparator()C","getNaN()Ljava/lang/String;","getPatternSeparator()C","getPerMill()C","getPercent()C","getZeroDigit()C","hashCode()I","initialize(Ljava/util/Locale;)V","initializeCurrency(Ljava/util/Locale;)V","setCurrency(Ljava/util/Currency;)V"]
  }
,
  {
    "className": "Ljava/text/DigitList$1;",
    "module": "java.base",
    "source": "/java.base/java/text/DigitList$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/DigitList;",
    "module": "java.base",
    "source": "/java.base/java/text/DigitList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","append(C)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","extendDigits(I)V","fitsIntoLong(ZZ)Z","getBigDecimal()Ljava/math/BigDecimal;","getDataChars(I)[C","getDouble()D","getLong()J","getStringBuffer()Ljava/lang/StringBuffer;","hashCode()I","isLongMIN_VALUE()Z","isZero()Z","parseInt([CII)I","round(IZZ)V","set(ZDIZ)V","set(ZJ)V","set(ZJI)V","set(ZLjava/lang/String;ZZIZ)V","set(ZLjava/math/BigDecimal;IZ)V","set(ZLjava/math/BigInteger;I)V","setRoundingMode(Ljava/math/RoundingMode;)V","shouldRoundUp(IZZ)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/DontCareFieldPosition$1;",
    "module": "java.base",
    "source": "/java.base/java/text/DontCareFieldPosition$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/Format$FieldDelegate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["formatted(ILjava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V","formatted(Ljava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V"]
  }
,
  {
    "className": "Ljava/text/DontCareFieldPosition;",
    "module": "java.base",
    "source": "/java.base/java/text/DontCareFieldPosition.class",
    "super": "Ljava/text/FieldPosition;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getFieldDelegate()Ljava/text/Format$FieldDelegate;"]
  }
,
  {
    "className": "Ljava/text/EntryPair;",
    "module": "java.base",
    "source": "/java.base/java/text/EntryPair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;IZ)V"]
  }
,
  {
    "className": "Ljava/text/FieldPosition$Delegate;",
    "module": "java.base",
    "source": "/java.base/java/text/FieldPosition$Delegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/Format$FieldDelegate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/FieldPosition;)V","formatted(ILjava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V","formatted(Ljava/text/Format$Field;Ljava/lang/Object;IILjava/lang/StringBuffer;)V"]
  }
,
  {
    "className": "Ljava/text/FieldPosition;",
    "module": "java.base",
    "source": "/java.base/java/text/FieldPosition.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/text/Format$Field;)V","<init>(Ljava/text/Format$Field;I)V","equals(Ljava/lang/Object;)Z","getBeginIndex()I","getEndIndex()I","getFieldAttribute()Ljava/text/Format$Field;","getFieldDelegate()Ljava/text/Format$FieldDelegate;","hashCode()I","matchesField(Ljava/text/Format$Field;)Z","matchesField(Ljava/text/Format$Field;I)Z","setBeginIndex(I)V","setEndIndex(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/Format$Field;",
    "module": "java.base",
    "source": "/java.base/java/text/Format$Field.class",
    "super": "Ljava/text/AttributedCharacterIterator$Attribute;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/Format$FieldDelegate;",
    "module": "java.base",
    "source": "/java.base/java/text/Format$FieldDelegate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/Format;",
    "module": "java.base",
    "source": "/java.base/java/text/Format.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","createAttributedCharacterIterator(Ljava/lang/String;)Ljava/text/AttributedCharacterIterator;","createAttributedCharacterIterator(Ljava/lang/String;Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;","createAttributedCharacterIterator(Ljava/text/AttributedCharacterIterator;Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;","createAttributedCharacterIterator([Ljava/text/AttributedCharacterIterator;)Ljava/text/AttributedCharacterIterator;","format(Ljava/lang/Object;)Ljava/lang/String;","formatToCharacterIterator(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;"]
  }
,
  {
    "className": "Ljava/text/MergeCollation;",
    "module": "java.base",
    "source": "/java.base/java/text/MergeCollation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","addPattern(Ljava/lang/String;)V","findLastEntry(Ljava/text/PatternEntry;Ljava/lang/StringBuffer;)I","fixEntry(Ljava/text/PatternEntry;)V","getCount()I","getItemAt(I)Ljava/text/PatternEntry;","setPattern(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/text/MessageFormat$Field;",
    "module": "java.base",
    "source": "/java.base/java/text/MessageFormat$Field.class",
    "super": "Ljava/text/Format$Field;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/MessageFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/MessageFormat.class",
    "super": "Ljava/text/Format;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/util/Locale;)V","append(Ljava/lang/StringBuffer;Ljava/text/CharacterIterator;)V","applyPattern(Ljava/lang/String;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","findKeyword(Ljava/lang/String;[Ljava/lang/String;)I","format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","formatToCharacterIterator(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;","hashCode()I","makeFormat(II[Ljava/lang/StringBuilder;)V","subformat([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;"]
  }
,
  {
    "className": "Ljava/text/Normalizer$Form;",
    "module": "java.base",
    "source": "/java.base/java/text/Normalizer$Form.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/Normalizer;",
    "module": "java.base",
    "source": "/java.base/java/text/Normalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["normalize(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/NumberFormat$Field;",
    "module": "java.base",
    "source": "/java.base/java/text/NumberFormat$Field.class",
    "super": "Ljava/text/Format$Field;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/NumberFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/NumberFormat.class",
    "super": "Ljava/text/Format;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","getCurrencyInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getInstance(Ljava/util/Locale;I)Ljava/text/NumberFormat;","getInstance(Lsun/util/locale/provider/LocaleProviderAdapter;Ljava/util/Locale;I)Ljava/text/NumberFormat;","getIntegerInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getMaximumFractionDigits()I","getMaximumIntegerDigits()I","getMinimumFractionDigits()I","getMinimumIntegerDigits()I","getNumberInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getPercentInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","hashCode()I","isGroupingUsed()Z","isParseIntegerOnly()Z","setGroupingUsed(Z)V","setMaximumFractionDigits(I)V","setMaximumIntegerDigits(I)V","setMinimumFractionDigits(I)V","setMinimumIntegerDigits(I)V","setParseIntegerOnly(Z)V"]
  }
,
  {
    "className": "Ljava/text/ParseException;",
    "module": "java.base",
    "source": "/java.base/java/text/ParseException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Ljava/text/ParsePosition;",
    "module": "java.base",
    "source": "/java.base/java/text/ParsePosition.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","equals(Ljava/lang/Object;)Z","getErrorIndex()I","getIndex()I","hashCode()I","setErrorIndex(I)V","setIndex(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/PatternEntry$Parser;",
    "module": "java.base",
    "source": "/java.base/java/text/PatternEntry$Parser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","next()Ljava/text/PatternEntry;"]
  }
,
  {
    "className": "Ljava/text/PatternEntry;",
    "module": "java.base",
    "source": "/java.base/java/text/PatternEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/StringBuffer;Ljava/lang/StringBuffer;)V","addToBuffer(Ljava/lang/StringBuffer;ZZLjava/text/PatternEntry;)V","appendQuoted(Ljava/lang/String;Ljava/lang/StringBuffer;)V","appendQuotedExtension(Ljava/lang/StringBuffer;)V","equals(Ljava/lang/Object;)Z","getChars()Ljava/lang/String;","getExtension()Ljava/lang/String;","getStrength()I","hashCode()I","isSpecialChar(C)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/text/RBCollationTables$BuildAPI;",
    "module": "java.base",
    "source": "/java.base/java/text/RBCollationTables$BuildAPI.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/RBCollationTables;)V","fillInTables(ZZLsun/text/UCompactIntArray;Ljava/util/Vector;Ljava/util/Vector;Lsun/text/IntHashtable;SS)V"]
  }
,
  {
    "className": "Ljava/text/RBCollationTables;",
    "module": "java.base",
    "source": "/java.base/java/text/RBCollationTables.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","getContractValues(I)Ljava/util/Vector;","getContractValuesImpl(I)Ljava/util/Vector;","getEntry(Ljava/util/Vector;Ljava/lang/String;Z)I","getExpandValueList(I)[I","getRules()Ljava/lang/String;","getUnicodeOrder(I)I","isFrenchSec()Z","isSEAsianSwapping()Z"]
  }
,
  {
    "className": "Ljava/text/RBTableBuilder;",
    "module": "java.base",
    "source": "/java.base/java/text/RBTableBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/RBCollationTables$BuildAPI;)V","addComposedChars()V","addContractFlags(Ljava/lang/String;)V","addContractOrder(Ljava/lang/String;I)V","addContractOrder(Ljava/lang/String;IZ)V","addExpandOrder(ILjava/lang/String;I)V","addExpandOrder(Ljava/lang/String;Ljava/lang/String;I)V","addExpansion(ILjava/lang/String;)I","addOrder(II)V","build(Ljava/lang/String;I)V","commit()V","getCharOrder(I)I","getContractOrder(Ljava/lang/String;)I","getContractValues(I)Ljava/util/Vector;","getContractValuesImpl(I)Ljava/util/Vector;","increment(II)I"]
  }
,
  {
    "className": "Ljava/text/RuleBasedCollator;",
    "module": "java.base",
    "source": "/java.base/java/text/RuleBasedCollator.class",
    "super": "Ljava/text/Collator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;I)V","<init>(Ljava/text/RuleBasedCollator;)V","clone()Ljava/lang/Object;","compare(Ljava/lang/String;Ljava/lang/String;)I","equals(Ljava/lang/Object;)Z","getCollationElementIterator(Ljava/lang/String;)Ljava/text/CollationElementIterator;","getRules()Ljava/lang/String;","getTables()Ljava/text/RBCollationTables;","hashCode()I"]
  }
,
  {
    "className": "Ljava/text/SimpleDateFormat;",
    "module": "java.base",
    "source": "/java.base/java/text/SimpleDateFormat.class",
    "super": "Ljava/text/DateFormat;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/util/Locale;)V","applyPattern(Ljava/lang/String;)V","applyPatternImpl(Ljava/lang/String;)V","checkNegativeNumberExpression()V","clone()Ljava/lang/Object;","compile(Ljava/lang/String;)[C","encode(IILjava/lang/StringBuilder;)V","equals(Ljava/lang/Object;)Z","format(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;","format(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/Format$FieldDelegate;)Ljava/lang/StringBuffer;","formatToCharacterIterator(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;","getDisplayNamesMap(ILjava/util/Locale;)Ljava/util/Map;","hashCode()I","initialize(Ljava/util/Locale;)V","initializeCalendar(Ljava/util/Locale;)V","initializeDefaultCentury()V","isDigit(C)Z","matchString(Ljava/lang/String;IILjava/util/Map;Ljava/text/CalendarBuilder;)I","matchString(Ljava/lang/String;II[Ljava/lang/String;Ljava/text/CalendarBuilder;)I","matchZoneString(Ljava/lang/String;I[Ljava/lang/String;)I","parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;","parseAmbiguousDatesAsAfter(Ljava/util/Date;)V","shouldObeyCount(II)Z","subFormat(IILjava/text/Format$FieldDelegate;Ljava/lang/StringBuffer;Z)V","subParse(Ljava/lang/String;IIIZ[ZLjava/text/ParsePosition;ZLjava/text/CalendarBuilder;)I","subParseNumericZone(Ljava/lang/String;IIIZLjava/text/CalendarBuilder;)I","subParseZoneString(Ljava/lang/String;ILjava/text/CalendarBuilder;)I","useDateFormatSymbols()Z","zeroPaddingNumber(IIILjava/lang/StringBuffer;)V"]
  }
,
  {
    "className": "Ljava/text/StringCharacterIterator;",
    "module": "java.base",
    "source": "/java.base/java/text/StringCharacterIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/CharacterIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;III)V","clone()Ljava/lang/Object;","current()C","equals(Ljava/lang/Object;)Z","first()C","getBeginIndex()I","getEndIndex()I","getIndex()I","hashCode()I","next()C","previous()C","setIndex(I)C"]
  }
,
  {
    "className": "Ljava/text/spi/BreakIteratorProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/BreakIteratorProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/text/spi/CollatorProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/CollatorProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/text/spi/DateFormatProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/DateFormatProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/text/spi/DateFormatSymbolsProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/DateFormatSymbolsProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/text/spi/DecimalFormatSymbolsProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/DecimalFormatSymbolsProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/text/spi/NumberFormatProvider;",
    "module": "java.base",
    "source": "/java.base/java/text/spi/NumberFormatProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/time/Clock$SystemClock;",
    "module": "java.base",
    "source": "/java.base/java/time/Clock$SystemClock.class",
    "super": "Ljava/time/Clock;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/ZoneId;)V","equals(Ljava/lang/Object;)Z","getZone()Ljava/time/ZoneId;","hashCode()I","instant()Ljava/time/Instant;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/Clock;",
    "module": "java.base",
    "source": "/java.base/java/time/Clock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","systemDefaultZone()Ljava/time/Clock;","systemUTC()Ljava/time/Clock;"]
  }
,
  {
    "className": "Ljava/time/DateTimeException;",
    "module": "java.base",
    "source": "/java.base/java/time/DateTimeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/time/DayOfWeek;",
    "module": "java.base",
    "source": "/java.base/java/time/DayOfWeek.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;","Ljava/time/temporal/TemporalAdjuster;"],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","getValue()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(I)Ljava/time/DayOfWeek;","plus(J)Ljava/time/DayOfWeek;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;"]
  }
,
  {
    "className": "Ljava/time/Duration$1;",
    "module": "java.base",
    "source": "/java.base/java/time/Duration$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/Duration$Lazy;",
    "module": "java.base",
    "source": "/java.base/java/time/Duration$Lazy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/Duration;",
    "module": "java.base",
    "source": "/java.base/java/time/Duration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalAmount;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JI)V","charMatch(Ljava/lang/CharSequence;IIC)Z","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/Duration;)I","create(JI)Ljava/time/Duration;","create(Ljava/math/BigDecimal;)Ljava/time/Duration;","create(ZJJJJI)Ljava/time/Duration;","equals(Ljava/lang/Object;)Z","getSeconds()J","hashCode()I","multipliedBy(J)Ljava/time/Duration;","negated()Ljava/time/Duration;","of(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;","ofSeconds(J)Ljava/time/Duration;","ofSeconds(JJ)Ljava/time/Duration;","parse(Ljava/lang/CharSequence;)Ljava/time/Duration;","parseFraction(Ljava/lang/CharSequence;III)I","parseNumber(Ljava/lang/CharSequence;IIILjava/lang/String;)J","plus(JJ)Ljava/time/Duration;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/Duration;","plusMillis(J)Ljava/time/Duration;","plusNanos(J)Ljava/time/Duration;","plusSeconds(J)Ljava/time/Duration;","toBigDecimalSeconds()Ljava/math/BigDecimal;","toDays()J","toHours()J","toMillis()J","toMinutes()J","toNanos()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/Instant$1;",
    "module": "java.base",
    "source": "/java.base/java/time/Instant$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/Instant;",
    "module": "java.base",
    "source": "/java.base/java/time/Instant.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JI)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/Instant;)I","create(JI)Ljava/time/Instant;","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Instant;","get(Ljava/time/temporal/TemporalField;)I","getEpochSecond()J","getLong(Ljava/time/temporal/TemporalField;)J","getNano()I","hashCode()I","isAfter(Ljava/time/Instant;)Z","isSupported(Ljava/time/temporal/TemporalField;)Z","now()Ljava/time/Instant;","ofEpochMilli(J)Ljava/time/Instant;","ofEpochSecond(J)Ljava/time/Instant;","ofEpochSecond(JJ)Ljava/time/Instant;","parse(Ljava/lang/CharSequence;)Ljava/time/Instant;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toEpochMilli()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/LocalDate$1;",
    "module": "java.base",
    "source": "/java.base/java/time/LocalDate$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/LocalDate;",
    "module": "java.base",
    "source": "/java.base/java/time/LocalDate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/time/chrono/ChronoLocalDate;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(III)V","atTime(Ljava/time/LocalTime;)Ljava/time/LocalDateTime;","atTime(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/ChronoLocalDate;)I","compareTo0(Ljava/time/LocalDate;)I","create(III)Ljava/time/LocalDate;","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate;","get(Ljava/time/temporal/TemporalField;)I","get0(Ljava/time/temporal/TemporalField;)I","getChronology()Ljava/time/chrono/Chronology;","getChronology()Ljava/time/chrono/IsoChronology;","getDayOfMonth()I","getDayOfWeek()Ljava/time/DayOfWeek;","getDayOfYear()I","getLong(Ljava/time/temporal/TemporalField;)J","getMonth()Ljava/time/Month;","getMonthValue()I","getProlepticMonth()J","getYear()I","hashCode()I","isBefore(Ljava/time/chrono/ChronoLocalDate;)Z","isLeapYear()Z","isSupported(Ljava/time/temporal/TemporalField;)Z","lengthOfMonth()I","lengthOfYear()I","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate;","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;","minusYears(J)Ljava/time/LocalDate;","of(III)Ljava/time/LocalDate;","of(ILjava/time/Month;I)Ljava/time/LocalDate;","ofEpochDay(J)Ljava/time/LocalDate;","ofYearDay(II)Ljava/time/LocalDate;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/LocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/LocalDate;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;","plusDays(J)Ljava/time/LocalDate;","plusMonths(J)Ljava/time/LocalDate;","plusWeeks(J)Ljava/time/LocalDate;","plusYears(J)Ljava/time/LocalDate;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","resolvePreviousValid(III)Ljava/time/LocalDate;","toEpochDay()J","toString()Ljava/lang/String;","with(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/LocalDate;","with(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate;","with(Ljava/time/temporal/TemporalField;J)Ljava/time/LocalDate;","withDayOfMonth(I)Ljava/time/LocalDate;","withDayOfYear(I)Ljava/time/LocalDate;","withMonth(I)Ljava/time/LocalDate;","withYear(I)Ljava/time/LocalDate;"]
  }
,
  {
    "className": "Ljava/time/LocalDateTime;",
    "module": "java.base",
    "source": "/java.base/java/time/LocalDateTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/time/chrono/ChronoLocalDateTime;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/LocalDate;Ljava/time/LocalTime;)V","atZone(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;","atZone(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/ChronoLocalDateTime;)I","compareTo0(Ljava/time/LocalDateTime;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDateTime;","get(Ljava/time/temporal/TemporalField;)I","getDayOfMonth()I","getHour()I","getLong(Ljava/time/temporal/TemporalField;)J","getMinute()I","getMonthValue()I","getNano()I","getSecond()I","getYear()I","hashCode()I","isAfter(Ljava/time/chrono/ChronoLocalDateTime;)Z","isBefore(Ljava/time/chrono/ChronoLocalDateTime;)Z","isSupported(Ljava/time/temporal/TemporalField;)Z","now()Ljava/time/LocalDateTime;","now(Ljava/time/Clock;)Ljava/time/LocalDateTime;","of(IIIIIII)Ljava/time/LocalDateTime;","of(Ljava/time/LocalDate;Ljava/time/LocalTime;)Ljava/time/LocalDateTime;","ofEpochSecond(JILjava/time/ZoneOffset;)Ljava/time/LocalDateTime;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalDateTime;","plusDays(J)Ljava/time/LocalDateTime;","plusSeconds(J)Ljava/time/LocalDateTime;","plusWithOverflow(Ljava/time/LocalDate;JJJJI)Ljava/time/LocalDateTime;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toLocalDate()Ljava/time/LocalDate;","toLocalDate()Ljava/time/chrono/ChronoLocalDate;","toLocalTime()Ljava/time/LocalTime;","toString()Ljava/lang/String;","with(Ljava/time/LocalDate;Ljava/time/LocalTime;)Ljava/time/LocalDateTime;"]
  }
,
  {
    "className": "Ljava/time/LocalTime$1;",
    "module": "java.base",
    "source": "/java.base/java/time/LocalTime$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/LocalTime;",
    "module": "java.base",
    "source": "/java.base/java/time/LocalTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIII)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/LocalTime;)I","create(IIII)Ljava/time/LocalTime;","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalTime;","get(Ljava/time/temporal/TemporalField;)I","get0(Ljava/time/temporal/TemporalField;)I","getHour()I","getLong(Ljava/time/temporal/TemporalField;)J","getMinute()I","getNano()I","getSecond()I","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(II)Ljava/time/LocalTime;","of(IIII)Ljava/time/LocalTime;","ofNanoOfDay(J)Ljava/time/LocalTime;","ofSecondOfDay(J)Ljava/time/LocalTime;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/LocalTime;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toNanoOfDay()J","toSecondOfDay()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/Month$1;",
    "module": "java.base",
    "source": "/java.base/java/time/Month$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/Month;",
    "module": "java.base",
    "source": "/java.base/java/time/Month.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;","Ljava/time/temporal/TemporalAdjuster;"],
    "safeForPreinit": "true",
    "invokedMethods": ["firstDayOfYear(Z)I","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","getValue()I","isSupported(Ljava/time/temporal/TemporalField;)Z","length(Z)I","maxLength()I","minLength()I","of(I)Ljava/time/Month;","plus(J)Ljava/time/Month;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","valueOf(Ljava/lang/String;)Ljava/time/Month;"]
  }
,
  {
    "className": "Ljava/time/MonthDay$1;",
    "module": "java.base",
    "source": "/java.base/java/time/MonthDay$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/MonthDay;",
    "module": "java.base",
    "source": "/java.base/java/time/MonthDay.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/MonthDay;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/MonthDay;","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","getMonth()Ljava/time/Month;","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(II)Ljava/time/MonthDay;","of(Ljava/time/Month;I)Ljava/time/MonthDay;","parse(Ljava/lang/CharSequence;)Ljava/time/MonthDay;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/MonthDay;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/OffsetDateTime$1;",
    "module": "java.base",
    "source": "/java.base/java/time/OffsetDateTime$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/OffsetDateTime;",
    "module": "java.base",
    "source": "/java.base/java/time/OffsetDateTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)V","compareInstant(Ljava/time/OffsetDateTime;Ljava/time/OffsetDateTime;)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/OffsetDateTime;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetDateTime;","get(Ljava/time/temporal/TemporalField;)I","getDayOfMonth()I","getHour()I","getLong(Ljava/time/temporal/TemporalField;)J","getMinute()I","getMonthValue()I","getOffset()Ljava/time/ZoneOffset;","getSecond()I","getYear()I","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime;","of(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;)Ljava/time/OffsetDateTime;","ofInstant(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/OffsetDateTime;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetDateTime;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toEpochSecond()J","toInstant()Ljava/time/Instant;","toLocalDate()Ljava/time/LocalDate;","toLocalDateTime()Ljava/time/LocalDateTime;","toLocalTime()Ljava/time/LocalTime;","toString()Ljava/lang/String;","toZonedDateTime()Ljava/time/ZonedDateTime;"]
  }
,
  {
    "className": "Ljava/time/OffsetTime;",
    "module": "java.base",
    "source": "/java.base/java/time/OffsetTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/LocalTime;Ljava/time/ZoneOffset;)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/OffsetTime;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/OffsetTime;","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/OffsetTime;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toEpochNano()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/Period;",
    "module": "java.base",
    "source": "/java.base/java/time/Period.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/ChronoPeriod;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(III)V","addTo(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;","charMatch(Ljava/lang/CharSequence;IIC)Z","create(III)Ljava/time/Period;","equals(Ljava/lang/Object;)Z","getDays()I","getMonths()I","getYears()I","hashCode()I","isZero()Z","of(III)Ljava/time/Period;","ofDays(I)Ljava/time/Period;","ofMonths(I)Ljava/time/Period;","ofWeeks(I)Ljava/time/Period;","ofYears(I)Ljava/time/Period;","parse(Ljava/lang/CharSequence;)Ljava/time/Period;","parseNumber(Ljava/lang/CharSequence;III)I","toString()Ljava/lang/String;","toTotalMonths()J","validateChrono(Ljava/time/temporal/TemporalAccessor;)V"]
  }
,
  {
    "className": "Ljava/time/Year$1;",
    "module": "java.base",
    "source": "/java.base/java/time/Year$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/Year;",
    "module": "java.base",
    "source": "/java.base/java/time/Year.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/Year;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/Year;","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","hashCode()I","isLeap(J)Z","isSupported(Ljava/time/temporal/TemporalField;)Z","of(I)Ljava/time/Year;","parse(Ljava/lang/CharSequence;)Ljava/time/Year;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/Year;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/YearMonth$1;",
    "module": "java.base",
    "source": "/java.base/java/time/YearMonth$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/YearMonth;",
    "module": "java.base",
    "source": "/java.base/java/time/YearMonth.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(II)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/YearMonth;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/YearMonth;","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","getProlepticMonth()J","getYear()I","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(II)Ljava/time/YearMonth;","parse(Ljava/lang/CharSequence;)Ljava/time/YearMonth;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/YearMonth;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/ZoneId;",
    "module": "java.base",
    "source": "/java.base/java/time/ZoneId.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId;","hashCode()I","of(Ljava/lang/String;)Ljava/time/ZoneId;","of(Ljava/lang/String;Ljava/util/Map;)Ljava/time/ZoneId;","of(Ljava/lang/String;Z)Ljava/time/ZoneId;","ofOffset(Ljava/lang/String;Ljava/time/ZoneOffset;)Ljava/time/ZoneId;","ofWithPrefix(Ljava/lang/String;IZ)Ljava/time/ZoneId;","systemDefault()Ljava/time/ZoneId;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/ZoneOffset;",
    "module": "java.base",
    "source": "/java.base/java/time/ZoneOffset.class",
    "super": "Ljava/time/ZoneId;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","buildId(I)Ljava/lang/String;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/ZoneOffset;)I","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneOffset;","get(Ljava/time/temporal/TemporalField;)I","getId()Ljava/lang/String;","getLong(Ljava/time/temporal/TemporalField;)J","getRules()Ljava/time/zone/ZoneRules;","getTotalSeconds()I","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(Ljava/lang/String;)Ljava/time/ZoneOffset;","ofHoursMinutesSeconds(III)Ljava/time/ZoneOffset;","ofTotalSeconds(I)Ljava/time/ZoneOffset;","parseNumber(Ljava/lang/CharSequence;IZ)I","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;","totalSeconds(III)I","validate(III)V"]
  }
,
  {
    "className": "Ljava/time/ZoneRegion;",
    "module": "java.base",
    "source": "/java.base/java/time/ZoneRegion.class",
    "super": "Ljava/time/ZoneId;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/time/zone/ZoneRules;)V","checkName(Ljava/lang/String;)V","getId()Ljava/lang/String;","getRules()Ljava/time/zone/ZoneRules;","ofId(Ljava/lang/String;Z)Ljava/time/ZoneRegion;"]
  }
,
  {
    "className": "Ljava/time/ZonedDateTime$1;",
    "module": "java.base",
    "source": "/java.base/java/time/ZonedDateTime$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/ZonedDateTime;",
    "module": "java.base",
    "source": "/java.base/java/time/ZonedDateTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/chrono/ChronoZonedDateTime;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)V","create(JILjava/time/ZoneId;)Ljava/time/ZonedDateTime;","equals(Ljava/lang/Object;)Z","from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZonedDateTime;","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","getOffset()Ljava/time/ZoneOffset;","getZone()Ljava/time/ZoneId;","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","now()Ljava/time/ZonedDateTime;","now(Ljava/time/Clock;)Ljava/time/ZonedDateTime;","of(Ljava/time/LocalDate;Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;","of(Ljava/time/LocalDateTime;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;","ofInstant(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;","ofLocal(Ljava/time/LocalDateTime;Ljava/time/ZoneId;Ljava/time/ZoneOffset;)Ljava/time/ZonedDateTime;","parse(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toLocalDate()Ljava/time/LocalDate;","toLocalDate()Ljava/time/chrono/ChronoLocalDate;","toLocalDateTime()Ljava/time/LocalDateTime;","toLocalDateTime()Ljava/time/chrono/ChronoLocalDateTime;","toLocalTime()Ljava/time/LocalTime;","toOffsetDateTime()Ljava/time/OffsetDateTime;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/chrono/AbstractChronology;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/AbstractChronology.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/Chronology;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addFieldValue(Ljava/util/Map;Ljava/time/temporal/ChronoField;J)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/Chronology;)I","equals(Ljava/lang/Object;)Z","hashCode()I","resolveAligned(Ljava/time/chrono/ChronoLocalDate;JJJ)Ljava/time/chrono/ChronoLocalDate;","resolveDate(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYAA(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYAD(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYD(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYMAA(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYMAD(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoLocalDate;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoLocalDate.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["atTime(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/ChronoLocalDate;)I","isBefore(Ljava/time/chrono/ChronoLocalDate;)Z","isSupported(Ljava/time/temporal/TemporalField;)Z","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoLocalDateImpl$1;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoLocalDateImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/chrono/ChronoLocalDateImpl;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoLocalDateImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/ChronoLocalDate;","Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","ensureValid(Ljava/time/chrono/Chronology;Ljava/time/temporal/Temporal;)Ljava/time/chrono/ChronoLocalDate;","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;","toString()Ljava/lang/String;","with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoLocalDateTime;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoLocalDateTime.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/ChronoLocalDateTime;)I","getChronology()Ljava/time/chrono/Chronology;","isAfter(Ljava/time/chrono/ChronoLocalDateTime;)Z","isBefore(Ljava/time/chrono/ChronoLocalDateTime;)Z","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","toEpochSecond(Ljava/time/ZoneOffset;)J","toInstant(Ljava/time/ZoneOffset;)Ljava/time/Instant;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoLocalDateTimeImpl;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoLocalDateTimeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/ChronoLocalDateTime;","Ljava/time/temporal/Temporal;","Ljava/time/temporal/TemporalAdjuster;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/chrono/ChronoLocalDate;Ljava/time/LocalTime;)V","atZone(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;","equals(Ljava/lang/Object;)Z","get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","of(Ljava/time/chrono/ChronoLocalDate;Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTimeImpl;","plusSeconds(J)Ljava/time/chrono/ChronoLocalDateTimeImpl;","plusWithOverflow(Ljava/time/chrono/ChronoLocalDate;JJJJ)Ljava/time/chrono/ChronoLocalDateTimeImpl;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toLocalDate()Ljava/time/chrono/ChronoLocalDate;","toLocalTime()Ljava/time/LocalTime;","toString()Ljava/lang/String;","with(Ljava/time/temporal/Temporal;Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTimeImpl;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoPeriod;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoPeriod.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/TemporalAmount;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/chrono/ChronoZonedDateTime$1;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoZonedDateTime$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/chrono/ChronoZonedDateTime;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoZonedDateTime.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/Temporal;","Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/chrono/ChronoZonedDateTime;)I","get(Ljava/time/temporal/TemporalField;)I","getChronology()Ljava/time/chrono/Chronology;","getLong(Ljava/time/temporal/TemporalField;)J","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toEpochSecond()J","toInstant()Ljava/time/Instant;","toLocalDate()Ljava/time/chrono/ChronoLocalDate;","toLocalTime()Ljava/time/LocalTime;"]
  }
,
  {
    "className": "Ljava/time/chrono/ChronoZonedDateTimeImpl;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/ChronoZonedDateTimeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/ChronoZonedDateTime;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/chrono/ChronoLocalDateTimeImpl;Ljava/time/ZoneOffset;Ljava/time/ZoneId;)V","equals(Ljava/lang/Object;)Z","getOffset()Ljava/time/ZoneOffset;","getZone()Ljava/time/ZoneId;","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","ofBest(Ljava/time/chrono/ChronoLocalDateTimeImpl;Ljava/time/ZoneId;Ljava/time/ZoneOffset;)Ljava/time/chrono/ChronoZonedDateTime;","ofInstant(Ljava/time/chrono/Chronology;Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTimeImpl;","toLocalDateTime()Ljava/time/chrono/ChronoLocalDateTime;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/chrono/Chronology;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/Chronology.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/Chronology;","localDateTime(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime;","zonedDateTime(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;"]
  }
,
  {
    "className": "Ljava/time/chrono/Era;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/Era.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;","Ljava/time/temporal/TemporalAdjuster;"],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/time/temporal/TemporalField;)I","getLong(Ljava/time/temporal/TemporalField;)J","isSupported(Ljava/time/temporal/TemporalField;)Z","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;"]
  }
,
  {
    "className": "Ljava/time/chrono/IsoChronology;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/IsoChronology.class",
    "super": "Ljava/time/chrono/AbstractChronology;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["date(III)Ljava/time/LocalDate;","date(III)Ljava/time/chrono/ChronoLocalDate;","date(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate;","date(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate;","dateEpochDay(J)Ljava/time/LocalDate;","dateEpochDay(J)Ljava/time/chrono/ChronoLocalDate;","dateYearDay(II)Ljava/time/LocalDate;","dateYearDay(II)Ljava/time/chrono/ChronoLocalDate;","eras()Ljava/util/List;","getCalendarType()Ljava/lang/String;","getId()Ljava/lang/String;","isLeapYear(J)Z","range(Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange;","resolveDate(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate;","resolveDate(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveProlepticMonth(Ljava/util/Map;Ljava/time/format/ResolverStyle;)V","resolveYMD(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate;","resolveYMD(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveYearOfEra(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/LocalDate;","resolveYearOfEra(Ljava/util/Map;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","zonedDateTime(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;","zonedDateTime(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;"]
  }
,
  {
    "className": "Ljava/time/chrono/IsoEra;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/IsoEra.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/chrono/Era;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getValue()I","values()[Ljava/time/chrono/IsoEra;"]
  }
,
  {
    "className": "Ljava/time/chrono/JapaneseChronology$1;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/JapaneseChronology$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/chrono/JapaneseChronology;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/JapaneseChronology.class",
    "super": "Ljava/time/chrono/AbstractChronology;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["date(III)Ljava/time/chrono/ChronoLocalDate;","date(III)Ljava/time/chrono/JapaneseDate;","date(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate;","date(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/JapaneseDate;","dateEpochDay(J)Ljava/time/chrono/ChronoLocalDate;","dateEpochDay(J)Ljava/time/chrono/JapaneseDate;","getCalendarType()Ljava/lang/String;","getCurrentEra()Ljava/time/chrono/JapaneseEra;","getId()Ljava/lang/String;","localDateTime(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime;","prolepticYear(Ljava/time/chrono/Era;I)I","range(Ljava/time/temporal/ChronoField;)Ljava/time/temporal/ValueRange;","zonedDateTime(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;"]
  }
,
  {
    "className": "Ljava/time/chrono/JapaneseDate$1;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/JapaneseDate$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/chrono/JapaneseDate;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/JapaneseDate.class",
    "super": "Ljava/time/chrono/ChronoLocalDateImpl;",
    "interfaces": ["Ljava/time/chrono/ChronoLocalDate;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/LocalDate;)V","atTime(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;","equals(Ljava/lang/Object;)Z","getChronology()Ljava/time/chrono/Chronology;","getChronology()Ljava/time/chrono/JapaneseChronology;","getEra()Ljava/time/chrono/Era;","getEra()Ljava/time/chrono/JapaneseEra;","getLong(Ljava/time/temporal/TemporalField;)J","hashCode()I","isSupported(Ljava/time/temporal/TemporalField;)Z","lengthOfMonth()I","lengthOfYear()I","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/JapaneseDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/JapaneseDate;","plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/JapaneseDate;","plusDays(J)Ljava/time/chrono/ChronoLocalDate;","plusDays(J)Ljava/time/chrono/JapaneseDate;","plusMonths(J)Ljava/time/chrono/ChronoLocalDate;","plusMonths(J)Ljava/time/chrono/JapaneseDate;","plusYears(J)Ljava/time/chrono/ChronoLocalDate;","plusYears(J)Ljava/time/chrono/JapaneseDate;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toEpochDay()J","toPrivateJapaneseDate(Ljava/time/LocalDate;)Lsun/util/calendar/LocalGregorianCalendar$Date;","toString()Ljava/lang/String;","with(Ljava/time/LocalDate;)Ljava/time/chrono/JapaneseDate;","with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;","with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/JapaneseDate;","withYear(I)Ljava/time/chrono/JapaneseDate;","withYear(Ljava/time/chrono/JapaneseEra;I)Ljava/time/chrono/JapaneseDate;"]
  }
,
  {
    "className": "Ljava/time/chrono/JapaneseEra;",
    "module": "java.base",
    "source": "/java.base/java/time/chrono/JapaneseEra.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/chrono/Era;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getName()Ljava/lang/String;","getPrivateEra()Lsun/util/calendar/Era;","getValue()I","of(I)Ljava/time/chrono/JapaneseEra;","ordinal(I)I","privateEraFrom(Ljava/time/LocalDate;)Lsun/util/calendar/Era;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toJapaneseEra(Lsun/util/calendar/Era;)Ljava/time/chrono/JapaneseEra;","toString()Ljava/lang/String;","values()[Ljava/time/chrono/JapaneseEra;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatter;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/format/DateTimeFormatterBuilder$CompositePrinterParser;Ljava/util/Locale;Ljava/time/format/DecimalStyle;Ljava/time/format/ResolverStyle;Ljava/util/Set;Ljava/time/chrono/Chronology;Ljava/time/ZoneId;)V","createError(Ljava/lang/CharSequence;Ljava/lang/RuntimeException;)Ljava/time/format/DateTimeParseException;","format(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;","formatTo(Ljava/time/temporal/TemporalAccessor;Ljava/lang/Appendable;)V","getChronology()Ljava/time/chrono/Chronology;","getDecimalStyle()Ljava/time/format/DecimalStyle;","getLocale()Ljava/util/Locale;","getZone()Ljava/time/ZoneId;","ofLocalizedDate(Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter;","ofLocalizedDateTime(Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter;","ofLocalizedDateTime(Ljava/time/format/FormatStyle;Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter;","ofLocalizedTime(Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatter;","ofPattern(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;","parse(Ljava/lang/CharSequence;)Ljava/time/temporal/TemporalAccessor;","parse(Ljava/lang/CharSequence;Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","parseBest(Ljava/lang/CharSequence;[Ljava/time/temporal/TemporalQuery;)Ljava/time/temporal/TemporalAccessor;","parseResolved0(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/temporal/TemporalAccessor;","parseUnresolved0(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/time/format/DateTimeParseContext;","toPrinterParser(Z)Ljava/time/format/DateTimeFormatterBuilder$CompositePrinterParser;","toString()Ljava/lang/String;","withLocale(Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;","withResolverStyle(Ljava/time/format/ResolverStyle;)Ljava/time/format/DateTimeFormatter;","withZone(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$1;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$1.class",
    "super": "Ljava/time/format/DateTimeTextProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getText(Ljava/time/chrono/Chronology;Ljava/time/temporal/TemporalField;JLjava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;","getText(Ljava/time/temporal/TemporalField;JLjava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;","getTextIterator(Ljava/time/chrono/Chronology;Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/util/Iterator;","getTextIterator(Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/util/Iterator;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$3;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$CharLiteralPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$CharLiteralPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(C)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$CompositePrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$CompositePrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Z)V","<init>([Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;Z)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;","withOptional(Z)Ljava/time/format/DateTimeFormatterBuilder$CompositePrinterParser;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$DateTimePrinterParser.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$FractionPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$FractionPrinterParser.class",
    "super": "Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalField;IIZ)V","<init>(Ljava/time/temporal/TemporalField;IIZI)V","convertFromFraction(Ljava/math/BigDecimal;)J","convertToFraction(J)Ljava/math/BigDecimal;","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","isFixedWidth(Ljava/time/format/DateTimeParseContext;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$FractionPrinterParser;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$FractionPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$InstantPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$InstantPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$LocalizedOffsetIdPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/format/TextStyle;)V","appendHMS(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","getDigit(Ljava/lang/CharSequence;I)I","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$LocalizedPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$LocalizedPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/format/FormatStyle;Ljava/time/format/FormatStyle;)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","formatter(Ljava/util/Locale;Ljava/time/chrono/Chronology;)Ljava/time/format/DateTimeFormatter;","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$NumberPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalField;IILjava/time/format/SignStyle;)V","<init>(Ljava/time/temporal/TemporalField;IILjava/time/format/SignStyle;I)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","getValue(Ljava/time/format/DateTimePrintContext;J)J","isFixedWidth(Ljava/time/format/DateTimeParseContext;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","setValue(Ljava/time/format/DateTimeParseContext;JII)I","toString()Ljava/lang/String;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$OffsetIdPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$OffsetIdPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","checkPattern(Ljava/lang/String;)I","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","formatZeroPad(ZILjava/lang/StringBuilder;)V","isColon()Z","isPaddedHour()Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","parseDigits(Ljava/lang/CharSequence;ZI[I)Z","parseHour(Ljava/lang/CharSequence;Z[I)V","parseMinute(Ljava/lang/CharSequence;ZZ[I)V","parseOptionalMinuteSecond(Ljava/lang/CharSequence;Z[I)V","parseSecond(Ljava/lang/CharSequence;ZZ[I)V","parseVariableWidthDigits(Ljava/lang/CharSequence;II[I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$PadPrinterParserDecorator;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$PadPrinterParserDecorator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;IC)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$PrefixTree$CI;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$PrefixTree$CI.class",
    "super": "Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;)V","isEqual(CC)Z","newNode(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree$CI;","newNode(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;","prefixOf(Ljava/lang/CharSequence;II)Z"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$PrefixTree.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;)V","add(Ljava/lang/String;Ljava/lang/String;)Z","add0(Ljava/lang/String;Ljava/lang/String;)Z","isEqual(CC)Z","match(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Ljava/lang/String;","newNode(Ljava/lang/String;Ljava/lang/String;Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;","newTree(Ljava/time/format/DateTimeParseContext;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;","newTree(Ljava/util/Set;Ljava/time/format/DateTimeParseContext;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;","prefixLength(Ljava/lang/String;)I","prefixOf(Ljava/lang/CharSequence;II)Z","toKey(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$ReducedPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$ReducedPrinterParser.class",
    "super": "Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalField;IIILjava/time/chrono/ChronoLocalDate;)V","<init>(Ljava/time/temporal/TemporalField;IIILjava/time/chrono/ChronoLocalDate;I)V","getValue(Ljava/time/format/DateTimePrintContext;J)J","isFixedWidth(Ljava/time/format/DateTimeParseContext;)Z","lambda$setValue$0(Ljava/time/format/DateTimeParseContext;JIILjava/time/chrono/Chronology;)V","setValue(Ljava/time/format/DateTimeParseContext;JII)I","toString()Ljava/lang/String;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$ReducedPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$ReducedPrinterParser;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$SettingsParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$SettingsParser.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$StringLiteralPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$StringLiteralPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$TextPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$TextPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;Ljava/time/format/DateTimeTextProvider;)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","numberPrinterParser()Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$WeekBasedFieldPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$WeekBasedFieldPrinterParser.class",
    "super": "Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(CIII)V","<init>(CIIII)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","printerParser(Ljava/util/Locale;)Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;","toString()Ljava/lang/String;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withFixedWidth()Ljava/time/format/DateTimeFormatterBuilder$WeekBasedFieldPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;","withSubsequentWidth(I)Ljava/time/format/DateTimeFormatterBuilder$WeekBasedFieldPrinterParser;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$ZoneIdPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$ZoneIdPrinterParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalQuery;Ljava/lang/String;)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","getTree(Ljava/time/format/DateTimeParseContext;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;","parse(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;I)I","parseOffsetBased(Ljava/time/format/DateTimeParseContext;Ljava/lang/CharSequence;IILjava/time/format/DateTimeFormatterBuilder$OffsetIdPrinterParser;)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder$ZoneTextPrinterParser;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder$ZoneTextPrinterParser.class",
    "super": "Ljava/time/format/DateTimeFormatterBuilder$ZoneIdPrinterParser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/format/TextStyle;Ljava/util/Set;Z)V","format(Ljava/time/format/DateTimePrintContext;Ljava/lang/StringBuilder;)Z","getDisplayName(Ljava/lang/String;ILjava/util/Locale;)Ljava/lang/String;","getTree(Ljava/time/format/DateTimeParseContext;)Ljava/time/format/DateTimeFormatterBuilder$PrefixTree;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeFormatterBuilder;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeFormatterBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/time/format/DateTimeFormatterBuilder;Z)V","append(Ljava/time/format/DateTimeFormatter;)Ljava/time/format/DateTimeFormatterBuilder;","appendFraction(Ljava/time/temporal/TemporalField;IIZ)Ljava/time/format/DateTimeFormatterBuilder;","appendGenericZoneText(Ljava/time/format/TextStyle;)Ljava/time/format/DateTimeFormatterBuilder;","appendInternal(Ljava/time/format/DateTimeFormatterBuilder$DateTimePrinterParser;)I","appendLiteral(C)Ljava/time/format/DateTimeFormatterBuilder;","appendLiteral(Ljava/lang/String;)Ljava/time/format/DateTimeFormatterBuilder;","appendLocalized(Ljava/time/format/FormatStyle;Ljava/time/format/FormatStyle;)Ljava/time/format/DateTimeFormatterBuilder;","appendLocalizedOffset(Ljava/time/format/TextStyle;)Ljava/time/format/DateTimeFormatterBuilder;","appendOffset(Ljava/lang/String;Ljava/lang/String;)Ljava/time/format/DateTimeFormatterBuilder;","appendPattern(Ljava/lang/String;)Ljava/time/format/DateTimeFormatterBuilder;","appendText(Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;)Ljava/time/format/DateTimeFormatterBuilder;","appendValue(Ljava/time/format/DateTimeFormatterBuilder$NumberPrinterParser;)Ljava/time/format/DateTimeFormatterBuilder;","appendValue(Ljava/time/temporal/TemporalField;)Ljava/time/format/DateTimeFormatterBuilder;","appendValue(Ljava/time/temporal/TemporalField;I)Ljava/time/format/DateTimeFormatterBuilder;","appendValue(Ljava/time/temporal/TemporalField;IILjava/time/format/SignStyle;)Ljava/time/format/DateTimeFormatterBuilder;","appendValueReduced(Ljava/time/temporal/TemporalField;IILjava/time/chrono/ChronoLocalDate;)Ljava/time/format/DateTimeFormatterBuilder;","appendZoneId()Ljava/time/format/DateTimeFormatterBuilder;","appendZoneText(Ljava/time/format/TextStyle;)Ljava/time/format/DateTimeFormatterBuilder;","convertStyle(Ljava/time/format/FormatStyle;)I","getLocalizedDateTimePattern(Ljava/time/format/FormatStyle;Ljava/time/format/FormatStyle;Ljava/time/chrono/Chronology;Ljava/util/Locale;)Ljava/lang/String;","lambda$static$0(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId;","optionalEnd()Ljava/time/format/DateTimeFormatterBuilder;","optionalStart()Ljava/time/format/DateTimeFormatterBuilder;","padNext(I)Ljava/time/format/DateTimeFormatterBuilder;","padNext(IC)Ljava/time/format/DateTimeFormatterBuilder;","parseField(CILjava/time/temporal/TemporalField;)V","parsePattern(Ljava/lang/String;)V","toFormatter()Ljava/time/format/DateTimeFormatter;","toFormatter(Ljava/time/format/ResolverStyle;Ljava/time/chrono/Chronology;)Ljava/time/format/DateTimeFormatter;","toFormatter(Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;","toFormatter(Ljava/util/Locale;Ljava/time/format/ResolverStyle;Ljava/time/chrono/Chronology;)Ljava/time/format/DateTimeFormatter;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeParseContext;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeParseContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/format/DateTimeFormatter;)V","addChronoChangedListener(Ljava/util/function/Consumer;)V","charEquals(CC)Z","charEqualsIgnoreCase(CC)Z","copy()Ljava/time/format/DateTimeParseContext;","currentParsed()Ljava/time/format/Parsed;","endOptional(Z)V","getDecimalStyle()Ljava/time/format/DecimalStyle;","getEffectiveChronology()Ljava/time/chrono/Chronology;","getLocale()Ljava/util/Locale;","getParsed(Ljava/time/temporal/TemporalField;)Ljava/lang/Long;","isCaseSensitive()Z","isStrict()Z","setCaseSensitive(Z)V","setParsed(Ljava/time/ZoneId;)V","setParsedField(Ljava/time/temporal/TemporalField;JII)I","setParsedLeapSecond()V","setStrict(Z)V","startOptional()V","subSequenceEquals(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z","toResolved(Ljava/time/format/ResolverStyle;Ljava/util/Set;)Ljava/time/temporal/TemporalAccessor;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeParseException;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeParseException.class",
    "super": "Ljava/time/DateTimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/CharSequence;I)V","<init>(Ljava/lang/String;Ljava/lang/CharSequence;ILjava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/time/format/DateTimePrintContext$1;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimePrintContext$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/chrono/ChronoLocalDate;Ljava/time/temporal/TemporalAccessor;Ljava/time/chrono/Chronology;Ljava/time/ZoneId;)V","getLong(Ljava/time/temporal/TemporalField;)J","isSupported(Ljava/time/temporal/TemporalField;)Z","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimePrintContext;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimePrintContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/temporal/TemporalAccessor;Ljava/time/format/DateTimeFormatter;)V","adjust(Ljava/time/temporal/TemporalAccessor;Ljava/time/format/DateTimeFormatter;)Ljava/time/temporal/TemporalAccessor;","endOptional()V","getDecimalStyle()Ljava/time/format/DecimalStyle;","getLocale()Ljava/util/Locale;","getTemporal()Ljava/time/temporal/TemporalAccessor;","getValue(Ljava/time/temporal/TemporalField;)Ljava/lang/Long;","getValue(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","startOptional()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeTextProvider$1;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeTextProvider$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeTextProvider$2;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeTextProvider$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/format/DateTimeTextProvider$LocaleStore;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeTextProvider$LocaleStore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","getText(JLjava/time/format/TextStyle;)Ljava/lang/String;","getTextIterator(Ljava/time/format/TextStyle;)Ljava/util/Iterator;"]
  }
,
  {
    "className": "Ljava/time/format/DateTimeTextProvider;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DateTimeTextProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["createEntry(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;","createStore(Ljava/time/temporal/TemporalField;Ljava/util/Locale;)Ljava/lang/Object;","findStore(Ljava/time/temporal/TemporalField;Ljava/util/Locale;)Ljava/lang/Object;","getInstance()Ljava/time/format/DateTimeTextProvider;","getLocalizedResource(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","getText(Ljava/time/chrono/Chronology;Ljava/time/temporal/TemporalField;JLjava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;","getText(Ljava/time/temporal/TemporalField;JLjava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;","getTextIterator(Ljava/time/chrono/Chronology;Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/util/Iterator;","getTextIterator(Ljava/time/temporal/TemporalField;Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/util/Iterator;","toWeekDay(I)I"]
  }
,
  {
    "className": "Ljava/time/format/DecimalStyle;",
    "module": "java.base",
    "source": "/java.base/java/time/format/DecimalStyle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["convertNumberToI18N(Ljava/lang/String;)Ljava/lang/String;","convertToDigit(C)I","equals(Ljava/lang/Object;)Z","getDecimalSeparator()C","getNegativeSign()C","getPositiveSign()C","getZeroDigit()C","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/format/FormatStyle;",
    "module": "java.base",
    "source": "/java.base/java/time/format/FormatStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/format/Parsed;",
    "module": "java.base",
    "source": "/java.base/java/time/format/Parsed.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","copy()Ljava/time/format/Parsed;","crossCheck()V","crossCheck(Ljava/time/temporal/TemporalAccessor;)V","getLong(Ljava/time/temporal/TemporalField;)J","isSupported(Ljava/time/temporal/TemporalField;)Z","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","resolve(Ljava/time/format/ResolverStyle;Ljava/util/Set;)Ljava/time/temporal/TemporalAccessor;","resolveDateFields()V","resolveFields()V","resolveFractional()V","resolveInstant()V","resolveInstantFields()V","resolveInstantFields0(Ljava/time/ZoneId;)V","resolvePeriod()V","resolveTime(JJJJ)V","resolveTimeFields()V","resolveTimeLenient()V","toString()Ljava/lang/String;","updateCheckConflict(Ljava/time/LocalTime;Ljava/time/Period;)V","updateCheckConflict(Ljava/time/chrono/ChronoLocalDate;)V","updateCheckConflict(Ljava/time/temporal/TemporalField;Ljava/time/temporal/TemporalField;Ljava/lang/Long;)V"]
  }
,
  {
    "className": "Ljava/time/format/ResolverStyle;",
    "module": "java.base",
    "source": "/java.base/java/time/format/ResolverStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/format/SignStyle;",
    "module": "java.base",
    "source": "/java.base/java/time/format/SignStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["parse(ZZZ)Z"]
  }
,
  {
    "className": "Ljava/time/format/TextStyle;",
    "module": "java.base",
    "source": "/java.base/java/time/format/TextStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isStandalone()Z","toCalendarStyle()I","values()[Ljava/time/format/TextStyle;","zoneNameStyleIndex()I"]
  }
,
  {
    "className": "Ljava/time/format/ZoneName;",
    "module": "java.base",
    "source": "/java.base/java/time/format/ZoneName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["toZid(Ljava/lang/String;)Ljava/lang/String;","toZid(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/ChronoField;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/ChronoField.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalField;"],
    "safeForPreinit": "true",
    "invokedMethods": ["checkValidIntValue(J)I","checkValidValue(J)J","getFrom(Ljava/time/temporal/TemporalAccessor;)J","isDateBased()Z","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","isTimeBased()Z","range()Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;","values()[Ljava/time/temporal/ChronoField;"]
  }
,
  {
    "className": "Ljava/time/temporal/ChronoUnit;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/ChronoUnit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalUnit;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getDuration()Ljava/time/Duration;","isDurationEstimated()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Field$1;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Field$1.class",
    "super": "Ljava/time/temporal/IsoFields$Field;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFrom(Ljava/time/temporal/TemporalAccessor;)J","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","range()Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Field$2;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Field$2.class",
    "super": "Ljava/time/temporal/IsoFields$Field;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFrom(Ljava/time/temporal/TemporalAccessor;)J","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","range()Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Field$3;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Field$3.class",
    "super": "Ljava/time/temporal/IsoFields$Field;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFrom(Ljava/time/temporal/TemporalAccessor;)J","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","range()Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Field$4;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Field$4.class",
    "super": "Ljava/time/temporal/IsoFields$Field;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFrom(Ljava/time/temporal/TemporalAccessor;)J","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","range()Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Field;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Field.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalField;"],
    "safeForPreinit": "true",
    "invokedMethods": ["ensureIso(Ljava/time/temporal/TemporalAccessor;)V","getWeek(Ljava/time/LocalDate;)I","getWeekBasedYear(Ljava/time/LocalDate;)I","getWeekRange(I)I","getWeekRange(Ljava/time/LocalDate;)Ljava/time/temporal/ValueRange;","isDateBased()Z","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields$Unit;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields$Unit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalUnit;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/IsoFields;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/IsoFields.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["isIso(Ljava/time/temporal/TemporalAccessor;)Z"]
  }
,
  {
    "className": "Ljava/time/temporal/JulianFields$Field;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/JulianFields$Field.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljava/time/temporal/TemporalField;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getFrom(Ljava/time/temporal/TemporalAccessor;)J","isDateBased()Z","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","range()Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/JulianFields;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/JulianFields.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/temporal/Temporal;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/Temporal.class",
    "super": "null",
    "interfaces": ["Ljava/time/temporal/TemporalAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/temporal/Temporal;","plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/temporal/Temporal;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalAccessor;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/time/temporal/TemporalField;)I","query(Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;","range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalAdjuster;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalAdjuster.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/temporal/TemporalAdjusters;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalAdjusters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["lambda$nextOrSame$10(ILjava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;","lambda$previousOrSame$12(ILjava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;","nextOrSame(Ljava/time/DayOfWeek;)Ljava/time/temporal/TemporalAdjuster;","previousOrSame(Ljava/time/DayOfWeek;)Ljava/time/temporal/TemporalAdjuster;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalAmount;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalAmount.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/temporal/TemporalField;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalField.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$1;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$2;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/Chronology;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$3;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/TemporalUnit;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$4;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneOffset;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$5;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$6;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$6.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalDate;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries$7;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries$7.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalQuery;"],
    "safeForPreinit": "true",
    "invokedMethods": ["queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/Object;","queryFrom(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalTime;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQueries;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQueries.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["chronology()Ljava/time/temporal/TemporalQuery;","localDate()Ljava/time/temporal/TemporalQuery;","localTime()Ljava/time/temporal/TemporalQuery;","offset()Ljava/time/temporal/TemporalQuery;","precision()Ljava/time/temporal/TemporalQuery;","zone()Ljava/time/temporal/TemporalQuery;","zoneId()Ljava/time/temporal/TemporalQuery;"]
  }
,
  {
    "className": "Ljava/time/temporal/TemporalQuery;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalQuery.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/temporal/TemporalUnit;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/TemporalUnit.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/temporal/UnsupportedTemporalTypeException;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/UnsupportedTemporalTypeException.class",
    "super": "Ljava/time/DateTimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/time/temporal/ValueRange;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/ValueRange.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JJJJ)V","checkValidIntValue(JLjava/time/temporal/TemporalField;)I","checkValidValue(JLjava/time/temporal/TemporalField;)J","equals(Ljava/lang/Object;)Z","genInvalidFieldMessage(Ljava/time/temporal/TemporalField;J)Ljava/lang/String;","getMaximum()J","getMinimum()J","hashCode()I","isFixed()Z","isIntValue()Z","isValidIntValue(J)Z","isValidValue(J)Z","of(JJ)Ljava/time/temporal/ValueRange;","of(JJJ)Ljava/time/temporal/ValueRange;","of(JJJJ)Ljava/time/temporal/ValueRange;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/WeekFields$ComputedDayOfField;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/WeekFields$ComputedDayOfField.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/time/temporal/TemporalField;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/time/temporal/WeekFields;Ljava/time/temporal/TemporalUnit;Ljava/time/temporal/TemporalUnit;Ljava/time/temporal/ValueRange;)V","computeWeek(II)I","getFrom(Ljava/time/temporal/TemporalAccessor;)J","isDateBased()Z","isSupportedBy(Ljava/time/temporal/TemporalAccessor;)Z","localizedDayOfWeek(I)I","localizedDayOfWeek(Ljava/time/temporal/TemporalAccessor;)I","localizedWeekBasedYear(Ljava/time/temporal/TemporalAccessor;)I","localizedWeekOfMonth(Ljava/time/temporal/TemporalAccessor;)J","localizedWeekOfWeekBasedYear(Ljava/time/temporal/TemporalAccessor;)I","localizedWeekOfYear(Ljava/time/temporal/TemporalAccessor;)J","ofDayOfWeekField(Ljava/time/temporal/WeekFields;)Ljava/time/temporal/WeekFields$ComputedDayOfField;","ofWeekBasedYear(Ljava/time/chrono/Chronology;III)Ljava/time/chrono/ChronoLocalDate;","ofWeekBasedYearField(Ljava/time/temporal/WeekFields;)Ljava/time/temporal/WeekFields$ComputedDayOfField;","ofWeekOfMonthField(Ljava/time/temporal/WeekFields;)Ljava/time/temporal/WeekFields$ComputedDayOfField;","ofWeekOfWeekBasedYearField(Ljava/time/temporal/WeekFields;)Ljava/time/temporal/WeekFields$ComputedDayOfField;","ofWeekOfYearField(Ljava/time/temporal/WeekFields;)Ljava/time/temporal/WeekFields$ComputedDayOfField;","range()Ljava/time/temporal/ValueRange;","rangeByWeek(Ljava/time/temporal/TemporalAccessor;Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;","rangeRefinedBy(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","rangeWeekOfWeekBasedYear(Ljava/time/temporal/TemporalAccessor;)Ljava/time/temporal/ValueRange;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolve(Ljava/util/Map;Ljava/time/temporal/TemporalAccessor;Ljava/time/format/ResolverStyle;)Ljava/time/temporal/TemporalAccessor;","resolveWBY(Ljava/util/Map;Ljava/time/chrono/Chronology;ILjava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveWoM(Ljava/util/Map;Ljava/time/chrono/Chronology;IJJILjava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","resolveWoY(Ljava/util/Map;Ljava/time/chrono/Chronology;IJILjava/time/format/ResolverStyle;)Ljava/time/chrono/ChronoLocalDate;","startOfWeekOffset(II)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/temporal/WeekFields;",
    "module": "java.base",
    "source": "/java.base/java/time/temporal/WeekFields.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/DayOfWeek;I)V","dayOfWeek()Ljava/time/temporal/TemporalField;","equals(Ljava/lang/Object;)Z","getFirstDayOfWeek()Ljava/time/DayOfWeek;","getMinimalDaysInFirstWeek()I","hashCode()I","of(Ljava/time/DayOfWeek;I)Ljava/time/temporal/WeekFields;","of(Ljava/util/Locale;)Ljava/time/temporal/WeekFields;","toString()Ljava/lang/String;","weekBasedYear()Ljava/time/temporal/TemporalField;","weekOfMonth()Ljava/time/temporal/TemporalField;","weekOfWeekBasedYear()Ljava/time/temporal/TemporalField;"]
  }
,
  {
    "className": "Ljava/time/zone/Ser;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/Ser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Externalizable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["read(Ljava/io/DataInput;)Ljava/lang/Object;","readEpochSec(Ljava/io/DataInput;)J","readInternal(BLjava/io/DataInput;)Ljava/lang/Object;","readOffset(Ljava/io/DataInput;)Ljava/time/ZoneOffset;"]
  }
,
  {
    "className": "Ljava/time/zone/TzdbZoneRulesProvider;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/TzdbZoneRulesProvider.class",
    "super": "Ljava/time/zone/ZoneRulesProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["provideRules(Ljava/lang/String;Z)Ljava/time/zone/ZoneRules;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneOffsetTransition;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneOffsetTransition.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JLjava/time/ZoneOffset;Ljava/time/ZoneOffset;)V","<init>(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/time/zone/ZoneOffsetTransition;)I","equals(Ljava/lang/Object;)Z","getDateTimeAfter()Ljava/time/LocalDateTime;","getDateTimeBefore()Ljava/time/LocalDateTime;","getDuration()Ljava/time/Duration;","getDurationSeconds()I","getOffsetAfter()Ljava/time/ZoneOffset;","getOffsetBefore()Ljava/time/ZoneOffset;","getValidOffsets()Ljava/util/List;","hashCode()I","isGap()Z","readExternal(Ljava/io/DataInput;)Ljava/time/zone/ZoneOffsetTransition;","toEpochSecond()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneOffsetTransitionRule$1;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneOffsetTransitionRule$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/time/zone/ZoneOffsetTransitionRule$TimeDefinition;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneOffsetTransitionRule$TimeDefinition.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createDateTime(Ljava/time/LocalDateTime;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;)Ljava/time/LocalDateTime;","values()[Ljava/time/zone/ZoneOffsetTransitionRule$TimeDefinition;"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneOffsetTransitionRule;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneOffsetTransitionRule.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/Month;ILjava/time/DayOfWeek;Ljava/time/LocalTime;ZLjava/time/zone/ZoneOffsetTransitionRule$TimeDefinition;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;)V","createTransition(I)Ljava/time/zone/ZoneOffsetTransition;","equals(Ljava/lang/Object;)Z","hashCode()I","of(Ljava/time/Month;ILjava/time/DayOfWeek;Ljava/time/LocalTime;ZLjava/time/zone/ZoneOffsetTransitionRule$TimeDefinition;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;Ljava/time/ZoneOffset;)Ljava/time/zone/ZoneOffsetTransitionRule;","readExternal(Ljava/io/DataInput;)Ljava/time/zone/ZoneOffsetTransitionRule;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneRules;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneRules.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/time/ZoneOffset;)V","<init>([J[Ljava/time/ZoneOffset;[J[Ljava/time/ZoneOffset;[Ljava/time/zone/ZoneOffsetTransitionRule;)V","equals(Ljava/lang/Object;)Z","findOffsetInfo(Ljava/time/LocalDateTime;Ljava/time/zone/ZoneOffsetTransition;)Ljava/lang/Object;","findTransitionArray(I)[Ljava/time/zone/ZoneOffsetTransition;","findYear(JLjava/time/ZoneOffset;)I","getOffset(Ljava/time/Instant;)Ljava/time/ZoneOffset;","getOffsetInfo(Ljava/time/LocalDateTime;)Ljava/lang/Object;","getStandardOffset(Ljava/time/Instant;)Ljava/time/ZoneOffset;","getTransition(Ljava/time/LocalDateTime;)Ljava/time/zone/ZoneOffsetTransition;","getValidOffsets(Ljava/time/LocalDateTime;)Ljava/util/List;","hashCode()I","isDaylightSavings(Ljava/time/Instant;)Z","of(Ljava/time/ZoneOffset;)Ljava/time/zone/ZoneRules;","readExternal(Ljava/io/DataInput;)Ljava/time/zone/ZoneRules;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneRulesException;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneRulesException.class",
    "super": "Ljava/time/DateTimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/time/zone/ZoneRulesProvider;",
    "module": "java.base",
    "source": "/java.base/java/time/zone/ZoneRulesProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getAvailableZoneIds()Ljava/util/Set;","getProvider(Ljava/lang/String;)Ljava/time/zone/ZoneRulesProvider;","getRules(Ljava/lang/String;Z)Ljava/time/zone/ZoneRules;"]
  }
,
  {
    "className": "Ljava/util/AbstractCollection;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractCollection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Collection;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","finishToArray([Ljava/lang/Object;Ljava/util/Iterator;)[Ljava/lang/Object;","hugeCapacity(I)I","isEmpty()Z","remove(Ljava/lang/Object;)Z","retainAll(Ljava/util/Collection;)Z","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/AbstractList$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractList$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractList;)V","checkForComodification()V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/AbstractList$ListItr;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractList$ListItr.class",
    "super": "Ljava/util/AbstractList$Itr;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractList;I)V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/AbstractList$RandomAccessSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractList$RandomAccessSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/AbstractList$RandomAccessSpliterator;II)V","<init>(Ljava/util/List;)V","characteristics()I","checkAbstractListModCount(Ljava/util/AbstractList;I)V","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","get(Ljava/util/List;I)Ljava/lang/Object;","getFence()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/AbstractList;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractList.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(ILjava/lang/Object;)V","add(Ljava/lang/Object;)Z","clear()V","equals(Ljava/lang/Object;)Z","hashCode()I","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","outOfBoundsMsg(I)Ljava/lang/String;","rangeCheckForAdd(I)V","remove(I)Ljava/lang/Object;","removeRange(II)V","set(ILjava/lang/Object;)Ljava/lang/Object;","subListRangeCheck(III)V"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$1$1;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$1$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractMap$1;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$1;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$1.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractMap;)V","clear()V","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$2$1;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$2$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractMap$2;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$2;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$2.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/AbstractMap;)V","clear()V","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$SimpleEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$SimpleEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","<init>(Ljava/util/Map$Entry;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/AbstractMap$SimpleImmutableEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap$SimpleImmutableEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/AbstractMap;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","clone()Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","eq(Ljava/lang/Object;Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/AbstractQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractQueue.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": ["Ljava/util/Queue;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z"]
  }
,
  {
    "className": "Ljava/util/AbstractSequentialList;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractSequentialList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Ljava/util/AbstractSet;",
    "module": "java.base",
    "source": "/java.base/java/util/AbstractSet.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": ["Ljava/util/Set;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","removeAll(Ljava/util/Collection;)Z"]
  }
,
  {
    "className": "Ljava/util/ArrayDeque$DeqIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayDeque$DeqIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayDeque;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","postDelete(Z)V","remove()V"]
  }
,
  {
    "className": "Ljava/util/ArrayDeque$DeqSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayDeque$DeqSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayDeque;)V","<init>(Ljava/util/ArrayDeque;II)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getFence()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/ArrayDeque$DeqSpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/ArrayDeque;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayDeque.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": ["Ljava/util/Deque;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","addFirst(Ljava/lang/Object;)V","addLast(Ljava/lang/Object;)V","circularClear([Ljava/lang/Object;II)V","clear()V","clone()Ljava/lang/Object;","clone()Ljava/util/ArrayDeque;","contains(Ljava/lang/Object;)Z","copyElements(Ljava/util/Collection;)V","dec(II)I","delete(I)Z","element()Ljava/lang/Object;","elementAt([Ljava/lang/Object;I)Ljava/lang/Object;","forEach(Ljava/util/function/Consumer;)V","getFirst()Ljava/lang/Object;","getLast()Ljava/lang/Object;","grow(I)V","inc(II)I","inc(III)I","isEmpty()Z","iterator()Ljava/util/Iterator;","newCapacity(II)I","nonNullElementAt([Ljava/lang/Object;I)Ljava/lang/Object;","offer(Ljava/lang/Object;)Z","offerLast(Ljava/lang/Object;)Z","peek()Ljava/lang/Object;","peekFirst()Ljava/lang/Object;","poll()Ljava/lang/Object;","pollFirst()Ljava/lang/Object;","pollLast()Ljava/lang/Object;","pop()Ljava/lang/Object;","push(Ljava/lang/Object;)V","remove(Ljava/lang/Object;)Z","removeFirst()Ljava/lang/Object;","removeFirstOccurrence(Ljava/lang/Object;)Z","removeLast()Ljava/lang/Object;","size()I","spliterator()Ljava/util/Spliterator;","sub(III)I","toArray()[Ljava/lang/Object;","toArray(Ljava/lang/Class;)[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ArrayList$ArrayListSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$ArrayListSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList;III)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getFence()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/ArrayList$ArrayListSpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/ArrayList$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList;)V","checkForComodification()V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/ArrayList$ListItr;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$ListItr.class",
    "super": "Ljava/util/ArrayList$Itr;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList;I)V","hasPrevious()Z","previous()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ArrayList$SubList$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$SubList$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList$SubList;I)V","checkForComodification()V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/ArrayList$SubList$2;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$SubList$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList$SubList;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getFence()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/ArrayList$ArrayListSpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/ArrayList$SubList;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList$SubList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/RandomAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ArrayList;II)V","add(ILjava/lang/Object;)V","addAll(ILjava/util/Collection;)Z","addAll(Ljava/util/Collection;)Z","checkForComodification()V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","hashCode()I","indexOf(Ljava/lang/Object;)I","iterator()Ljava/util/Iterator;","listIterator(I)Ljava/util/ListIterator;","outOfBoundsMsg(I)Ljava/lang/String;","rangeCheckForAdd(I)V","remove(I)Ljava/lang/Object;","removeRange(II)V","set(ILjava/lang/Object;)Ljava/lang/Object;","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","updateSizeAndModCount(I)V"]
  }
,
  {
    "className": "Ljava/util/ArrayList;",
    "module": "java.base",
    "source": "/java.base/java/util/ArrayList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/List;","Ljava/util/RandomAccess;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/util/Collection;)V","add(ILjava/lang/Object;)V","add(Ljava/lang/Object;)Z","add(Ljava/lang/Object;[Ljava/lang/Object;I)V","addAll(ILjava/util/Collection;)Z","addAll(Ljava/util/Collection;)Z","batchRemove(Ljava/util/Collection;ZII)Z","checkForComodification(I)V","clear()V","clone()Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","elementAt([Ljava/lang/Object;I)Ljava/lang/Object;","elementData(I)Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","equalsArrayList(Ljava/util/ArrayList;)Z","equalsRange(Ljava/util/List;II)Z","fastRemove([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","grow()[Ljava/lang/Object;","grow(I)[Ljava/lang/Object;","hashCode()I","hashCodeRange(II)I","hugeCapacity(I)I","indexOf(Ljava/lang/Object;)I","indexOfRange(Ljava/lang/Object;II)I","isClear([JI)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","lastIndexOf(Ljava/lang/Object;)I","lastIndexOfRange(Ljava/lang/Object;II)I","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","nBits(I)[J","newCapacity(I)I","outOfBoundsMsg(I)Ljava/lang/String;","outOfBoundsMsg(II)Ljava/lang/String;","rangeCheckForAdd(I)V","remove(I)Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","removeAll(Ljava/util/Collection;)Z","removeIf(Ljava/util/function/Predicate;)Z","removeIf(Ljava/util/function/Predicate;II)Z","removeRange(II)V","retainAll(Ljava/util/Collection;)Z","set(ILjava/lang/Object;)Ljava/lang/Object;","setBit([JI)V","shiftTailOverGap([Ljava/lang/Object;II)V","size()I","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;","subList(II)Ljava/util/List;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Arrays$ArrayItr;",
    "module": "java.base",
    "source": "/java.base/java/util/Arrays$ArrayItr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","hasNext()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Arrays$ArrayList;",
    "module": "java.base",
    "source": "/java.base/java/util/Arrays$ArrayList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/RandomAccess;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","indexOf(Ljava/lang/Object;)I","iterator()Ljava/util/Iterator;","set(ILjava/lang/Object;)Ljava/lang/Object;","size()I","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Arrays$LegacyMergeSort;",
    "module": "java.base",
    "source": "/java.base/java/util/Arrays$LegacyMergeSort.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Arrays$NaturalOrder;",
    "module": "java.base",
    "source": "/java.base/java/util/Arrays$NaturalOrder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/util/Arrays;",
    "module": "java.base",
    "source": "/java.base/java/util/Arrays.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["asList([Ljava/lang/Object;)Ljava/util/List;","binarySearch([CC)I","binarySearch([II)I","binarySearch([IIII)I","binarySearch([JJ)I","binarySearch([Ljava/lang/Object;Ljava/lang/Object;)I","binarySearch([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I","binarySearch0([CIIC)I","binarySearch0([IIII)I","binarySearch0([JIIJ)I","binarySearch0([Ljava/lang/Object;IILjava/lang/Object;)I","binarySearch0([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I","compare([Ljava/lang/Comparable;[Ljava/lang/Comparable;)I","copyOf([BI)[B","copyOf([CI)[C","copyOf([DI)[D","copyOf([II)[I","copyOf([JI)[J","copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;","copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;","copyOf([SI)[S","copyOfRange([BII)[B","copyOfRange([CII)[C","copyOfRange([III)[I","copyOfRange([Ljava/lang/Object;II)[Ljava/lang/Object;","copyOfRange([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;","deepEquals([Ljava/lang/Object;[Ljava/lang/Object;)Z","deepEquals0(Ljava/lang/Object;Ljava/lang/Object;)Z","deepHashCode([Ljava/lang/Object;)I","deepToString([Ljava/lang/Object;)Ljava/lang/String;","deepToString([Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V","equals([B[B)Z","equals([C[C)Z","equals([D[D)Z","equals([F[F)Z","equals([I[I)Z","equals([J[J)Z","equals([Ljava/lang/Object;[Ljava/lang/Object;)Z","equals([S[S)Z","equals([Z[Z)Z","fill([BB)V","fill([BIIB)V","fill([CC)V","fill([CIIC)V","fill([DD)V","fill([FF)V","fill([II)V","fill([IIII)V","fill([JIIJ)V","fill([JJ)V","fill([Ljava/lang/Object;IILjava/lang/Object;)V","fill([Ljava/lang/Object;Ljava/lang/Object;)V","fill([SS)V","hashCode([B)I","hashCode([C)I","hashCode([D)I","hashCode([F)I","hashCode([I)I","hashCode([J)I","hashCode([Ljava/lang/Object;)I","hashCode([S)I","hashCode([Z)I","parallelSort([Ljava/lang/Object;Ljava/util/Comparator;)V","primitiveArrayHashCode(Ljava/lang/Object;Ljava/lang/Class;)I","rangeCheck(III)V","sort([I)V","sort([Ljava/lang/Object;)V","sort([Ljava/lang/Object;II)V","sort([Ljava/lang/Object;IILjava/util/Comparator;)V","sort([Ljava/lang/Object;Ljava/util/Comparator;)V","spliterator([DII)Ljava/util/Spliterator$OfDouble;","spliterator([III)Ljava/util/Spliterator$OfInt;","spliterator([JII)Ljava/util/Spliterator$OfLong;","spliterator([Ljava/lang/Object;II)Ljava/util/Spliterator;","stream([Ljava/lang/Object;)Ljava/util/stream/Stream;","stream([Ljava/lang/Object;II)Ljava/util/stream/Stream;","toString([B)Ljava/lang/String;","toString([C)Ljava/lang/String;","toString([D)Ljava/lang/String;","toString([F)Ljava/lang/String;","toString([I)Ljava/lang/String;","toString([J)Ljava/lang/String;","toString([Ljava/lang/Object;)Ljava/lang/String;","toString([S)Ljava/lang/String;","toString([Z)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers$EmptyCompleter;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers$EmptyCompleter.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/CountedCompleter;)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers$FJObject$Merger;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers$FJObject$Merger.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/CountedCompleter;[Ljava/lang/Object;[Ljava/lang/Object;IIIIIILjava/util/Comparator;)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers$FJObject$Sorter;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers$FJObject$Sorter.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/CountedCompleter;[Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/util/Comparator;)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers$FJObject;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers$FJObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers$Relay;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers$Relay.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/CountedCompleter;)V","compute()V","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/ArraysParallelSortHelpers;",
    "module": "java.base",
    "source": "/java.base/java/util/ArraysParallelSortHelpers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Base64$Decoder;",
    "module": "java.base",
    "source": "/java.base/java/util/Base64$Decoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decode([B)[B","decode0([BII[B)I","outLength([BII)I"]
  }
,
  {
    "className": "Ljava/util/Base64;",
    "module": "java.base",
    "source": "/java.base/java/util/Base64.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getDecoder()Ljava/util/Base64$Decoder;"]
  }
,
  {
    "className": "Ljava/util/BitSet;",
    "module": "java.base",
    "source": "/java.base/java/util/BitSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","cardinality()I","checkInvariants()V","clone()Ljava/lang/Object;","ensureCapacity(I)V","equals(Ljava/lang/Object;)Z","expandTo(I)V","get(I)Z","hashCode()I","initWords(I)V","nextClearBit(I)I","nextSetBit(I)I","or(Ljava/util/BitSet;)V","set(I)V","toString()Ljava/lang/String;","trimToSize()V","wordIndex(I)I"]
  }
,
  {
    "className": "Ljava/util/Calendar;",
    "module": "java.base",
    "source": "/java.base/java/util/Calendar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/TimeZone;Ljava/util/Locale;)V","adjustStamp()V","aggregateStamp(II)I","appendValue(Ljava/lang/StringBuilder;Ljava/lang/String;ZJ)V","checkDisplayNameParams(IIIILjava/util/Locale;I)Z","clear()V","clear(I)V","clone()Ljava/lang/Object;","compareTo(J)I","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/util/Calendar;)I","complete()V","createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;","defaultTimeZone(Ljava/util/Locale;)Ljava/util/TimeZone;","equals(Ljava/lang/Object;)Z","get(I)I","getBaseStyle(I)I","getDisplayName(IILjava/util/Locale;)Ljava/lang/String;","getDisplayNames(IILjava/util/Locale;)Ljava/util/Map;","getDisplayNamesImpl(IILjava/util/Locale;)Ljava/util/Map;","getFieldName(I)Ljava/lang/String;","getFieldStrings(IILjava/text/DateFormatSymbols;)[Ljava/lang/String;","getFirstDayOfWeek()I","getInstance()Ljava/util/Calendar;","getInstance(Ljava/util/Locale;)Ljava/util/Calendar;","getMillisOf(Ljava/util/Calendar;)J","getMinimalDaysInFirstWeek()I","getSetStateFields()I","getTime()Ljava/util/Date;","getTimeInMillis()J","getTimeZone()Ljava/util/TimeZone;","getZone()Ljava/util/TimeZone;","hashCode()I","internalGet(I)I","internalSet(II)V","invalidateWeekFields()V","isExternallySet(I)Z","isFieldSet(II)Z","isFullyNormalized()Z","isLenient()Z","isNarrowFormatStyle(I)Z","isPartiallyNormalized()Z","isSet(I)Z","isStandaloneStyle(I)Z","selectFields()I","set(II)V","set(III)V","set(IIIIII)V","setFieldsComputed(I)V","setFieldsNormalized(I)V","setFirstDayOfWeek(I)V","setLenient(Z)V","setMinimalDaysInFirstWeek(I)V","setTime(Ljava/util/Date;)V","setTimeInMillis(J)V","setTimeZone(Ljava/util/TimeZone;)V","setUnnormalized()V","setWeekCountData(Ljava/util/Locale;)V","toStandaloneStyle(I)I","toString()Ljava/lang/String;","updateTime()V"]
  }
,
  {
    "className": "Ljava/util/Collection;",
    "module": "java.base",
    "source": "/java.base/java/util/Collection.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["parallelStream()Ljava/util/stream/Stream;","removeIf(Ljava/util/function/Predicate;)Z","spliterator()Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/Collections$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Collections$2;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Collections$3;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Collections$EmptyEnumeration;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptyEnumeration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Collections$EmptyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptyIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Collections$EmptyList;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptyList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/RandomAccess;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","size()I","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Collections$EmptyListIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptyListIterator.class",
    "super": "Ljava/util/Collections$EmptyIterator;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Collections$EmptyMap;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptyMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clear()V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","size()I","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/Collections$EmptySet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$EmptySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","forEach(Ljava/util/function/Consumer;)V","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Collections$ReverseComparator;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$ReverseComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/util/Collections$SetFromMap;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SetFromMap.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/Set;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","add(Ljava/lang/Object;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","parallelStream()Ljava/util/stream/Stream;","remove(Ljava/lang/Object;)Z","removeIf(Ljava/util/function/Predicate;)Z","size()I","spliterator()Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Collections$SingletonList;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SingletonList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/RandomAccess;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","hashCode()I","iterator()Ljava/util/Iterator;","size()I","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Collections$SingletonMap;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SingletonMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","size()I","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/Collections$SingletonSet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SingletonSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","hashCode()I","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Collections$SynchronizedCollection;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SynchronizedCollection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Collection;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","<init>(Ljava/util/Collection;Ljava/lang/Object;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","forEach(Ljava/util/function/Consumer;)V","isEmpty()Z","iterator()Ljava/util/Iterator;","parallelStream()Ljava/util/stream/Stream;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Collections$SynchronizedMap;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SynchronizedMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","clear()V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/Collections$SynchronizedSet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SynchronizedSet.class",
    "super": "Ljava/util/Collections$SynchronizedCollection;",
    "interfaces": ["Ljava/util/Set;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","<init>(Ljava/util/Set;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/Collections$SynchronizedSortedSet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$SynchronizedSortedSet.class",
    "super": "Ljava/util/Collections$SynchronizedSet;",
    "interfaces": ["Ljava/util/SortedSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["comparator()Ljava/util/Comparator;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableCollection$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableCollection$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collections$UnmodifiableCollection;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableCollection;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableCollection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Collection;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","forEach(Ljava/util/function/Consumer;)V","isEmpty()Z","iterator()Ljava/util/Iterator;","parallelStream()Ljava/util/stream/Stream;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableList$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableList$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collections$UnmodifiableList;I)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableList;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableList.class",
    "super": "Ljava/util/Collections$UnmodifiableCollection;",
    "interfaces": ["Ljava/util/List;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","hashCode()I","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","set(ILjava/lang/Object;)Ljava/lang/Object;","sort(Ljava/util/Comparator;)V"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collections$UnmodifiableMap$UnmodifiableEntrySet;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map$Entry;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","getExactSizeIfKnown()J","hasCharacteristics(I)Z","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableMap$UnmodifiableEntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.class",
    "super": "Ljava/util/Collections$UnmodifiableSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","entryConsumer(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","lambda$entryConsumer$0(Ljava/util/function/Consumer;Ljava/util/Map$Entry;)V","parallelStream()Ljava/util/stream/Stream;","spliterator()Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableMap;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","clear()V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableRandomAccessList;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableRandomAccessList.class",
    "super": "Ljava/util/Collections$UnmodifiableList;",
    "interfaces": ["Ljava/util/RandomAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V"]
  }
,
  {
    "className": "Ljava/util/Collections$UnmodifiableSet;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections$UnmodifiableSet.class",
    "super": "Ljava/util/Collections$UnmodifiableCollection;",
    "interfaces": ["Ljava/util/Set;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/Collections;",
    "module": "java.base",
    "source": "/java.base/java/util/Collections.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addAll(Ljava/util/Collection;[Ljava/lang/Object;)Z","emptyEnumeration()Ljava/util/Enumeration;","emptyIterator()Ljava/util/Iterator;","emptyList()Ljava/util/List;","emptyListIterator()Ljava/util/ListIterator;","emptyMap()Ljava/util/Map;","emptySet()Ljava/util/Set;","enumeration(Ljava/util/Collection;)Ljava/util/Enumeration;","eq(Ljava/lang/Object;Ljava/lang/Object;)Z","list(Ljava/util/Enumeration;)Ljava/util/ArrayList;","newSetFromMap(Ljava/util/Map;)Ljava/util/Set;","reverse(Ljava/util/List;)V","reverseOrder()Ljava/util/Comparator;","singleton(Ljava/lang/Object;)Ljava/util/Set;","singletonIterator(Ljava/lang/Object;)Ljava/util/Iterator;","singletonList(Ljava/lang/Object;)Ljava/util/List;","singletonMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;","singletonSpliterator(Ljava/lang/Object;)Ljava/util/Spliterator;","sort(Ljava/util/List;)V","sort(Ljava/util/List;Ljava/util/Comparator;)V","swap(Ljava/util/List;II)V","synchronizedCollection(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Collection;","synchronizedMap(Ljava/util/Map;)Ljava/util/Map;","synchronizedSet(Ljava/util/Set;)Ljava/util/Set;","synchronizedSet(Ljava/util/Set;Ljava/lang/Object;)Ljava/util/Set;","unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;","unmodifiableList(Ljava/util/List;)Ljava/util/List;","unmodifiableMap(Ljava/util/Map;)Ljava/util/Map;","unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/util/ComparableTimSort;",
    "module": "java.base",
    "source": "/java.base/java/util/ComparableTimSort.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/lang/Object;[Ljava/lang/Object;II)V","binarySort([Ljava/lang/Object;III)V","countRunAndMakeAscending([Ljava/lang/Object;II)I","ensureCapacity(I)[Ljava/lang/Object;","gallopLeft(Ljava/lang/Comparable;[Ljava/lang/Object;III)I","gallopRight(Ljava/lang/Comparable;[Ljava/lang/Object;III)I","mergeAt(I)V","mergeCollapse()V","mergeForceCollapse()V","mergeHi(IIII)V","mergeLo(IIII)V","minRunLength(I)I","pushRun(II)V","reverseRange([Ljava/lang/Object;II)V","sort([Ljava/lang/Object;II[Ljava/lang/Object;II)V"]
  }
,
  {
    "className": "Ljava/util/Comparator;",
    "module": "java.base",
    "source": "/java.base/java/util/Comparator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["comparing(Ljava/util/function/Function;)Ljava/util/Comparator;","lambda$comparing$77a9974f$1(Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Ljava/util/ConcurrentModificationException;",
    "module": "java.base",
    "source": "/java.base/java/util/ConcurrentModificationException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/Currency$CurrencyNameGetter;",
    "module": "java.base",
    "source": "/java.base/java/util/Currency$CurrencyNameGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getObject(Ljava/util/spi/CurrencyNameProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getObject(Ljava/util/spi/LocaleServiceProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Currency$OtherCurrencyEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/Currency$OtherCurrencyEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findEntry(Ljava/lang/String;)Ljava/util/Currency$OtherCurrencyEntry;"]
  }
,
  {
    "className": "Ljava/util/Currency$SpecialCaseEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/Currency$SpecialCaseEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findEntry(Ljava/lang/String;)[I","toIndex(I)I"]
  }
,
  {
    "className": "Ljava/util/Currency;",
    "module": "java.base",
    "source": "/java.base/java/util/Currency.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","getCurrencyCode()Ljava/lang/String;","getDefaultFractionDigits()I","getInstance(Ljava/lang/String;)Ljava/util/Currency;","getInstance(Ljava/lang/String;II)Ljava/util/Currency;","getInstance(Ljava/util/Locale;)Ljava/util/Currency;","getMainTableEntry(CC)I","getSymbol(Ljava/util/Locale;)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Date;",
    "module": "java.base",
    "source": "/java.base/java/util/Date.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(J)V","before(Ljava/util/Date;)Z","clone()Ljava/lang/Object;","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/util/Date;)I","convertToAbbr(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;","equals(Ljava/lang/Object;)Z","getCalendarSystem(I)Lsun/util/calendar/BaseCalendar;","getCalendarSystem(J)Lsun/util/calendar/BaseCalendar;","getCalendarSystem(Lsun/util/calendar/BaseCalendar$Date;)Lsun/util/calendar/BaseCalendar;","getJulianCalendar()Lsun/util/calendar/BaseCalendar;","getMillisOf(Ljava/util/Date;)J","getTime()J","getTimeImpl()J","hashCode()I","normalize()Lsun/util/calendar/BaseCalendar$Date;","normalize(Lsun/util/calendar/BaseCalendar$Date;)Lsun/util/calendar/BaseCalendar$Date;","parse(Ljava/lang/String;)J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Deque;",
    "module": "java.base",
    "source": "/java.base/java/util/Deque.class",
    "super": "null",
    "interfaces": ["Ljava/util/Queue;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Dictionary;",
    "module": "java.base",
    "source": "/java.base/java/util/Dictionary.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/DualPivotQuicksort;",
    "module": "java.base",
    "source": "/java.base/java/util/DualPivotQuicksort.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["sort([IIIZ)V","sort([III[III)V"]
  }
,
  {
    "className": "Ljava/util/DuplicateFormatFlagsException;",
    "module": "java.base",
    "source": "/java.base/java/util/DuplicateFormatFlagsException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/EmptyStackException;",
    "module": "java.base",
    "source": "/java.base/java/util/EmptyStackException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/EnumMap$1;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/EnumMap$EntryIterator$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$EntryIterator$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap$EntryIterator;I)V","checkIndexForEntryUse()V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Enum;","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/EnumMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$EntryIterator.class",
    "super": "Ljava/util/EnumMap$EnumMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/EnumMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","clear()V","contains(Ljava/lang/Object;)Z","fillEntryArray([Ljava/lang/Object;)[Ljava/lang/Object;","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/EnumMap$EnumMapIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$EnumMapIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","checkLastReturnedIndex()V","hasNext()Z","remove()V"]
  }
,
  {
    "className": "Ljava/util/EnumMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$KeyIterator.class",
    "super": "Ljava/util/EnumMap$EnumMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","next()Ljava/lang/Enum;","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/EnumMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/EnumMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$ValueIterator.class",
    "super": "Ljava/util/EnumMap$EnumMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/EnumMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/EnumMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/EnumMap;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/util/EnumMap;)V","clear()V","clone()Ljava/lang/Object;","clone()Ljava/util/EnumMap;","containsKey(Ljava/lang/Object;)Z","containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","entryHashCode(I)I","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","equals(Ljava/util/EnumMap;)Z","get(Ljava/lang/Object;)Ljava/lang/Object;","getKeyUniverse(Ljava/lang/Class;)[Ljava/lang/Enum;","hashCode()I","isValidKey(Ljava/lang/Object;)Z","keySet()Ljava/util/Set;","maskNull(Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/Enum;Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z","size()I","typeCheck(Ljava/lang/Enum;)V","unmaskNull(Ljava/lang/Object;)Ljava/lang/Object;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/EnumSet;",
    "module": "java.base",
    "source": "/java.base/java/util/EnumSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V","allOf(Ljava/lang/Class;)Ljava/util/EnumSet;","clone()Ljava/lang/Object;","clone()Ljava/util/EnumSet;","copyOf(Ljava/util/Collection;)Ljava/util/EnumSet;","copyOf(Ljava/util/EnumSet;)Ljava/util/EnumSet;","getUniverse(Ljava/lang/Class;)[Ljava/lang/Enum;","noneOf(Ljava/lang/Class;)Ljava/util/EnumSet;","of(Ljava/lang/Enum;)Ljava/util/EnumSet;","of(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;","typeCheck(Ljava/lang/Enum;)V"]
  }
,
  {
    "className": "Ljava/util/Enumeration;",
    "module": "java.base",
    "source": "/java.base/java/util/Enumeration.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/EventListener;",
    "module": "java.base",
    "source": "/java.base/java/util/EventListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/EventObject;",
    "module": "java.base",
    "source": "/java.base/java/util/EventObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","getSource()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/FormatFlagsConversionMismatchException;",
    "module": "java.base",
    "source": "/java.base/java/util/FormatFlagsConversionMismatchException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;C)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Formattable;",
    "module": "java.base",
    "source": "/java.base/java/util/Formattable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Formatter$BigDecimalLayoutForm;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$BigDecimalLayoutForm.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Formatter$Conversion;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$Conversion.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isCharacter(C)Z","isFloat(C)Z","isGeneral(C)Z","isInteger(C)Z","isText(C)Z","isValid(C)Z"]
  }
,
  {
    "className": "Ljava/util/Formatter$DateTime;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$DateTime.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isValid(C)Z"]
  }
,
  {
    "className": "Ljava/util/Formatter$FixedString;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$FixedString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Formatter$FormatString;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Formatter;Ljava/lang/String;II)V","index()I","print(Ljava/lang/Object;Ljava/util/Locale;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Formatter$Flags;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$Flags.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","add(Ljava/util/Formatter$Flags;)Ljava/util/Formatter$Flags;","contains(Ljava/util/Formatter$Flags;)Z","dup()Ljava/util/Formatter$Flags;","parse(C)Ljava/util/Formatter$Flags;","parse(Ljava/lang/String;II)Ljava/util/Formatter$Flags;","remove(Ljava/util/Formatter$Flags;)Ljava/util/Formatter$Flags;","toString()Ljava/lang/String;","valueOf()I"]
  }
,
  {
    "className": "Ljava/util/Formatter$FormatSpecifier$BigDecimalLayout;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$FormatSpecifier$BigDecimalLayout.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Formatter$FormatSpecifier;Ljava/math/BigInteger;ILjava/util/Formatter$BigDecimalLayoutForm;)V","exponent()Ljava/lang/StringBuilder;","hasDot()Z","layout(Ljava/math/BigInteger;ILjava/util/Formatter$BigDecimalLayoutForm;)V","mantissa()Ljava/lang/StringBuilder;","scale()I"]
  }
,
  {
    "className": "Ljava/util/Formatter$FormatSpecifier;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$FormatSpecifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Formatter$FormatString;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Formatter;Ljava/lang/String;Ljava/util/regex/Matcher;)V","addZeros(Ljava/lang/StringBuilder;I)V","adjustWidth(ILjava/util/Formatter$Flags;Z)I","appendJustified(Ljava/lang/Appendable;Ljava/lang/CharSequence;)Ljava/lang/Appendable;","checkBadFlags([Ljava/util/Formatter$Flags;)V","checkCharacter()V","checkDateTime()V","checkFloat()V","checkGeneral()V","checkInteger()V","checkNumeric()V","checkText()V","conversion(C)C","failConversion(CLjava/lang/Object;)V","failMismatch(Ljava/util/Formatter$Flags;C)V","flags(Ljava/lang/String;II)Ljava/util/Formatter$Flags;","getZero(Ljava/util/Locale;)C","hexDouble(DI)Ljava/lang/String;","index()I","index(Ljava/lang/String;II)I","leadingSign(Ljava/lang/StringBuilder;Z)Ljava/lang/StringBuilder;","localizedMagnitude(Ljava/lang/StringBuilder;JLjava/util/Formatter$Flags;ILjava/util/Locale;)Ljava/lang/StringBuilder;","localizedMagnitude(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;ILjava/util/Formatter$Flags;ILjava/util/Locale;)Ljava/lang/StringBuilder;","localizedMagnitudeExp(Ljava/lang/StringBuilder;[CILjava/util/Locale;)V","precision(Ljava/lang/String;II)I","print(BLjava/util/Locale;)V","print(DLjava/util/Locale;)V","print(FLjava/util/Locale;)V","print(ILjava/util/Locale;)V","print(JLjava/util/Locale;)V","print(Ljava/lang/Object;Ljava/util/Locale;)V","print(Ljava/lang/String;Ljava/util/Locale;)V","print(Ljava/lang/StringBuilder;DLjava/util/Locale;Ljava/util/Formatter$Flags;CIZ)V","print(Ljava/lang/StringBuilder;Ljava/math/BigDecimal;Ljava/util/Locale;Ljava/util/Formatter$Flags;CIZ)V","print(Ljava/lang/StringBuilder;Ljava/time/temporal/TemporalAccessor;CLjava/util/Locale;)Ljava/lang/Appendable;","print(Ljava/lang/StringBuilder;Ljava/util/Calendar;CLjava/util/Locale;)Ljava/lang/Appendable;","print(Ljava/math/BigDecimal;Ljava/util/Locale;)V","print(Ljava/math/BigInteger;Ljava/util/Locale;)V","print(Ljava/time/temporal/TemporalAccessor;CLjava/util/Locale;)V","print(Ljava/util/Calendar;CLjava/util/Locale;)V","print(SLjava/util/Locale;)V","printBoolean(Ljava/lang/Object;Ljava/util/Locale;)V","printCharacter(Ljava/lang/Object;Ljava/util/Locale;)V","printDateTime(Ljava/lang/Object;Ljava/util/Locale;)V","printFloat(Ljava/lang/Object;Ljava/util/Locale;)V","printHashCode(Ljava/lang/Object;Ljava/util/Locale;)V","printInteger(Ljava/lang/Object;Ljava/util/Locale;)V","printString(Ljava/lang/Object;Ljava/util/Locale;)V","toString()Ljava/lang/String;","toUpperCaseWithLocale(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;","trailingSign(Ljava/lang/StringBuilder;Z)Ljava/lang/StringBuilder;","trailingZeros(Ljava/lang/StringBuilder;I)V","width(Ljava/lang/String;II)I"]
  }
,
  {
    "className": "Ljava/util/Formatter$FormatString;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter$FormatString.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Formatter;",
    "module": "java.base",
    "source": "/java.base/java/util/Formatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;","Ljava/io/Flushable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Appendable;)V","<init>(Ljava/lang/Appendable;Ljava/util/Locale;)V","<init>(Ljava/util/Locale;)V","<init>(Ljava/util/Locale;Ljava/lang/Appendable;)V","checkText(Ljava/lang/String;II)V","close()V","ensureOpen()V","format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;","format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;","getZero(Ljava/util/Locale;)C","locale()Ljava/util/Locale;","nonNullAppendable(Ljava/lang/Appendable;)Ljava/lang/Appendable;","out()Ljava/lang/Appendable;","parse(Ljava/lang/String;)Ljava/util/List;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/FormatterClosedException;",
    "module": "java.base",
    "source": "/java.base/java/util/FormatterClosedException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/GregorianCalendar;",
    "module": "java.base",
    "source": "/java.base/java/util/GregorianCalendar.class",
    "super": "Ljava/util/Calendar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/TimeZone;)V","<init>(Ljava/util/TimeZone;Ljava/util/Locale;)V","actualMonthLength()I","add(II)V","clone()Ljava/lang/Object;","computeFields()V","computeFields(II)I","computeTime()V","equals(Ljava/lang/Object;)Z","from(Ljava/time/ZonedDateTime;)Ljava/util/GregorianCalendar;","getActualMaximum(I)I","getActualMinimum(I)I","getCalendarDate(J)Lsun/util/calendar/BaseCalendar$Date;","getCalendarType()Ljava/lang/String;","getCurrentFixedDate()J","getCutoverCalendarSystem()Lsun/util/calendar/BaseCalendar;","getFixedDate(Lsun/util/calendar/BaseCalendar;II)J","getFixedDateJan1(Lsun/util/calendar/BaseCalendar$Date;J)J","getFixedDateMonth1(Lsun/util/calendar/BaseCalendar$Date;J)J","getGreatestMinimum(I)I","getGregorianCutoverDate()Lsun/util/calendar/BaseCalendar$Date;","getJulianCalendarSystem()Lsun/util/calendar/BaseCalendar;","getLastJulianDate()Lsun/util/calendar/BaseCalendar$Date;","getLeastMaximum(I)I","getMaximum(I)I","getMinimum(I)I","getNormalizedCalendar()Ljava/util/GregorianCalendar;","getTimeZone()Ljava/util/TimeZone;","getWeekNumber(JJ)I","getWeekYear()I","getYearOffsetInMillis()J","hashCode()I","internalGetEra()I","isCutoverYear(I)Z","isLeapYear(I)Z","isWeekDateSupported()Z","monthLength(I)I","monthLength(II)I","pinDayOfMonth()V","setGregorianChange(J)V","setGregorianChange(Ljava/util/Date;)V","setTimeZone(Ljava/util/TimeZone;)V","setWeekDate(III)V","toZonedDateTime()Ljava/time/ZonedDateTime;"]
  }
,
  {
    "className": "Ljava/util/HashMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$EntryIterator.class",
    "super": "Ljava/util/HashMap$HashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/HashMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$EntrySpliterator.class",
    "super": "Ljava/util/HashMap$HashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/HashMap$EntrySpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap$HashIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$HashIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","hasNext()Z","nextNode()Ljava/util/HashMap$Node;","remove()V"]
  }
,
  {
    "className": "Ljava/util/HashMap$HashMapSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$HashMapSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;IIII)V","estimateSize()J","getFence()I"]
  }
,
  {
    "className": "Ljava/util/HashMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$KeyIterator.class",
    "super": "Ljava/util/HashMap$HashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/HashMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$KeySpliterator.class",
    "super": "Ljava/util/HashMap$HashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/HashMap$KeySpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","setValue(Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/HashMap$TreeNode;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$TreeNode.class",
    "super": "Ljava/util/LinkedHashMap$Entry;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V","balanceDeletion(Ljava/util/HashMap$TreeNode;Ljava/util/HashMap$TreeNode;)Ljava/util/HashMap$TreeNode;","balanceInsertion(Ljava/util/HashMap$TreeNode;Ljava/util/HashMap$TreeNode;)Ljava/util/HashMap$TreeNode;","find(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/HashMap$TreeNode;","getTreeNode(ILjava/lang/Object;)Ljava/util/HashMap$TreeNode;","moveRootToFront([Ljava/util/HashMap$Node;Ljava/util/HashMap$TreeNode;)V","putTreeVal(Ljava/util/HashMap;[Ljava/util/HashMap$Node;ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/HashMap$TreeNode;","removeTreeNode(Ljava/util/HashMap;[Ljava/util/HashMap$Node;Z)V","root()Ljava/util/HashMap$TreeNode;","rotateLeft(Ljava/util/HashMap$TreeNode;Ljava/util/HashMap$TreeNode;)Ljava/util/HashMap$TreeNode;","rotateRight(Ljava/util/HashMap$TreeNode;Ljava/util/HashMap$TreeNode;)Ljava/util/HashMap$TreeNode;","split(Ljava/util/HashMap;[Ljava/util/HashMap$Node;II)V","tieBreakOrder(Ljava/lang/Object;Ljava/lang/Object;)I","treeify([Ljava/util/HashMap$Node;)V","untreeify(Ljava/util/HashMap;)Ljava/util/HashMap$Node;"]
  }
,
  {
    "className": "Ljava/util/HashMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$ValueIterator.class",
    "super": "Ljava/util/HashMap$HashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/HashMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$ValueSpliterator.class",
    "super": "Ljava/util/HashMap$HashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/HashMap$ValueSpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/HashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/HashMap;",
    "module": "java.base",
    "source": "/java.base/java/util/HashMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/Map;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IF)V","<init>(Ljava/util/Map;)V","afterNodeAccess(Ljava/util/HashMap$Node;)V","afterNodeInsertion(Z)V","afterNodeRemoval(Ljava/util/HashMap$Node;)V","clear()V","clone()Ljava/lang/Object;","comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;","compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getNode(ILjava/lang/Object;)Ljava/util/HashMap$Node;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hash(Ljava/lang/Object;)I","isEmpty()Z","keySet()Ljava/util/Set;","newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;","newTreeNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$TreeNode;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putMapEntries(Ljava/util/Map;Z)V","putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;","reinitialize()V","remove(Ljava/lang/Object;)Ljava/lang/Object;","removeNode(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/util/HashMap$Node;","replaceAll(Ljava/util/function/BiFunction;)V","replacementNode(Ljava/util/HashMap$Node;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;","replacementTreeNode(Ljava/util/HashMap$Node;Ljava/util/HashMap$Node;)Ljava/util/HashMap$TreeNode;","resize()[Ljava/util/HashMap$Node;","size()I","tableSizeFor(I)I","treeifyBin([Ljava/util/HashMap$Node;I)V","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/HashSet;",
    "module": "java.base",
    "source": "/java.base/java/util/HashSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/Set;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IFZ)V","<init>(Ljava/util/Collection;)V","add(Ljava/lang/Object;)Z","clear()V","clone()Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Hashtable$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Hashtable$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Hashtable;)V","add(Ljava/lang/Object;)Z","add(Ljava/util/Map$Entry;)Z","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/Hashtable$Enumerator;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable$Enumerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;","Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Hashtable;IZ)V","hasMoreElements()Z","hasNext()Z","next()Ljava/lang/Object;","nextElement()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Hashtable$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Hashtable;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/Hashtable$ValueCollection;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable$ValueCollection.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Hashtable;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Ljava/util/Hashtable;",
    "module": "java.base",
    "source": "/java.base/java/util/Hashtable.class",
    "super": "Ljava/util/Dictionary;",
    "interfaces": ["Ljava/util/Map;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IF)V","<init>(Ljava/lang/Void;)V","addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V","clear()V","clone()Ljava/lang/Object;","cloneHashtable()Ljava/util/Hashtable;","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","elements()Ljava/util/Enumeration;","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getEnumeration(I)Ljava/util/Enumeration;","getIterator(I)Ljava/util/Iterator;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","keys()Ljava/util/Enumeration;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","rehash()V","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$EntryIterator$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$EntryIterator$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap$EntryIterator;I)V","checkIndexForEntryUse()V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$EntryIterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$EntrySpliterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/IdentityHashMap$EntrySpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$IdentityHashMapIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$IdentityHashMapIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","hasNext()Z","nextIndex()I","remove()V"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$IdentityHashMapSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$IdentityHashMapSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;IIII)V","estimateSize()J","getFence()I"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$KeyIterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","hashCode()I","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$KeySpliterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/IdentityHashMap$KeySpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$ValueIterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$ValueSpliterator.class",
    "super": "Ljava/util/IdentityHashMap$IdentityHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/IdentityHashMap$ValueSpliterator;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/IdentityHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/IdentityHashMap;",
    "module": "java.base",
    "source": "/java.base/java/util/IdentityHashMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/Map;","Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","capacity(I)I","clear()V","clone()Ljava/lang/Object;","closeDeletion(I)V","containsKey(Ljava/lang/Object;)Z","containsMapping(Ljava/lang/Object;Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","hash(Ljava/lang/Object;I)I","hashCode()I","init(I)V","isEmpty()Z","keySet()Ljava/util/Set;","maskNull(Ljava/lang/Object;)Ljava/lang/Object;","nextKeyIndex(II)I","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","removeMapping(Ljava/lang/Object;Ljava/lang/Object;)Z","resize(I)Z","size()I","unmaskNull(Ljava/lang/Object;)Ljava/lang/Object;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatCodePointException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatCodePointException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatConversionException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatConversionException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(CLjava/lang/Class;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatFlagsException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatFlagsException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatPrecisionException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatPrecisionException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IllegalFormatWidthException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllegalFormatWidthException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/IllformedLocaleException;",
    "module": "java.base",
    "source": "/java.base/java/util/IllformedLocaleException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$AbstractImmutableCollection;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$AbstractImmutableCollection.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","remove(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$AbstractImmutableList;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$AbstractImmutableList.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableCollection;",
    "interfaces": ["Ljava/util/List;","Ljava/util/RandomAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","indexOf(Ljava/lang/Object;)I","iterator()Ljava/util/Iterator;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","outOfBounds(I)Ljava/lang/IndexOutOfBoundsException;","set(ILjava/lang/Object;)Ljava/lang/Object;","sort(Ljava/util/Comparator;)V"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$AbstractImmutableMap;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$AbstractImmutableMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$AbstractImmutableSet;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$AbstractImmutableSet.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableCollection;",
    "interfaces": ["Ljava/util/Set;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$List12;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$List12.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableList;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/Object;)V","get(I)Ljava/lang/Object;","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$ListItr;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$ListItr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;I)V","<init>(Ljava/util/List;II)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$ListN;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$ListN.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableList;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","get(I)Ljava/lang/Object;","isEmpty()Z","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$Map1;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$Map1.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$MapN$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$MapN$1.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ImmutableCollections$MapN;)V","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$MapN$MapNIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$MapN$MapNIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ImmutableCollections$MapN;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","nextIndex()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$MapN;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$MapN.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableMap;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","probe(Ljava/lang/Object;)I","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$Set12$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$Set12$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ImmutableCollections$Set12;)V","hasNext()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$Set12;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$Set12.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableSet;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","hashCode()I","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$SetN$SetNIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$SetN$SetNIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ImmutableCollections$SetN;)V","hasNext()Z","next()Ljava/lang/Object;","nextIndex()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections$SetN;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections$SetN.class",
    "super": "Ljava/util/ImmutableCollections$AbstractImmutableSet;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","contains(Ljava/lang/Object;)Z","hashCode()I","iterator()Ljava/util/Iterator;","probe(Ljava/lang/Object;)I","size()I"]
  }
,
  {
    "className": "Ljava/util/ImmutableCollections;",
    "module": "java.base",
    "source": "/java.base/java/util/ImmutableCollections.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["emptyList()Ljava/util/List;","emptySet()Ljava/util/Set;","uoe()Ljava/lang/UnsupportedOperationException;"]
  }
,
  {
    "className": "Ljava/util/InputMismatchException;",
    "module": "java.base",
    "source": "/java.base/java/util/InputMismatchException.class",
    "super": "Ljava/util/NoSuchElementException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/InvalidPropertiesFormatException;",
    "module": "java.base",
    "source": "/java.base/java/util/InvalidPropertiesFormatException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/Iterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Iterator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","remove()V"]
  }
,
  {
    "className": "Ljava/util/JumboEnumSet$EnumSetIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/JumboEnumSet$EnumSetIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/JumboEnumSet;)V","hasNext()Z","next()Ljava/lang/Enum;","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/JumboEnumSet;",
    "module": "java.base",
    "source": "/java.base/java/util/JumboEnumSet.class",
    "super": "Ljava/util/EnumSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V","add(Ljava/lang/Enum;)Z","add(Ljava/lang/Object;)Z","addAll()V","addAll(Ljava/util/Collection;)Z","clear()V","clone()Ljava/lang/Object;","clone()Ljava/util/EnumSet;","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","recalculateSize()Z","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/KeyValueHolder;",
    "module": "java.base",
    "source": "/java.base/java/util/KeyValueHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$Entry.class",
    "super": "Ljava/util/HashMap$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedEntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedEntryIterator.class",
    "super": "Ljava/util/LinkedHashMap$LinkedHashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedEntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedEntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedHashIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedHashIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","hasNext()Z","nextNode()Ljava/util/LinkedHashMap$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedKeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedKeyIterator.class",
    "super": "Ljava/util/LinkedHashMap$LinkedHashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedKeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedKeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedValueIterator.class",
    "super": "Ljava/util/LinkedHashMap$LinkedHashIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap$LinkedValues;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap$LinkedValues.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashMap;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashMap.class",
    "super": "Ljava/util/HashMap;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IF)V","<init>(IFZ)V","<init>(Ljava/util/Map;)V","afterNodeAccess(Ljava/util/HashMap$Node;)V","afterNodeInsertion(Z)V","afterNodeRemoval(Ljava/util/HashMap$Node;)V","clear()V","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","keySet()Ljava/util/Set;","linkNodeLast(Ljava/util/LinkedHashMap$Entry;)V","newNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;","newTreeNode(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$TreeNode;","reinitialize()V","removeEldestEntry(Ljava/util/Map$Entry;)Z","replacementNode(Ljava/util/HashMap$Node;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;","replacementTreeNode(Ljava/util/HashMap$Node;Ljava/util/HashMap$Node;)Ljava/util/HashMap$TreeNode;","transferLinks(Ljava/util/LinkedHashMap$Entry;Ljava/util/LinkedHashMap$Entry;)V","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/LinkedHashSet;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedHashSet.class",
    "super": "Ljava/util/HashSet;",
    "interfaces": ["Ljava/util/Set;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IF)V","<init>(Ljava/util/Collection;)V","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/LinkedList$LLSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedList$LLSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedList;II)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getEst()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/LinkedList$ListItr;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedList$ListItr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedList;I)V","checkForComodification()V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/LinkedList$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedList$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V"]
  }
,
  {
    "className": "Ljava/util/LinkedList;",
    "module": "java.base",
    "source": "/java.base/java/util/LinkedList.class",
    "super": "Ljava/util/AbstractSequentialList;",
    "interfaces": ["Ljava/util/List;","Ljava/util/Deque;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(ILjava/lang/Object;)V","add(Ljava/lang/Object;)Z","addAll(ILjava/util/Collection;)Z","addAll(Ljava/util/Collection;)Z","checkElementIndex(I)V","checkPositionIndex(I)V","clear()V","clone()Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","get(I)Ljava/lang/Object;","indexOf(Ljava/lang/Object;)I","isElementIndex(I)Z","isPositionIndex(I)Z","linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V","linkLast(Ljava/lang/Object;)V","listIterator(I)Ljava/util/ListIterator;","node(I)Ljava/util/LinkedList$Node;","offer(Ljava/lang/Object;)Z","outOfBoundsMsg(I)Ljava/lang/String;","poll()Ljava/lang/Object;","remove(I)Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","removeFirst()Ljava/lang/Object;","set(ILjava/lang/Object;)Ljava/lang/Object;","size()I","spliterator()Ljava/util/Spliterator;","superClone()Ljava/util/LinkedList;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;","unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/List;",
    "module": "java.base",
    "source": "/java.base/java/util/List.class",
    "super": "null",
    "interfaces": ["Ljava/util/Collection;"],
    "safeForPreinit": "true",
    "invokedMethods": ["of()Ljava/util/List;","of(Ljava/lang/Object;)Ljava/util/List;","of(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;","of([Ljava/lang/Object;)Ljava/util/List;","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/ListIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ListIterator.class",
    "super": "null",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/ListResourceBundle;",
    "module": "java.base",
    "source": "/java.base/java/util/ListResourceBundle.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;","handleKeySet()Ljava/util/Set;","loadLookup()V"]
  }
,
  {
    "className": "Ljava/util/Locale$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Locale$Builder;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale$Builder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","build()Ljava/util/Locale;","setLocale(Ljava/util/Locale;)Ljava/util/Locale$Builder;","setRegion(Ljava/lang/String;)Ljava/util/Locale$Builder;"]
  }
,
  {
    "className": "Ljava/util/Locale$Cache;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale$Cache.class",
    "super": "Lsun/util/locale/LocaleObjectCache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createObject(Ljava/lang/Object;)Ljava/lang/Object;","createObject(Ljava/lang/Object;)Ljava/util/Locale;"]
  }
,
  {
    "className": "Ljava/util/Locale$Category;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale$Category.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Locale$LocaleKey;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale$LocaleKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/Locale;",
    "module": "java.base",
    "source": "/java.base/java/util/Locale.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)V","clone()Ljava/lang/Object;","convertOldISOCodes(Ljava/lang/String;)Ljava/lang/String;","equals(Ljava/lang/Object;)Z","forLanguageTag(Ljava/lang/String;)Ljava/util/Locale;","getBaseLocale()Lsun/util/locale/BaseLocale;","getCompatibilityExtensions(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lsun/util/locale/LocaleExtensions;","getCountry()Ljava/lang/String;","getDefault()Ljava/util/Locale;","getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;","getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Locale;","getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lsun/util/locale/LocaleExtensions;)Ljava/util/Locale;","getInstance(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)Ljava/util/Locale;","getLanguage()Ljava/lang/String;","getScript()Ljava/lang/String;","getUnicodeLocaleType(Ljava/lang/String;)Ljava/lang/String;","getVariant()Ljava/lang/String;","hasExtensions()Z","hashCode()I","initDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;","isUnicodeExtensionKey(Ljava/lang/String;)Z","toLanguageTag()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Map$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/Map$Entry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["comparingByKey(Ljava/util/Comparator;)Ljava/util/Comparator;","lambda$comparingByKey$6d558cbf$1(Ljava/util/Comparator;Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I"]
  }
,
  {
    "className": "Ljava/util/Map;",
    "module": "java.base",
    "source": "/java.base/java/util/Map.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","forEach(Ljava/util/function/BiConsumer;)V","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","of(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/MissingFormatArgumentException;",
    "module": "java.base",
    "source": "/java.base/java/util/MissingFormatArgumentException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/MissingFormatWidthException;",
    "module": "java.base",
    "source": "/java.base/java/util/MissingFormatWidthException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/MissingResourceException;",
    "module": "java.base",
    "source": "/java.base/java/util/MissingResourceException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/NavigableMap;",
    "module": "java.base",
    "source": "/java.base/java/util/NavigableMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/SortedMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/NavigableSet;",
    "module": "java.base",
    "source": "/java.base/java/util/NavigableSet.class",
    "super": "null",
    "interfaces": ["Ljava/util/SortedSet;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/NoSuchElementException;",
    "module": "java.base",
    "source": "/java.base/java/util/NoSuchElementException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/Objects;",
    "module": "java.base",
    "source": "/java.base/java/util/Objects.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkFromIndexSize(III)I","checkIndex(II)I","equals(Ljava/lang/Object;Ljava/lang/Object;)Z","hash([Ljava/lang/Object;)I","hashCode(Ljava/lang/Object;)I","isNull(Ljava/lang/Object;)Z","nonNull(Ljava/lang/Object;)Z","requireNonNull(Ljava/lang/Object;)Ljava/lang/Object;","requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","requireNonNullElse(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","toString(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Optional;",
    "module": "java.base",
    "source": "/java.base/java/util/Optional.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","empty()Ljava/util/Optional;","equals(Ljava/lang/Object;)Z","get()Ljava/lang/Object;","hashCode()I","ifPresent(Ljava/util/function/Consumer;)V","isPresent()Z","map(Ljava/util/function/Function;)Ljava/util/Optional;","of(Ljava/lang/Object;)Ljava/util/Optional;","ofNullable(Ljava/lang/Object;)Ljava/util/Optional;","orElse(Ljava/lang/Object;)Ljava/lang/Object;","orElseGet(Ljava/util/function/Supplier;)Ljava/lang/Object;","orElseThrow(Ljava/util/function/Supplier;)Ljava/lang/Object;","stream()Ljava/util/stream/Stream;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/PrimitiveIterator$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/PrimitiveIterator$OfDouble.class",
    "super": "null",
    "interfaces": ["Ljava/util/PrimitiveIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","forEachRemaining(Ljava/util/function/DoubleConsumer;)V","next()Ljava/lang/Double;","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/PrimitiveIterator$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/PrimitiveIterator$OfInt.class",
    "super": "null",
    "interfaces": ["Ljava/util/PrimitiveIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","next()Ljava/lang/Integer;","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/PrimitiveIterator$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/PrimitiveIterator$OfLong.class",
    "super": "null",
    "interfaces": ["Ljava/util/PrimitiveIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","forEachRemaining(Ljava/util/function/LongConsumer;)V","next()Ljava/lang/Long;","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/PrimitiveIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/PrimitiveIterator.class",
    "super": "null",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Properties$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/Properties$EntrySet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Set;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","add(Ljava/lang/Object;)Z","add(Ljava/util/Map$Entry;)Z","addAll(Ljava/util/Collection;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Properties$LineReader;",
    "module": "java.base",
    "source": "/java.base/java/util/Properties$LineReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/Reader;)V","readLine()I"]
  }
,
  {
    "className": "Ljava/util/Properties;",
    "module": "java.base",
    "source": "/java.base/java/util/Properties.class",
    "super": "Ljava/util/Hashtable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/Properties;I)V","clear()V","clone()Ljava/lang/Object;","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","elements()Ljava/util/Enumeration;","entrySet()Ljava/util/Set;","enumerate(Ljava/util/Map;)V","enumerateStringProperties(Ljava/util/Map;)V","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","keys()Ljava/util/Enumeration;","load(Ljava/io/InputStream;)V","load(Ljava/io/Reader;)V","load0(Ljava/util/Properties$LineReader;)V","loadConvert([CIILjava/lang/StringBuilder;)Ljava/lang/String;","loadFromXML(Ljava/io/InputStream;)V","propertyNames()Ljava/util/Enumeration;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","saveConvert(Ljava/lang/String;ZZ)Ljava/lang/String;","setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;","size()I","store(Ljava/io/OutputStream;Ljava/lang/String;)V","store0(Ljava/io/BufferedWriter;Ljava/lang/String;Z)V","stringPropertyNames()Ljava/util/Set;","toHex(I)C","toString()Ljava/lang/String;","values()Ljava/util/Collection;","writeComments(Ljava/io/BufferedWriter;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/PropertyResourceBundle;",
    "module": "java.base",
    "source": "/java.base/java/util/PropertyResourceBundle.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/Reader;)V","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;","handleKeySet()Ljava/util/Set;"]
  }
,
  {
    "className": "Ljava/util/Queue;",
    "module": "java.base",
    "source": "/java.base/java/util/Queue.class",
    "super": "null",
    "interfaces": ["Ljava/util/Collection;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Random;",
    "module": "java.base",
    "source": "/java.base/java/util/Random.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(J)V","initialScramble(J)J","next(I)I","nextBoolean()Z","nextInt()I","nextInt(I)I","nextLong()J","seedUniquifier()J"]
  }
,
  {
    "className": "Ljava/util/RandomAccess;",
    "module": "java.base",
    "source": "/java.base/java/util/RandomAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/RegularEnumSet$EnumSetIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/RegularEnumSet$EnumSetIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/RegularEnumSet;)V","hasNext()Z","next()Ljava/lang/Enum;","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/RegularEnumSet;",
    "module": "java.base",
    "source": "/java.base/java/util/RegularEnumSet.class",
    "super": "Ljava/util/EnumSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/Enum;)V","add(Ljava/lang/Enum;)Z","add(Ljava/lang/Object;)Z","addAll()V","addAll(Ljava/util/Collection;)Z","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaUtilResourceBundleAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getBundle(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Module;)Ljava/util/ResourceBundle;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$2;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$2.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getKeys()Ljava/util/Enumeration;","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$3;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V","run()Ljava/lang/Class;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$4;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;Ljava/util/ResourceBundle$CacheKey;Ljava/lang/String;Ljava/util/Locale;)V","run()Ljava/lang/Object;","run()Ljava/util/ResourceBundle;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$BundleReference;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$BundleReference.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": ["Ljava/util/ResourceBundle$CacheKeyReference;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ResourceBundle;Ljava/lang/ref/ReferenceQueue;Ljava/util/ResourceBundle$CacheKey;)V","getCacheKey()Ljava/util/ResourceBundle$CacheKey;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$CacheKey;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$CacheKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Module;Ljava/lang/Module;)V","<init>(Ljava/util/ResourceBundle$CacheKey;)V","callerHasProvider()Z","equals(Ljava/lang/Object;)Z","getCallerModule()Ljava/lang/Module;","getCause()Ljava/lang/Throwable;","getFormat()Ljava/lang/String;","getLocale()Ljava/util/Locale;","getModule()Ljava/lang/Module;","getName()Ljava/lang/String;","getProviders()Ljava/util/ServiceLoader;","hasProviders()Z","hashCode()I","setCause(Ljava/lang/Throwable;)V","setFormat(Ljava/lang/String;)V","setLocale(Ljava/util/Locale;)Ljava/util/ResourceBundle$CacheKey;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$CacheKeyReference;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$CacheKeyReference.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/ResourceBundle$Control$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$Control$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ResourceBundle$Control;Ljava/lang/ClassLoader;Ljava/lang/String;Z)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$Control$CandidateListCache;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$Control$CandidateListCache.class",
    "super": "Lsun/util/locale/LocaleObjectCache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createObject(Ljava/lang/Object;)Ljava/lang/Object;","createObject(Lsun/util/locale/BaseLocale;)Ljava/util/List;","getDefaultList(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$Control;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$Control.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCandidateLocales(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/List;","getFallbackLocale(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Locale;","getFormats(Ljava/lang/String;)Ljava/util/List;","getNoFallbackControl(Ljava/util/List;)Ljava/util/ResourceBundle$Control;","getTimeToLive(Ljava/lang/String;Ljava/util/Locale;)J","lambda$newBundle$0(Ljava/lang/reflect/Constructor;)Ljava/lang/Void;","needsReload(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle;J)Z","newBundle(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/util/ResourceBundle;","toBundleName(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;","toResourceName(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","toResourceName0(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$KeyElementReference;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$KeyElementReference.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": ["Ljava/util/ResourceBundle$CacheKeyReference;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/ResourceBundle$CacheKey;)V","getCacheKey()Ljava/util/ResourceBundle$CacheKey;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$NoFallbackControl;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$NoFallbackControl.class",
    "super": "Ljava/util/ResourceBundle$SingleFormatControl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getFallbackLocale(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Locale;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$ResourceBundleControlProviderHolder;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$ResourceBundleControlProviderHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getControl(Ljava/lang/String;)Ljava/util/ResourceBundle$Control;","lambda$getControl$1(Ljava/lang/String;Ljava/util/spi/ResourceBundleControlProvider;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$ResourceBundleProviderHelper;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$ResourceBundleProviderHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isAccessible(Ljava/lang/Module;Ljava/lang/Module;Ljava/lang/String;)Z","lambda$loadPropertyResourceBundle$2(Ljava/lang/String;Ljava/lang/Module;Ljava/lang/Module;)Ljava/io/InputStream;","lambda$loadResourceBundle$1(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;","lambda$newResourceBundle$0(Ljava/lang/reflect/Constructor;)Ljava/lang/Void;","loadPropertyResourceBundle(Ljava/lang/Module;Ljava/lang/Module;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","loadResourceBundle(Ljava/lang/Module;Ljava/lang/Module;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","newResourceBundle(Ljava/lang/Class;)Ljava/util/ResourceBundle;","toPackageName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle$SingleFormatControl;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle$SingleFormatControl.class",
    "super": "Ljava/util/ResourceBundle$Control;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getFormats(Ljava/lang/String;)Ljava/util/List;"]
  }
,
  {
    "className": "Ljava/util/ResourceBundle;",
    "module": "java.base",
    "source": "/java.base/java/util/ResourceBundle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkList(Ljava/util/List;)Z","containsKey(Ljava/lang/String;)Z","findBundle(Ljava/lang/Module;Ljava/lang/Module;Ljava/util/ResourceBundle$CacheKey;Ljava/util/List;Ljava/util/List;ILjava/util/ResourceBundle$Control;Ljava/util/ResourceBundle;)Ljava/util/ResourceBundle;","findBundleInCache(Ljava/util/ResourceBundle$CacheKey;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;","getBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;","getBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","getBundle(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;","getBundle(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Module;)Ljava/util/ResourceBundle;","getBundleImpl(Ljava/lang/Module;Ljava/lang/Module;Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;","getCacheList()Ljava/util/concurrent/ConcurrentMap;","getDefaultControl(Ljava/lang/Module;Ljava/lang/String;)Ljava/util/ResourceBundle$Control;","getLoader(Ljava/lang/Module;)Ljava/lang/ClassLoader;","getLoaderForControl(Ljava/lang/Module;)Ljava/lang/ClassLoader;","getLocale()Ljava/util/Locale;","getObject(Ljava/lang/String;)Ljava/lang/Object;","getResourceBundleProviderType(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;","getServiceLoader(Ljava/lang/Module;Ljava/lang/String;)Ljava/util/ServiceLoader;","getString(Ljava/lang/String;)Ljava/lang/String;","getStringArray(Ljava/lang/String;)[Ljava/lang/String;","handleKeySet()Ljava/util/Set;","hasValidParentChain(Ljava/util/ResourceBundle;)Z","isValidBundle(Ljava/util/ResourceBundle;)Z","keySet()Ljava/util/Set;","lambda$getCacheList$0()Ljava/util/concurrent/ConcurrentHashMap;","loadBundle(Ljava/util/ResourceBundle$CacheKey;Ljava/util/List;Ljava/util/ResourceBundle$Control;Ljava/lang/Module;Ljava/lang/Module;)Ljava/util/ResourceBundle;","loadBundle(Ljava/util/ResourceBundle$CacheKey;Ljava/util/List;Ljava/util/ResourceBundle$Control;Z)Ljava/util/ResourceBundle;","loadBundleFromProviders(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ServiceLoader;Ljava/util/ResourceBundle$CacheKey;)Ljava/util/ResourceBundle;","putBundleInCache(Ljava/util/ResourceBundle$CacheKey;Ljava/util/ResourceBundle;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;","setExpirationTime(Ljava/util/ResourceBundle$CacheKey;Ljava/util/ResourceBundle$Control;)V","setParent(Ljava/util/ResourceBundle;)V","throwMissingResourceException(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/Throwable;)V","trace(Ljava/lang/String;[Ljava/lang/Object;)V","uncheckedThrow(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/Scanner$PatternLRUCache;",
    "module": "java.base",
    "source": "/java.base/java/util/Scanner$PatternLRUCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V"]
  }
,
  {
    "className": "Ljava/util/Scanner;",
    "module": "java.base",
    "source": "/java.base/java/util/Scanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;","Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;Ljava/lang/String;)V","<init>(Ljava/io/File;Ljava/nio/charset/CharsetDecoder;)V","<init>(Ljava/lang/Readable;)V","<init>(Ljava/lang/Readable;Ljava/util/regex/Pattern;)V","cacheResult()V","cacheResult(Ljava/lang/String;)V","clearCaches()V","close()V","ensureOpen()V","findPatternInBuffer(Ljava/util/regex/Pattern;I)Z","findWithinHorizon(Ljava/util/regex/Pattern;I)Ljava/lang/String;","getCachedResult()Ljava/lang/String;","getCompleteTokenInBuffer(Ljava/util/regex/Pattern;)Ljava/lang/String;","hasNext()Z","hasNextLine()Z","hasTokenInBuffer()Z","linePattern()Ljava/util/regex/Pattern;","makeReadable(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;)Ljava/lang/Readable;","makeSpace()Z","match()Ljava/util/regex/MatchResult;","next()Ljava/lang/Object;","next()Ljava/lang/String;","nextLine()Ljava/lang/String;","readInput()V","remove()V","revertState()V","revertState(Z)Z","saveState()V","throwFor()V","toDecoder(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;","toString()Ljava/lang/String;","translateSavedIndexes(I)V","useLocale(Ljava/util/Locale;)Ljava/util/Scanner;"]
  }
,
  {
    "className": "Ljava/util/ServiceConfigurationError;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceConfigurationError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;Ljava/lang/Class;)V","run()Ljava/lang/Object;","run()Ljava/lang/reflect/Constructor;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$2;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;Ljava/util/Iterator;Ljava/util/Iterator;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/ServiceLoader$Provider;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$3;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;)V","checkReloadCount()V","hasNext()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$LayerLookupIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$LayerLookupIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/ServiceLoader$Provider;","providers(Ljava/lang/ModuleLayer;)Ljava/util/Iterator;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$LazyClassPathLookupIterator$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$LazyClassPathLookupIterator$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader$LazyClassPathLookupIterator;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$LazyClassPathLookupIterator$2;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$LazyClassPathLookupIterator$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader$LazyClassPathLookupIterator;)V","run()Ljava/lang/Object;","run()Ljava/util/ServiceLoader$Provider;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$LazyClassPathLookupIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$LazyClassPathLookupIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;)V","hasNext()Z","hasNextService()Z","next()Ljava/lang/Object;","next()Ljava/util/ServiceLoader$Provider;","nextProviderClass()Ljava/lang/Class;","nextService()Ljava/util/ServiceLoader$Provider;","parse(Ljava/net/URL;)Ljava/util/Iterator;","parseLine(Ljava/net/URL;Ljava/io/BufferedReader;ILjava/util/Set;)I"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$ModuleServicesLookupIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$ModuleServicesLookupIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/ServiceLoader$Provider;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$Provider;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$Provider.class",
    "super": "null",
    "interfaces": ["Ljava/util/function/Supplier;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/ServiceLoader$ProviderImpl$1;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$ProviderImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader$ProviderImpl;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$ProviderImpl$2;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$ProviderImpl$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader$ProviderImpl;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$ProviderImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$ProviderImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ServiceLoader$Provider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Constructor;Ljava/security/AccessControlContext;)V","<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/security/AccessControlContext;)V","equals(Ljava/lang/Object;)Z","get()Ljava/lang/Object;","hashCode()I","invokeFactoryMethod()Ljava/lang/Object;","newInstance()Ljava/lang/Object;","type()Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader$ProviderSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader$ProviderSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/ServiceLoader;Ljava/util/Iterator;)V","characteristics()I","estimateSize()J","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/ServiceLoader;",
    "module": "java.base",
    "source": "/java.base/java/util/ServiceLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/ClassLoader;)V","<init>(Ljava/lang/Module;Ljava/lang/Class;Ljava/lang/ClassLoader;)V","checkCaller(Ljava/lang/Class;Ljava/lang/Class;)V","fail(Ljava/lang/Class;Ljava/lang/String;)V","fail(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V","fail(Ljava/lang/Class;Ljava/net/URL;ILjava/lang/String;)V","findStaticProviderMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;","getConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","inExplicitModule(Ljava/lang/Class;)Z","iterator()Ljava/util/Iterator;","lambda$findStaticProviderMethod$0(Ljava/lang/reflect/Method;)Ljava/lang/Void;","lambda$loadProvider$1(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;","load(Ljava/lang/Class;)Ljava/util/ServiceLoader;","load(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;","load(Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/lang/Module;)Ljava/util/ServiceLoader;","loadInstalled(Ljava/lang/Class;)Ljava/util/ServiceLoader;","loadProvider(Ljdk/internal/module/ServicesCatalog$ServiceProvider;)Ljava/util/ServiceLoader$Provider;","newLookupIterator()Ljava/util/Iterator;","stream()Ljava/util/stream/Stream;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Set;",
    "module": "java.base",
    "source": "/java.base/java/util/Set.class",
    "super": "null",
    "interfaces": ["Ljava/util/Collection;"],
    "safeForPreinit": "true",
    "invokedMethods": ["of(Ljava/lang/Object;)Ljava/util/Set;","of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;","of([Ljava/lang/Object;)Ljava/util/Set;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/SimpleTimeZone$Cache;",
    "module": "java.base",
    "source": "/java.base/java/util/SimpleTimeZone$Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JJJ)V"]
  }
,
  {
    "className": "Ljava/util/SimpleTimeZone;",
    "module": "java.base",
    "source": "/java.base/java/util/SimpleTimeZone.class",
    "super": "Ljava/util/TimeZone;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/lang/String;IIIIIIIII)V","<init>(ILjava/lang/String;IIIIIIIIIII)V","clone()Ljava/lang/Object;","decodeEndRule()V","decodeRules()V","decodeStartRule()V","equals(Ljava/lang/Object;)Z","getDSTSavings()I","getEnd(Lsun/util/calendar/BaseCalendar;Lsun/util/calendar/BaseCalendar$Date;I)J","getOffset(J)I","getOffset(Lsun/util/calendar/BaseCalendar;Lsun/util/calendar/BaseCalendar$Date;IJ)I","getOffsets(J[I)I","getRawOffset()I","getStart(Lsun/util/calendar/BaseCalendar;Lsun/util/calendar/BaseCalendar$Date;I)J","getTransition(Lsun/util/calendar/BaseCalendar;Lsun/util/calendar/BaseCalendar$Date;IIIIII)J","hasSameRules(Ljava/util/TimeZone;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/SortedMap;",
    "module": "java.base",
    "source": "/java.base/java/util/SortedMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/SortedSet;",
    "module": "java.base",
    "source": "/java.base/java/util/SortedSet.class",
    "super": "null",
    "interfaces": ["Ljava/util/Set;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Spliterator$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterator$OfDouble.class",
    "super": "null",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterator$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterator$OfInt.class",
    "super": "null",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterator$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterator$OfLong.class",
    "super": "null",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterator$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterator$OfPrimitive.class",
    "super": "null",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/Spliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","getExactSizeIfKnown()J","hasCharacteristics(I)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterators$1Adapter;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$1Adapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;","Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;)V","accept(Ljava/lang/Object;)V","hasNext()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$2Adapter;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$2Adapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/PrimitiveIterator$OfInt;","Ljava/util/function/IntConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfInt;)V","accept(I)V","hasNext()Z","nextInt()I"]
  }
,
  {
    "className": "Ljava/util/Spliterators$3Adapter;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$3Adapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/PrimitiveIterator$OfLong;","Ljava/util/function/LongConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfLong;)V","accept(J)V","hasNext()Z","nextLong()J"]
  }
,
  {
    "className": "Ljava/util/Spliterators$4Adapter;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$4Adapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/PrimitiveIterator$OfDouble;","Ljava/util/function/DoubleConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfDouble;)V","accept(D)V","hasNext()Z","nextDouble()D"]
  }
,
  {
    "className": "Ljava/util/Spliterators$ArraySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$ArraySpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;I)V","<init>([Ljava/lang/Object;III)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$DoubleArraySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$DoubleArraySpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([DIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/DoubleConsumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/DoubleConsumer;)Z","trySplit()Ljava/util/Spliterator$OfDouble;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$EmptySpliterator$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$EmptySpliterator$OfDouble.class",
    "super": "Ljava/util/Spliterators$EmptySpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/DoubleConsumer;)V","tryAdvance(Ljava/util/function/DoubleConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterators$EmptySpliterator$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$EmptySpliterator$OfInt.class",
    "super": "Ljava/util/Spliterators$EmptySpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/IntConsumer;)V","tryAdvance(Ljava/util/function/IntConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterators$EmptySpliterator$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$EmptySpliterator$OfLong.class",
    "super": "Ljava/util/Spliterators$EmptySpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/LongConsumer;)V","tryAdvance(Ljava/util/function/LongConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterators$EmptySpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$EmptySpliterator$OfRef.class",
    "super": "Ljava/util/Spliterators$EmptySpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/Spliterators$EmptySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$EmptySpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","tryAdvance(Ljava/lang/Object;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$IntArraySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$IntArraySpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([IIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/IntConsumer;)Z","trySplit()Ljava/util/Spliterator$OfInt;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$IteratorSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$IteratorSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;I)V","<init>(Ljava/util/Iterator;I)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators$LongArraySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators$LongArraySpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([JIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/LongConsumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/LongConsumer;)Z","trySplit()Ljava/util/Spliterator$OfLong;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Spliterators;",
    "module": "java.base",
    "source": "/java.base/java/util/Spliterators.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkFromToBounds(III)V","emptyDoubleSpliterator()Ljava/util/Spliterator$OfDouble;","emptyIntSpliterator()Ljava/util/Spliterator$OfInt;","emptyLongSpliterator()Ljava/util/Spliterator$OfLong;","emptySpliterator()Ljava/util/Spliterator;","iterator(Ljava/util/Spliterator$OfDouble;)Ljava/util/PrimitiveIterator$OfDouble;","iterator(Ljava/util/Spliterator$OfInt;)Ljava/util/PrimitiveIterator$OfInt;","iterator(Ljava/util/Spliterator$OfLong;)Ljava/util/PrimitiveIterator$OfLong;","iterator(Ljava/util/Spliterator;)Ljava/util/Iterator;","spliterator(Ljava/util/Collection;I)Ljava/util/Spliterator;","spliterator([DIII)Ljava/util/Spliterator$OfDouble;","spliterator([IIII)Ljava/util/Spliterator$OfInt;","spliterator([JIII)Ljava/util/Spliterator$OfLong;","spliterator([Ljava/lang/Object;I)Ljava/util/Spliterator;","spliterator([Ljava/lang/Object;III)Ljava/util/Spliterator;","spliteratorUnknownSize(Ljava/util/Iterator;I)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/SplittableRandom;",
    "module": "java.base",
    "source": "/java.base/java/util/SplittableRandom.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","mix32(J)I","mix64(J)J","mixGamma(J)J","nextInt(I)I","nextSeed()J"]
  }
,
  {
    "className": "Ljava/util/Stack;",
    "module": "java.base",
    "source": "/java.base/java/util/Stack.class",
    "super": "Ljava/util/Vector;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","empty()Z","peek()Ljava/lang/Object;","pop()Ljava/lang/Object;","push(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/StringJoiner;",
    "module": "java.base",
    "source": "/java.base/java/util/StringJoiner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;)V","<init>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V","add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;","compactElts()V","getChars(Ljava/lang/String;[CI)I","length()I","merge(Ljava/util/StringJoiner;)Ljava/util/StringJoiner;","setEmptyValue(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/StringTokenizer;",
    "module": "java.base",
    "source": "/java.base/java/util/StringTokenizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Z)V","countTokens()I","hasMoreElements()Z","hasMoreTokens()Z","isDelimiter(I)Z","nextElement()Ljava/lang/Object;","nextToken()Ljava/lang/String;","nextToken(Ljava/lang/String;)Ljava/lang/String;","scanToken(I)I","setMaxDelimCodePoint()V","skipDelimiters(I)I"]
  }
,
  {
    "className": "Ljava/util/TimSort;",
    "module": "java.base",
    "source": "/java.base/java/util/TimSort.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/lang/Object;Ljava/util/Comparator;[Ljava/lang/Object;II)V","binarySort([Ljava/lang/Object;IIILjava/util/Comparator;)V","countRunAndMakeAscending([Ljava/lang/Object;IILjava/util/Comparator;)I","ensureCapacity(I)[Ljava/lang/Object;","gallopLeft(Ljava/lang/Object;[Ljava/lang/Object;IIILjava/util/Comparator;)I","gallopRight(Ljava/lang/Object;[Ljava/lang/Object;IIILjava/util/Comparator;)I","mergeAt(I)V","mergeCollapse()V","mergeForceCollapse()V","mergeHi(IIII)V","mergeLo(IIII)V","minRunLength(I)I","pushRun(II)V","reverseRange([Ljava/lang/Object;II)V","sort([Ljava/lang/Object;IILjava/util/Comparator;[Ljava/lang/Object;II)V"]
  }
,
  {
    "className": "Ljava/util/TimeZone;",
    "module": "java.base",
    "source": "/java.base/java/util/TimeZone.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","getAvailableIDs()[Ljava/lang/String;","getDefault()Ljava/util/TimeZone;","getDefaultRef()Ljava/util/TimeZone;","getDisplayName(ZILjava/util/Locale;)Ljava/lang/String;","getID()Ljava/lang/String;","getSystemGMTOffsetID()Ljava/lang/String;","getSystemTimeZoneID(Ljava/lang/String;)Ljava/lang/String;","getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;","getTimeZone(Ljava/lang/String;Z)Ljava/util/TimeZone;","getTimeZone(Ljava/time/ZoneId;)Ljava/util/TimeZone;","parseCustomTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;","setDefaultZone()Ljava/util/TimeZone;","setID(Ljava/lang/String;)V","toZoneId()Ljava/time/ZoneId;","toZoneId0()Ljava/time/ZoneId;"]
  }
,
  {
    "className": "Ljava/util/TooManyListenersException;",
    "module": "java.base",
    "source": "/java.base/java/util/TooManyListenersException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/TreeMap$DescendingSubMap;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$DescendingSubMap.class",
    "super": "Ljava/util/TreeMap$NavigableSubMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/TreeMap$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/TreeMap$Entry;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","setValue(Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$EntryIterator.class",
    "super": "Ljava/util/TreeMap$PrivateEntryIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$EntrySpliterator.class",
    "super": "Ljava/util/TreeMap$TreeMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;Ljava/util/TreeMap$Entry;III)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","lambda$getComparator$d5a01062$1(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/TreeMap$EntrySpliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$KeyIterator.class",
    "super": "Ljava/util/TreeMap$PrivateEntryIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/NavigableSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/NavigableMap;)V","clear()V","comparator()Ljava/util/Comparator;","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$KeySpliterator.class",
    "super": "Ljava/util/TreeMap$TreeMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;Ljava/util/TreeMap$Entry;III)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/TreeMap$KeySpliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$NavigableSubMap;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$NavigableSubMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/NavigableMap;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/TreeMap$PrivateEntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$PrivateEntryIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V","hasNext()Z","nextEntry()Ljava/util/TreeMap$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/TreeMap$TreeMapSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$TreeMapSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;Ljava/util/TreeMap$Entry;III)V","estimateSize()J","getEstimate()I"]
  }
,
  {
    "className": "Ljava/util/TreeMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$ValueIterator.class",
    "super": "Ljava/util/TreeMap$PrivateEntryIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$ValueSpliterator.class",
    "super": "Ljava/util/TreeMap$TreeMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;Ljava/util/TreeMap$Entry;III)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/TreeMap$ValueSpliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TreeMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/TreeMap;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/NavigableMap;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/Comparator;)V","<init>(Ljava/util/SortedMap;)V","addAllForTreeSet(Ljava/util/SortedSet;Ljava/lang/Object;)V","buildFromSorted(IIIILjava/util/Iterator;Ljava/io/ObjectInputStream;Ljava/lang/Object;)Ljava/util/TreeMap$Entry;","buildFromSorted(ILjava/util/Iterator;Ljava/io/ObjectInputStream;Ljava/lang/Object;)V","clear()V","clone()Ljava/lang/Object;","colorOf(Ljava/util/TreeMap$Entry;)Z","comparator()Ljava/util/Comparator;","compare(Ljava/lang/Object;Ljava/lang/Object;)I","computeRedLevel(I)I","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","deleteEntry(Ljava/util/TreeMap$Entry;)V","entrySet()Ljava/util/Set;","fixAfterDeletion(Ljava/util/TreeMap$Entry;)V","fixAfterInsertion(Ljava/util/TreeMap$Entry;)V","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;","getEntryUsingComparator(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;","getFirstEntry()Ljava/util/TreeMap$Entry;","getLastEntry()Ljava/util/TreeMap$Entry;","key(Ljava/util/TreeMap$Entry;)Ljava/lang/Object;","keyIterator()Ljava/util/Iterator;","keySet()Ljava/util/Set;","keySpliterator()Ljava/util/Spliterator;","keySpliteratorFor(Ljava/util/NavigableMap;)Ljava/util/Spliterator;","lastKey()Ljava/lang/Object;","leftOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;","navigableKeySet()Ljava/util/NavigableSet;","parentOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","rightOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;","rotateLeft(Ljava/util/TreeMap$Entry;)V","rotateRight(Ljava/util/TreeMap$Entry;)V","setColor(Ljava/util/TreeMap$Entry;Z)V","size()I","successor(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;","valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/TreeSet;",
    "module": "java.base",
    "source": "/java.base/java/util/TreeSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/NavigableSet;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/Collection;)V","<init>(Ljava/util/Comparator;)V","<init>(Ljava/util/NavigableMap;)V","<init>(Ljava/util/SortedSet;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","clone()Ljava/lang/Object;","comparator()Ljava/util/Comparator;","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Tripwire;",
    "module": "java.base",
    "source": "/java.base/java/util/Tripwire.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/UUID;",
    "module": "java.base",
    "source": "/java.base/java/util/UUID.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JJ)V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/util/UUID;)I","equals(Ljava/lang/Object;)Z","fromString(Ljava/lang/String;)Ljava/util/UUID;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/UnknownFormatConversionException;",
    "module": "java.base",
    "source": "/java.base/java/util/UnknownFormatConversionException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/UnknownFormatFlagsException;",
    "module": "java.base",
    "source": "/java.base/java/util/UnknownFormatFlagsException.class",
    "super": "Ljava/util/IllegalFormatException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/Vector$1;",
    "module": "java.base",
    "source": "/java.base/java/util/Vector$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Vector;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/Vector$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/Vector$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Vector;)V","checkForComodification()V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/Vector$ListItr;",
    "module": "java.base",
    "source": "/java.base/java/util/Vector$ListItr.class",
    "super": "Ljava/util/Vector$Itr;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Vector;I)V"]
  }
,
  {
    "className": "Ljava/util/Vector$VectorSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/Vector$VectorSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Vector;[Ljava/lang/Object;III)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getFence()I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/Vector;",
    "module": "java.base",
    "source": "/java.base/java/util/Vector.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": ["Ljava/util/List;","Ljava/util/RandomAccess;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(II)V","<init>(Ljava/util/Collection;)V","add(Ljava/lang/Object;)Z","add(Ljava/lang/Object;[Ljava/lang/Object;I)V","addAll(Ljava/util/Collection;)Z","addElement(Ljava/lang/Object;)V","clear()V","clone()Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","elementAt(I)Ljava/lang/Object;","elementAt([Ljava/lang/Object;I)Ljava/lang/Object;","elementData(I)Ljava/lang/Object;","elements()Ljava/util/Enumeration;","ensureCapacity(I)V","equals(Ljava/lang/Object;)Z","firstElement()Ljava/lang/Object;","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","grow()[Ljava/lang/Object;","grow(I)[Ljava/lang/Object;","hashCode()I","hugeCapacity(I)I","indexOf(Ljava/lang/Object;)I","indexOf(Ljava/lang/Object;I)I","insertElementAt(Ljava/lang/Object;I)V","isEmpty()Z","iterator()Ljava/util/Iterator;","lastElement()Ljava/lang/Object;","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","newCapacity(I)I","remove(I)Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","removeAllElements()V","removeElement(Ljava/lang/Object;)Z","removeElementAt(I)V","set(ILjava/lang/Object;)Ljava/lang/Object;","setSize(I)V","size()I","sort(Ljava/util/Comparator;)V","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$Entry;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$Entry.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;ILjava/util/WeakHashMap$Entry;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$EntryIterator.class",
    "super": "Ljava/util/WeakHashMap$HashIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","deepCopy()Ljava/util/List;","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$EntrySpliterator.class",
    "super": "Ljava/util/WeakHashMap$WeakHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/WeakHashMap$EntrySpliterator;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$HashIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$HashIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","hasNext()Z","nextEntry()Ljava/util/WeakHashMap$Entry;","remove()V"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$KeyIterator.class",
    "super": "Ljava/util/WeakHashMap$HashIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$KeySpliterator.class",
    "super": "Ljava/util/WeakHashMap$WeakHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/WeakHashMap$KeySpliterator;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$ValueIterator.class",
    "super": "Ljava/util/WeakHashMap$HashIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$ValueSpliterator.class",
    "super": "Ljava/util/WeakHashMap$WeakHashMapSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;IIII)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/WeakHashMap$ValueSpliterator;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap$WeakHashMapSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap$WeakHashMapSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/WeakHashMap;IIII)V","estimateSize()J","getFence()I"]
  }
,
  {
    "className": "Ljava/util/WeakHashMap;",
    "module": "java.base",
    "source": "/java.base/java/util/WeakHashMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IF)V","<init>(Ljava/util/Map;)V","clear()V","containsKey(Ljava/lang/Object;)Z","containsNullValue()Z","containsValue(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","eq(Ljava/lang/Object;Ljava/lang/Object;)Z","expungeStaleEntries()V","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getEntry(Ljava/lang/Object;)Ljava/util/WeakHashMap$Entry;","getTable()[Ljava/util/WeakHashMap$Entry;","hash(Ljava/lang/Object;)I","indexFor(II)I","isEmpty()Z","keySet()Ljava/util/Set;","maskNull(Ljava/lang/Object;)Ljava/lang/Object;","newTable(I)[Ljava/util/WeakHashMap$Entry;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","removeMapping(Ljava/lang/Object;)Z","resize(I)V","size()I","transfer([Ljava/util/WeakHashMap$Entry;[Ljava/util/WeakHashMap$Entry;)V","unmaskNull(Ljava/lang/Object;)Ljava/lang/Object;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/concurrent/AbstractExecutorService;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/AbstractExecutorService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/ExecutorService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ArrayBlockingQueue$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ArrayBlockingQueue$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ArrayBlockingQueue;)V","detach()V","distance(III)I","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","incCursor(I)I","incorporateDequeues()V","invalidated(IIJI)Z","isDetached()Z","next()Ljava/lang/Object;","noNext()V","remove()V","removedAt(I)Z","shutdown()V","takeIndexWrapped()Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ArrayBlockingQueue$Itrs$Node.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ArrayBlockingQueue$Itrs;Ljava/util/concurrent/ArrayBlockingQueue$Itr;Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ArrayBlockingQueue$Itrs;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ArrayBlockingQueue$Itrs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ArrayBlockingQueue;Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V","doSomeSweeping(Z)V","elementDequeued()V","queueIsEmpty()V","register(Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V","removedAt(I)V","takeIndexWrapped()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ArrayBlockingQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ArrayBlockingQueue.class",
    "super": "Ljava/util/AbstractQueue;",
    "interfaces": ["Ljava/util/concurrent/BlockingQueue;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(IZ)V","add(Ljava/lang/Object;)Z","circularClear([Ljava/lang/Object;II)V","clear()V","contains(Ljava/lang/Object;)Z","dec(II)I","dequeue()Ljava/lang/Object;","enqueue(Ljava/lang/Object;)V","forEach(Ljava/util/function/Consumer;)V","itemAt(I)Ljava/lang/Object;","itemAt([Ljava/lang/Object;I)Ljava/lang/Object;","iterator()Ljava/util/Iterator;","offer(Ljava/lang/Object;)Z","poll()Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","removeAt(I)V","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/BlockingDeque;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/BlockingDeque.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/BlockingQueue;","Ljava/util/Deque;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/BlockingQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/BlockingQueue.class",
    "super": "null",
    "interfaces": ["Ljava/util/Queue;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/Callable;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Callable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/CancellationException;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CancellationException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$BaseIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$BaseIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Traverser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V","hasMoreElements()Z","hasNext()Z","remove()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$CollectionView;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$CollectionView.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Collection;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentHashMap;)V","clear()V","containsAll(Ljava/util/Collection;)Z","isEmpty()Z","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$CounterCell;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$CounterCell.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$EntryIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$BaseIterator;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$EntrySetView;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$EntrySetView.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$CollectionView;",
    "interfaces": ["Ljava/util/Set;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentHashMap;)V","add(Ljava/lang/Object;)Z","add(Ljava/util/Map$Entry;)Z","addAll(Ljava/util/Collection;)Z","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","hashCode()I","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$EntrySpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Traverser;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIIJLjava/util/concurrent/ConcurrentHashMap;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentHashMap$EntrySpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$ForwardingNode;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$ForwardingNode.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;)V","find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$KeyIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$BaseIterator;",
    "interfaces": ["Ljava/util/Iterator;","Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V","next()Ljava/lang/Object;","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$KeySetView;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$KeySetView.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$CollectionView;",
    "interfaces": ["Ljava/util/Set;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","hashCode()I","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$KeySpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Traverser;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIIJ)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentHashMap$KeySpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$MapEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$MapEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;)V","<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;)V","equals(Ljava/lang/Object;)Z","find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$ReservationNode;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$ReservationNode.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$TableStack;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$TableStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$Traverser;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$Traverser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;III)V","advance()Ljava/util/concurrent/ConcurrentHashMap$Node;","pushState([Ljava/util/concurrent/ConcurrentHashMap$Node;II)V","recoverState(I)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$TreeBin;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$TreeBin.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Node;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)V","balanceDeletion(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;","balanceInsertion(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;","contendedLock()V","find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;","lockRoot()V","putTreeVal(ILjava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;","removeTreeNode(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Z","rotateLeft(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;","rotateRight(Ljava/util/concurrent/ConcurrentHashMap$TreeNode;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;","tieBreakOrder(Ljava/lang/Object;Ljava/lang/Object;)I","unlockRoot()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$TreeNode;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$TreeNode.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$TreeNode;)V","find(ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$Node;","findTreeNode(ILjava/lang/Object;Ljava/lang/Class;)Ljava/util/concurrent/ConcurrentHashMap$TreeNode;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$ValueIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$BaseIterator;",
    "interfaces": ["Ljava/util/Iterator;","Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIILjava/util/concurrent/ConcurrentHashMap;)V","next()Ljava/lang/Object;","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$ValueSpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$Traverser;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/util/concurrent/ConcurrentHashMap$Node;IIIJ)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentHashMap$ValueSpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap$ValuesView;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap$ValuesView.class",
    "super": "Ljava/util/concurrent/ConcurrentHashMap$CollectionView;",
    "interfaces": ["Ljava/util/Collection;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentHashMap;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentHashMap;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentHashMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/concurrent/ConcurrentMap;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(IFI)V","<init>(Ljava/util/Map;)V","addCount(JI)V","casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z","clear()V","comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;","compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I","compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","elements()Ljava/util/Enumeration;","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/BiConsumer;)V","fullAddCount(JZ)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","hashCode()I","helpTransfer([Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)[Ljava/util/concurrent/ConcurrentHashMap$Node;","initTable()[Ljava/util/concurrent/ConcurrentHashMap$Node;","isEmpty()Z","keySet()Ljava/util/Set;","keySet()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;","mappingCount()J","merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;Ljava/lang/Object;)Z","replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z","replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","resizeStamp(I)I","setTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V","size()I","spread(I)I","sumCount()J","tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;","tableSizeFor(I)I","toString()Ljava/lang/String;","transfer([Ljava/util/concurrent/ConcurrentHashMap$Node;[Ljava/util/concurrent/ConcurrentHashMap$Node;)V","treeifyBin([Ljava/util/concurrent/ConcurrentHashMap$Node;I)V","tryPresize(I)V","untreeify(Ljava/util/concurrent/ConcurrentHashMap$Node;)Ljava/util/concurrent/ConcurrentHashMap$Node;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentLinkedQueue$CLQSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentLinkedQueue$CLQSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentLinkedQueue;)V","characteristics()I","current()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","setCurrent(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentLinkedQueue$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentLinkedQueue;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentLinkedQueue$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentLinkedQueue$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;)V","appendRelaxed(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V","casItem(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentLinkedQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentLinkedQueue.class",
    "super": "Ljava/util/AbstractQueue;",
    "interfaces": ["Ljava/util/Queue;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","bulkRemove(Ljava/util/function/Predicate;)Z","clear()V","contains(Ljava/lang/Object;)Z","first()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;","forEach(Ljava/util/function/Consumer;)V","forEachFrom(Ljava/util/function/Consumer;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V","isEmpty()Z","iterator()Ljava/util/Iterator;","lambda$clear$2(Ljava/lang/Object;)Z","offer(Ljava/lang/Object;)Z","poll()Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","size()I","skipDeadNodes(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;","spliterator()Ljava/util/Spliterator;","succ(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toArrayInternal([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;","tryCasSuccessor(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z","updateHead(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentMap;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","forEach(Ljava/util/function/BiConsumer;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentNavigableMap;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentNavigableMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/ConcurrentMap;","Ljava/util/NavigableMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Comparator;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/lang/Object;J)V","estimateSize()J"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$EntryIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$Iter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap;)V","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentNavigableMap;)V","clear()V","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$EntrySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$EntrySpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Comparator;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/lang/Object;J)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","lambda$getComparator$d5a01062$1(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentSkipListMap$EntrySpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$Index;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$Index.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$Iter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$Iter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap;)V","advance(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V","hasNext()Z","remove()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$KeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$KeyIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$Iter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$KeySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/NavigableSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentNavigableMap;)V","clear()V","comparator()Ljava/util/Comparator;","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$KeySpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$KeySpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Comparator;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/lang/Object;J)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentSkipListMap$KeySpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V","characteristics()I","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;","Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V","advance()V","ascend()V","descend()V","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","remove()V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V","characteristics()I","getComparator()Ljava/util/Comparator;","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V","characteristics()I","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$SubMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/concurrent/ConcurrentNavigableMap;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$ValueIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$ValueIterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$Iter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentSkipListMap;)V","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$ValueSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$ValueSpliterator.class",
    "super": "Ljava/util/concurrent/ConcurrentSkipListMap$CSLMSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Comparator;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/lang/Object;J)V","characteristics()I","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;","trySplit()Ljava/util/concurrent/ConcurrentSkipListMap$ValueSpliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap$Values;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap$Values.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ConcurrentNavigableMap;)V","clear()V","contains(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListMap;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/concurrent/ConcurrentNavigableMap;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/SortedMap;)V","addCount(J)V","addIndices(Ljava/util/concurrent/ConcurrentSkipListMap$Index;ILjava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/Comparator;)Z","baseHead()Ljava/util/concurrent/ConcurrentSkipListMap$Node;","buildFromSorted(Ljava/util/SortedMap;)V","clear()V","clone()Ljava/lang/Object;","clone()Ljava/util/concurrent/ConcurrentSkipListMap;","comparator()Ljava/util/Comparator;","computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","containsValue(Ljava/lang/Object;)Z","cpr(Ljava/util/Comparator;Ljava/lang/Object;Ljava/lang/Object;)I","doGet(Ljava/lang/Object;)Ljava/lang/Object;","doPut(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;","doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","entrySet()Ljava/util/Set;","entrySpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$EntrySpliterator;","equals(Ljava/lang/Object;)Z","findFirst()Ljava/util/concurrent/ConcurrentSkipListMap$Node;","findPredecessor(Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;","forEach(Ljava/util/function/BiConsumer;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getAdderCount()J","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","isEmpty()Z","keySet()Ljava/util/NavigableSet;","keySet()Ljava/util/Set;","keySpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$KeySpliterator;","navigableKeySet()Ljava/util/NavigableSet;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;Ljava/lang/Object;)Z","size()I","toList(Ljava/util/Collection;)Ljava/util/List;","tryReduceLevel()V","unlinkNode(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V","valueSpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$ValueSpliterator;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ConcurrentSkipListSet;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ConcurrentSkipListSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/util/NavigableSet;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","clear()V","clone()Ljava/lang/Object;","clone()Ljava/util/concurrent/ConcurrentSkipListSet;","comparator()Ljava/util/Comparator;","contains(Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","lambda$setMap$0()Ljava/lang/reflect/Field;","remove(Ljava/lang/Object;)Z","setMap(Ljava/util/concurrent/ConcurrentNavigableMap;)V","size()I","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/CopyOnWriteArrayList$COWIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CopyOnWriteArrayList$COWIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/ListIterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;I)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V","set(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/CopyOnWriteArrayList;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CopyOnWriteArrayList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/List;","Ljava/util/RandomAccess;","Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(ILjava/lang/Object;)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","addAllAbsent(Ljava/util/Collection;)I","addIfAbsent(Ljava/lang/Object;)Z","addIfAbsent(Ljava/lang/Object;[Ljava/lang/Object;)Z","bulkRemove(Ljava/util/function/Predicate;)Z","bulkRemove(Ljava/util/function/Predicate;II)Z","clear()V","clone()Ljava/lang/Object;","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","elementAt([Ljava/lang/Object;I)Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","get(I)Ljava/lang/Object;","getArray()[Ljava/lang/Object;","hashCode()I","hashCodeOfRange([Ljava/lang/Object;II)I","indexOf(Ljava/lang/Object;)I","indexOfRange(Ljava/lang/Object;[Ljava/lang/Object;II)I","isClear([JI)Z","isEmpty()Z","iterator()Ljava/util/Iterator;","lambda$removeAll$0(Ljava/util/Collection;Ljava/lang/Object;)Z","lambda$resetLock$2()Ljava/lang/reflect/Field;","lambda$retainAll$1(Ljava/util/Collection;Ljava/lang/Object;)Z","listIterator()Ljava/util/ListIterator;","listIterator(I)Ljava/util/ListIterator;","nBits(I)[J","outOfBounds(II)Ljava/lang/String;","remove(I)Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","remove(Ljava/lang/Object;[Ljava/lang/Object;I)Z","removeAll(Ljava/util/Collection;)Z","resetLock()V","retainAll(Ljava/util/Collection;)Z","set(ILjava/lang/Object;)Ljava/lang/Object;","setArray([Ljava/lang/Object;)V","setBit([JI)V","size()I","sort(Ljava/util/Comparator;)V","sortRange(Ljava/util/Comparator;II)V","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/CopyOnWriteArraySet;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CopyOnWriteArraySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","clear()V","compareSets([Ljava/lang/Object;Ljava/util/Set;)I","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/CountDownLatch$Sync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CountDownLatch$Sync.class",
    "super": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getCount()I","tryAcquireShared(I)I","tryReleaseShared(I)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/CountDownLatch;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CountDownLatch.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","await(JLjava/util/concurrent/TimeUnit;)Z","countDown()V","getCount()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/CountedCompleter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/CountedCompleter.class",
    "super": "Ljava/util/concurrent/ForkJoinTask;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/concurrent/CountedCompleter;)V","<init>(Ljava/util/concurrent/CountedCompleter;I)V","addToPendingCount(I)V","exec()Z","getCompleter()Ljava/util/concurrent/CountedCompleter;","getPendingCount()I","getRawResult()Ljava/lang/Object;","internalPropagateException(Ljava/lang/Throwable;)V","onCompletion(Ljava/util/concurrent/CountedCompleter;)V","onExceptionalCompletion(Ljava/lang/Throwable;Ljava/util/concurrent/CountedCompleter;)Z","propagateCompletion()V","setPendingCount(I)V","tryComplete()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/Delayed;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Delayed.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ExecutionException;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ExecutionException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/Executor;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Executor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ExecutorService;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ExecutorService.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/Executor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/Executors$DefaultThreadFactory;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Executors$DefaultThreadFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/ThreadFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;"]
  }
,
  {
    "className": "Ljava/util/concurrent/Executors$RunnableAdapter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Executors$RunnableAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/Callable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;Ljava/lang/Object;)V","call()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/Executors;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Executors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["callable(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;","defaultThreadFactory()Ljava/util/concurrent/ThreadFactory;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;Ljava/util/concurrent/ForkJoinPool;)V","run()Ljava/lang/Object;","run()Ljava/util/concurrent/ForkJoinWorkerThread;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["newThread(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinPool$WorkQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinPool$WorkQueue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ForkJoinPool;Ljava/util/concurrent/ForkJoinWorkerThread;)V","cancelAll()V","growArray(Z)V","helpCC(Ljava/util/concurrent/CountedCompleter;IZ)I","isApparentlyUnblocked()Z","lockedPush(Ljava/util/concurrent/ForkJoinTask;)Z","nextLocalTask()Ljava/util/concurrent/ForkJoinTask;","poll()Ljava/util/concurrent/ForkJoinTask;","push(Ljava/util/concurrent/ForkJoinTask;)V","queueSize()I","releasePhaseLock()V","topLevelExec(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)V","tryLockPhase()Z","tryLockedUnpush(Ljava/util/concurrent/ForkJoinTask;)Z","tryRemoveAndExec(Ljava/util/concurrent/ForkJoinTask;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinPool;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinPool.class",
    "super": "Ljava/util/concurrent/AbstractExecutorService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(B)V","awaitJoin(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinTask;J)I","createWorker()Z","deregisterWorker(Ljava/util/concurrent/ForkJoinWorkerThread;Ljava/lang/Throwable;)V","execute(Ljava/lang/Runnable;)V","externalHelpComplete(Ljava/util/concurrent/CountedCompleter;I)I","externalPush(Ljava/util/concurrent/ForkJoinTask;)V","externalSubmit(Ljava/util/concurrent/ForkJoinTask;)Ljava/util/concurrent/ForkJoinTask;","getCommonPoolParallelism()I","getParallelism()I","newInstanceFromSystemProperty(Ljava/lang/String;)Ljava/lang/Object;","registerWorker(Ljava/util/concurrent/ForkJoinWorkerThread;)Ljava/util/concurrent/ForkJoinPool$WorkQueue;","runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V","scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Z","signalWork()V","toString()Ljava/lang/String;","tryAddWorker(J)V","tryCompensate(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)I","tryExternalUnpush(Ljava/util/concurrent/ForkJoinTask;)Z","tryTerminate(ZZ)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinTask$ExceptionNode;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinTask$ExceptionNode.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ForkJoinTask;Ljava/lang/Throwable;Ljava/util/concurrent/ForkJoinTask$ExceptionNode;Ljava/lang/ref/ReferenceQueue;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinTask$RunnableExecuteAction;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinTask$RunnableExecuteAction.class",
    "super": "Ljava/util/concurrent/ForkJoinTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;)V","exec()Z","internalPropagateException(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinTask;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinTask.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/Future;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","abnormalCompletion(I)I","cancel(Z)Z","cancelIgnoringExceptions(Ljava/util/concurrent/ForkJoinTask;)V","doExec()I","doInvoke()I","expungeStaleExceptions()V","externalAwaitDone()I","fork()Ljava/util/concurrent/ForkJoinTask;","getThrowableException()Ljava/lang/Throwable;","helpExpungeStaleExceptions()V","internalWait(J)V","invoke()Ljava/lang/Object;","isExceptionalStatus(I)Z","quietlyComplete()V","recordExceptionalCompletion(Ljava/lang/Throwable;)I","reportException(I)V","rethrow(Ljava/lang/Throwable;)V","setDone()I","setExceptionalCompletion(Ljava/lang/Throwable;)I","tryExternalHelp()I","uncheckedThrow(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ForkJoinWorkerThread;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ForkJoinWorkerThread.class",
    "super": "Ljava/lang/Thread;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ForkJoinPool;Ljava/lang/ClassLoader;)V","afterTopLevelExec()V","getPool()Ljava/util/concurrent/ForkJoinPool;","onStart()V","onTermination(Ljava/lang/Throwable;)V","run()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/Future;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Future.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/FutureTask$WaitNode;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/FutureTask$WaitNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/FutureTask;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/FutureTask.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/RunnableFuture;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;Ljava/lang/Object;)V","<init>(Ljava/util/concurrent/Callable;)V","awaitDone(ZJ)I","cancel(Z)Z","done()V","finishCompletion()V","get()Ljava/lang/Object;","handlePossibleCancellationInterrupt(I)V","removeWaiter(Ljava/util/concurrent/FutureTask$WaitNode;)V","report(I)Ljava/lang/Object;","run()V","runAndReset()Z","set(Ljava/lang/Object;)V","setException(Ljava/lang/Throwable;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/Helpers;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/Helpers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["collectionToString(Ljava/util/Collection;)Ljava/lang/String;","mapEntryToString(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;","objectToString(Ljava/lang/Object;)Ljava/lang/String;","toString([Ljava/lang/Object;II)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingDeque$AbstractItr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/LinkedBlockingDeque;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V","succ(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingDeque$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingDeque$Itr.class",
    "super": "Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/LinkedBlockingDeque;)V","firstNode()Ljava/util/concurrent/LinkedBlockingDeque$Node;","nextNode(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingDeque$LBDSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingDeque$LBDSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/LinkedBlockingDeque;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingDeque$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingDeque$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingDeque;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingDeque.class",
    "super": "Ljava/util/AbstractQueue;",
    "interfaces": ["Ljava/util/concurrent/BlockingDeque;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","add(Ljava/lang/Object;)Z","addAll(Ljava/util/Collection;)Z","addLast(Ljava/lang/Object;)V","clear()V","contains(Ljava/lang/Object;)Z","forEach(Ljava/util/function/Consumer;)V","forEachFrom(Ljava/util/function/Consumer;Ljava/util/concurrent/LinkedBlockingDeque$Node;)V","iterator()Ljava/util/Iterator;","linkFirst(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z","linkLast(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z","offer(Ljava/lang/Object;)Z","offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z","offerFirst(Ljava/lang/Object;)Z","offerLast(Ljava/lang/Object;)Z","offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z","poll()Ljava/lang/Object;","pollFirst()Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","removeFirstOccurrence(Ljava/lang/Object;)Z","size()I","spliterator()Ljava/util/Spliterator;","succ(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;","takeFirst()Ljava/lang/Object;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;","unlink(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V","unlinkFirst()Ljava/lang/Object;","unlinkLast()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingQueue$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingQueue$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/LinkedBlockingQueue;)V","forEachRemaining(Ljava/util/function/Consumer;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingQueue$LBQSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/LinkedBlockingQueue;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingQueue$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingQueue$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/LinkedBlockingQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/LinkedBlockingQueue.class",
    "super": "Ljava/util/AbstractQueue;",
    "interfaces": ["Ljava/util/concurrent/BlockingQueue;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","clear()V","contains(Ljava/lang/Object;)Z","dequeue()Ljava/lang/Object;","drainTo(Ljava/util/Collection;)I","drainTo(Ljava/util/Collection;I)I","enqueue(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V","findPred(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)Ljava/util/concurrent/LinkedBlockingQueue$Node;","forEach(Ljava/util/function/Consumer;)V","forEachFrom(Ljava/util/function/Consumer;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V","fullyLock()V","fullyUnlock()V","iterator()Ljava/util/Iterator;","offer(Ljava/lang/Object;)Z","peek()Ljava/lang/Object;","poll()Ljava/lang/Object;","poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Z","signalNotEmpty()V","signalNotFull()V","size()I","spliterator()Ljava/util/Spliterator;","succ(Ljava/util/concurrent/LinkedBlockingQueue$Node;)Ljava/util/concurrent/LinkedBlockingQueue$Node;","take()Ljava/lang/Object;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;","unlink(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/RejectedExecutionException;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/RejectedExecutionException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/RejectedExecutionHandler;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/RejectedExecutionHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/RunnableFuture;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/RunnableFuture.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Runnable;","Ljava/util/concurrent/Future;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/RunnableScheduledFuture;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/RunnableScheduledFuture.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/RunnableFuture;","Ljava/util/concurrent/ScheduledFuture;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledExecutorService;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledExecutorService.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/ExecutorService;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledFuture;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledFuture.class",
    "super": "null",
    "interfaces": ["Ljava/util/concurrent/Delayed;","Ljava/util/concurrent/Future;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;[Ljava/util/concurrent/RunnableScheduledFuture;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/lang/Runnable;","remove()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.class",
    "super": "Ljava/util/AbstractQueue;",
    "interfaces": ["Ljava/util/concurrent/BlockingQueue;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","add(Ljava/lang/Runnable;)Z","clear()V","contains(Ljava/lang/Object;)Z","drainTo(Ljava/util/Collection;)I","drainTo(Ljava/util/Collection;I)I","finishPoll(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;","grow()V","indexOf(Ljava/lang/Object;)I","isEmpty()Z","iterator()Ljava/util/Iterator;","offer(Ljava/lang/Object;)Z","offer(Ljava/lang/Runnable;)Z","peek()Ljava/lang/Object;","peek()Ljava/util/concurrent/RunnableScheduledFuture;","poll()Ljava/lang/Object;","poll()Ljava/util/concurrent/RunnableScheduledFuture;","poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;","poll(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/RunnableScheduledFuture;","remove(Ljava/lang/Object;)Z","setIndex(Ljava/util/concurrent/RunnableScheduledFuture;I)V","siftDown(ILjava/util/concurrent/RunnableScheduledFuture;)V","siftUp(ILjava/util/concurrent/RunnableScheduledFuture;)V","size()I","take()Ljava/lang/Object;","take()Ljava/util/concurrent/RunnableScheduledFuture;","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.class",
    "super": "Ljava/util/concurrent/FutureTask;",
    "interfaces": ["Ljava/util/concurrent/RunnableScheduledFuture;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V","<init>(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;JJJ)V","cancel(Z)Z","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/util/concurrent/Delayed;)I","getDelay(Ljava/util/concurrent/TimeUnit;)J","isPeriodic()Z","run()V","setNextRunTime()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ScheduledThreadPoolExecutor;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ScheduledThreadPoolExecutor.class",
    "super": "Ljava/util/concurrent/ThreadPoolExecutor;",
    "interfaces": ["Ljava/util/concurrent/ScheduledExecutorService;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjava/util/concurrent/ThreadFactory;)V","canRunInCurrentRunState(Ljava/util/concurrent/RunnableScheduledFuture;)Z","decorateTask(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;","delayedExecute(Ljava/util/concurrent/RunnableScheduledFuture;)V","execute(Ljava/lang/Runnable;)V","overflowFree(J)J","reExecutePeriodic(Ljava/util/concurrent/RunnableScheduledFuture;)V","schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;","scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;","shutdownNow()Ljava/util/List;","submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;","triggerTime(J)J","triggerTime(JLjava/util/concurrent/TimeUnit;)J"]
  }
,
  {
    "className": "Ljava/util/concurrent/ThreadFactory;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ThreadFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/ThreadLocalRandom;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ThreadLocalRandom.class",
    "super": "Ljava/util/Random;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["advanceProbe(I)I","current()Ljava/util/concurrent/ThreadLocalRandom;","getProbe()I","localInit()V","mix32(J)I","mix64(J)J","nextSecondarySeed()I","setInheritedAccessControlContext(Ljava/lang/Thread;Ljava/security/AccessControlContext;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ThreadPoolExecutor$AbortPolicy;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ThreadPoolExecutor$AbortPolicy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/RejectedExecutionHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ThreadPoolExecutor$Worker;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ThreadPoolExecutor$Worker.class",
    "super": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ThreadPoolExecutor;Ljava/lang/Runnable;)V","interruptIfStarted()V","isHeldExclusively()Z","isLocked()Z","lock()V","run()V","tryAcquire(I)Z","tryLock()Z","tryRelease(I)Z","unlock()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/ThreadPoolExecutor;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/ThreadPoolExecutor.class",
    "super": "Ljava/util/concurrent/AbstractExecutorService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V","<init>(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V","addWorker(Ljava/lang/Runnable;Z)Z","addWorkerFailed(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V","advanceRunState(I)V","afterExecute(Ljava/lang/Runnable;Ljava/lang/Throwable;)V","beforeExecute(Ljava/lang/Thread;Ljava/lang/Runnable;)V","checkShutdownAccess()V","compareAndDecrementWorkerCount(I)Z","compareAndIncrementWorkerCount(I)Z","ctlOf(II)I","decrementWorkerCount()V","drainQueue()Ljava/util/List;","ensurePrestart()V","execute(Ljava/lang/Runnable;)V","getQueue()Ljava/util/concurrent/BlockingQueue;","getTask()Ljava/lang/Runnable;","getThreadFactory()Ljava/util/concurrent/ThreadFactory;","interruptIdleWorkers(Z)V","interruptWorkers()V","isRunning(I)Z","isShutdown()Z","isStopped()Z","processWorkerExit(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V","reject(Ljava/lang/Runnable;)V","remove(Ljava/lang/Runnable;)Z","runStateAtLeast(II)Z","runStateLessThan(II)Z","runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V","shutdownNow()Ljava/util/List;","terminated()V","toString()Ljava/lang/String;","tryTerminate()V","workerCountOf(I)I"]
  }
,
  {
    "className": "Ljava/util/concurrent/TimeUnit$1;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/TimeUnit$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/TimeUnit;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/TimeUnit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convert(JLjava/util/concurrent/TimeUnit;)J","cvt(JJJ)J","toDays(J)J","toMicros(J)J","toMillis(J)J","toNanos(J)J","toSeconds(J)J"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicBoolean;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicBoolean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Z)V","compareAndSet(ZZ)Z","get()Z","set(Z)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicInteger;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicInteger.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","addAndGet(I)I","compareAndSet(II)Z","decrementAndGet()I","doubleValue()D","floatValue()F","get()I","getAndAdd(I)I","getAndDecrement()I","getAndIncrement()I","getAndSet(I)I","getAndUpdate(Ljava/util/function/IntUnaryOperator;)I","incrementAndGet()I","intValue()I","longValue()J","set(I)V","toString()Ljava/lang/String;","weakCompareAndSetVolatile(II)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.class",
    "super": "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)V","accessCheck(Ljava/lang/Object;)V","compareAndSet(Ljava/lang/Object;II)Z","get(Ljava/lang/Object;)I","lazySet(Ljava/lang/Object;I)V","throwAccessCheckException(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicLong;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicLong.class",
    "super": "Ljava/lang/Number;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(J)V","addAndGet(J)J","compareAndSet(JJ)Z","decrementAndGet()J","doubleValue()D","floatValue()F","get()J","getAndAdd(J)J","getAndIncrement()J","incrementAndGet()J","intValue()I","longValue()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicLongFieldUpdater$CASUpdater.class",
    "super": "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicLongFieldUpdater.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicReference;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicReference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z","get()Ljava/lang/Object;","getAndSet(Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.class",
    "super": "Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)V","accessCheck(Ljava/lang/Object;)V","lazySet(Ljava/lang/Object;Ljava/lang/Object;)V","throwAccessCheckException(Ljava/lang/Object;)V","throwCCE()V","valueCheck(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/LongAdder;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/LongAdder.class",
    "super": "Ljava/util/concurrent/atomic/Striped64;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(J)V","doubleValue()D","floatValue()F","intValue()I","longValue()J","sum()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/Striped64$Cell;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/Striped64$Cell.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J)V","cas(JJ)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/atomic/Striped64;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/atomic/Striped64.class",
    "super": "Ljava/lang/Number;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","advanceProbe(I)I","casBase(JJ)Z","casCellsBusy()Z","getProbe()I","longAccumulate(JLjava/util/function/LongBinaryOperator;Z)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/AbstractOwnableSynchronizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getExclusiveOwnerThread()Ljava/lang/Thread;","setExclusiveOwnerThread(Ljava/lang/Thread;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/locks/Condition;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)V","addConditionWaiter()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;","await()V","await(JLjava/util/concurrent/TimeUnit;)Z","awaitNanos(J)J","awaitUninterruptibly()V","checkInterruptWhileWaiting(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I","doSignal(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V","doSignalAll(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V","hasWaiters()Z","isOwnedBy(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)Z","reportInterruptAfterWait(I)V","signal()V","signalAll()V","unlinkCancelledWaiters()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V","compareAndSetNext(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","compareAndSetWaitStatus(II)Z","isShared()Z","predecessor()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;","setPrevRelaxed(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/AbstractQueuedSynchronizer.class",
    "super": "Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","acquire(I)V","acquireInterruptibly(I)V","acquireQueued(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z","acquireShared(I)V","addWaiter(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;","apparentlyFirstQueuedIsExclusive()Z","cancelAcquire(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V","compareAndSetState(II)Z","compareAndSetTail(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","doAcquireInterruptibly(I)V","doAcquireShared(I)V","doAcquireSharedNanos(IJ)Z","doReleaseShared()V","enq(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;","findNodeFromTail(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","fullyRelease(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I","getState()I","hasQueuedPredecessors()Z","hasQueuedThreads()Z","hasWaiters(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z","initializeSyncQueue()V","isOnSyncQueue(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","owns(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z","parkAndCheckInterrupt()Z","release(I)Z","releaseShared(I)Z","selfInterrupt()V","setHead(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V","setHeadAndPropagate(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V","setState(I)V","shouldParkAfterFailedAcquire(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","toString()Ljava/lang/String;","transferAfterCancelledWait(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","transferForSignal(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z","tryAcquireSharedNanos(IJ)Z","unparkSuccessor(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/Condition;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/Condition.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/locks/Lock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/Lock.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/locks/LockSupport;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/LockSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getBlocker(Ljava/lang/Thread;)Ljava/lang/Object;","getThreadId(Ljava/lang/Thread;)J","park(Ljava/lang/Object;)V","parkNanos(Ljava/lang/Object;J)V","parkUntil(Ljava/lang/Object;J)V","setBlocker(Ljava/lang/Thread;Ljava/lang/Object;)V","unpark(Ljava/lang/Thread;)V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReadWriteLock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReadWriteLock.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantLock$FairSync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantLock$FairSync.class",
    "super": "Ljava/util/concurrent/locks/ReentrantLock$Sync;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","tryAcquire(I)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantLock$NonfairSync.class",
    "super": "Ljava/util/concurrent/locks/ReentrantLock$Sync;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","tryAcquire(I)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantLock$Sync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantLock$Sync.class",
    "super": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getOwner()Ljava/lang/Thread;","isHeldExclusively()Z","newCondition()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;","nonfairTryAcquire(I)Z","tryRelease(I)Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantLock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/locks/Lock;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Z)V","hasWaiters(Ljava/util/concurrent/locks/Condition;)Z","isHeldByCurrentThread()Z","lock()V","lockInterruptibly()V","newCondition()Ljava/util/concurrent/locks/Condition;","toString()Ljava/lang/String;","tryLock()Z","unlock()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$FairSync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$FairSync.class",
    "super": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","readerShouldBlock()Z","writerShouldBlock()Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.class",
    "super": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","readerShouldBlock()Z","writerShouldBlock()Z"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/locks/Lock;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V","lock()V","toString()Ljava/lang/String;","unlock()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","initialValue()Ljava/lang/Object;","initialValue()Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$Sync.class",
    "super": "Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","exclusiveCount(I)I","fullTryAcquireShared(Ljava/lang/Thread;)I","getCount()I","getOwner()Ljava/lang/Thread;","getReadLockCount()I","isHeldExclusively()Z","sharedCount(I)I","tryAcquire(I)Z","tryAcquireShared(I)I","tryRelease(I)Z","tryReleaseShared(I)Z","unmatchedUnlockException()Ljava/lang/IllegalMonitorStateException;"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/locks/Lock;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/locks/ReentrantReadWriteLock;)V","lock()V","toString()Ljava/lang/String;","unlock()V"]
  }
,
  {
    "className": "Ljava/util/concurrent/locks/ReentrantReadWriteLock;",
    "module": "java.base",
    "source": "/java.base/java/util/concurrent/locks/ReentrantReadWriteLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/locks/ReadWriteLock;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Z)V","readLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;","toString()Ljava/lang/String;","writeLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;"]
  }
,
  {
    "className": "Ljava/util/function/BiConsumer;",
    "module": "java.base",
    "source": "/java.base/java/util/function/BiConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/BiFunction;",
    "module": "java.base",
    "source": "/java.base/java/util/function/BiFunction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/BiPredicate;",
    "module": "java.base",
    "source": "/java.base/java/util/function/BiPredicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["lambda$or$2(Ljava/util/function/BiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z","or(Ljava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;"]
  }
,
  {
    "className": "Ljava/util/function/BinaryOperator;",
    "module": "java.base",
    "source": "/java.base/java/util/function/BinaryOperator.class",
    "super": "null",
    "interfaces": ["Ljava/util/function/BiFunction;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/BooleanSupplier;",
    "module": "java.base",
    "source": "/java.base/java/util/function/BooleanSupplier.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/Consumer;",
    "module": "java.base",
    "source": "/java.base/java/util/function/Consumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/DoubleConsumer;",
    "module": "java.base",
    "source": "/java.base/java/util/function/DoubleConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/Function;",
    "module": "java.base",
    "source": "/java.base/java/util/function/Function.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["andThen(Ljava/util/function/Function;)Ljava/util/function/Function;","identity()Ljava/util/function/Function;","lambda$andThen$1(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;","lambda$identity$2(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/function/IntBinaryOperator;",
    "module": "java.base",
    "source": "/java.base/java/util/function/IntBinaryOperator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/IntConsumer;",
    "module": "java.base",
    "source": "/java.base/java/util/function/IntConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/IntFunction;",
    "module": "java.base",
    "source": "/java.base/java/util/function/IntFunction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/IntPredicate;",
    "module": "java.base",
    "source": "/java.base/java/util/function/IntPredicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/IntUnaryOperator;",
    "module": "java.base",
    "source": "/java.base/java/util/function/IntUnaryOperator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/LongConsumer;",
    "module": "java.base",
    "source": "/java.base/java/util/function/LongConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/LongFunction;",
    "module": "java.base",
    "source": "/java.base/java/util/function/LongFunction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/Predicate;",
    "module": "java.base",
    "source": "/java.base/java/util/function/Predicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/Supplier;",
    "module": "java.base",
    "source": "/java.base/java/util/function/Supplier.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/ToIntFunction;",
    "module": "java.base",
    "source": "/java.base/java/util/function/ToIntFunction.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/function/UnaryOperator;",
    "module": "java.base",
    "source": "/java.base/java/util/function/UnaryOperator.class",
    "super": "null",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/jar/Attributes$Name;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/Attributes$Name.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hash(Ljava/lang/String;)I","hashCode()I","of(Ljava/lang/String;)Ljava/util/jar/Attributes$Name;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/jar/Attributes;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/Attributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(Ljava/util/jar/Attributes;)V","clear()V","clone()Ljava/lang/Object;","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","get(Ljava/lang/Object;)Ljava/lang/Object;","getValue(Ljava/lang/String;)Ljava/lang/String;","getValue(Ljava/util/jar/Attributes$Name;)Ljava/lang/String;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","putValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","read(Ljava/util/jar/Manifest$FastInputStream;[B)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljava/util/jar/JarEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JarEntry.class",
    "super": "Ljava/util/zip/ZipEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/jar/JarFile$1;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JarFile$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/jar/JarFile;)V","apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/lang/String;)Ljava/util/jar/JarEntry;"]
  }
,
  {
    "className": "Ljava/util/jar/JarFile$JarFileEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JarFile$JarFileEntry.class",
    "super": "Ljava/util/jar/JarEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/jar/JarFile;Ljava/lang/String;)V","getName()Ljava/lang/String;","withBasename(Ljava/lang/String;)Ljava/util/jar/JarFile$JarFileEntry;"]
  }
,
  {
    "className": "Ljava/util/jar/JarFile;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JarFile.class",
    "super": "Ljava/util/zip/ZipFile;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;)V","<init>(Ljava/io/File;ZI)V","<init>(Ljava/io/File;ZILjava/lang/Runtime$Version;)V","<init>(Ljava/lang/String;)V","checkForSpecialAttributes()V","entries()Ljava/util/Enumeration;","getBytes(Ljava/util/zip/ZipEntry;)[B","getEntry(Ljava/lang/String;)Ljava/util/zip/ZipEntry;","getEntry0(Ljava/lang/String;)Ljava/util/jar/JarFile$JarFileEntry;","getJarEntry(Ljava/lang/String;)Ljava/util/jar/JarEntry;","getManEntry()Ljava/util/jar/JarEntry;","getManifest()Ljava/util/jar/Manifest;","getManifestFromReference()Ljava/util/jar/Manifest;","getMetaInfEntryNames()[Ljava/lang/String;","getVersionedEntry(Ljava/lang/String;Ljava/util/jar/JarEntry;)Ljava/util/jar/JarEntry;","isInitializing()Z","isMultiRelease()Z","lambda$entries$0(Ljava/lang/String;)Ljava/util/jar/JarEntry;","match([B[B[B[B)I"]
  }
,
  {
    "className": "Ljava/util/jar/JarVerifier;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JarVerifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B)V"]
  }
,
  {
    "className": "Ljava/util/jar/JavaUtilJarAccessImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/JavaUtilJarAccessImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaUtilJarAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["isInitializing()Z"]
  }
,
  {
    "className": "Ljava/util/jar/Manifest$FastInputStream;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/Manifest$FastInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/InputStream;I)V","available()I","close()V","fill()V","peek()B","read()I","read([BII)I","readLine([B)I","readLine([BII)I","skip(J)J"]
  }
,
  {
    "className": "Ljava/util/jar/Manifest;",
    "module": "java.base",
    "source": "/java.base/java/util/jar/Manifest.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/util/jar/JarVerifier;Ljava/io/InputStream;)V","<init>(Ljava/util/jar/Manifest;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getAttributes(Ljava/lang/String;)Ljava/util/jar/Attributes;","getEntries()Ljava/util/Map;","getMainAttributes()Ljava/util/jar/Attributes;","hashCode()I","parseName([BI)Ljava/lang/String;","read(Ljava/io/InputStream;)V","toLower(I)I"]
  }
,
  {
    "className": "Ljava/util/logging/ConsoleHandler;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/ConsoleHandler.class",
    "super": "Ljava/util/logging/StreamHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","close()V","publish(Ljava/util/logging/LogRecord;)V"]
  }
,
  {
    "className": "Ljava/util/logging/ErrorManager;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/ErrorManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","error(Ljava/lang/String;Ljava/lang/Exception;I)V"]
  }
,
  {
    "className": "Ljava/util/logging/Filter;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Filter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/logging/Formatter;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Formatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","formatMessage(Ljava/util/logging/LogRecord;)Ljava/lang/String;","getHead(Ljava/util/logging/Handler;)Ljava/lang/String;","getTail(Ljava/util/logging/Handler;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/logging/Handler$1;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Handler$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/Handler;Ljava/util/logging/Level;Ljava/util/logging/Filter;Ljava/util/logging/Formatter;Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/Handler;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Handler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/logging/Level;Ljava/util/logging/Formatter;Ljava/util/logging/Formatter;)V","checkPermission()V","getEncoding()Ljava/lang/String;","getFilter()Ljava/util/logging/Filter;","getFormatter()Ljava/util/logging/Formatter;","getLevel()Ljava/util/logging/Level;","isLoggable(Ljava/util/logging/LogRecord;)Z","reportError(Ljava/lang/String;Ljava/lang/Exception;I)V","setEncoding(Ljava/lang/String;)V","setFilter(Ljava/util/logging/Filter;)V","setFormatter(Ljava/util/logging/Formatter;)V","setLevel(Ljava/util/logging/Level;)V"]
  }
,
  {
    "className": "Ljava/util/logging/Level$KnownLevel;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Level$KnownLevel.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/logging/Level;)V","add(Ljava/util/logging/Level;)V","findByLocalizedLevelName(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/Optional;","findByName(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/Optional;","findByValue(ILjava/util/function/Function;)Ljava/util/Optional;","lambda$findByLocalizedLevelName$4(Ljava/lang/String;Ljava/util/logging/Level;)Z","lambda$registerWithClassLoader$2(Ljava/util/logging/Level;)Ljava/lang/ClassLoader;","lambda$registerWithClassLoader$3(Ljava/lang/ClassLoader;Ljdk/internal/loader/ClassLoaderValue;)Ljava/util/List;","lambda$remove$0(Ljava/util/List;)V","lambda$remove$1(Ljava/util/List;)V","mirrored()Ljava/util/Optional;","purge()V","registerWithClassLoader(Ljava/util/logging/Level;)V","remove()V"]
  }
,
  {
    "className": "Ljava/util/logging/Level$RbAccess;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Level$RbAccess.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/logging/Level;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Level.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;ILjava/lang/String;)V","<init>(Ljava/lang/String;ILjava/lang/String;Z)V","computeLocalizedLevelName(Ljava/util/Locale;)Ljava/lang/String;","equals(Ljava/lang/Object;)Z","findLevel(Ljava/lang/String;)Ljava/util/logging/Level;","getCachedLocalizedLevelName()Ljava/lang/String;","getLocalizedLevelName()Ljava/lang/String;","getName()Ljava/lang/String;","hashCode()I","intValue()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$2;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager;Ljava/util/logging/LogManager;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$3;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager;Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$4;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager;Ljava/util/logging/Logger;Ljava/lang/String;Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$CloseOnReset;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$CloseOnReset.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/Logger;)V","create(Ljava/util/logging/Logger;)Ljava/util/logging/LogManager$CloseOnReset;","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$LogNode;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$LogNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager$LogNode;Ljava/util/logging/LogManager$LoggerContext;)V","walkAndSetParent(Ljava/util/logging/Logger;)V"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$LoggerContext$1;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$LoggerContext$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager$LoggerContext;Ljava/util/logging/Logger;Ljava/util/logging/LogManager;Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$LoggerContext;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$LoggerContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addLocalLogger(Ljava/util/logging/Logger;)Z","addLocalLogger(Ljava/util/logging/Logger;Z)Z","demandLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;","ensureAllDefaultLoggers(Ljava/util/logging/Logger;)V","ensureDefaultLogger(Ljava/util/logging/Logger;)V","ensureInitialized()V","findLogger(Ljava/lang/String;)Ljava/util/logging/Logger;","getGlobalLogger()Ljava/util/logging/Logger;","getLoggerNames()Ljava/util/Enumeration;","getNode(Ljava/lang/String;)Ljava/util/logging/LogManager$LogNode;","getOwner()Ljava/util/logging/LogManager;","getRootLogger()Ljava/util/logging/Logger;","processParentHandlers(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/util/function/Predicate;)V","removeLoggerRef(Ljava/lang/String;Ljava/util/logging/LogManager$LoggerWeakRef;)V","requiresDefaultLoggers()Z"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$LoggerWeakRef;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$LoggerWeakRef.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager;Ljava/util/logging/Logger;)V","dispose()V","setNode(Ljava/util/logging/LogManager$LogNode;)V","setParentRef(Ljava/lang/ref/WeakReference;)V"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$LoggingProviderAccess;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$LoggingProviderAccess.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/logging/internal/LoggingProviderImpl$LogManagerAccess;","Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["demandLoggerFor(Ljava/util/logging/LogManager;Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$RootLogger;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$RootLogger.class",
    "super": "Ljava/util/logging/Logger;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/LogManager;)V","accessCheckedHandlers()[Ljava/util/logging/Handler;","addHandler(Ljava/util/logging/Handler;)V","log(Ljava/util/logging/LogRecord;)V","removeHandler(Ljava/util/logging/Handler;)V"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$SystemLoggerContext;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$SystemLoggerContext.class",
    "super": "Ljava/util/logging/LogManager$LoggerContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["demandLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager$VisitedLoggers;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager$VisitedLoggers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Predicate;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["test(Ljava/lang/Object;)Z","test(Ljava/util/logging/Logger;)Z"]
  }
,
  {
    "className": "Ljava/util/logging/LogManager;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addLogger(Ljava/util/logging/Logger;)Z","checkPermission()V","closeHandlers(Ljava/util/logging/Logger;)V","contexts()Ljava/util/List;","createLoggerHandlers(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;","demandLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/logging/Logger;","demandLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;","demandSystemLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/logging/Logger;","demandSystemLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;","doSetLevel(Ljava/util/logging/Logger;Ljava/util/logging/Level;)V","doSetParent(Ljava/util/logging/Logger;Ljava/util/logging/Logger;)V","drainLoggerRefQueueBounded()V","ensureLogManagerInitialized()V","forceLoadHandlers(Ljava/util/logging/Logger;)Z","getBooleanProperty(Ljava/lang/String;Z)Z","getConfigurationFileName()Ljava/lang/String;","getFilterProperty(Ljava/lang/String;Ljava/util/logging/Filter;)Ljava/util/logging/Filter;","getFormatterProperty(Ljava/lang/String;Ljava/util/logging/Formatter;)Ljava/util/logging/Formatter;","getLevelProperty(Ljava/lang/String;Ljava/util/logging/Level;)Ljava/util/logging/Level;","getLogManager()Ljava/util/logging/LogManager;","getLogger(Ljava/lang/String;)Ljava/util/logging/Logger;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getStringProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getSystemContext()Ljava/util/logging/LogManager$LoggerContext;","getUserContext()Ljava/util/logging/LogManager$LoggerContext;","initializeGlobalHandlers()V","invokeConfigurationListeners()V","loadLoggerHandlers(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/lang/String;)V","parseClassNames(Ljava/lang/String;)[Ljava/lang/String;","readConfiguration()V","readConfiguration(Ljava/io/InputStream;)V","readPrimordialConfiguration()V","reset()V","resetLogger(Ljava/util/logging/Logger;)V","resetLoggerContext(Ljava/util/logging/LogManager$LoggerContext;)V","setLevelsOnExistingLoggers()V","setLoggerHandlers(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V"]
  }
,
  {
    "className": "Ljava/util/logging/LogRecord$CallerFinder;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogRecord$CallerFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Predicate;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","get()Ljava/util/Optional;","isLoggerImplFrame(Ljava/lang/String;)Z","lambda$get$1(Ljava/util/stream/Stream;)Ljava/util/Optional;","test(Ljava/lang/Object;)Z","test(Ljava/lang/StackWalker$StackFrame;)Z"]
  }
,
  {
    "className": "Ljava/util/logging/LogRecord;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LogRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/logging/Level;Ljava/lang/String;)V","defaultThreadID()I","getInstant()Ljava/time/Instant;","getLevel()Ljava/util/logging/Level;","getLoggerName()Ljava/lang/String;","getMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","getResourceBundle()Ljava/util/ResourceBundle;","getSourceClassName()Ljava/lang/String;","getSourceMethodName()Ljava/lang/String;","getThrown()Ljava/lang/Throwable;","inferCaller()V","lambda$inferCaller$0(Ljava/lang/StackWalker$StackFrame;)V","setLoggerName(Ljava/lang/String;)V","setParameters([Ljava/lang/Object;)V","setResourceBundle(Ljava/util/ResourceBundle;)V","setResourceBundleName(Ljava/lang/String;)V","setSourceClassName(Ljava/lang/String;)V","setSourceMethodName(Ljava/lang/String;)V","setThrown(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljava/util/logging/Logger$ConfigurationData;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Logger$ConfigurationData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addHandler(Ljava/util/logging/Handler;)V","merge(Ljava/util/logging/Logger;)Ljava/util/logging/Logger$ConfigurationData;","removeHandler(Ljava/util/logging/Handler;)V","setLevelObject(Ljava/util/logging/Level;)V","setLevelValue(I)V","setUseParentHandlers(Z)V"]
  }
,
  {
    "className": "Ljava/util/logging/Logger$LoggerBundle;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Logger$LoggerBundle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/ResourceBundle;)V","get(Ljava/lang/String;Ljava/util/ResourceBundle;)Ljava/util/logging/Logger$LoggerBundle;","isSystemBundle()Z"]
  }
,
  {
    "className": "Ljava/util/logging/Logger$RbAccess;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Logger$RbAccess.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/logging/Logger$SystemLoggerHelper;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Logger$SystemLoggerHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/logging/Logger;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/Logger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Module;Ljava/util/logging/LogManager;Z)V","accessCheckedHandlers()[Ljava/util/logging/Handler;","addHandler(Ljava/util/logging/Handler;)V","checkPermission()V","demandLogger(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/logging/Logger;","doLog(Ljava/util/logging/LogRecord;)V","doLog(Ljava/util/logging/LogRecord;Ljava/util/ResourceBundle;)V","doSetParent(Ljava/util/logging/Logger;)V","findResourceBundle(Ljava/lang/String;Z)Ljava/util/ResourceBundle;","getCallerModule()Ljava/lang/Module;","getEffectiveLoggerBundle()Ljava/util/logging/Logger$LoggerBundle;","getHandlers()[Ljava/util/logging/Handler;","getLevel()Ljava/util/logging/Level;","getLogger(Ljava/lang/String;)Ljava/util/logging/Logger;","getLogger(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/logging/Logger;","getName()Ljava/lang/String;","getParent()Ljava/util/logging/Logger;","getResourceBundle()Ljava/util/ResourceBundle;","getResourceBundleName()Ljava/lang/String;","getUseParentHandlers()Z","isLevelInitialized()Z","isLoggable(Ljava/util/logging/Level;)Z","lambda$findResourceBundle$0(Ljava/lang/Module;)Ljava/lang/ClassLoader;","log(Ljava/util/logging/Level;Ljava/lang/String;)V","log(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/util/logging/Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Ljava/util/logging/Level;Ljava/util/function/Supplier;)V","log(Ljava/util/logging/LogRecord;)V","logp(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Ljava/util/logging/Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Ljava/util/logging/Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","mergeWithSystemLogger(Ljava/util/logging/Logger;)V","removeChildLogger(Ljava/util/logging/LogManager$LoggerWeakRef;)V","removeHandler(Ljava/util/logging/Handler;)V","setCallerModuleRef(Ljava/lang/Module;)V","setLevel(Ljava/util/logging/Level;)V","setLogManager(Ljava/util/logging/LogManager;)V","setParent(Ljava/util/logging/Logger;)V","setUseParentHandlers(Z)V","setupResourceInfo(Ljava/lang/String;Ljava/lang/Module;)V","updateEffectiveLevel()V"]
  }
,
  {
    "className": "Ljava/util/logging/LoggingPermission;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/LoggingPermission.class",
    "super": "Ljava/security/BasicPermission;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/logging/SimpleFormatter;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/SimpleFormatter.class",
    "super": "Ljava/util/logging/Formatter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","format(Ljava/util/logging/LogRecord;)Ljava/lang/String;","getLoggingProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/logging/StreamHandler$1;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/StreamHandler$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/StreamHandler;Ljava/io/OutputStream;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/logging/StreamHandler;",
    "module": "java.logging",
    "source": "/java.logging/java/util/logging/StreamHandler.class",
    "super": "Ljava/util/logging/Handler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/logging/Level;Ljava/util/logging/Formatter;Ljava/util/logging/Formatter;)V","flush()V","flushAndClose()V","isLoggable(Ljava/util/logging/LogRecord;)Z","publish(Ljava/util/logging/LogRecord;)V","setEncoding(Ljava/lang/String;)V","setOutputStream(Ljava/io/OutputStream;)V","setOutputStreamPrivileged(Ljava/io/OutputStream;)V"]
  }
,
  {
    "className": "Ljava/util/regex/ASCII;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/ASCII.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getType(I)I","isAlnum(I)Z","isAlpha(I)Z","isAscii(I)Z","isDigit(I)Z","isHexDigit(I)Z","isLower(I)Z","isSpace(I)Z","isType(II)Z","isUpper(I)Z","isWord(I)Z","toDigit(I)I","toLower(I)I","toUpper(I)I"]
  }
,
  {
    "className": "Ljava/util/regex/CharPredicates;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/CharPredicates.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["ALNUM()Ljava/util/regex/Pattern$CharPredicate;","ALPHABETIC()Ljava/util/regex/Pattern$CharPredicate;","ASCII_DIGIT()Ljava/util/regex/Pattern$BmpCharPredicate;","ASCII_SPACE()Ljava/util/regex/Pattern$BmpCharPredicate;","ASCII_WORD()Ljava/util/regex/Pattern$BmpCharPredicate;","ASSIGNED()Ljava/util/regex/Pattern$CharPredicate;","BLANK()Ljava/util/regex/Pattern$CharPredicate;","CONTROL()Ljava/util/regex/Pattern$CharPredicate;","DIGIT()Ljava/util/regex/Pattern$CharPredicate;","GRAPH()Ljava/util/regex/Pattern$CharPredicate;","HEX_DIGIT()Ljava/util/regex/Pattern$CharPredicate;","IDEOGRAPHIC()Ljava/util/regex/Pattern$CharPredicate;","JOIN_CONTROL()Ljava/util/regex/Pattern$CharPredicate;","LETTER()Ljava/util/regex/Pattern$CharPredicate;","LOWERCASE()Ljava/util/regex/Pattern$CharPredicate;","NONCHARACTER_CODE_POINT()Ljava/util/regex/Pattern$CharPredicate;","PRINT()Ljava/util/regex/Pattern$CharPredicate;","PUNCTUATION()Ljava/util/regex/Pattern$CharPredicate;","TITLECASE()Ljava/util/regex/Pattern$CharPredicate;","UPPERCASE()Ljava/util/regex/Pattern$CharPredicate;","WHITE_SPACE()Ljava/util/regex/Pattern$CharPredicate;","WORD()Ljava/util/regex/Pattern$CharPredicate;","category(I)Ljava/util/regex/Pattern$CharPredicate;","ctype(I)Ljava/util/regex/Pattern$CharPredicate;","forPOSIXName(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","forProperty(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","forUnicodeBlock(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","forUnicodeProperty(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","forUnicodeScript(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","getPosixPredicate(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","getUnicodePredicate(Ljava/lang/String;)Ljava/util/regex/Pattern$CharPredicate;","lambda$ASCII_DIGIT$15(I)Z","lambda$ASCII_SPACE$17(I)Z","lambda$ASCII_WORD$16(I)Z","lambda$ASSIGNED$4(I)Z","lambda$BLANK$6(I)Z","lambda$CONTROL$1(I)Z","lambda$GRAPH$7(I)Z","lambda$HEX_DIGIT$3(I)Z","lambda$JOIN_CONTROL$8(I)Z","lambda$NONCHARACTER_CODE_POINT$5(I)Z","lambda$PUNCTUATION$2(I)Z","lambda$WHITE_SPACE$0(I)Z","lambda$WORD$9(I)Z","lambda$category$12(II)Z","lambda$ctype$14(II)Z","lambda$forUnicodeBlock$11(Ljava/lang/Character$UnicodeBlock;I)Z","lambda$forUnicodeScript$10(Ljava/lang/Character$UnicodeScript;I)Z","lambda$range$13(III)Z","range(II)Ljava/util/regex/Pattern$CharPredicate;"]
  }
,
  {
    "className": "Ljava/util/regex/Grapheme;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Grapheme.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getType(I)I","isBoundary(II)Z","isExcludedSpacingMark(I)Z"]
  }
,
  {
    "className": "Ljava/util/regex/IntHashSet;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/IntHashSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(I)V","clear()V","contains(I)Z","expand()V"]
  }
,
  {
    "className": "Ljava/util/regex/MatchResult;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/MatchResult.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/regex/Matcher$ImmutableMatchResult;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Matcher$ImmutableMatchResult.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/regex/MatchResult;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III[ILjava/lang/String;)V","checkMatch()V","group(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/regex/Matcher;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Matcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/regex/MatchResult;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V","appendExpandedReplacement(Ljava/lang/String;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;","appendReplacement(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/regex/Matcher;","appendTail(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;","end()I","end(I)I","find()Z","find(I)Z","getMatchedGroupIndex(Ljava/lang/String;)I","getSubSequence(II)Ljava/lang/CharSequence;","getTextLength()I","group()Ljava/lang/String;","group(I)Ljava/lang/String;","group(Ljava/lang/String;)Ljava/lang/String;","groupCount()I","hitEnd()Z","lookingAt()Z","match(II)Z","matches()Z","pattern()Ljava/util/regex/Pattern;","region(II)Ljava/util/regex/Matcher;","regionEnd()I","regionStart()I","replaceAll(Ljava/lang/String;)Ljava/lang/String;","replaceFirst(Ljava/lang/String;)Ljava/lang/String;","requireEnd()Z","reset()Ljava/util/regex/Matcher;","reset(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;","search(I)Z","start()I","start(I)I","toMatchResult()Ljava/util/regex/MatchResult;","toMatchResult(Ljava/lang/String;)Ljava/util/regex/MatchResult;","toString()Ljava/lang/String;","useAnchoringBounds(Z)Ljava/util/regex/Matcher;","usePattern(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;","useTransparentBounds(Z)Ljava/util/regex/Matcher;"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$1;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$1.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$2;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BackRef;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BackRef.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Begin;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Begin.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Behind;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Behind.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BehindS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BehindS.class",
    "super": "Ljava/util/regex/Pattern$Behind;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BitClass;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BitClass.class",
    "super": "Ljava/util/regex/Pattern$BmpCharProperty;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>([Z)V","add(II)Ljava/util/regex/Pattern$BitClass;","lambda$new$0([ZI)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BmpCharPredicate;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BmpCharPredicate.class",
    "super": "null",
    "interfaces": ["Ljava/util/regex/Pattern$CharPredicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["and(Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharPredicate;","lambda$and$0(Ljava/util/regex/Pattern$CharPredicate;I)Z","lambda$and$1(Ljava/util/regex/Pattern$CharPredicate;I)Z","lambda$union$2(Ljava/util/regex/Pattern$CharPredicate;I)Z","lambda$union$3(Ljava/util/regex/Pattern$CharPredicate;I)Z","union(Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharPredicate;"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BmpCharProperty;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BmpCharProperty.class",
    "super": "Ljava/util/regex/Pattern$CharProperty;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$BmpCharPredicate;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BmpCharPropertyGreedy;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BmpCharPropertyGreedy.class",
    "super": "Ljava/util/regex/Pattern$CharPropertyGreedy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$BmpCharProperty;I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BnM;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BnM.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I[I[ILjava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","optimize(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BnMS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BnMS.class",
    "super": "Ljava/util/regex/Pattern$BnM;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I[I[ILjava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Bound;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Bound.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IZ)V","check(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)I","isWord(I)Z","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Branch;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Branch.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;Ljava/util/regex/Pattern$Node;Ljava/util/regex/Pattern$Node;)V","add(Ljava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$BranchConn;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$BranchConn.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$CIBackRef;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$CIBackRef.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IZ)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Caret;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Caret.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$CharPredicate;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$CharPredicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["and(Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharPredicate;","lambda$and$0(Ljava/util/regex/Pattern$CharPredicate;I)Z","lambda$negate$3(I)Z","lambda$union$1(Ljava/util/regex/Pattern$CharPredicate;I)Z","lambda$union$2(Ljava/util/regex/Pattern$CharPredicate;Ljava/util/regex/Pattern$CharPredicate;I)Z","negate()Ljava/util/regex/Pattern$CharPredicate;","union(Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharPredicate;","union(Ljava/util/regex/Pattern$CharPredicate;Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharPredicate;"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$CharProperty;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$CharProperty.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$CharPredicate;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$CharPropertyGreedy;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$CharPropertyGreedy.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$CharProperty;I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Curly;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Curly.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;IILjava/util/regex/Pattern$Qtype;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","match1(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","match2(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Dollar;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Dollar.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$End;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$End.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$First;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$First.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/regex/Pattern$GraphemeBound;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$GraphemeBound.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$GroupCurly;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$GroupCurly.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;IILjava/util/regex/Pattern$Qtype;IIZ)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","match1(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","match2(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$GroupHead;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$GroupHead.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$GroupTail;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$GroupTail.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$LastMatch;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$LastMatch.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$LastNode;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$LastNode.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$LazyLoop;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$LazyLoop.class",
    "super": "Ljava/util/regex/Pattern$Loop;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","matchInit(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$LineEnding;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$LineEnding.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Loop;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Loop.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","matchInit(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$NFCCharProperty;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$NFCCharProperty.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$CharPredicate;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Neg;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Neg.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Node;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Node.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$NotBehind;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$NotBehind.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$NotBehindS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$NotBehindS.class",
    "super": "Ljava/util/regex/Pattern$NotBehind;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;II)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Pos;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Pos.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Prolog;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Prolog.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Loop;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Qtype;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Qtype.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Ques;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Ques.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;Ljava/util/regex/Pattern$Qtype;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Slice;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Slice.class",
    "super": "Ljava/util/regex/Pattern$SliceNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceI;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceI.class",
    "super": "Ljava/util/regex/Pattern$SliceNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceIS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceIS.class",
    "super": "Ljava/util/regex/Pattern$SliceNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","toLower(I)I"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceNode;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceNode.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceS.class",
    "super": "Ljava/util/regex/Pattern$Slice;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceU;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceU.class",
    "super": "Ljava/util/regex/Pattern$SliceNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$SliceUS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$SliceUS.class",
    "super": "Ljava/util/regex/Pattern$SliceIS;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","toLower(I)I"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$Start;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$Start.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$StartS;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$StartS.class",
    "super": "Ljava/util/regex/Pattern$Start;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/regex/Pattern$Node;)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$TreeInfo;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$TreeInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","reset()V"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$UnixCaret;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$UnixCaret.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$UnixDollar;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$UnixDollar.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern$XGrapheme;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern$XGrapheme.class",
    "super": "Ljava/util/regex/Pattern$Node;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","study(Ljava/util/regex/Pattern$TreeInfo;)Z"]
  }
,
  {
    "className": "Ljava/util/regex/Pattern;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/Pattern.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","ALL()Ljava/util/regex/Pattern$CharPredicate;","CIRange(II)Ljava/util/regex/Pattern$CharPredicate;","CIRangeU(II)Ljava/util/regex/Pattern$CharPredicate;","DOT()Ljava/util/regex/Pattern$CharPredicate;","HorizWS()Ljava/util/regex/Pattern$BmpCharPredicate;","N()I","Range(II)Ljava/util/regex/Pattern$CharPredicate;","RemoveQEQuoting()V","Single(I)Ljava/util/regex/Pattern$BmpCharPredicate;","SingleI(II)Ljava/util/regex/Pattern$BmpCharPredicate;","SingleS(I)Ljava/util/regex/Pattern$CharPredicate;","SingleU(I)Ljava/util/regex/Pattern$CharPredicate;","UNIXDOT()Ljava/util/regex/Pattern$CharPredicate;","VertWS()Ljava/util/regex/Pattern$BmpCharPredicate;","accept(ILjava/lang/String;)V","addFlag()V","append(II)V","atom()Ljava/util/regex/Pattern$Node;","bitsOrSingle(Ljava/util/regex/Pattern$BitClass;I)Ljava/util/regex/Pattern$CharPredicate;","c()I","clazz(Z)Ljava/util/regex/Pattern$CharPredicate;","closure(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;","compile()V","compile(Ljava/lang/String;)Ljava/util/regex/Pattern;","compile(Ljava/lang/String;I)Ljava/util/regex/Pattern;","composeOneStep(Ljava/lang/String;)Ljava/lang/String;","countChars(Ljava/lang/CharSequence;II)I","countCodePoints(Ljava/lang/CharSequence;)I","createGroup(Z)Ljava/util/regex/Pattern$Node;","curly(Ljava/util/regex/Pattern$Node;I)Ljava/util/regex/Pattern$Node;","cursor()I","error(Ljava/lang/String;)Ljava/util/regex/PatternSyntaxException;","escape(ZZZ)I","expr(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;","family(ZZ)Ljava/util/regex/Pattern$CharPredicate;","findSupplementary(II)Z","getClass(I)I","group0()Ljava/util/regex/Pattern$Node;","groupname(I)Ljava/lang/String;","has(I)Z","hasBaseCharacter(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z","inRange(III)Z","isLineSeparator(I)Z","isSupplementary(I)Z","lambda$ALL$4(I)Z","lambda$CIRange$13(III)Z","lambda$CIRangeU$14(III)Z","lambda$DOT$5(I)Z","lambda$HorizWS$3(I)Z","lambda$Range$11(III)Z","lambda$Range$12(III)Z","lambda$Single$8(II)Z","lambda$SingleI$9(III)Z","lambda$SingleS$7(II)Z","lambda$SingleU$10(II)Z","lambda$UNIXDOT$6(I)Z","lambda$VertWS$2(I)Z","lambda$clazz$1(Ljava/util/regex/Pattern$BitClass;I)Z","lambda$normalizeSlice$0(Ljava/lang/StringBuilder;Ljava/lang/String;)V","mark(I)V","matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;","matches(Ljava/lang/String;Ljava/lang/CharSequence;)Z","namedGroups()Ljava/util/Map;","newCharProperty(Ljava/util/regex/Pattern$CharPredicate;)Ljava/util/regex/Pattern$CharProperty;","newSlice([IIZ)Ljava/util/regex/Pattern$Node;","next()I","nextEscaped()I","normalize(Ljava/lang/String;)Ljava/lang/String;","normalizeClazz(Ljava/lang/String;IILjava/lang/StringBuilder;)V","normalizeSlice(Ljava/lang/String;IILjava/lang/StringBuilder;)V","o()I","parsePastLine()I","parsePastWhitespace(I)I","peek()I","peekPastLine()I","peekPastWhitespace(I)I","produceEquivalentAlternation(Ljava/lang/String;Ljava/util/Set;)V","producePermutations(Ljava/lang/String;)[Ljava/lang/String;","quote(Ljava/lang/String;)Ljava/lang/String;","range(Ljava/util/regex/Pattern$BitClass;)Ljava/util/regex/Pattern$CharPredicate;","read()I","ref(I)Ljava/util/regex/Pattern$Node;","sequence(Ljava/util/regex/Pattern$Node;)Ljava/util/regex/Pattern$Node;","setcursor(I)V","single(I)Ljava/util/regex/Pattern$CharPredicate;","skip()I","split(Ljava/lang/CharSequence;)[Ljava/lang/String;","split(Ljava/lang/CharSequence;I)[Ljava/lang/String;","subFlag()V","toString()Ljava/lang/String;","u()I","unread()V","uxxxx()I","x()I"]
  }
,
  {
    "className": "Ljava/util/regex/PatternSyntaxException;",
    "module": "java.base",
    "source": "/java.base/java/util/regex/PatternSyntaxException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;I)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/spi/CalendarDataProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/CalendarDataProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/CalendarNameProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/CalendarNameProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/CurrencyNameProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/CurrencyNameProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/LocaleNameProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/LocaleNameProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/LocaleServiceProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/LocaleServiceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Void;)V","checkPermission()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljava/util/spi/ResourceBundleControlProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/ResourceBundleControlProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/ResourceBundleProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/ResourceBundleProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/spi/TimeZoneNameProvider;",
    "module": "java.base",
    "source": "/java.base/java/util/spi/TimeZoneNameProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/stream/AbstractPipeline;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/AbstractPipeline.class",
    "super": "Ljava/util/stream/PipelineHelper;",
    "interfaces": ["Ljava/util/stream/BaseStream;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;IZ)V","<init>(Ljava/util/stream/AbstractPipeline;I)V","close()V","copyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)V","copyIntoWithCancel(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Z","evaluate(Ljava/util/Spliterator;ZLjava/util/function/IntFunction;)Ljava/util/stream/Node;","evaluate(Ljava/util/stream/TerminalOp;)Ljava/lang/Object;","evaluateToArrayNode(Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","exactOutputSizeIfKnown(Ljava/util/Spliterator;)J","getSourceShape()Ljava/util/stream/StreamShape;","getStreamAndOpFlags()I","isOrdered()Z","isParallel()Z","lambda$opEvaluateParallelLazy$2(I)[Ljava/lang/Object;","lambda$spliterator$0()Ljava/util/Spliterator;","lambda$wrapSpliterator$1(Ljava/util/Spliterator;)Ljava/util/Spliterator;","onClose(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;","opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","opEvaluateParallelLazy(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/Spliterator;","sequential()Ljava/util/stream/BaseStream;","sourceSpliterator(I)Ljava/util/Spliterator;","sourceStageSpliterator()Ljava/util/Spliterator;","spliterator()Ljava/util/Spliterator;","wrapAndCopyInto(Ljava/util/stream/Sink;Ljava/util/Spliterator;)Ljava/util/stream/Sink;","wrapSink(Ljava/util/stream/Sink;)Ljava/util/stream/Sink;","wrapSpliterator(Ljava/util/Spliterator;)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/AbstractShortCircuitTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/AbstractShortCircuitTask.class",
    "super": "Ljava/util/stream/AbstractTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractShortCircuitTask;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","cancel()V","cancelLaterNodes()V","compute()V","getLocalResult()Ljava/lang/Object;","getRawResult()Ljava/lang/Object;","setLocalResult(Ljava/lang/Object;)V","shortCircuit(Ljava/lang/Object;)V","taskCanceled()Z"]
  }
,
  {
    "className": "Ljava/util/stream/AbstractSpinedBuffer;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/AbstractSpinedBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","chunkSize(I)I","count()J"]
  }
,
  {
    "className": "Ljava/util/stream/AbstractTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/AbstractTask.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractTask;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","compute()V","getLeafTarget()I","getLocalResult()Ljava/lang/Object;","getParent()Ljava/util/stream/AbstractTask;","getRawResult()Ljava/lang/Object;","getTargetSize(J)J","isLeaf()Z","isLeftmostNode()Z","isRoot()Z","onCompletion(Ljava/util/concurrent/CountedCompleter;)V","setLocalResult(Ljava/lang/Object;)V","suggestTargetSize(J)J"]
  }
,
  {
    "className": "Ljava/util/stream/BaseStream;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/BaseStream.class",
    "super": "null",
    "interfaces": ["Ljava/lang/AutoCloseable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Collector$Characteristics;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Collector$Characteristics.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Collector;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Collector.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["of(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;"]
  }
,
  {
    "className": "Ljava/util/stream/Collectors$CollectorImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Collectors$CollectorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Collector;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/Set;)V","<init>(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;Ljava/util/Set;)V","accumulator()Ljava/util/function/BiConsumer;","characteristics()Ljava/util/Set;","combiner()Ljava/util/function/BinaryOperator;","finisher()Ljava/util/function/Function;","supplier()Ljava/util/function/Supplier;"]
  }
,
  {
    "className": "Ljava/util/stream/Collectors;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Collectors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["castingIdentity()Ljava/util/function/Function;","collectingAndThen(Ljava/util/stream/Collector;Ljava/util/function/Function;)Ljava/util/stream/Collector;","joining(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;","joining(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;","lambda$castingIdentity$2(Ljava/lang/Object;)Ljava/lang/Object;","lambda$joining$11(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/StringJoiner;","lambda$toCollection$3(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;","lambda$toList$4(Ljava/util/List;Ljava/util/List;)Ljava/util/List;","lambda$toSet$7(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;","lambda$toUnmodifiableSet$8(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;","lambda$toUnmodifiableSet$9(Ljava/util/Set;)Ljava/util/Set;","toCollection(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;","toList()Ljava/util/stream/Collector;","toSet()Ljava/util/stream/Collector;","toUnmodifiableSet()Ljava/util/stream/Collector;"]
  }
,
  {
    "className": "Ljava/util/stream/DistinctOps$1$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/DistinctOps$1$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/DistinctOps$1;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V","begin(J)V","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/DistinctOps$1$2;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/DistinctOps$1$2.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/DistinctOps$1;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V","begin(J)V","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/DistinctOps$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/DistinctOps$1.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatefulOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;I)V","lambda$opEvaluateParallel$0(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;)V","opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","opEvaluateParallelLazy(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/Spliterator;","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;","reduce(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/DistinctOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/DistinctOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["makeRef(Ljava/util/stream/AbstractPipeline;)Ljava/util/stream/ReferencePipeline;"]
  }
,
  {
    "className": "Ljava/util/stream/FindOps$FindOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/FindOps$FindOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/TerminalOp;"],
    "safeForPreinit": "true",
    "invokedMethods": ["evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","getOpFlags()I"]
  }
,
  {
    "className": "Ljava/util/stream/FindOps$FindSink$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/FindOps$FindSink$OfRef.class",
    "super": "Ljava/util/stream/FindOps$FindSink;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","get()Ljava/lang/Object;","get()Ljava/util/Optional;"]
  }
,
  {
    "className": "Ljava/util/stream/FindOps$FindSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/FindOps$FindSink.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/TerminalSink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(Ljava/lang/Object;)V","cancellationRequested()Z"]
  }
,
  {
    "className": "Ljava/util/stream/FindOps$FindTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/FindOps$FindTask.class",
    "super": "Ljava/util/stream/AbstractShortCircuitTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/FindOps$FindOp;ZLjava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/FindOps$FindTask;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Object;","foundResult(Ljava/lang/Object;)V","getEmptyResult()Ljava/lang/Object;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/FindOps$FindTask;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/FindOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/FindOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["makeRef(Z)Ljava/util/stream/TerminalOp;"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps$ForEachOp$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps$ForEachOp$OfInt.class",
    "super": "Ljava/util/stream/ForEachOps$ForEachOp;",
    "interfaces": ["Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/IntConsumer;Z)V","accept(I)V","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps$ForEachOp$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps$ForEachOp$OfRef.class",
    "super": "Ljava/util/stream/ForEachOps$ForEachOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Consumer;Z)V","accept(Ljava/lang/Object;)V","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps$ForEachOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps$ForEachOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/TerminalOp;","Ljava/util/stream/TerminalSink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Void;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Void;","get()Ljava/lang/Void;","getOpFlags()I"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps$ForEachOrderedTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps$ForEachOrderedTask.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ForEachOps$ForEachOrderedTask;Ljava/util/Spliterator;Ljava/util/stream/ForEachOps$ForEachOrderedTask;)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/stream/Sink;)V","compute()V","doCompute(Ljava/util/stream/ForEachOps$ForEachOrderedTask;)V","lambda$doCompute$0(I)[Ljava/lang/Object;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps$ForEachTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps$ForEachTask.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ForEachOps$ForEachTask;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/stream/Sink;)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/stream/ForEachOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ForEachOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["makeInt(Ljava/util/function/IntConsumer;Z)Ljava/util/stream/TerminalOp;","makeRef(Ljava/util/function/Consumer;Z)Ljava/util/stream/TerminalOp;"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$4$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$4$1.class",
    "super": "Ljava/util/stream/Sink$ChainedInt;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/IntPipeline$4;Ljava/util/stream/Sink;)V","accept(I)V"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$4;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$4.class",
    "super": "Ljava/util/stream/IntPipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/IntPipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/IntUnaryOperator;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$9$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$9$1.class",
    "super": "Ljava/util/stream/Sink$ChainedInt;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/IntPipeline$9;Ljava/util/stream/Sink;)V","accept(I)V","begin(J)V"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$9;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$9.class",
    "super": "Ljava/util/stream/IntPipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/IntPipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/IntPredicate;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$Head;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$Head.class",
    "super": "Ljava/util/stream/IntPipeline;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;IZ)V","forEach(Ljava/util/function/IntConsumer;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline$StatelessOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline$StatelessOp.class",
    "super": "Ljava/util/stream/IntPipeline;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;I)V","opIsStateful()Z"]
  }
,
  {
    "className": "Ljava/util/stream/IntPipeline;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntPipeline.class",
    "super": "Ljava/util/stream/AbstractPipeline;",
    "interfaces": ["Ljava/util/stream/IntStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;IZ)V","<init>(Ljava/util/stream/AbstractPipeline;I)V","adapt(Ljava/util/Spliterator;)Ljava/util/Spliterator$OfInt;","adapt(Ljava/util/stream/Sink;)Ljava/util/function/IntConsumer;","allMatch(Ljava/util/function/IntPredicate;)Z","evaluateToNode(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;ZLjava/util/function/IntFunction;)Ljava/util/stream/Node;","filter(Ljava/util/function/IntPredicate;)Ljava/util/stream/IntStream;","forEach(Ljava/util/function/IntConsumer;)V","forEachWithCancel(Ljava/util/Spliterator;Ljava/util/stream/Sink;)Z","getOutputShape()Ljava/util/stream/StreamShape;","makeNodeBuilder(JLjava/util/function/IntFunction;)Ljava/util/stream/Node$Builder;","map(Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;","reduce(ILjava/util/function/IntBinaryOperator;)I","sum()I","wrap(Ljava/util/stream/PipelineHelper;Ljava/util/function/Supplier;Z)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/IntStream;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/IntStream.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/BaseStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["empty()Ljava/util/stream/IntStream;","range(II)Ljava/util/stream/IntStream;"]
  }
,
  {
    "className": "Ljava/util/stream/MatchOps$2MatchSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps$2MatchSink.class",
    "super": "Ljava/util/stream/MatchOps$BooleanTerminalSink;",
    "interfaces": ["Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/MatchOps$MatchKind;Ljava/util/function/IntPredicate;)V","accept(I)V"]
  }
,
  {
    "className": "Ljava/util/stream/MatchOps$BooleanTerminalSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps$BooleanTerminalSink.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/MatchOps$MatchKind;)V","cancellationRequested()Z","getAndClearState()Z"]
  }
,
  {
    "className": "Ljava/util/stream/MatchOps$MatchKind;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps$MatchKind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/MatchOps$MatchOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps$MatchOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/TerminalOp;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/StreamShape;Ljava/util/stream/MatchOps$MatchKind;Ljava/util/function/Supplier;)V","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Boolean;","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Boolean;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","getOpFlags()I"]
  }
,
  {
    "className": "Ljava/util/stream/MatchOps$MatchTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps$MatchTask.class",
    "super": "Ljava/util/stream/AbstractShortCircuitTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/MatchOps$MatchOp;Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/MatchOps$MatchTask;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Boolean;","doLeaf()Ljava/lang/Object;","getEmptyResult()Ljava/lang/Boolean;","getEmptyResult()Ljava/lang/Object;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/MatchOps$MatchTask;"]
  }
,
  {
    "className": "Ljava/util/stream/MatchOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/MatchOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["lambda$makeInt$1(Ljava/util/stream/MatchOps$MatchKind;Ljava/util/function/IntPredicate;)Ljava/util/stream/MatchOps$BooleanTerminalSink;","makeInt(Ljava/util/function/IntPredicate;Ljava/util/stream/MatchOps$MatchKind;)Ljava/util/stream/TerminalOp;"]
  }
,
  {
    "className": "Ljava/util/stream/Node$Builder$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$Builder$OfDouble.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$Builder;","Ljava/util/stream/Sink$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Node$Builder$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$Builder$OfInt.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$Builder;","Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Node$Builder$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$Builder$OfLong.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$Builder;","Ljava/util/stream/Sink$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Node$Builder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$Builder.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Node$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$OfDouble.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["copyInto([Ljava/lang/Double;I)V","copyInto([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","lambda$truncate$0(D)V","newArray(I)Ljava/lang/Object;","newArray(I)[D","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node$OfDouble;","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Node$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$OfInt.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["copyInto([Ljava/lang/Integer;I)V","copyInto([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","lambda$truncate$0(I)V","newArray(I)Ljava/lang/Object;","newArray(I)[I","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node$OfInt;","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Node$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$OfLong.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["copyInto([Ljava/lang/Long;I)V","copyInto([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","lambda$truncate$0(J)V","newArray(I)Ljava/lang/Object;","newArray(I)[J","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node$OfLong;","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Node$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node$OfPrimitive.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","getChild(I)Ljava/util/stream/Node$OfPrimitive;","getChild(I)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Node;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Node.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getChild(I)Ljava/util/stream/Node;","getChildCount()I","getShape()Ljava/util/stream/StreamShape;","lambda$truncate$0(Ljava/lang/Object;)V","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Nodes$AbstractConcNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$AbstractConcNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;Ljava/util/stream/Node;)V","count()J","getChild(I)Ljava/util/stream/Node;","getChildCount()I"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ArrayNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ArrayNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JLjava/util/function/IntFunction;)V","<init>([Ljava/lang/Object;)V","asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","copyInto([Ljava/lang/Object;I)V","count()J","forEach(Ljava/util/function/Consumer;)V","spliterator()Ljava/util/Spliterator;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$CollectionNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$CollectionNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","copyInto([Ljava/lang/Object;I)V","count()J","forEach(Ljava/util/function/Consumer;)V","spliterator()Ljava/util/Spliterator;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$CollectorTask$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$CollectorTask$OfInt.class",
    "super": "Ljava/util/stream/Nodes$CollectorTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Object;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$CollectorTask$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$CollectorTask$OfRef.class",
    "super": "Ljava/util/stream/Nodes$CollectorTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/PipelineHelper;Ljava/util/function/IntFunction;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Object;","lambda$new$0(Ljava/util/function/IntFunction;J)Ljava/util/stream/Node$Builder;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$CollectorTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$CollectorTask.class",
    "super": "Ljava/util/stream/AbstractTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Nodes$CollectorTask;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/LongFunction;Ljava/util/function/BinaryOperator;)V","doLeaf()Ljava/lang/Object;","doLeaf()Ljava/util/stream/Node;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/Nodes$CollectorTask;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ConcNode$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ConcNode$OfDouble.class",
    "super": "Ljava/util/stream/Nodes$ConcNode$OfPrimitive;",
    "interfaces": ["Ljava/util/stream/Node$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfDouble;Ljava/util/stream/Node$OfDouble;)V","spliterator()Ljava/util/Spliterator$OfDouble;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ConcNode$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ConcNode$OfInt.class",
    "super": "Ljava/util/stream/Nodes$ConcNode$OfPrimitive;",
    "interfaces": ["Ljava/util/stream/Node$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfInt;Ljava/util/stream/Node$OfInt;)V","spliterator()Ljava/util/Spliterator$OfInt;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ConcNode$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ConcNode$OfLong.class",
    "super": "Ljava/util/stream/Nodes$ConcNode$OfPrimitive;",
    "interfaces": ["Ljava/util/stream/Node$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfLong;Ljava/util/stream/Node$OfLong;)V","spliterator()Ljava/util/Spliterator$OfLong;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ConcNode$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ConcNode$OfPrimitive.class",
    "super": "Ljava/util/stream/Nodes$AbstractConcNode;",
    "interfaces": ["Ljava/util/stream/Node$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfPrimitive;Ljava/util/stream/Node$OfPrimitive;)V","asPrimitiveArray()Ljava/lang/Object;","copyInto(Ljava/lang/Object;I)V","forEach(Ljava/lang/Object;)V","getChild(I)Ljava/util/stream/Node$OfPrimitive;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ConcNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ConcNode.class",
    "super": "Ljava/util/stream/Nodes$AbstractConcNode;",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;Ljava/util/stream/Node;)V","asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","copyInto([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","spliterator()Ljava/util/Spliterator;","toString()Ljava/lang/String;","truncate(JJLjava/util/function/IntFunction;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$DoubleArrayNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$DoubleArrayNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[D","copyInto(Ljava/lang/Object;I)V","copyInto([DI)V","count()J","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/DoubleConsumer;)V","spliterator()Ljava/util/Spliterator$OfDouble;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$DoubleFixedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$DoubleFixedNodeBuilder.class",
    "super": "Ljava/util/stream/Nodes$DoubleArrayNode;",
    "interfaces": ["Ljava/util/stream/Node$Builder$OfDouble;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J)V","accept(D)V","begin(J)V","build()Ljava/util/stream/Node$OfDouble;","end()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$DoubleSpinedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$DoubleSpinedNodeBuilder.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfDouble;",
    "interfaces": ["Ljava/util/stream/Node$OfDouble;","Ljava/util/stream/Node$Builder$OfDouble;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","accept(D)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[D","begin(J)V","build()Ljava/util/stream/Node$OfDouble;","copyInto(Ljava/lang/Object;I)V","copyInto([DI)V","end()V","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/DoubleConsumer;)V","spliterator()Ljava/util/Spliterator$OfDouble;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$EmptyNode$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$EmptyNode$OfDouble.class",
    "super": "Ljava/util/stream/Nodes$EmptyNode;",
    "interfaces": ["Ljava/util/stream/Node$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[D","spliterator()Ljava/util/Spliterator$OfDouble;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$EmptyNode$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$EmptyNode$OfInt.class",
    "super": "Ljava/util/stream/Nodes$EmptyNode;",
    "interfaces": ["Ljava/util/stream/Node$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[I","spliterator()Ljava/util/Spliterator$OfInt;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$EmptyNode$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$EmptyNode$OfLong.class",
    "super": "Ljava/util/stream/Nodes$EmptyNode;",
    "interfaces": ["Ljava/util/stream/Node$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[J","spliterator()Ljava/util/Spliterator$OfLong;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$EmptyNode$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$EmptyNode$OfRef.class",
    "super": "Ljava/util/stream/Nodes$EmptyNode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["copyInto([Ljava/lang/Object;I)V","forEach(Ljava/util/function/Consumer;)V","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$EmptyNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$EmptyNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": ["asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","copyInto(Ljava/lang/Object;I)V","count()J","forEach(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$FixedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$FixedNodeBuilder.class",
    "super": "Ljava/util/stream/Nodes$ArrayNode;",
    "interfaces": ["Ljava/util/stream/Node$Builder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(JLjava/util/function/IntFunction;)V","accept(Ljava/lang/Object;)V","begin(J)V","build()Ljava/util/stream/Node;","end()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$IntArrayNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$IntArrayNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","<init>([I)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[I","copyInto(Ljava/lang/Object;I)V","copyInto([II)V","count()J","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/IntConsumer;)V","spliterator()Ljava/util/Spliterator$OfInt;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$IntFixedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$IntFixedNodeBuilder.class",
    "super": "Ljava/util/stream/Nodes$IntArrayNode;",
    "interfaces": ["Ljava/util/stream/Node$Builder$OfInt;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J)V","accept(I)V","begin(J)V","build()Ljava/util/stream/Node$OfInt;","build()Ljava/util/stream/Node;","end()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$IntSpinedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$IntSpinedNodeBuilder.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfInt;",
    "interfaces": ["Ljava/util/stream/Node$OfInt;","Ljava/util/stream/Node$Builder$OfInt;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","accept(I)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[I","begin(J)V","build()Ljava/util/stream/Node$OfInt;","build()Ljava/util/stream/Node;","copyInto(Ljava/lang/Object;I)V","copyInto([II)V","end()V","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/IntConsumer;)V","spliterator()Ljava/util/Spliterator$OfInt;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator$OfDouble.class",
    "super": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfDouble;)V","forEachRemaining(Ljava/util/function/DoubleConsumer;)V","tryAdvance(Ljava/util/function/DoubleConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator$OfInt.class",
    "super": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfInt;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","tryAdvance(Ljava/util/function/IntConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator$OfLong.class",
    "super": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfLong;)V","forEachRemaining(Ljava/util/function/LongConsumer;)V","tryAdvance(Ljava/util/function/LongConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator$OfPrimitive.class",
    "super": "Ljava/util/stream/Nodes$InternalNodeSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfPrimitive;)V","forEachRemaining(Ljava/lang/Object;)V","tryAdvance(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator$OfRef.class",
    "super": "Ljava/util/stream/Nodes$InternalNodeSpliterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;)V","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$InternalNodeSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$InternalNodeSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;)V","characteristics()I","estimateSize()J","findNextLeafNode(Ljava/util/Deque;)Ljava/util/stream/Node;","initStack()Ljava/util/Deque;","initTryAdvance()Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$LongArrayNode;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$LongArrayNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Node$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[J","copyInto(Ljava/lang/Object;I)V","copyInto([JI)V","count()J","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/LongConsumer;)V","spliterator()Ljava/util/Spliterator$OfLong;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$LongFixedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$LongFixedNodeBuilder.class",
    "super": "Ljava/util/stream/Nodes$LongArrayNode;",
    "interfaces": ["Ljava/util/stream/Node$Builder$OfLong;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J)V","accept(J)V","begin(J)V","build()Ljava/util/stream/Node$OfLong;","end()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$LongSpinedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$LongSpinedNodeBuilder.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfLong;",
    "interfaces": ["Ljava/util/stream/Node$OfLong;","Ljava/util/stream/Node$Builder$OfLong;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","accept(J)V","asPrimitiveArray()Ljava/lang/Object;","asPrimitiveArray()[J","begin(J)V","build()Ljava/util/stream/Node$OfLong;","copyInto(Ljava/lang/Object;I)V","copyInto([JI)V","end()V","forEach(Ljava/lang/Object;)V","forEach(Ljava/util/function/LongConsumer;)V","spliterator()Ljava/util/Spliterator$OfLong;","spliterator()Ljava/util/Spliterator$OfPrimitive;","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$SizedCollectorTask$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$SizedCollectorTask$OfInt.class",
    "super": "Ljava/util/stream/Nodes$SizedCollectorTask;",
    "interfaces": ["Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/PipelineHelper;[I)V","<init>(Ljava/util/stream/Nodes$SizedCollectorTask$OfInt;Ljava/util/Spliterator;JJ)V","accept(I)V","makeChild(Ljava/util/Spliterator;JJ)Ljava/util/stream/Nodes$SizedCollectorTask$OfInt;","makeChild(Ljava/util/Spliterator;JJ)Ljava/util/stream/Nodes$SizedCollectorTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$SizedCollectorTask$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$SizedCollectorTask$OfRef.class",
    "super": "Ljava/util/stream/Nodes$SizedCollectorTask;",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/PipelineHelper;[Ljava/lang/Object;)V","<init>(Ljava/util/stream/Nodes$SizedCollectorTask$OfRef;Ljava/util/Spliterator;JJ)V","accept(Ljava/lang/Object;)V","makeChild(Ljava/util/Spliterator;JJ)Ljava/util/stream/Nodes$SizedCollectorTask$OfRef;","makeChild(Ljava/util/Spliterator;JJ)Ljava/util/stream/Nodes$SizedCollectorTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$SizedCollectorTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$SizedCollectorTask.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/PipelineHelper;I)V","<init>(Ljava/util/stream/Nodes$SizedCollectorTask;Ljava/util/Spliterator;JJI)V","begin(J)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$SpinedNodeBuilder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$SpinedNodeBuilder.class",
    "super": "Ljava/util/stream/SpinedBuffer;",
    "interfaces": ["Ljava/util/stream/Node;","Ljava/util/stream/Node$Builder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","accept(Ljava/lang/Object;)V","asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","begin(J)V","build()Ljava/util/stream/Node;","copyInto([Ljava/lang/Object;I)V","end()V","forEach(Ljava/util/function/Consumer;)V","spliterator()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ToArrayTask$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ToArrayTask$OfInt.class",
    "super": "Ljava/util/stream/Nodes$ToArrayTask$OfPrimitive;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfInt;[II)V"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ToArrayTask$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ToArrayTask$OfPrimitive.class",
    "super": "Ljava/util/stream/Nodes$ToArrayTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node$OfPrimitive;Ljava/lang/Object;I)V","<init>(Ljava/util/stream/Nodes$ToArrayTask$OfPrimitive;Ljava/util/stream/Node$OfPrimitive;I)V","copyNodeToArray()V","makeChild(II)Ljava/util/stream/Nodes$ToArrayTask$OfPrimitive;","makeChild(II)Ljava/util/stream/Nodes$ToArrayTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ToArrayTask$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ToArrayTask$OfRef.class",
    "super": "Ljava/util/stream/Nodes$ToArrayTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;[Ljava/lang/Object;I)V","<init>(Ljava/util/stream/Nodes$ToArrayTask$OfRef;Ljava/util/stream/Node;I)V","copyNodeToArray()V","makeChild(II)Ljava/util/stream/Nodes$ToArrayTask$OfRef;","makeChild(II)Ljava/util/stream/Nodes$ToArrayTask;"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes$ToArrayTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes$ToArrayTask.class",
    "super": "Ljava/util/concurrent/CountedCompleter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Node;I)V","<init>(Ljava/util/stream/Nodes$ToArrayTask;Ljava/util/stream/Node;I)V","compute()V"]
  }
,
  {
    "className": "Ljava/util/stream/Nodes;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Nodes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["builder()Ljava/util/stream/Node$Builder;","builder(JLjava/util/function/IntFunction;)Ljava/util/stream/Node$Builder;","castingArray()Ljava/util/function/IntFunction;","collect(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;ZLjava/util/function/IntFunction;)Ljava/util/stream/Node;","collectInt(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Z)Ljava/util/stream/Node$OfInt;","conc(Ljava/util/stream/StreamShape;Ljava/util/stream/Node;Ljava/util/stream/Node;)Ljava/util/stream/Node;","doubleBuilder()Ljava/util/stream/Node$Builder$OfDouble;","doubleBuilder(J)Ljava/util/stream/Node$Builder$OfDouble;","emptyNode(Ljava/util/stream/StreamShape;)Ljava/util/stream/Node;","flatten(Ljava/util/stream/Node;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","flattenInt(Ljava/util/stream/Node$OfInt;)Ljava/util/stream/Node$OfInt;","intBuilder()Ljava/util/stream/Node$Builder$OfInt;","intBuilder(J)Ljava/util/stream/Node$Builder$OfInt;","lambda$castingArray$0(I)[Ljava/lang/Object;","longBuilder()Ljava/util/stream/Node$Builder$OfLong;","longBuilder(J)Ljava/util/stream/Node$Builder$OfLong;","node(Ljava/util/Collection;)Ljava/util/stream/Node;","node([I)Ljava/util/stream/Node$OfInt;","node([Ljava/lang/Object;)Ljava/util/stream/Node;"]
  }
,
  {
    "className": "Ljava/util/stream/PipelineHelper;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/PipelineHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$3;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$3.class",
    "super": "Ljava/util/stream/ReduceOps$ReduceOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/StreamShape;Ljava/util/function/BinaryOperator;Ljava/util/function/BiConsumer;Ljava/util/function/Supplier;Ljava/util/stream/Collector;)V","getOpFlags()I","makeSink()Ljava/util/stream/ReduceOps$3ReducingSink;","makeSink()Ljava/util/stream/ReduceOps$AccumulatingSink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$3ReducingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$3ReducingSink.class",
    "super": "Ljava/util/stream/ReduceOps$Box;",
    "interfaces": ["Ljava/util/stream/ReduceOps$AccumulatingSink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;)V","accept(Ljava/lang/Object;)V","begin(J)V","combine(Ljava/util/stream/ReduceOps$3ReducingSink;)V","combine(Ljava/util/stream/ReduceOps$AccumulatingSink;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$4;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$4.class",
    "super": "Ljava/util/stream/ReduceOps$ReduceOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/StreamShape;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Ljava/util/function/Supplier;)V","makeSink()Ljava/util/stream/ReduceOps$4ReducingSink;","makeSink()Ljava/util/stream/ReduceOps$AccumulatingSink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$4ReducingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$4ReducingSink.class",
    "super": "Ljava/util/stream/ReduceOps$Box;",
    "interfaces": ["Ljava/util/stream/ReduceOps$AccumulatingSink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V","accept(Ljava/lang/Object;)V","begin(J)V","combine(Ljava/util/stream/ReduceOps$4ReducingSink;)V","combine(Ljava/util/stream/ReduceOps$AccumulatingSink;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$5ReducingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$5ReducingSink.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/ReduceOps$AccumulatingSink;","Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/util/function/IntBinaryOperator;)V","accept(I)V","begin(J)V","combine(Ljava/util/stream/ReduceOps$5ReducingSink;)V","combine(Ljava/util/stream/ReduceOps$AccumulatingSink;)V","get()Ljava/lang/Integer;","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$6;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$6.class",
    "super": "Ljava/util/stream/ReduceOps$ReduceOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/StreamShape;Ljava/util/function/IntBinaryOperator;I)V","makeSink()Ljava/util/stream/ReduceOps$5ReducingSink;","makeSink()Ljava/util/stream/ReduceOps$AccumulatingSink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$AccumulatingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$AccumulatingSink.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/TerminalSink;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$Box;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$Box.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$ReduceOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$ReduceOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/TerminalOp;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/StreamShape;)V","evaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;","evaluateSequential(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps$ReduceTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps$ReduceTask.class",
    "super": "Ljava/util/stream/AbstractTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReduceOps$ReduceOp;Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)V","<init>(Ljava/util/stream/ReduceOps$ReduceTask;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Object;","doLeaf()Ljava/util/stream/ReduceOps$AccumulatingSink;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/ReduceOps$ReduceTask;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReduceOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReduceOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["makeInt(ILjava/util/function/IntBinaryOperator;)Ljava/util/stream/TerminalOp;","makeRef(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/util/stream/TerminalOp;","makeRef(Ljava/util/stream/Collector;)Ljava/util/stream/TerminalOp;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$2$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$2$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline$2;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V","begin(J)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$2;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$2.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/Predicate;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$3$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$3$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline$3;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$3;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$3.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/Function;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$4$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$4$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline$4;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$4;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$4.class",
    "super": "Ljava/util/stream/IntPipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/ToIntFunction;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$7$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$7$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline$7;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V","begin(J)V","cancellationRequested()Z"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$7;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$7.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatelessOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/ReferencePipeline;Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/Function;)V","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$Head;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$Head.class",
    "super": "Ljava/util/stream/ReferencePipeline;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;IZ)V","forEach(Ljava/util/function/Consumer;)V","opIsStateful()Z","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$StatefulOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$StatefulOp.class",
    "super": "Ljava/util/stream/ReferencePipeline;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;I)V","opIsStateful()Z"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline$StatelessOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline$StatelessOp.class",
    "super": "Ljava/util/stream/ReferencePipeline;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;I)V","opIsStateful()Z"]
  }
,
  {
    "className": "Ljava/util/stream/ReferencePipeline;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/ReferencePipeline.class",
    "super": "Ljava/util/stream/AbstractPipeline;",
    "interfaces": ["Ljava/util/stream/Stream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;IZ)V","<init>(Ljava/util/stream/AbstractPipeline;I)V","collect(Ljava/util/stream/Collector;)Ljava/lang/Object;","distinct()Ljava/util/stream/Stream;","dropWhile(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;","evaluateToNode(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;ZLjava/util/function/IntFunction;)Ljava/util/stream/Node;","filter(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;","findFirst()Ljava/util/Optional;","flatMap(Ljava/util/function/Function;)Ljava/util/stream/Stream;","forEach(Ljava/util/function/Consumer;)V","forEachWithCancel(Ljava/util/Spliterator;Ljava/util/stream/Sink;)Z","getOutputShape()Ljava/util/stream/StreamShape;","iterator()Ljava/util/Iterator;","lambda$collect$1(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V","lambda$toArray$0(I)[Ljava/lang/Object;","lazySpliterator(Ljava/util/function/Supplier;)Ljava/util/Spliterator;","limit(J)Ljava/util/stream/Stream;","makeNodeBuilder(JLjava/util/function/IntFunction;)Ljava/util/stream/Node$Builder;","map(Ljava/util/function/Function;)Ljava/util/stream/Stream;","mapToInt(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;","sorted(Ljava/util/Comparator;)Ljava/util/stream/Stream;","toArray()[Ljava/lang/Object;","toArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","wrap(Ljava/util/stream/PipelineHelper;Ljava/util/function/Supplier;Z)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Sink$ChainedInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink$ChainedInt.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Sink$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Sink;)V","begin(J)V","cancellationRequested()Z","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/Sink$ChainedReference;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink$ChainedReference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Sink;)V","begin(J)V","cancellationRequested()Z","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/Sink$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink$OfDouble.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;","Ljava/util/function/DoubleConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["accept(Ljava/lang/Double;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Sink$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink$OfInt.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;","Ljava/util/function/IntConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["accept(Ljava/lang/Integer;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Sink$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink$OfLong.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;","Ljava/util/function/LongConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["accept(Ljava/lang/Long;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Sink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Sink.class",
    "super": "null",
    "interfaces": ["Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["accept(I)V","begin(J)V","cancellationRequested()Z","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/SliceOps$1$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SliceOps$1$1.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/SliceOps$1;Ljava/util/stream/Sink;)V","accept(Ljava/lang/Object;)V","begin(J)V","cancellationRequested()Z"]
  }
,
  {
    "className": "Ljava/util/stream/SliceOps$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SliceOps$1.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatefulOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;IJJ)V","opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","opEvaluateParallelLazy(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/Spliterator;","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;","unorderedSkipLimitSpliterator(Ljava/util/Spliterator;JJJ)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/SliceOps$5;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SliceOps$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/SliceOps$SliceTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SliceOps$SliceTask.class",
    "super": "Ljava/util/stream/AbstractShortCircuitTask;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;JJ)V","<init>(Ljava/util/stream/SliceOps$SliceTask;Ljava/util/Spliterator;)V","cancel()V","completedSize(J)J","doLeaf()Ljava/lang/Object;","doLeaf()Ljava/util/stream/Node;","doTruncate(Ljava/util/stream/Node;)Ljava/util/stream/Node;","getEmptyResult()Ljava/lang/Object;","getEmptyResult()Ljava/util/stream/Node;","isLeftCompleted(J)Z","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/SliceOps$SliceTask;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/SliceOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SliceOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["calcSize(JJJ)J","calcSliceFence(JJ)J","flags(J)I","makeRef(Ljava/util/stream/AbstractPipeline;JJ)Ljava/util/stream/Stream;","sliceSpliterator(Ljava/util/stream/StreamShape;Ljava/util/Spliterator;JJ)Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/SortedOps$AbstractRefSortingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SortedOps$AbstractRefSortingSink.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Sink;Ljava/util/Comparator;)V","cancellationRequested()Z"]
  }
,
  {
    "className": "Ljava/util/stream/SortedOps$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SortedOps$OfRef.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatefulOp;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/Comparator;)V","opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;"]
  }
,
  {
    "className": "Ljava/util/stream/SortedOps$RefSortingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SortedOps$RefSortingSink.class",
    "super": "Ljava/util/stream/SortedOps$AbstractRefSortingSink;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Sink;Ljava/util/Comparator;)V","accept(Ljava/lang/Object;)V","begin(J)V","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/SortedOps$SizedRefSortingSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SortedOps$SizedRefSortingSink.class",
    "super": "Ljava/util/stream/SortedOps$AbstractRefSortingSink;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/Sink;Ljava/util/Comparator;)V","accept(Ljava/lang/Object;)V","begin(J)V","end()V"]
  }
,
  {
    "className": "Ljava/util/stream/SortedOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SortedOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["makeRef(Ljava/util/stream/AbstractPipeline;Ljava/util/Comparator;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$1Splitr;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$1Splitr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/SpinedBuffer;IIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfDouble$1Splitr;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfDouble$1Splitr.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/SpinedBuffer$OfDouble;IIII)V","arrayForOne(Ljava/lang/Object;ILjava/lang/Object;)V","arrayForOne([DILjava/util/function/DoubleConsumer;)V","arraySpliterator(Ljava/lang/Object;II)Ljava/util/Spliterator$OfPrimitive;","arraySpliterator([DII)Ljava/util/Spliterator$OfDouble;","forEachRemaining(Ljava/util/function/DoubleConsumer;)V","newSpliterator(IIII)Ljava/util/Spliterator$OfPrimitive;","newSpliterator(IIII)Ljava/util/stream/SpinedBuffer$OfDouble$1Splitr;","tryAdvance(Ljava/util/function/DoubleConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfDouble.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive;",
    "interfaces": ["Ljava/util/function/DoubleConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(D)V","arrayForEach(Ljava/lang/Object;IILjava/lang/Object;)V","arrayForEach([DIILjava/util/function/DoubleConsumer;)V","arrayLength(Ljava/lang/Object;)I","arrayLength([D)I","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","iterator()Ljava/util/PrimitiveIterator$OfDouble;","newArray(I)Ljava/lang/Object;","newArray(I)[D","newArrayArray(I)[Ljava/lang/Object;","newArrayArray(I)[[D","spliterator()Ljava/util/Spliterator$OfDouble;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfInt$1Splitr;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfInt$1Splitr.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/SpinedBuffer$OfInt;IIII)V","arrayForOne(Ljava/lang/Object;ILjava/lang/Object;)V","arrayForOne([IILjava/util/function/IntConsumer;)V","arraySpliterator(Ljava/lang/Object;II)Ljava/util/Spliterator$OfPrimitive;","arraySpliterator([III)Ljava/util/Spliterator$OfInt;","forEachRemaining(Ljava/util/function/IntConsumer;)V","newSpliterator(IIII)Ljava/util/Spliterator$OfPrimitive;","newSpliterator(IIII)Ljava/util/stream/SpinedBuffer$OfInt$1Splitr;","tryAdvance(Ljava/util/function/IntConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfInt.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive;",
    "interfaces": ["Ljava/util/function/IntConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(I)V","arrayForEach(Ljava/lang/Object;IILjava/lang/Object;)V","arrayForEach([IIILjava/util/function/IntConsumer;)V","arrayLength(Ljava/lang/Object;)I","arrayLength([I)I","forEach(Ljava/util/function/Consumer;)V","get(J)I","iterator()Ljava/util/Iterator;","iterator()Ljava/util/PrimitiveIterator$OfInt;","newArray(I)Ljava/lang/Object;","newArray(I)[I","newArrayArray(I)[Ljava/lang/Object;","newArrayArray(I)[[I","spliterator()Ljava/util/Spliterator$OfInt;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfLong$1Splitr;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfLong$1Splitr.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/SpinedBuffer$OfLong;IIII)V","arrayForOne(Ljava/lang/Object;ILjava/lang/Object;)V","arrayForOne([JILjava/util/function/LongConsumer;)V","arraySpliterator(Ljava/lang/Object;II)Ljava/util/Spliterator$OfPrimitive;","arraySpliterator([JII)Ljava/util/Spliterator$OfLong;","forEachRemaining(Ljava/util/function/LongConsumer;)V","newSpliterator(IIII)Ljava/util/Spliterator$OfPrimitive;","newSpliterator(IIII)Ljava/util/stream/SpinedBuffer$OfLong$1Splitr;","tryAdvance(Ljava/util/function/LongConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfLong.class",
    "super": "Ljava/util/stream/SpinedBuffer$OfPrimitive;",
    "interfaces": ["Ljava/util/function/LongConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(J)V","arrayForEach(Ljava/lang/Object;IILjava/lang/Object;)V","arrayForEach([JIILjava/util/function/LongConsumer;)V","arrayLength(Ljava/lang/Object;)I","arrayLength([J)I","forEach(Ljava/util/function/Consumer;)V","iterator()Ljava/util/Iterator;","iterator()Ljava/util/PrimitiveIterator$OfLong;","newArray(I)Ljava/lang/Object;","newArray(I)[J","newArrayArray(I)[Ljava/lang/Object;","newArrayArray(I)[[J","spliterator()Ljava/util/Spliterator$OfLong;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfPrimitive$BaseSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/SpinedBuffer$OfPrimitive;IIII)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","tryAdvance(Ljava/lang/Object;)Z","trySplit()Ljava/util/Spliterator$OfPrimitive;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer$OfPrimitive.class",
    "super": "Ljava/util/stream/AbstractSpinedBuffer;",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","asPrimitiveArray()Ljava/lang/Object;","capacity()J","chunkFor(J)I","clear()V","copyInto(Ljava/lang/Object;I)V","ensureCapacity(J)V","forEach(Ljava/lang/Object;)V","increaseCapacity()V","inflateSpine()V","preAccept()V"]
  }
,
  {
    "className": "Ljava/util/stream/SpinedBuffer;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/SpinedBuffer.class",
    "super": "Ljava/util/stream/AbstractSpinedBuffer;",
    "interfaces": ["Ljava/util/function/Consumer;","Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(Ljava/lang/Object;)V","asArray(Ljava/util/function/IntFunction;)[Ljava/lang/Object;","capacity()J","clear()V","copyInto([Ljava/lang/Object;I)V","ensureCapacity(J)V","forEach(Ljava/util/function/Consumer;)V","get(J)Ljava/lang/Object;","increaseCapacity()V","inflateSpine()V","iterator()Ljava/util/Iterator;","spliterator()Ljava/util/Spliterator;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/stream/Stream$Builder;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Stream$Builder.class",
    "super": "null",
    "interfaces": ["Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Stream;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Stream.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/BaseStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["concat(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;","empty()Ljava/util/stream/Stream;","of(Ljava/lang/Object;)Ljava/util/stream/Stream;","of([Ljava/lang/Object;)Ljava/util/stream/Stream;","ofNullable(Ljava/lang/Object;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamOpFlag;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamOpFlag.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["combineOpFlags(II)I","fromCharacteristics(Ljava/util/Spliterator;)I","getMask(I)I","isKnown(I)Z","isPreserved(I)Z","toCharacteristics(I)I","toStreamFlags(I)I"]
  }
,
  {
    "className": "Ljava/util/stream/StreamShape;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamShape.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$AbstractWrappingSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Z)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/function/Supplier;Z)V","characteristics()I","doAdvance()Z","estimateSize()J","fillBuffer()Z","getComparator()Ljava/util/Comparator;","getExactSizeIfKnown()J","init()V","toString()Ljava/lang/String;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$ArrayBuffer$OfRef.class",
    "super": "Ljava/util/stream/StreamSpliterators$ArrayBuffer;",
    "interfaces": ["Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","accept(Ljava/lang/Object;)V","forEach(Ljava/util/function/Consumer;J)V"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$ArrayBuffer;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$ArrayBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","reset()V"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$DelegatingSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","get()Ljava/util/Spliterator;","getComparator()Ljava/util/Comparator;","getExactSizeIfKnown()J","toString()Ljava/lang/String;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$DistinctSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$DistinctSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;","Ljava/util/function/Consumer;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;)V","<init>(Ljava/util/Spliterator;Ljava/util/concurrent/ConcurrentHashMap;)V","accept(Ljava/lang/Object;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","lambda$forEachRemaining$0(Ljava/util/function/Consumer;Ljava/lang/Object;)V","mapNull(Ljava/lang/Object;)Ljava/lang/Object;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$IntWrappingSpliterator.class",
    "super": "Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Z)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/function/Supplier;Z)V","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","initPartialTraversalState()V","lambda$initPartialTraversalState$0()Z","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/IntConsumer;)Z","trySplit()Ljava/util/Spliterator$OfInt;","trySplit()Ljava/util/Spliterator;","wrap(Ljava/util/Spliterator;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfDouble;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator$OfDouble.class",
    "super": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfDouble;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfDouble;JJ)V","<init>(Ljava/util/Spliterator$OfDouble;JJJJ)V","emptyConsumer()Ljava/lang/Object;","emptyConsumer()Ljava/util/function/DoubleConsumer;","forEachRemaining(Ljava/util/function/DoubleConsumer;)V","lambda$emptyConsumer$0(D)V","makeSpliterator(Ljava/util/Spliterator$OfDouble;JJJJ)Ljava/util/Spliterator$OfDouble;","makeSpliterator(Ljava/util/Spliterator;JJJJ)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/DoubleConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfInt;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator$OfInt.class",
    "super": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfInt;JJ)V","<init>(Ljava/util/Spliterator$OfInt;JJJJ)V","emptyConsumer()Ljava/lang/Object;","emptyConsumer()Ljava/util/function/IntConsumer;","forEachRemaining(Ljava/util/function/IntConsumer;)V","lambda$emptyConsumer$0(I)V","makeSpliterator(Ljava/util/Spliterator$OfInt;JJJJ)Ljava/util/Spliterator$OfInt;","makeSpliterator(Ljava/util/Spliterator;JJJJ)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/IntConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfLong;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator$OfLong.class",
    "super": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;",
    "interfaces": ["Ljava/util/Spliterator$OfLong;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfLong;JJ)V","<init>(Ljava/util/Spliterator$OfLong;JJJJ)V","emptyConsumer()Ljava/lang/Object;","emptyConsumer()Ljava/util/function/LongConsumer;","forEachRemaining(Ljava/util/function/LongConsumer;)V","lambda$emptyConsumer$0(J)V","makeSpliterator(Ljava/util/Spliterator$OfLong;JJJJ)Ljava/util/Spliterator$OfLong;","makeSpliterator(Ljava/util/Spliterator;JJJJ)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/LongConsumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive.class",
    "super": "Ljava/util/stream/StreamSpliterators$SliceSpliterator;",
    "interfaces": ["Ljava/util/Spliterator$OfPrimitive;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator$OfPrimitive;JJ)V","<init>(Ljava/util/Spliterator$OfPrimitive;JJJJ)V","forEachRemaining(Ljava/lang/Object;)V","tryAdvance(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator$OfRef.class",
    "super": "Ljava/util/stream/StreamSpliterators$SliceSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;JJ)V","<init>(Ljava/util/Spliterator;JJJJ)V","forEachRemaining(Ljava/util/function/Consumer;)V","lambda$forEachRemaining$1(Ljava/lang/Object;)V","lambda$tryAdvance$0(Ljava/lang/Object;)V","makeSpliterator(Ljava/util/Spliterator;JJJJ)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$SliceSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$SliceSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;JJJJ)V","characteristics()I","estimateSize()J","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef.class",
    "super": "Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator;",
    "interfaces": ["Ljava/util/Spliterator;","Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;JJ)V","<init>(Ljava/util/Spliterator;Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef;)V","accept(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/Consumer;)V","makeSpliterator(Ljava/util/Spliterator;)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$PermitStatus;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$UnorderedSliceSpliterator$PermitStatus.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$UnorderedSliceSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;JJ)V","<init>(Ljava/util/Spliterator;Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator;)V","acquirePermits(J)J","characteristics()I","estimateSize()J","permitStatus()Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$PermitStatus;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators$WrappingSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators$WrappingSpliterator.class",
    "super": "Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Z)V","<init>(Ljava/util/stream/PipelineHelper;Ljava/util/function/Supplier;Z)V","forEachRemaining(Ljava/util/function/Consumer;)V","initPartialTraversalState()V","lambda$initPartialTraversalState$0()Z","tryAdvance(Ljava/util/function/Consumer;)Z","wrap(Ljava/util/Spliterator;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;","wrap(Ljava/util/Spliterator;)Ljava/util/stream/StreamSpliterators$WrappingSpliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/StreamSpliterators;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSpliterators.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/StreamSupport;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/StreamSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["intStream(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;","stream(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$1;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;Ljava/lang/Runnable;)V","run()V"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$2;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/BaseStream;Ljava/util/stream/BaseStream;)V","run()V"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$AbstractStreamBuilderImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$AbstractStreamBuilderImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","characteristics()I","estimateSize()J","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$ConcatSpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$ConcatSpliterator$OfRef.class",
    "super": "Ljava/util/stream/Streams$ConcatSpliterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/Spliterator;)V"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$ConcatSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$ConcatSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/Spliterator;)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/util/function/Consumer;)V","getComparator()Ljava/util/Comparator;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$RangeIntSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$RangeIntSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator$OfInt;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V","<init>(IIZ)V","characteristics()I","estimateSize()J","forEachRemaining(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/IntConsumer;)V","getComparator()Ljava/util/Comparator;","splitPoint(J)I","tryAdvance(Ljava/lang/Object;)Z","tryAdvance(Ljava/util/function/IntConsumer;)Z","trySplit()Ljava/util/Spliterator$OfInt;","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/Streams$StreamBuilderImpl;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams$StreamBuilderImpl.class",
    "super": "Ljava/util/stream/Streams$AbstractStreamBuilderImpl;",
    "interfaces": ["Ljava/util/stream/Stream$Builder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","accept(Ljava/lang/Object;)V","forEachRemaining(Ljava/util/function/Consumer;)V","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/Streams;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Streams.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["composeWithExceptions(Ljava/lang/Runnable;Ljava/lang/Runnable;)Ljava/lang/Runnable;","composedClose(Ljava/util/stream/BaseStream;Ljava/util/stream/BaseStream;)Ljava/lang/Runnable;"]
  }
,
  {
    "className": "Ljava/util/stream/TerminalOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/TerminalOp.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getOpFlags()I"]
  }
,
  {
    "className": "Ljava/util/stream/TerminalSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/TerminalSink.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;","Ljava/util/function/Supplier;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/Tripwire;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/Tripwire.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$1Op$1OpSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$1Op$1OpSink.class",
    "super": "Ljava/util/stream/Sink$ChainedReference;",
    "interfaces": ["Ljava/util/stream/WhileOps$DropWhileSink;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/WhileOps$1Op;Ljava/util/stream/Sink;Z)V","accept(Ljava/lang/Object;)V","getDropCount()J"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$1Op;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$1Op.class",
    "super": "Ljava/util/stream/ReferencePipeline$StatefulOp;",
    "interfaces": ["Ljava/util/stream/WhileOps$DropWhileOp;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/StreamShape;ILjava/util/function/Predicate;)V","opEvaluateParallel(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)Ljava/util/stream/Node;","opEvaluateParallelLazy(Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;)Ljava/util/Spliterator;","opWrapSink(ILjava/util/stream/Sink;)Ljava/util/stream/Sink;","opWrapSink(Ljava/util/stream/Sink;Z)Ljava/util/stream/WhileOps$DropWhileSink;"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$DropWhileOp;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$DropWhileOp.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$DropWhileSink;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$DropWhileSink.class",
    "super": "null",
    "interfaces": ["Ljava/util/stream/Sink;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$DropWhileTask;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$DropWhileTask.class",
    "super": "Ljava/util/stream/AbstractTask;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/stream/AbstractPipeline;Ljava/util/stream/PipelineHelper;Ljava/util/Spliterator;Ljava/util/function/IntFunction;)V","<init>(Ljava/util/stream/WhileOps$DropWhileTask;Ljava/util/Spliterator;)V","doLeaf()Ljava/lang/Object;","doLeaf()Ljava/util/stream/Node;","doTruncate(Ljava/util/stream/Node;)Ljava/util/stream/Node;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/AbstractTask;","makeChild(Ljava/util/Spliterator;)Ljava/util/stream/WhileOps$DropWhileTask;","merge()Ljava/util/stream/Node;","onCompletion(Ljava/util/concurrent/CountedCompleter;)V"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping.class",
    "super": "Ljava/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef$Dropping;)V","<init>(Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V","makeSpliterator(Ljava/util/Spliterator;)Ljava/util/Spliterator;","tryAdvance(Ljava/util/function/Consumer;)Z"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef.class",
    "super": "Ljava/util/stream/WhileOps$UnorderedWhileSpliterator;",
    "interfaces": ["Ljava/util/function/Consumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/WhileOps$UnorderedWhileSpliterator$OfRef;)V","<init>(Ljava/util/Spliterator;ZLjava/util/function/Predicate;)V","accept(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps$UnorderedWhileSpliterator;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps$UnorderedWhileSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Spliterator;Ljava/util/stream/WhileOps$UnorderedWhileSpliterator;)V","<init>(Ljava/util/Spliterator;Z)V","characteristics()I","checkCancelOnCount()Z","estimateSize()J","getComparator()Ljava/util/Comparator;","getExactSizeIfKnown()J","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Ljava/util/stream/WhileOps;",
    "module": "java.base",
    "source": "/java.base/java/util/stream/WhileOps.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["makeDropWhileRef(Ljava/util/stream/AbstractPipeline;Ljava/util/function/Predicate;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Ljava/util/zip/CRC32;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/CRC32.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/zip/Checksum;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","getValue()J","update([BII)V","updateBytes(I[BII)I","updateBytes0(I[BII)I","updateBytesCheck([BII)V"]
  }
,
  {
    "className": "Ljava/util/zip/Checksum;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/Checksum.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["update([B)V"]
  }
,
  {
    "className": "Ljava/util/zip/DataFormatException;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/DataFormatException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/zip/Inflater$InflaterZStreamRef$FinalizableZStreamRef;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/Inflater$InflaterZStreamRef$FinalizableZStreamRef.class",
    "super": "Ljava/util/zip/Inflater$InflaterZStreamRef;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/Inflater;J)V","clean()V"]
  }
,
  {
    "className": "Ljava/util/zip/Inflater$InflaterZStreamRef;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/Inflater$InflaterZStreamRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/Inflater;J)V","address()J","clean()V","get(Ljava/util/zip/Inflater;J)Ljava/util/zip/Inflater$InflaterZStreamRef;","run()V"]
  }
,
  {
    "className": "Ljava/util/zip/Inflater;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/Inflater.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Z)V","end()V","end(J)V","ensureOpen()V","finished()Z","getBytesWritten()J","inflate([BII)I","inflateBufferBytes(JJI[BII)J","inflateBytesBytes(J[BII[BII)J","init(Z)J","initIDs()V","needsDictionary()Z","needsInput()Z","reset()V","reset(J)V","setInput([B)V","setInput([BII)V"]
  }
,
  {
    "className": "Ljava/util/zip/InflaterInputStream;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/InflaterInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V","<init>(Ljava/io/InputStream;Ljava/util/zip/Inflater;I)V","available()I","close()V","ensureOpen()V","fill()V","mark(I)V","markSupported()Z","read()I","read([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Ljava/util/zip/ZipCoder$UTF8;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipCoder$UTF8.class",
    "super": "Ljava/util/zip/ZipCoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getBytes(Ljava/lang/String;)[B","isUTF8()Z","toString([BII)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipCoder;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipCoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","decoder()Ljava/nio/charset/CharsetDecoder;","encoder()Ljava/nio/charset/CharsetEncoder;","get(Ljava/nio/charset/Charset;)Ljava/util/zip/ZipCoder;","getBytes(Ljava/lang/String;)[B","getBytesUTF8(Ljava/lang/String;)[B","isUTF8()Z","toString([BII)Ljava/lang/String;","toStringUTF8([BII)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipConstants;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljava/util/zip/ZipEntry;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/zip/ZipConstants;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","clone()Ljava/lang/Object;","getSize()J","hashCode()I","setExtra0([BZZ)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipException;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$1;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaUtilZipFileAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["entries(Ljava/util/zip/ZipFile;Ljava/util/function/Function;)Ljava/util/Enumeration;","getEntry(Ljava/util/zip/ZipFile;Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/jar/JarEntry;","getMetaInfEntryNames(Ljava/util/zip/ZipFile;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$CleanableResource$FinalizableResource;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$CleanableResource$FinalizableResource.class",
    "super": "Ljava/util/zip/ZipFile$CleanableResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/ZipFile;Ljava/io/File;I)V","clean()V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$CleanableResource;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$CleanableResource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;ILjava/util/zip/ZipCoder;)V","<init>(Ljava/util/zip/ZipFile;Ljava/io/File;I)V","clean()V","get(Ljava/util/zip/ZipFile;Ljava/io/File;I)Ljava/util/zip/ZipFile$CleanableResource;","getInflater()Ljava/util/zip/Inflater;","releaseInflater(Ljava/util/zip/Inflater;)V","run()V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$InflaterCleanupAction;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$InflaterCleanupAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/Inflater;Ljava/util/zip/ZipFile$CleanableResource;)V","run()V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$Source$End;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$Source$End.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$Source$Key;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$Source$Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;Ljava/nio/file/attribute/BasicFileAttributes;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$Source;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$Source.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/zip/ZipFile$Source$Key;ZLjava/util/zip/ZipCoder;)V","addEntry(IIII)I","checkEncoding(Ljava/util/zip/ZipCoder;[BII)V","checkUTF8([BII)V","close()V","countCENHeaders([BI)I","findEND()Ljava/util/zip/ZipFile$Source$End;","get(Ljava/io/File;ZLjava/util/zip/ZipCoder;)Ljava/util/zip/ZipFile$Source;","getEntryHash(I)I","getEntryNext(I)I","getEntryPos(I)I","getEntryPos([BZ)I","hashN([BII)I","hash_append(IB)I","initCEN(ILjava/util/zip/ZipCoder;)V","isMetaName([BII)Z","readAt([BIIJ)I","readFullyAt([BIIJ)I","release(Ljava/util/zip/ZipFile$Source;)V","zerror(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$ZipEntryIterator;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$ZipEntryIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;","Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/ZipFile;ILjava/util/function/Function;)V","hasMoreElements()Z","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/zip/ZipEntry;","nextElement()Ljava/lang/Object;","nextElement()Ljava/util/zip/ZipEntry;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$ZipFileInflaterInputStream;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$ZipFileInflaterInputStream.class",
    "super": "Ljava/util/zip/InflaterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipFile$ZipFileInputStream;Ljava/util/zip/ZipFile$CleanableResource;I)V","<init>(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipFile$ZipFileInputStream;Ljava/util/zip/ZipFile$CleanableResource;Ljava/util/zip/Inflater;I)V","available()I","close()V","fill()V"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile$ZipFileInputStream;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile$ZipFileInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/zip/ZipFile;[BI)V","available()I","checkZIP64([BI)V","close()V","initDataOffset()J","read()I","read([BII)I","size()J","skip(J)J"]
  }
,
  {
    "className": "Ljava/util/zip/ZipFile;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipFile.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/zip/ZipConstants;","Ljava/io/Closeable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/File;I)V","<init>(Ljava/io/File;ILjava/nio/charset/Charset;)V","close()V","ensureOpen()V","ensureOpenOrZipException()V","entries(Ljava/util/function/Function;)Ljava/util/Enumeration;","getEntry(Ljava/lang/String;Ljava/util/function/Function;)Ljava/util/zip/ZipEntry;","getInputStream(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;","getMetaInfEntryNames()[Ljava/lang/String;","getZipEntry(Ljava/lang/String;[BILjava/util/function/Function;)Ljava/util/zip/ZipEntry;"]
  }
,
  {
    "className": "Ljava/util/zip/ZipUtils;",
    "module": "java.base",
    "source": "/java.base/java/util/zip/ZipUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["CENCOM([BI)I","CENCRC([BI)J","CENEXT([BI)I","CENFLG([BI)I","CENHOW([BI)I","CENLEN([BI)J","CENNAM([BI)I","CENOFF([BI)J","CENSIG([BI)J","CENSIZ([BI)J","CENTIM([BI)J","ENDCOM([B)I","ENDOFF([B)J","ENDSIZ([B)J","ENDTOT([B)I","GETSIG([B)J","LG([BI)J","LL([BI)J","LOCEXT([B)I","LOCNAM([B)I","LOCSIG([B)J","SH([BI)I","ZIP64_ENDOFF([B)J","ZIP64_ENDSIZ([B)J","ZIP64_ENDTOT([B)J","ZIP64_LOCOFF([B)J","get16([BI)I","get32([BI)J","get32S([BI)I","get64([BI)J","getBufferArray(Ljava/nio/ByteBuffer;)[B","getBufferOffset(Ljava/nio/ByteBuffer;)I","loadLibrary()V","unixTimeToFileTime(J)Ljava/nio/file/attribute/FileTime;","winTimeToFileTime(J)Ljava/nio/file/attribute/FileTime;"]
  }
,
  {
    "className": "Ljavax/annotation/Resource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/jakarta.annotation-api-1.3.5.jar!/javax/annotation/Resource.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/AEADBadTagException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/AEADBadTagException.class",
    "super": "Ljavax/crypto/BadPaddingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/crypto/BadPaddingException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/BadPaddingException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/crypto/Cipher$Transform;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/Cipher$Transform.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","matches(Ljava/lang/String;Ljava/lang/String;)Z","setModePadding(Ljavax/crypto/CipherSpi;)V","supports(Ljava/security/Provider$Service;Ljava/lang/String;Ljava/lang/String;)I","supportsMode(Ljava/security/Provider$Service;)I","supportsModePadding(Ljava/security/Provider$Service;)I","supportsPadding(Ljava/security/Provider$Service;)I"]
  }
,
  {
    "className": "Ljavax/crypto/Cipher;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/Cipher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljavax/crypto/CipherSpi;Ljava/lang/String;)V","<init>(Ljavax/crypto/CipherSpi;Ljava/security/Provider$Service;Ljava/util/Iterator;Ljava/lang/String;Ljava/util/List;)V","<init>(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V","checkCipherState()V","checkCryptoPerm(Ljavax/crypto/CipherSpi;Ljava/security/Key;)V","checkCryptoPerm(Ljavax/crypto/CipherSpi;Ljava/security/Key;Ljava/security/AlgorithmParameters;)V","checkCryptoPerm(Ljavax/crypto/CipherSpi;Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","checkOpmode(I)V","chooseFirstProvider()V","chooseProvider(IILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","doFinal([B)[B","doFinal([BII[BI)I","getAlgorithmParameterSpec(Ljava/security/AlgorithmParameters;)Ljava/security/spec/AlgorithmParameterSpec;","getConfiguredPermission(Ljava/lang/String;)Ljavax/crypto/CryptoPermission;","getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;","getTransform(Ljava/security/Provider$Service;Ljava/util/List;)Ljavax/crypto/Cipher$Transform;","getTransforms(Ljava/lang/String;)Ljava/util/List;","implInit(Ljavax/crypto/CipherSpi;IILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","init(ILjava/security/Key;)V","init(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V","init(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","init(ILjava/security/Key;Ljava/security/SecureRandom;)V","initCryptoPermission()V","passCryptoPermCheck(Ljavax/crypto/CipherSpi;Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)Z","tokenizeTransformation(Ljava/lang/String;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/crypto/CipherSpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/CipherSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/crypto/CryptoAllPermission;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/CryptoAllPermission.class",
    "super": "Ljavax/crypto/CryptoPermission;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","implies(Ljava/security/Permission;)Z","newPermissionCollection()Ljava/security/PermissionCollection;"]
  }
,
  {
    "className": "Ljavax/crypto/CryptoAllPermissionCollection;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/CryptoAllPermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljavax/crypto/CryptoPermission;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/CryptoPermission.class",
    "super": "Ljava/security/Permission;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/security/spec/AlgorithmParameterSpec;Ljava/lang/String;)V","equalObjects(Ljava/lang/Object;Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","getActions()Ljava/lang/String;","getExemptionMechanism()Ljava/lang/String;","hashCode()I","newPermissionCollection()Ljava/security/PermissionCollection;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/crypto/CryptoPermissionCollection;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/CryptoPermissionCollection.class",
    "super": "Ljava/security/PermissionCollection;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/security/Permission;)V","elements()Ljava/util/Enumeration;"]
  }
,
  {
    "className": "Ljavax/crypto/ExemptionMechanism;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/ExemptionMechanism.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V","getInstance(Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;","isCryptoAllowed(Ljava/security/Key;)Z"]
  }
,
  {
    "className": "Ljavax/crypto/ExemptionMechanismException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/ExemptionMechanismException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/ExemptionMechanismSpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/ExemptionMechanismSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/IllegalBlockSizeException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/IllegalBlockSizeException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/crypto/JceSecurity;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/JceSecurity.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["canUseProvider(Ljava/security/Provider;)Z","getCodeBase(Ljava/lang/Class;)Ljava/net/URL;","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Lsun/security/jca/GetInstance$Instance;","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Lsun/security/jca/GetInstance$Instance;","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/security/Provider;)Lsun/security/jca/GetInstance$Instance;","getVerificationResult(Ljava/security/Provider;)Ljava/lang/Exception;","isRestricted()Z","verifyProvider(Ljava/net/URL;Ljava/security/Provider;)V"]
  }
,
  {
    "className": "Ljavax/crypto/JceSecurityManager;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/JceSecurityManager.class",
    "super": "Ljava/lang/SecurityManager;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCryptoPermission(Ljava/lang/String;)Ljavax/crypto/CryptoPermission;","isCallerTrusted(Ljava/security/Provider;)Z"]
  }
,
  {
    "className": "Ljavax/crypto/KeyAgreementSpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/KeyAgreementSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/crypto/KeyGeneratorSpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/KeyGeneratorSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/crypto/Mac;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/Mac.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/Provider$Service;Ljava/util/Iterator;Ljava/lang/String;)V","<init>(Ljavax/crypto/MacSpi;Ljava/security/Provider;Ljava/lang/String;)V","chooseFirstProvider()V","chooseProvider(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","clone()Ljava/lang/Object;","doFinal()[B","doFinal([B)[B","doFinal([BI)V","getAlgorithm()Ljava/lang/String;","getInstance(Ljava/lang/String;)Ljavax/crypto/Mac;","getInstance(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Mac;","getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Mac;","getMacLength()I","init(Ljava/security/Key;)V","init(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","update(B)V","update([B)V"]
  }
,
  {
    "className": "Ljavax/crypto/MacSpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/MacSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/crypto/NoSuchPaddingException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/NoSuchPaddingException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/crypto/NullCipher;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/NullCipher.class",
    "super": "Ljavax/crypto/Cipher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/ProviderVerifier;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/ProviderVerifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isTrustedCryptoProvider(Ljava/security/Provider;)Z"]
  }
,
  {
    "className": "Ljavax/crypto/SealedObject;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/SealedObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljavax/crypto/SealedObject;)V","getExtObjectInputStream(Ljavax/crypto/Cipher;)Ljava/io/ObjectInputStream;","lambda$static$0(Ljavax/crypto/SealedObject;Ljavax/crypto/Cipher;)Ljava/io/ObjectInputStream;"]
  }
,
  {
    "className": "Ljavax/crypto/SecretKey;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/SecretKey.class",
    "super": "null",
    "interfaces": ["Ljava/security/Key;","Ljavax/security/auth/Destroyable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/SecretKeyFactory;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/SecretKeyFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","generateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","getInstance(Ljava/lang/String;)Ljavax/crypto/SecretKeyFactory;","getKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;","nextSpi(Ljavax/crypto/SecretKeyFactorySpi;)Ljavax/crypto/SecretKeyFactorySpi;"]
  }
,
  {
    "className": "Ljavax/crypto/SecretKeyFactorySpi;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/SecretKeyFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/crypto/ShortBufferException;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/ShortBufferException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/crypto/extObjectInputStream;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/extObjectInputStream.class",
    "super": "Ljava/io/ObjectInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljavax/crypto/interfaces/DHKey;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/interfaces/DHKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/interfaces/DHPrivateKey;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/interfaces/DHPrivateKey.class",
    "super": "null",
    "interfaces": ["Ljavax/crypto/interfaces/DHKey;","Ljava/security/PrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/interfaces/DHPublicKey;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/interfaces/DHPublicKey.class",
    "super": "null",
    "interfaces": ["Ljavax/crypto/interfaces/DHKey;","Ljava/security/PublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/interfaces/PBEKey;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/interfaces/PBEKey.class",
    "super": "null",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/spec/ChaCha20ParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/ChaCha20ParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/spec/DESKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/DESKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B)V","<init>([BI)V","getKey()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/DESedeKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/DESedeKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","<init>([BI)V","getKey()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/DHParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/DHParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;I)V","getG()Ljava/math/BigInteger;","getL()I","getP()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljavax/crypto/spec/DHPrivateKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/DHPrivateKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getP()Ljava/math/BigInteger;","getX()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljavax/crypto/spec/DHPublicKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/DHPublicKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getP()Ljava/math/BigInteger;","getY()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Ljavax/crypto/spec/GCMParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/GCMParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I[B)V","getIV()[B","getTLen()I","init(I[BII)V"]
  }
,
  {
    "className": "Ljavax/crypto/spec/IvParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/IvParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","<init>([BII)V","getIV()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/OAEPParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/OAEPParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/security/spec/AlgorithmParameterSpec;Ljavax/crypto/spec/PSource;)V","getDigestAlgorithm()Ljava/lang/String;","getMGFAlgorithm()Ljava/lang/String;","getMGFParameters()Ljava/security/spec/AlgorithmParameterSpec;","getPSource()Ljavax/crypto/spec/PSource;"]
  }
,
  {
    "className": "Ljavax/crypto/spec/PBEKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/PBEKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([C)V","<init>([C[BII)V","clearPassword()V","getIterationCount()I","getKeyLength()I","getPassword()[C","getSalt()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/PBEParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/PBEParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","<init>([BILjava/security/spec/AlgorithmParameterSpec;)V","getIterationCount()I","getParameterSpec()Ljava/security/spec/AlgorithmParameterSpec;","getSalt()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/PSource$PSpecified;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/PSource$PSpecified.class",
    "super": "Ljavax/crypto/spec/PSource;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B)V","getValue()[B"]
  }
,
  {
    "className": "Ljavax/crypto/spec/PSource;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/PSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getAlgorithm()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/crypto/spec/RC2ParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/RC2ParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(I[B)V","<init>(I[BI)V","equals(Ljava/lang/Object;)Z","getEffectiveKeyBits()I","getIV()[B","hashCode()I"]
  }
,
  {
    "className": "Ljavax/crypto/spec/RC5ParameterSpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/RC5ParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/crypto/spec/SecretKeySpec;",
    "module": "java.base",
    "source": "/java.base/javax/crypto/spec/SecretKeySpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/KeySpec;","Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BIILjava/lang/String;)V","<init>([BLjava/lang/String;)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I"]
  }
,
  {
    "className": "Ljavax/imageio/IIOException;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/IIOException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljavax/imageio/IIOParam;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/IIOParam.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getDestinationOffset()Ljava/awt/Point;","getDestinationType()Ljavax/imageio/ImageTypeSpecifier;","getSourceBands()[I","getSourceRegion()Ljava/awt/Rectangle;","getSourceXSubsampling()I","getSourceYSubsampling()I","getSubsamplingXOffset()I","getSubsamplingYOffset()I","setDestinationOffset(Ljava/awt/Point;)V","setSourceBands([I)V","setSourceRegion(Ljava/awt/Rectangle;)V","setSourceSubsampling(IIII)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageIO$CacheInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageIO$CacheInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getCacheDirectory()Ljava/io/File;","getHasPermission()Ljava/lang/Boolean;","getUseCache()Z","setHasPermission(Ljava/lang/Boolean;)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageIO$CanDecodeInputFilter;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageIO$CanDecodeInputFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/spi/ServiceRegistry$Filter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","filter(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljavax/imageio/ImageIO$ContainsFilter;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageIO$ContainsFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/spi/ServiceRegistry$Filter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;Ljava/lang/String;)V","filter(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljavax/imageio/ImageIO$ImageReaderIterator;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageIO$ImageReaderIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljavax/imageio/ImageReader;","remove()V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageIO;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageIO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.awt.AppContext.numAppContexts",
    "invokedMethods": ["<clinit>()V","contains([Ljava/lang/String;Ljava/lang/String;)Z","createImageInputStream(Ljava/lang/Object;)Ljavax/imageio/stream/ImageInputStream;","getCacheDirectory()Ljava/io/File;","getCacheInfo()Ljavax/imageio/ImageIO$CacheInfo;","getImageReaders(Ljava/lang/Object;)Ljava/util/Iterator;","getImageReadersByFormatName(Ljava/lang/String;)Ljava/util/Iterator;","getUseCache()Z","hasCachePermission()Z"]
  }
,
  {
    "className": "Ljavax/imageio/ImageReadParam;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageReadParam.class",
    "super": "Ljavax/imageio/IIOParam;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getDestination()Ljava/awt/image/BufferedImage;","getDestinationBands()[I","getSourceMaxProgressivePass()I","getSourceMinProgressivePass()I","setDestination(Ljava/awt/image/BufferedImage;)V","setDestinationBands([I)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageReader;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ImageReaderSpi;)V","abortRequested()Z","addIIOReadProgressListener(Ljavax/imageio/event/IIOReadProgressListener;)V","addIIOReadUpdateListener(Ljavax/imageio/event/IIOReadUpdateListener;)V","addIIOReadWarningListener(Ljavax/imageio/event/IIOReadWarningListener;)V","addToList(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;","checkReadParamBandSettings(Ljavax/imageio/ImageReadParam;II)V","clearAbortRequest()V","computeRegions(Ljavax/imageio/ImageReadParam;IILjava/awt/image/BufferedImage;Ljava/awt/Rectangle;Ljava/awt/Rectangle;)V","dispose()V","getDestination(Ljavax/imageio/ImageReadParam;Ljava/util/Iterator;II)Ljava/awt/image/BufferedImage;","getLocale()Ljava/util/Locale;","getRawImageType(I)Ljavax/imageio/ImageTypeSpecifier;","processImageComplete()V","processImageProgress(F)V","processImageStarted(I)V","processImageUpdate(Ljava/awt/image/BufferedImage;IIIIII[I)V","processPassComplete(Ljava/awt/image/BufferedImage;)V","processPassStarted(Ljava/awt/image/BufferedImage;IIIIIII[I)V","processReadAborted()V","processWarningOccurred(Ljava/lang/String;)V","processWarningOccurred(Ljava/lang/String;Ljava/lang/String;)V","setInput(Ljava/lang/Object;)V","setInput(Ljava/lang/Object;ZZ)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageTranscoder;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTranscoder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/ImageTypeSpecifier$Grayscale;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTypeSpecifier$Grayscale.class",
    "super": "Ljavax/imageio/ImageTypeSpecifier;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIZZZ)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageTypeSpecifier$Indexed;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTypeSpecifier$Indexed.class",
    "super": "Ljavax/imageio/ImageTypeSpecifier;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([B[B[B[BII)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageTypeSpecifier$Interleaved;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTypeSpecifier$Interleaved.class",
    "super": "Ljavax/imageio/ImageTypeSpecifier;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/color/ColorSpace;[IIZZ)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljavax/imageio/ImageTypeSpecifier$Packed;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTypeSpecifier$Packed.class",
    "super": "Ljavax/imageio/ImageTypeSpecifier;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/color/ColorSpace;IIIIIZ)V"]
  }
,
  {
    "className": "Ljavax/imageio/ImageTypeSpecifier;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageTypeSpecifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.color.ColorSpace.sRGBspace",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Ljava/awt/image/ColorModel;Ljava/awt/image/SampleModel;)V","<init>(Ljava/awt/image/RenderedImage;)V","createBufferedImage(II)Ljava/awt/image/BufferedImage;","createComponentCM(Ljava/awt/color/ColorSpace;IIZZ)Ljava/awt/image/ColorModel;","createFromBufferedImageType(I)Ljavax/imageio/ImageTypeSpecifier;","createGrayscale(IIZ)Ljavax/imageio/ImageTypeSpecifier;","createGrayscale(IIZZ)Ljavax/imageio/ImageTypeSpecifier;","createIndexed([B[B[B[BII)Ljavax/imageio/ImageTypeSpecifier;","createInterleaved(Ljava/awt/color/ColorSpace;[IIZZ)Ljavax/imageio/ImageTypeSpecifier;","createPacked(Ljava/awt/color/ColorSpace;IIIIIZ)Ljavax/imageio/ImageTypeSpecifier;","createSpecifier(I)Ljavax/imageio/ImageTypeSpecifier;","equals(Ljava/lang/Object;)Z","getColorModel()Ljava/awt/image/ColorModel;","getSampleModel()Ljava/awt/image/SampleModel;","getSampleModel(II)Ljava/awt/image/SampleModel;","getSpecifier(I)Ljavax/imageio/ImageTypeSpecifier;","hashCode()I"]
  }
,
  {
    "className": "Ljavax/imageio/ImageWriter;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/ImageWriter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/ImageTranscoder;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/event/IIOReadProgressListener;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/event/IIOReadProgressListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/event/IIOReadUpdateListener;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/event/IIOReadUpdateListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/event/IIOReadWarningListener;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/event/IIOReadWarningListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIOAttr;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIOAttr.class",
    "super": "Ljavax/imageio/metadata/IIOMetadataNode;",
    "interfaces": ["Lorg/w3c/dom/Attr;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/w3c/dom/Element;Ljava/lang/String;Ljava/lang/String;)V","getName()Ljava/lang/String;","getNodeName()Ljava/lang/String;","getNodeType()S","getNodeValue()Ljava/lang/String;","getSpecified()Z","getValue()Ljava/lang/String;","setNodeValue(Ljava/lang/String;)V","setOwnerElement(Lorg/w3c/dom/Element;)V","setValue(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIODOMException;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIODOMException.class",
    "super": "Lorg/w3c/dom/DOMException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(SLjava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIOInvalidTreeException;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIOInvalidTreeException.class",
    "super": "Ljavax/imageio/IIOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/w3c/dom/Node;)V"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIOMetadata;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIOMetadata.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V","append(Ljavax/imageio/metadata/IIOMetadataNode;Ljavax/imageio/metadata/IIOMetadataNode;)V","getNativeMetadataFormatName()Ljava/lang/String;","getStandardCompressionNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDataNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardDocumentNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTextNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTileNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTransparencyNode()Ljavax/imageio/metadata/IIOMetadataNode;","getStandardTree()Ljavax/imageio/metadata/IIOMetadataNode;","setFromTree(Ljava/lang/String;Lorg/w3c/dom/Node;)V"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIOMetadataNode;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIOMetadataNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/Element;","Lorg/w3c/dom/NodeList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","appendChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","checkNode(Lorg/w3c/dom/Node;)V","cloneNode(Z)Lorg/w3c/dom/Node;","getAttribute(Ljava/lang/String;)Ljava/lang/String;","getAttributeNS(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getAttributeNode(Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributeNodeNS(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;","getAttributes()Lorg/w3c/dom/NamedNodeMap;","getChildNodes()Lorg/w3c/dom/NodeList;","getElementsByTagName(Ljava/lang/String;)Lorg/w3c/dom/NodeList;","getElementsByTagName(Ljava/lang/String;Ljava/util/List;)V","getFirstChild()Lorg/w3c/dom/Node;","getLastChild()Lorg/w3c/dom/Node;","getLength()I","getLocalName()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getNextSibling()Lorg/w3c/dom/Node;","getNodeName()Ljava/lang/String;","getNodeType()S","getNodeValue()Ljava/lang/String;","getOwnerDocument()Lorg/w3c/dom/Document;","getParentNode()Lorg/w3c/dom/Node;","getPrefix()Ljava/lang/String;","getPreviousSibling()Lorg/w3c/dom/Node;","getUserObject()Ljava/lang/Object;","hasAttribute(Ljava/lang/String;)Z","hasChildNodes()Z","insertBefore(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","item(I)Lorg/w3c/dom/Node;","removeAttribute(Ljava/lang/String;Z)V","removeChild(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;","setAttribute(Ljava/lang/String;Ljava/lang/String;)V","setAttributeNS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","setNodeValue(Ljava/lang/String;)V","setUserObject(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIONamedNodeMap;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIONamedNodeMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NamedNodeMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","getLength()I","getNamedItem(Ljava/lang/String;)Lorg/w3c/dom/Node;","item(I)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Ljavax/imageio/metadata/IIONodeList;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/metadata/IIONodeList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/w3c/dom/NodeList;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","getLength()I","item(I)Lorg/w3c/dom/Node;"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/jpeg/JPEGHuffmanTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([S[S)V","toString()Ljava/lang/String;","validate()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/jpeg/JPEGImageReadParam;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/jpeg/JPEGImageReadParam.class",
    "super": "Ljavax/imageio/ImageReadParam;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","areTablesSet()Z","getACHuffmanTables()[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;","getDCHuffmanTables()[Ljavax/imageio/plugins/jpeg/JPEGHuffmanTable;","getQTables()[Ljavax/imageio/plugins/jpeg/JPEGQTable;"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/jpeg/JPEGQTable;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/jpeg/JPEGQTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Artist;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Artist.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$BitsPerSample;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$BitsPerSample.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$CellLength;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$CellLength.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$CellWidth;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$CellWidth.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ColorMap;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ColorMap.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Compression;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Compression.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Copyright;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Copyright.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$DateTime;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$DateTime.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$DocumentName;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$DocumentName.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$DotRange;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$DotRange.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ExtraSamples;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ExtraSamples.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$FillOrder;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$FillOrder.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$FreeByteCounts;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$FreeByteCounts.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$FreeOffsets;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$FreeOffsets.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$GrayResponseCurve;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$GrayResponseCurve.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$GrayResponseUnit;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$GrayResponseUnit.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$HalftoneHints;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$HalftoneHints.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$HostComputer;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$HostComputer.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ICCProfile;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ICCProfile.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageDescription;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageDescription.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageLength;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageLength.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageWidth;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ImageWidth.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$InkNames;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$InkNames.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$InkSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$InkSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGACTables;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGACTables.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGDCTables;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGDCTables.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGInterchangeFormat;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGInterchangeFormat.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGInterchangeFormatLength;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGInterchangeFormatLength.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGLosslessPredictors;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGLosslessPredictors.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGPointTransforms;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGPointTransforms.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGProc;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGProc.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGQTables;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGQTables.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGRestartInterval;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGRestartInterval.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGTables;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$JPEGTables.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Make;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Make.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$MaxSampleValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$MaxSampleValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$MinSampleValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$MinSampleValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Model;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Model.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$NewSubfileType;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$NewSubfileType.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$NumberOfInks;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$NumberOfInks.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Orientation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Orientation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$PageName;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$PageName.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$PageNumber;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$PageNumber.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$PhotometricInterpretation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$PhotometricInterpretation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$PlanarConfiguration;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$PlanarConfiguration.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Predictor;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Predictor.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$PrimaryChromaticities;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$PrimaryChromaticities.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ReferenceBlackWhite;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ReferenceBlackWhite.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$ResolutionUnit;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$ResolutionUnit.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$RowsPerStrip;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$RowsPerStrip.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$SMaxSampleValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$SMaxSampleValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$SMinSampleValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$SMinSampleValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$SampleFormat;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$SampleFormat.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$SamplesPerPixel;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$SamplesPerPixel.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Software;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Software.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$StripByteCounts;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$StripByteCounts.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$StripOffsets;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$StripOffsets.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$SubfileType;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$SubfileType.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$T4Options;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$T4Options.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$T6Options;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$T6Options.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TargetPrinter;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TargetPrinter.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$Threshholding;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$Threshholding.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TileByteCounts;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TileByteCounts.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TileLength;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TileLength.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TileOffsets;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TileOffsets.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TileWidth;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TileWidth.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TransferFunction;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TransferFunction.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$TransferRange;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$TransferRange.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$WhitePoint;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$WhitePoint.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$XPosition;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$XPosition.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$XResolution;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$XResolution.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrCoefficients;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrCoefficients.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrPositioning;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrPositioning.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrSubSampling;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$YCbCrSubSampling.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$YPosition;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$YPosition.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet$YResolution;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet$YResolution.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/BaselineTIFFTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/BaselineTIFFTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSAltitude;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSAltitude.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSAltitudeRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSAltitudeRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSAreaInformation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSAreaInformation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDOP;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDOP.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDateStamp;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDateStamp.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestBearing;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestBearing.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestBearingRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestBearingRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestDistance;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestDistance.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestDistanceRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestDistanceRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLatitude;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLatitude.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLatitudeRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLatitudeRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLongitude;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLongitude.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLongitudeRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDestLongitudeRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSDifferential;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSDifferential.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSImgDirection;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSImgDirection.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSImgDirectionRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSImgDirectionRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSLatitude;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSLatitude.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSLatitudeRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSLatitudeRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSLongitude;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSLongitude.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSLongitudeRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSLongitudeRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSMapDatum;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSMapDatum.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSMeasureMode;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSMeasureMode.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSProcessingMethod;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSProcessingMethod.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSSatellites;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSSatellites.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSSpeed;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSSpeed.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSSpeedRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSSpeedRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSStatus;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSStatus.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSTimeStamp;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSTimeStamp.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSTrack;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSTrack.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSTrackRef;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSTrackRef.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet$GPSVersionID;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet$GPSVersionID.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifGPSTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifGPSTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/ExifGPSTagSet;","initTags()Ljava/util/List;"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifInteroperabilityTagSet$InteroperabilityIndex;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifInteroperabilityTagSet$InteroperabilityIndex.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifInteroperabilityTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifInteroperabilityTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/ExifInteroperabilityTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifParentTIFFTagSet$ExifIFDPointer;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifParentTIFFTagSet$ExifIFDPointer.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifParentTIFFTagSet$GPSInfoIFDPointer;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifParentTIFFTagSet$GPSInfoIFDPointer.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifParentTIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifParentTIFFTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/ExifParentTIFFTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ApertureValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ApertureValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$BrightnessValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$BrightnessValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$CFAPattern;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$CFAPattern.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ColorSpace;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ColorSpace.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ComponentsConfiguration;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ComponentsConfiguration.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$CompressedBitsPerPixel;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$CompressedBitsPerPixel.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$Contrast;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$Contrast.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$CustomRendered;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$CustomRendered.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$DateTimeDigitized;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$DateTimeDigitized.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$DateTimeOriginal;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$DateTimeOriginal.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$DeviceSettingDescription;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$DeviceSettingDescription.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$DigitalZoomRatio;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$DigitalZoomRatio.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExifVersion;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExifVersion.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureBiasValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureBiasValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureIndex;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureIndex.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureMode;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureMode.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureProgram;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureProgram.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureTime;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ExposureTime.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FNumber;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FNumber.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FileSource;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FileSource.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$Flash;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$Flash.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FlashEnergy;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FlashEnergy.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FlashPixVersion;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FlashPixVersion.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FocalLength;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FocalLength.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FocalLengthIn35mmFilm;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FocalLengthIn35mmFilm.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneResolutionUnit;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneResolutionUnit.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneXResolution;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneXResolution.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneYResolution;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$FocalPlaneYResolution.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$GainControl;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$GainControl.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ISOSpeedRatings;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ISOSpeedRatings.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ImageUniqueID;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ImageUniqueID.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$InteroperabilityIFD;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$InteroperabilityIFD.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$LightSource;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$LightSource.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$MakerNote;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$MakerNote.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$MaxApertureValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$MaxApertureValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$MeteringMode;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$MeteringMode.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$OECF;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$OECF.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$PixelXDimension;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$PixelXDimension.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$PixelYDimension;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$PixelYDimension.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$RelatedSoundFile;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$RelatedSoundFile.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$Saturation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$Saturation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SceneCaptureType;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SceneCaptureType.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SceneType;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SceneType.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SensingMethod;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SensingMethod.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$Sharpness;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$Sharpness.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$ShutterSpeedValue;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$ShutterSpeedValue.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SpatialFrequencyResponse;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SpatialFrequencyResponse.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SpectralSensitivity;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SpectralSensitivity.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTime;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTime.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTimeDigitized;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTimeDigitized.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTimeOriginal;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubSecTimeOriginal.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectArea;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectArea.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectDistance;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectDistance.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectDistanceRange;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectDistanceRange.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectLocation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$SubjectLocation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$UserComment;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$UserComment.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet$WhiteBalance;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet$WhiteBalance.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/ExifTIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/ExifTIFFTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/ExifTIFFTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/FaxTIFFTagSet$BadFaxLines;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/FaxTIFFTagSet$BadFaxLines.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/FaxTIFFTagSet$CleanFaxData;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/FaxTIFFTagSet$CleanFaxData.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/FaxTIFFTagSet$ConsecutiveBadFaxLines;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/FaxTIFFTagSet$ConsecutiveBadFaxLines.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/FaxTIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/FaxTIFFTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/FaxTIFFTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$GeoAsciiParams;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$GeoAsciiParams.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$GeoDoubleParams;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$GeoDoubleParams.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$GeoKeyDirectory;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$GeoKeyDirectory.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$ModelPixelScale;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$ModelPixelScale.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$ModelTiepoint;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$ModelTiepoint.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet$ModelTransformation;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet$ModelTransformation.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/GeoTIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/GeoTIFFTagSet.class",
    "super": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance()Ljavax/imageio/plugins/tiff/GeoTIFFTagSet;","initTags()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/TIFFDirectory;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/TIFFDirectory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljavax/imageio/plugins/tiff/TIFFTagSet;Ljavax/imageio/plugins/tiff/TIFFTag;)V","addTIFFField(Ljavax/imageio/plugins/tiff/TIFFField;)V","addTagSet(Ljavax/imageio/plugins/tiff/TIFFTagSet;)V","clone()Ljava/lang/Object;","clone()Ljavax/imageio/plugins/tiff/TIFFDirectory;","getParentTag()Ljavax/imageio/plugins/tiff/TIFFTag;","getTIFFField(I)Ljavax/imageio/plugins/tiff/TIFFField;","getTIFFFields()[Ljavax/imageio/plugins/tiff/TIFFField;","getTag(I)Ljavax/imageio/plugins/tiff/TIFFTag;","getTagSets()[Ljavax/imageio/plugins/tiff/TIFFTagSet;","removeTIFFField(I)V","removeTIFFFields()V"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/TIFFField;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/TIFFField.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/plugins/tiff/TIFFTag;IILjava/lang/Object;)V","<init>(Ljavax/imageio/plugins/tiff/TIFFTag;IJLjavax/imageio/plugins/tiff/TIFFDirectory;)V","<init>(Ljavax/imageio/plugins/tiff/TIFFTag;J)V","clone()Ljava/lang/Object;","clone()Ljavax/imageio/plugins/tiff/TIFFField;","createArrayForType(II)Ljava/lang/Object;","createFromMetadataNode(Ljavax/imageio/plugins/tiff/TIFFTagSet;Lorg/w3c/dom/Node;)Ljavax/imageio/plugins/tiff/TIFFField;","getAsBytes()[B","getAsChars()[C","getAsFloat(I)F","getAsInt(I)I","getAsInts()[I","getAsLong(I)J","getAsLongs()[J","getAsNativeNode()Lorg/w3c/dom/Node;","getAsRational(I)[J","getAsSRational(I)[I","getAsString(I)Ljava/lang/String;","getAttribute(Lorg/w3c/dom/Node;Ljava/lang/String;)Ljava/lang/String;","getCount()I","getData()Ljava/lang/Object;","getDirectory()Ljavax/imageio/plugins/tiff/TIFFDirectory;","getTag()Ljavax/imageio/plugins/tiff/TIFFTag;","getTagNumber()I","getType()I","getTypeByName(Ljava/lang/String;)I","getTypeName(I)Ljava/lang/String;","getValueAsString(I)Ljava/lang/String;","hasDirectory()Z","initData(Lorg/w3c/dom/Node;[I[I[Ljava/lang/Object;)V","isIntegral()Z"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/TIFFImageReadParam;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/TIFFImageReadParam.class",
    "super": "Ljavax/imageio/ImageReadParam;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addAllowedTagSet(Ljavax/imageio/plugins/tiff/TIFFTagSet;)V","getAllowedTagSets()Ljava/util/List;","getReadUnknownTags()Z"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/TIFFTag;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/TIFFTag.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","<init>(Ljava/lang/String;III)V","<init>(Ljava/lang/String;ILjavax/imageio/plugins/tiff/TIFFTagSet;)V","addValueName(ILjava/lang/String;)V","getCount()I","getName()Ljava/lang/String;","getNumber()I","getSizeOfType(I)I","getTagSet()Ljavax/imageio/plugins/tiff/TIFFTagSet;","getValueName(I)Ljava/lang/String;","hasValueNames()Z","isDataTypeOK(I)Z","isIFDPointer()Z"]
  }
,
  {
    "className": "Ljavax/imageio/plugins/tiff/TIFFTagSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/plugins/tiff/TIFFTagSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","getTag(I)Ljavax/imageio/plugins/tiff/TIFFTag;","getTag(Ljava/lang/String;)Ljavax/imageio/plugins/tiff/TIFFTag;"]
  }
,
  {
    "className": "Ljavax/imageio/spi/DigraphNode;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/DigraphNode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","decrementInDegree()V","dispose()V","getData()Ljava/lang/Object;","getInDegree()I","getOutNodes()Ljava/util/Iterator;","removeEdge(Ljavax/imageio/spi/DigraphNode;)Z"]
  }
,
  {
    "className": "Ljavax/imageio/spi/FilterIterator;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/FilterIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;Ljavax/imageio/spi/ServiceRegistry$Filter;)V","advance()V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/IIORegistry$1;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/IIORegistry$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/IIORegistry;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/imageio/spi/IIORegistry;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/IIORegistry.class",
    "super": "Ljavax/imageio/spi/ServiceRegistry;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.util.Vector.add(Object)",
    "invokedMethods": ["<clinit>()V","<init>()V","getDefaultInstance()Ljavax/imageio/spi/IIORegistry;","registerApplicationClasspathSpis()V","registerInstalledProviders()V","registerStandardSpis()V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/IIOServiceProvider;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/IIOServiceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/spi/RegisterableService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","onDeregistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V","onRegistration(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageInputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageInputStreamSpi.class",
    "super": "Ljavax/imageio/spi/IIOServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V","getInputClass()Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageOutputStreamSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageOutputStreamSpi.class",
    "super": "Ljavax/imageio/spi/IIOServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageReaderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageReaderSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V","createReaderInstance()Ljavax/imageio/ImageReader;","getInputTypes()[Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageReaderWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageReaderWriterSpi.class",
    "super": "Ljavax/imageio/spi/IIOServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V","getFileSuffixes()[Ljava/lang/String;","getFormatNames()[Ljava/lang/String;","getMIMETypes()[Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageTranscoderSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageTranscoderSpi.class",
    "super": "Ljavax/imageio/spi/IIOServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/spi/ImageWriterSpi;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ImageWriterSpi.class",
    "super": "Ljavax/imageio/spi/ImageReaderWriterSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/PartialOrderIterator;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/PartialOrderIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/PartiallyOrderedSet;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/PartiallyOrderedSet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Object;)Z","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Ljavax/imageio/spi/RegisterableService;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/RegisterableService.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/spi/ServiceRegistry$Filter;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ServiceRegistry$Filter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/spi/ServiceRegistry;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/ServiceRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;)V","checkClassAllowed(Ljava/lang/Class;)V","deregisterServiceProvider(Ljava/lang/Object;Ljava/lang/Class;)Z","getCategories()Ljava/util/Iterator;","getServiceProviders(Ljava/lang/Class;Ljavax/imageio/spi/ServiceRegistry$Filter;Z)Ljava/util/Iterator;","getServiceProviders(Ljava/lang/Class;Z)Ljava/util/Iterator;","getSubRegistries(Ljava/lang/Object;)Ljava/util/Iterator;","registerServiceProvider(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljavax/imageio/spi/SubRegistry;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/spi/SubRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/spi/ServiceRegistry;Ljava/lang/Class;)V","deregisterServiceProvider(Ljava/lang/Object;)Z","getServiceProviders(Z)Ljava/util/Iterator;","registerServiceProvider(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljavax/imageio/stream/FileCacheImageInputStream$StreamDisposerRecord;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/FileCacheImageInputStream$StreamDisposerRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/DisposerRecord;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;Ljava/io/RandomAccessFile;)V","dispose()V"]
  }
,
  {
    "className": "Ljavax/imageio/stream/FileCacheImageInputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/FileCacheImageInputStream.class",
    "super": "Ljavax/imageio/stream/ImageInputStreamImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;Ljava/io/File;)V","close()V","read()I","read([BII)I","readUntil(J)J"]
  }
,
  {
    "className": "Ljavax/imageio/stream/FileImageInputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/FileImageInputStream.class",
    "super": "Ljavax/imageio/stream/ImageInputStreamImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;)V","<init>(Ljava/io/RandomAccessFile;)V","close()V","length()J","read()I","read([BII)I","seek(J)V"]
  }
,
  {
    "className": "Ljavax/imageio/stream/ImageInputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/ImageInputStream.class",
    "super": "null",
    "interfaces": ["Ljava/io/DataInput;","Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/stream/ImageInputStreamImpl;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/ImageInputStreamImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/imageio/stream/ImageInputStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkClosed()V","close()V","flushBefore(J)V","getBitOffset()I","getByteOrder()Ljava/nio/ByteOrder;","getStreamPosition()J","length()J","mark()V","read([B)I","readBits(I)J","readByte()B","readDouble()D","readFloat()F","readFully([B)V","readFully([BII)V","readFully([CII)V","readFully([DII)V","readFully([FII)V","readFully([III)V","readFully([SII)V","readInt()I","readLong()J","readShort()S","readUnsignedByte()I","readUnsignedInt()J","readUnsignedShort()I","reset()V","seek(J)V","setBitOffset(I)V","setByteOrder(Ljava/nio/ByteOrder;)V","skipBytes(I)I","skipBytes(J)J","toChars([B[CII)V","toDoubles([B[DII)V","toFloats([B[FII)V","toInts([B[III)V","toShorts([B[SII)V"]
  }
,
  {
    "className": "Ljavax/imageio/stream/ImageOutputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/ImageOutputStream.class",
    "super": "null",
    "interfaces": ["Ljavax/imageio/stream/ImageInputStream;","Ljava/io/DataOutput;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/imageio/stream/MemoryCache;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/MemoryCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","disposeBefore(J)V","getCacheBlock(J)[B","loadFromStream(Ljava/io/InputStream;J)J","read(J)I","read([BIIJ)V","reset()V"]
  }
,
  {
    "className": "Ljavax/imageio/stream/MemoryCacheImageInputStream$StreamDisposerRecord;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/MemoryCacheImageInputStream$StreamDisposerRecord.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/DisposerRecord;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/imageio/stream/MemoryCache;)V","dispose()V"]
  }
,
  {
    "className": "Ljavax/imageio/stream/MemoryCacheImageInputStream;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/imageio/stream/MemoryCacheImageInputStream.class",
    "super": "Ljavax/imageio/stream/ImageInputStreamImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","close()V","flushBefore(J)V","read()I","read([BII)I"]
  }
,
  {
    "className": "Ljavax/management/ConstructorParameters;",
    "module": "java.management",
    "source": "/java.management/javax/management/ConstructorParameters.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/Descriptor;",
    "module": "java.management",
    "source": "/java.management/javax/management/Descriptor.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/DescriptorKey;",
    "module": "java.management",
    "source": "/java.management/javax/management/DescriptorKey.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/DescriptorRead;",
    "module": "java.management",
    "source": "/java.management/javax/management/DescriptorRead.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/DynamicMBean;",
    "module": "java.management",
    "source": "/java.management/javax/management/DynamicMBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/ImmutableDescriptor;",
    "module": "java.management",
    "source": "/java.management/javax/management/ImmutableDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/management/Descriptor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","<init>([Ljava/lang/String;)V","<init>([Ljava/lang/String;[Ljava/lang/Object;)V","checkIllegalFieldName(Ljava/lang/String;)V","clone()Ljava/lang/Object;","clone()Ljavax/management/Descriptor;","equals(Ljava/lang/Object;)Z","fieldIndex(Ljava/lang/String;)I","findNonEmpty([Ljavax/management/Descriptor;I)I","getFieldNames()[Ljava/lang/String;","getFieldValue(Ljava/lang/String;)Ljava/lang/Object;","hashCode()I","illegal(Ljava/lang/String;)V","isEmpty(Ljavax/management/Descriptor;)Z","makeMap([Ljava/lang/String;)Ljava/util/SortedMap;","makeMap([Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/SortedMap;","nonNullDescriptor(Ljavax/management/Descriptor;)Ljavax/management/Descriptor;","toString()Ljava/lang/String;","union([Ljavax/management/Descriptor;)Ljavax/management/ImmutableDescriptor;"]
  }
,
  {
    "className": "Ljavax/management/InstanceAlreadyExistsException;",
    "module": "java.management",
    "source": "/java.management/javax/management/InstanceAlreadyExistsException.class",
    "super": "Ljavax/management/OperationsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/InstanceNotFoundException;",
    "module": "java.management",
    "source": "/java.management/javax/management/InstanceNotFoundException.class",
    "super": "Ljavax/management/OperationsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/IntrospectionException;",
    "module": "java.management",
    "source": "/java.management/javax/management/IntrospectionException.class",
    "super": "Ljavax/management/OperationsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/JMException;",
    "module": "java.management",
    "source": "/java.management/javax/management/JMException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/JMRuntimeException;",
    "module": "java.management",
    "source": "/java.management/javax/management/JMRuntimeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljavax/management/JMX;",
    "module": "java.management",
    "source": "/java.management/javax/management/JMX.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["isMXBeanInterface(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Ljavax/management/MBeanAttributeInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanAttributeInfo.class",
    "super": "Ljavax/management/MBeanFeatureInfo;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZ)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZZLjavax/management/Descriptor;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V","attributeType(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Ljava/lang/String;","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getType()Ljava/lang/String;","hashCode()I","isIs()Z","isIs(Ljava/lang/reflect/Method;)Z","isReadable()Z","isWritable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanConstructorInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanConstructorInfo.class",
    "super": "Ljavax/management/MBeanFeatureInfo;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/MBeanParameterInfo;Ljavax/management/Descriptor;)V","<init>(Ljava/lang/String;Ljava/lang/reflect/Constructor;)V","clone()Ljava/lang/Object;","constructorSignature(Ljava/lang/reflect/Constructor;)[Ljavax/management/MBeanParameterInfo;","equals(Ljava/lang/Object;)Z","fastGetSignature()[Ljavax/management/MBeanParameterInfo;","getSignature()[Ljavax/management/MBeanParameterInfo;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanException;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanException.class",
    "super": "Ljavax/management/JMException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljavax/management/MBeanFeatureInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanFeatureInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Ljavax/management/DescriptorRead;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljavax/management/Descriptor;)V","getDescription()Ljava/lang/String;","getDescriptor()Ljavax/management/Descriptor;","getName()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanInfo$ArrayGettersSafeAction;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanInfo$ArrayGettersSafeAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/management/MBeanInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;","Ljavax/management/DescriptorRead;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/MBeanAttributeInfo;[Ljavax/management/MBeanConstructorInfo;[Ljavax/management/MBeanOperationInfo;[Ljavax/management/MBeanNotificationInfo;)V","<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/MBeanAttributeInfo;[Ljavax/management/MBeanConstructorInfo;[Ljavax/management/MBeanOperationInfo;[Ljavax/management/MBeanNotificationInfo;Ljavax/management/Descriptor;)V","arrayGettersSafe(Ljava/lang/Class;Ljava/lang/Class;)Z","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","fastGetAttributes()[Ljavax/management/MBeanAttributeInfo;","fastGetConstructors()[Ljavax/management/MBeanConstructorInfo;","fastGetNotifications()[Ljavax/management/MBeanNotificationInfo;","fastGetOperations()[Ljavax/management/MBeanOperationInfo;","getAttributes()[Ljavax/management/MBeanAttributeInfo;","getClassName()Ljava/lang/String;","getConstructors()[Ljavax/management/MBeanConstructorInfo;","getDescription()Ljava/lang/String;","getDescriptor()Ljavax/management/Descriptor;","getNotifications()[Ljavax/management/MBeanNotificationInfo;","getOperations()[Ljavax/management/MBeanOperationInfo;","hashCode()I","isEqual(Ljava/lang/String;Ljava/lang/String;)Z","nonNullAttributes()[Ljavax/management/MBeanAttributeInfo;","nonNullConstructors()[Ljavax/management/MBeanConstructorInfo;","nonNullNotifications()[Ljavax/management/MBeanNotificationInfo;","nonNullOperations()[Ljavax/management/MBeanOperationInfo;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanNotificationInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanNotificationInfo.class",
    "super": "Ljavax/management/MBeanFeatureInfo;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","fastGetNotifTypes()[Ljava/lang/String;","getNotifTypes()[Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanOperationInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanOperationInfo.class",
    "super": "Ljavax/management/MBeanFeatureInfo;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/MBeanParameterInfo;Ljava/lang/String;ILjavax/management/Descriptor;)V","<init>(Ljava/lang/String;Ljava/lang/reflect/Method;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","fastGetSignature()[Ljavax/management/MBeanParameterInfo;","getImpact()I","getReturnType()Ljava/lang/String;","getSignature()[Ljavax/management/MBeanParameterInfo;","hashCode()I","methodSignature(Ljava/lang/reflect/Method;)[Ljavax/management/MBeanParameterInfo;","parameters([Ljava/lang/Class;[[Ljava/lang/annotation/Annotation;)[Ljavax/management/MBeanParameterInfo;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanParameterInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanParameterInfo.class",
    "super": "Ljavax/management/MBeanFeatureInfo;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljavax/management/Descriptor;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getType()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MBeanRegistration;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanRegistration.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/MBeanRegistrationException;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanRegistrationException.class",
    "super": "Ljavax/management/MBeanException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/MBeanServer;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServer.class",
    "super": "null",
    "interfaces": ["Ljavax/management/MBeanServerConnection;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/MBeanServerBuilder;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newMBeanServer(Ljava/lang/String;Ljavax/management/MBeanServer;Ljavax/management/MBeanServerDelegate;)Ljavax/management/MBeanServer;","newMBeanServerDelegate()Ljavax/management/MBeanServerDelegate;"]
  }
,
  {
    "className": "Ljavax/management/MBeanServerConnection;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerConnection.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/MBeanServerDelegate;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/management/MBeanServerDelegateMBean;","Ljavax/management/NotificationEmitter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;","getStamp()J","sendNotification(Ljavax/management/Notification;)V"]
  }
,
  {
    "className": "Ljavax/management/MBeanServerDelegateMBean;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerDelegateMBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/MBeanServerFactory;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addMBeanServer(Ljavax/management/MBeanServer;)V","checkMBeanServerBuilder()V","checkPermission(Ljava/lang/String;)V","createMBeanServer()Ljavax/management/MBeanServer;","createMBeanServer(Ljava/lang/String;)Ljavax/management/MBeanServer;","getMBeanServerList()Ljava/util/ArrayList;","getNewMBeanServerBuilder()Ljavax/management/MBeanServerBuilder;","lambda$getMBeanServerList$0()Ljava/util/ArrayList;","loadBuilderClass(Ljava/lang/String;)Ljava/lang/Class;","newBuilder(Ljava/lang/Class;)Ljavax/management/MBeanServerBuilder;","newMBeanServer(Ljava/lang/String;)Ljavax/management/MBeanServer;"]
  }
,
  {
    "className": "Ljavax/management/MBeanServerNotification;",
    "module": "java.management",
    "source": "/java.management/javax/management/MBeanServerNotification.class",
    "super": "Ljavax/management/Notification;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;JLjavax/management/ObjectName;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/MXBean;",
    "module": "java.management",
    "source": "/java.management/javax/management/MXBean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/MalformedObjectNameException;",
    "module": "java.management",
    "source": "/java.management/javax/management/MalformedObjectNameException.class",
    "super": "Ljavax/management/OperationsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/NotCompliantMBeanException;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotCompliantMBeanException.class",
    "super": "Ljavax/management/OperationsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/Notification;",
    "module": "java.management",
    "source": "/java.management/javax/management/Notification.class",
    "super": "Ljava/util/EventObject;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;J)V","getSequenceNumber()J","setSequenceNumber(J)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/NotificationBroadcaster;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationBroadcaster.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/NotificationBroadcasterSupport$1;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationBroadcasterSupport$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/Executor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["execute(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Ljavax/management/NotificationBroadcasterSupport$ListenerInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationBroadcasterSupport$ListenerInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/NotificationBroadcasterSupport$SendNotifJob;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationBroadcasterSupport$SendNotifJob.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/NotificationBroadcasterSupport;Ljavax/management/Notification;Ljavax/management/NotificationBroadcasterSupport$ListenerInfo;)V","run()V"]
  }
,
  {
    "className": "Ljavax/management/NotificationBroadcasterSupport;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationBroadcasterSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/management/NotificationEmitter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/concurrent/Executor;[Ljavax/management/MBeanNotificationInfo;)V","handleNotification(Ljavax/management/NotificationListener;Ljavax/management/Notification;Ljava/lang/Object;)V","sendNotification(Ljavax/management/Notification;)V"]
  }
,
  {
    "className": "Ljavax/management/NotificationEmitter;",
    "module": "java.management",
    "source": "/java.management/javax/management/NotificationEmitter.class",
    "super": "null",
    "interfaces": ["Ljavax/management/NotificationBroadcaster;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/ObjectInstance;",
    "module": "java.management",
    "source": "/java.management/javax/management/ObjectInstance.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/management/ObjectName;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getClassName()Ljava/lang/String;","getObjectName()Ljavax/management/ObjectName;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/ObjectName$PatternProperty;",
    "module": "java.management",
    "source": "/java.management/javax/management/ObjectName$PatternProperty.class",
    "super": "Ljavax/management/ObjectName$Property;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V"]
  }
,
  {
    "className": "Ljavax/management/ObjectName$Property;",
    "module": "java.management",
    "source": "/java.management/javax/management/ObjectName$Property.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V","getKeyString(Ljava/lang/String;)Ljava/lang/String;","getValueString(Ljava/lang/String;)Ljava/lang/String;","setKeyIndex(I)V"]
  }
,
  {
    "className": "Ljavax/management/ObjectName;",
    "module": "java.management",
    "source": "/java.management/javax/management/ObjectName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljavax/management/QueryExp;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","_getKeyPropertyList()Ljava/util/Map;","addProperty(Ljavax/management/ObjectName$Property;ILjava/util/Map;Ljava/lang/String;)V","checkKey(Ljava/lang/String;)V","checkValue(Ljava/lang/String;)Z","compareTo(Ljava/lang/Object;)I","compareTo(Ljavax/management/ObjectName;)I","construct(Ljava/lang/String;)V","construct(Ljava/lang/String;Ljava/util/Map;)V","equals(Ljava/lang/Object;)Z","getCanonicalKeyPropertyListString()Ljava/lang/String;","getCanonicalName()Ljava/lang/String;","getDomain()Ljava/lang/String;","getDomainLength()I","getInstance(Ljava/lang/String;)Ljavax/management/ObjectName;","getInstance(Ljavax/management/ObjectName;)Ljavax/management/ObjectName;","getKeyProperty(Ljava/lang/String;)Ljava/lang/String;","getSerializedNameString()Ljava/lang/String;","hashCode()I","isDomain(Ljava/lang/String;)Z","isPattern()Z","isPropertyListPattern()Z","parseKey([CI)I","parseValue([CI)[I","setCanonicalName([C[C[Ljava/lang/String;Ljava/util/Map;II)V","setDomainLength(I)V","setDomainPattern(Z)V","setPropertyListPattern(Z)V","setPropertyValuePattern(Z)V","toString()Ljava/lang/String;","writeKeyPropertyListString([C[CI)I"]
  }
,
  {
    "className": "Ljavax/management/OperationsException;",
    "module": "java.management",
    "source": "/java.management/javax/management/OperationsException.class",
    "super": "Ljavax/management/JMException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/QueryExp;",
    "module": "java.management",
    "source": "/java.management/javax/management/QueryExp.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/RuntimeErrorException;",
    "module": "java.management",
    "source": "/java.management/javax/management/RuntimeErrorException.class",
    "super": "Ljavax/management/JMRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Error;Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljavax/management/RuntimeMBeanException;",
    "module": "java.management",
    "source": "/java.management/javax/management/RuntimeMBeanException.class",
    "super": "Ljavax/management/JMRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/RuntimeException;Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljavax/management/RuntimeOperationsException;",
    "module": "java.management",
    "source": "/java.management/javax/management/RuntimeOperationsException.class",
    "super": "Ljavax/management/JMRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/RuntimeException;)V","<init>(Ljava/lang/RuntimeException;Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljavax/management/StandardEmitterMBean;",
    "module": "java.management",
    "source": "/java.management/javax/management/StandardEmitterMBean.class",
    "super": "Ljavax/management/StandardMBean;",
    "interfaces": ["Ljavax/management/NotificationEmitter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Class;ZLjavax/management/NotificationEmitter;)V","getNotificationInfo()[Ljavax/management/MBeanNotificationInfo;","getNotifications(Ljavax/management/MBeanInfo;)[Ljavax/management/MBeanNotificationInfo;"]
  }
,
  {
    "className": "Ljavax/management/StandardMBean$MBeanInfoSafeAction;",
    "module": "java.management",
    "source": "/java.management/javax/management/StandardMBean$MBeanInfoSafeAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/management/StandardMBean;",
    "module": "java.management",
    "source": "/java.management/javax/management/StandardMBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/management/DynamicMBean;","Ljavax/management/MBeanRegistration;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Class;Z)V","cacheMBeanInfo(Ljavax/management/MBeanInfo;)V","construct(Ljava/lang/Object;Ljava/lang/Class;ZZ)V","customize(Ljavax/management/MBeanAttributeInfo;Ljava/lang/String;)Ljavax/management/MBeanAttributeInfo;","customize(Ljavax/management/MBeanConstructorInfo;Ljava/lang/String;[Ljavax/management/MBeanParameterInfo;)Ljavax/management/MBeanConstructorInfo;","customize(Ljavax/management/MBeanOperationInfo;Ljava/lang/String;[Ljavax/management/MBeanParameterInfo;I)Ljavax/management/MBeanOperationInfo;","customize(Ljavax/management/MBeanParameterInfo;Ljava/lang/String;Ljava/lang/String;)Ljavax/management/MBeanParameterInfo;","equal(Ljava/lang/Object;Ljava/lang/Object;)Z","getAttributes(Ljavax/management/MBeanInfo;)[Ljavax/management/MBeanAttributeInfo;","getCachedMBeanInfo()Ljavax/management/MBeanInfo;","getClassName(Ljavax/management/MBeanInfo;)Ljava/lang/String;","getConstructors(Ljavax/management/MBeanInfo;Ljava/lang/Object;)[Ljavax/management/MBeanConstructorInfo;","getConstructors([Ljavax/management/MBeanConstructorInfo;Ljava/lang/Object;)[Ljavax/management/MBeanConstructorInfo;","getDescription(Ljavax/management/MBeanAttributeInfo;)Ljava/lang/String;","getDescription(Ljavax/management/MBeanConstructorInfo;)Ljava/lang/String;","getDescription(Ljavax/management/MBeanConstructorInfo;Ljavax/management/MBeanParameterInfo;I)Ljava/lang/String;","getDescription(Ljavax/management/MBeanFeatureInfo;)Ljava/lang/String;","getDescription(Ljavax/management/MBeanInfo;)Ljava/lang/String;","getDescription(Ljavax/management/MBeanOperationInfo;)Ljava/lang/String;","getDescription(Ljavax/management/MBeanOperationInfo;Ljavax/management/MBeanParameterInfo;I)Ljava/lang/String;","getDescriptor(Ljavax/management/MBeanInfo;Z)Ljavax/management/Descriptor;","getImpact(Ljavax/management/MBeanOperationInfo;)I","getImplementationClass()Ljava/lang/Class;","getMBeanInfo()Ljavax/management/MBeanInfo;","getMBeanInterface()Ljava/lang/Class;","getNotifications(Ljavax/management/MBeanInfo;)[Ljavax/management/MBeanNotificationInfo;","getOperations(Ljavax/management/MBeanInfo;)[Ljavax/management/MBeanOperationInfo;","getParameterName(Ljavax/management/MBeanConstructorInfo;Ljavax/management/MBeanParameterInfo;I)Ljava/lang/String;","getParameterName(Ljavax/management/MBeanOperationInfo;Ljavax/management/MBeanParameterInfo;I)Ljava/lang/String;","identicalArrays([Ljava/lang/Object;[Ljava/lang/Object;)Z","immutableInfo(Ljava/lang/Class;)Z","overrides(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Z","paramsToOpenParams([Ljavax/management/MBeanParameterInfo;)[Ljavax/management/openmbean/OpenMBeanParameterInfo;","postDeregister()V","postRegister(Ljava/lang/Boolean;)V","preDeregister()V","preRegister(Ljavax/management/MBeanServer;Ljavax/management/ObjectName;)Ljavax/management/ObjectName;"]
  }
,
  {
    "className": "Ljavax/management/loading/ClassLoaderRepository;",
    "module": "java.management",
    "source": "/java.management/javax/management/loading/ClassLoaderRepository.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/loading/PrivateClassLoader;",
    "module": "java.management",
    "source": "/java.management/javax/management/loading/PrivateClassLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/ArrayType;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/ArrayType.class",
    "super": "Ljavax/management/openmbean/OpenType;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjavax/management/openmbean/OpenType;)V","buildArrayClassName(ILjavax/management/openmbean/OpenType;)Ljava/lang/String;","buildArrayClassName(ILjavax/management/openmbean/OpenType;Z)Ljava/lang/String;","buildArrayDescription(ILjavax/management/openmbean/OpenType;)Ljava/lang/String;","buildArrayDescription(ILjavax/management/openmbean/OpenType;Z)Ljava/lang/String;","checkElementsType([Ljava/lang/Object;I)Z","equals(Ljava/lang/Object;)Z","getArrayType(Ljavax/management/openmbean/OpenType;)Ljavax/management/openmbean/ArrayType;","getDimension()I","getElementOpenType()Ljavax/management/openmbean/OpenType;","getPrimitiveTypeKey(Ljava/lang/String;)Ljava/lang/String;","getPrimitiveTypeName(Ljava/lang/String;)Ljava/lang/String;","hashCode()I","isAssignableFrom(Ljavax/management/openmbean/OpenType;)Z","isPrimitiveArray()Z","isPrimitiveContentType(Ljava/lang/String;)Z","isValue(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/CompositeData;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/CompositeData.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/CompositeType;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/CompositeType.class",
    "super": "Ljavax/management/openmbean/OpenType;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljavax/management/openmbean/OpenType;)V","checkForEmptyString([Ljava/lang/String;Ljava/lang/String;)V","checkForNullElement([Ljava/lang/Object;Ljava/lang/String;)V","containsKey(Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","getType(Ljava/lang/String;)Ljavax/management/openmbean/OpenType;","hashCode()I","isAssignableFrom(Ljavax/management/openmbean/OpenType;)Z","isValue(Ljava/lang/Object;)Z","keySet()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenDataException;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenDataException.class",
    "super": "Ljavax/management/JMException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanAttributeInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanAttributeInfo.class",
    "super": "null",
    "interfaces": ["Ljavax/management/openmbean/OpenMBeanParameterInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanAttributeInfoSupport;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanAttributeInfoSupport.class",
    "super": "Ljavax/management/MBeanAttributeInfo;",
    "interfaces": ["Ljavax/management/openmbean/OpenMBeanAttributeInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljavax/management/openmbean/OpenType;ZZZLjavax/management/Descriptor;)V","cast(Ljava/lang/Object;)Ljava/lang/Object;","check(Ljavax/management/openmbean/OpenMBeanParameterInfo;)V","comparableValueFrom(Ljavax/management/Descriptor;Ljava/lang/String;Ljavax/management/openmbean/OpenType;)Ljava/lang/Comparable;","compare(Ljava/lang/Object;Ljava/lang/Object;)I","convertFrom(Ljava/lang/Object;Ljavax/management/openmbean/OpenType;)Ljava/lang/Object;","convertFromString(Ljava/lang/String;Ljavax/management/openmbean/OpenType;)Ljava/lang/Object;","convertFromStringArray(Ljava/lang/Object;Ljavax/management/openmbean/OpenType;)Ljava/lang/Object;","convertFromStrings(Ljava/lang/Object;Ljavax/management/openmbean/OpenType;)Ljava/lang/Object;","equal(Ljavax/management/openmbean/OpenMBeanParameterInfo;Ljavax/management/openmbean/OpenMBeanParameterInfo;)Z","equals(Ljava/lang/Object;)Z","getDefaultValue()Ljava/lang/Object;","getLegalValues()Ljava/util/Set;","getMaxValue()Ljava/lang/Comparable;","getMinValue()Ljava/lang/Comparable;","getOpenType()Ljavax/management/openmbean/OpenType;","hasDefaultValue()Z","hasLegalValues()Z","hasMaxValue()Z","hasMinValue()Z","hashCode()I","hashCode(Ljavax/management/openmbean/OpenMBeanParameterInfo;)I","toString()Ljava/lang/String;","toString(Ljavax/management/openmbean/OpenMBeanParameterInfo;)Ljava/lang/String;","valueFrom(Ljavax/management/Descriptor;Ljava/lang/String;Ljavax/management/openmbean/OpenType;)Ljava/lang/Object;","valuesFrom(Ljavax/management/Descriptor;Ljava/lang/String;Ljavax/management/openmbean/OpenType;)Ljava/util/Set;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanConstructorInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanConstructorInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanConstructorInfoSupport;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanConstructorInfoSupport.class",
    "super": "Ljavax/management/MBeanConstructorInfo;",
    "interfaces": ["Ljavax/management/openmbean/OpenMBeanConstructorInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/openmbean/OpenMBeanParameterInfo;Ljavax/management/Descriptor;)V","arrayCopyCast([Ljavax/management/openmbean/OpenMBeanParameterInfo;)[Ljavax/management/MBeanParameterInfo;","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanOperationInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanOperationInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanOperationInfoSupport;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanOperationInfoSupport.class",
    "super": "Ljavax/management/MBeanOperationInfo;",
    "interfaces": ["Ljavax/management/openmbean/OpenMBeanOperationInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;[Ljavax/management/openmbean/OpenMBeanParameterInfo;Ljavax/management/openmbean/OpenType;ILjavax/management/Descriptor;)V","arrayCopyCast([Ljavax/management/openmbean/OpenMBeanParameterInfo;)[Ljavax/management/MBeanParameterInfo;","equals(Ljava/lang/Object;)Z","getReturnOpenType()Ljavax/management/openmbean/OpenType;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanParameterInfo;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanParameterInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenMBeanParameterInfoSupport;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenMBeanParameterInfoSupport.class",
    "super": "Ljavax/management/MBeanParameterInfo;",
    "interfaces": ["Ljavax/management/openmbean/OpenMBeanParameterInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljavax/management/openmbean/OpenType;Ljavax/management/Descriptor;)V","equals(Ljava/lang/Object;)Z","getDefaultValue()Ljava/lang/Object;","getLegalValues()Ljava/util/Set;","getMaxValue()Ljava/lang/Comparable;","getMinValue()Ljava/lang/Comparable;","getOpenType()Ljavax/management/openmbean/OpenType;","hasDefaultValue()Z","hasLegalValues()Z","hasMaxValue()Z","hasMinValue()Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenType$1;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenType$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/OpenType;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/OpenType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","checkClassNameOverride()V","getClassName()Ljava/lang/String;","getDescriptor()Ljavax/management/Descriptor;","getTypeName()Ljava/lang/String;","isArray()Z","isAssignableFrom(Ljavax/management/openmbean/OpenType;)Z","overridesGetClassName(Ljava/lang/Class;)Z","safeGetClassName()Ljava/lang/String;","valid(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","validClassName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/SimpleType;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/SimpleType.class",
    "super": "Ljavax/management/openmbean/OpenType;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","isValue(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/management/openmbean/TabularData;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/TabularData.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/management/openmbean/TabularType;",
    "module": "java.management",
    "source": "/java.management/javax/management/openmbean/TabularType.class",
    "super": "Ljavax/management/openmbean/OpenType;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljavax/management/openmbean/CompositeType;[Ljava/lang/String;)V","checkForEmptyString([Ljava/lang/String;Ljava/lang/String;)V","checkForNullElement([Ljava/lang/Object;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getIndexNames()Ljava/util/List;","getRowType()Ljavax/management/openmbean/CompositeType;","hashCode()I","isAssignableFrom(Ljavax/management/openmbean/OpenType;)Z","isValue(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/CannotProceedException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/CannotProceedException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAltName()Ljavax/naming/Name;","getAltNameCtx()Ljavax/naming/Context;","getEnvironment()Ljava/util/Hashtable;","setAltName(Ljavax/naming/Name;)V","setAltNameCtx(Ljavax/naming/Context;)V","setEnvironment(Ljava/util/Hashtable;)V"]
  }
,
  {
    "className": "Ljavax/naming/CommunicationException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/CommunicationException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/CompositeName;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/CompositeName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/Name;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/util/Enumeration;)V","add(Ljava/lang/String;)Ljavax/naming/Name;","addAll(Ljavax/naming/Name;)Ljavax/naming/Name;","clone()Ljava/lang/Object;","compareTo(Ljava/lang/Object;)I","equals(Ljava/lang/Object;)Z","get(I)Ljava/lang/String;","getAll()Ljava/util/Enumeration;","getPrefix(I)Ljavax/naming/Name;","getSuffix(I)Ljavax/naming/Name;","hashCode()I","isEmpty()Z","remove(I)Ljava/lang/Object;","size()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/ConfigurationException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/ConfigurationException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/Context;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/Context.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/InitialContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/InitialContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/Context;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/Hashtable;)V","<init>(Z)V","addToEnvironment(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","close()V","getDefaultInitCtx()Ljavax/naming/Context;","getEnvironment()Ljava/util/Hashtable;","getURLOrDefaultInitCtx(Ljava/lang/String;)Ljavax/naming/Context;","getURLScheme(Ljava/lang/String;)Ljava/lang/String;","init(Ljava/util/Hashtable;)V","lookup(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/naming/InvalidNameException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/InvalidNameException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/LinkRef;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/LinkRef.class",
    "super": "Ljavax/naming/Reference;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/Name;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/Name.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;","Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/NameImpl;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NameImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Properties;)V","<init>(Ljava/util/Properties;Ljava/lang/String;)V","<init>(Ljava/util/Properties;Ljava/util/Enumeration;)V","add(Ljava/lang/String;)V","addAll(Ljava/util/Enumeration;)Z","compareTo(Ljavax/naming/NameImpl;)I","equals(Ljava/lang/Object;)Z","extractComp(Ljava/lang/String;IILjava/util/Vector;)I","get(I)Ljava/lang/String;","getAll()Ljava/util/Enumeration;","getBoolean(Ljava/util/Properties;Ljava/lang/String;)Z","getPrefix(I)Ljava/util/Enumeration;","getSuffix(I)Ljava/util/Enumeration;","hashCode()I","isA(Ljava/lang/String;ILjava/lang/String;)Z","isEmpty()Z","isMeta(Ljava/lang/String;I)Z","isSeparator(Ljava/lang/String;I)Z","recordNamingConvention(Ljava/util/Properties;)V","remove(I)Ljava/lang/Object;","size()I","skipSeparator(Ljava/lang/String;I)I","stringifyComp(Ljava/lang/String;)Ljava/lang/String;","toBoolean(Ljava/lang/String;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/NameImplEnumerator;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NameImplEnumerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Vector;II)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;","nextElement()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/NameNotFoundException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NameNotFoundException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/NameParser;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NameParser.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/NamingEnumeration;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NamingEnumeration.class",
    "super": "null",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/NamingException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NamingException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","appendRemainingComponent(Ljava/lang/String;)V","appendRemainingName(Ljavax/naming/Name;)V","getCause()Ljava/lang/Throwable;","getRemainingName()Ljavax/naming/Name;","getResolvedObj()Ljava/lang/Object;","getRootCause()Ljava/lang/Throwable;","initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;","setRemainingName(Ljavax/naming/Name;)V","setResolvedName(Ljavax/naming/Name;)V","setResolvedObj(Ljava/lang/Object;)V","setRootCause(Ljava/lang/Throwable;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/NoInitialContextException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/NoInitialContextException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/OperationNotSupportedException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/OperationNotSupportedException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/RefAddr;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/RefAddr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/Reference;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/Reference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljavax/naming/RefAddr;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","get(I)Ljavax/naming/RefAddr;","getAll()Ljava/util/Enumeration;","getFactoryClassLocation()Ljava/lang/String;","getFactoryClassName()Ljava/lang/String;","hashCode()I","size()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/Referenceable;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/Referenceable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/ServiceUnavailableException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/ServiceUnavailableException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/StringRefAddr;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/StringRefAddr.class",
    "super": "Ljavax/naming/RefAddr;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/directory/Attribute;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/Attribute.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/directory/Attributes;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/Attributes.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Cloneable;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/directory/BasicAttribute$ValuesEnumImpl;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/BasicAttribute$ValuesEnumImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/NamingEnumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/directory/BasicAttribute;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/naming/directory/BasicAttribute;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/BasicAttribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/directory/Attribute;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Z)V","add(Ljava/lang/Object;)Z","arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","find(Ljava/lang/Object;)I","get(I)Ljava/lang/Object;","getAll()Ljavax/naming/NamingEnumeration;","getID()Ljava/lang/String;","hashCode()I","isOrdered()Z","size()I","toString()Ljava/lang/String;","valueEquals(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljavax/naming/directory/BasicAttributes$AttrEnumImpl;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/BasicAttributes$AttrEnumImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/NamingEnumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/directory/BasicAttributes;)V","hasMore()Z","hasMoreElements()Z","next()Ljava/lang/Object;","next()Ljavax/naming/directory/Attribute;","nextElement()Ljava/lang/Object;","nextElement()Ljavax/naming/directory/Attribute;"]
  }
,
  {
    "className": "Ljavax/naming/directory/BasicAttributes;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/BasicAttributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/directory/Attributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","get(Ljava/lang/String;)Ljavax/naming/directory/Attribute;","getAll()Ljavax/naming/NamingEnumeration;","hashCode()I","isCaseIgnored()Z","put(Ljavax/naming/directory/Attribute;)Ljavax/naming/directory/Attribute;","size()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/naming/directory/DirContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/DirContext.class",
    "super": "null",
    "interfaces": ["Ljavax/naming/Context;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/directory/InitialDirContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/InitialDirContext.class",
    "super": "Ljavax/naming/InitialContext;",
    "interfaces": ["Ljavax/naming/directory/DirContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V"]
  }
,
  {
    "className": "Ljavax/naming/directory/InvalidAttributeIdentifierException;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/directory/InvalidAttributeIdentifierException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/naming/ldap/Control;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/ldap/Control.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/ldap/InitialLdapContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/ldap/InitialLdapContext.class",
    "super": "Ljavax/naming/directory/InitialDirContext;",
    "interfaces": ["Ljavax/naming/ldap/LdapContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Hashtable;[Ljavax/naming/ldap/Control;)V"]
  }
,
  {
    "className": "Ljavax/naming/ldap/LdapContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/ldap/LdapContext.class",
    "super": "null",
    "interfaces": ["Ljavax/naming/directory/DirContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/spi/ContinuationContext;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/ContinuationContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/naming/Context;","Ljavax/naming/spi/Resolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/CannotProceedException;Ljava/util/Hashtable;)V","getTargetContext()Ljavax/naming/Context;"]
  }
,
  {
    "className": "Ljavax/naming/spi/DirObjectFactory;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/DirObjectFactory.class",
    "super": "null",
    "interfaces": ["Ljavax/naming/spi/ObjectFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/spi/DirectoryManager;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/DirectoryManager.class",
    "super": "Ljavax/naming/spi/NamingManager;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createObjectFromFactories(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;Ljavax/naming/directory/Attributes;)Ljava/lang/Object;","getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;Ljavax/naming/directory/Attributes;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/naming/spi/InitialContextFactory;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/InitialContextFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/spi/NamingManager$FactoryInitializationError;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/NamingManager$FactoryInitializationError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/naming/NoInitialContextException;)V","getCause()Ljava/lang/Throwable;","getCause()Ljavax/naming/NoInitialContextException;"]
  }
,
  {
    "className": "Ljavax/naming/spi/NamingManager;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/NamingManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["createObjectFromFactories(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;","getContext(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljavax/naming/Context;","getContinuationContext(Ljavax/naming/CannotProceedException;)Ljavax/naming/Context;","getFactory(Ljava/lang/String;)Ljavax/naming/spi/InitialContextFactory;","getInitialContext(Ljava/util/Hashtable;)Ljavax/naming/Context;","getInitialContextFactoryBuilder()Ljavax/naming/spi/InitialContextFactoryBuilder;","getObjectFactoryBuilder()Ljavax/naming/spi/ObjectFactoryBuilder;","getObjectFactoryFromReference(Ljavax/naming/Reference;Ljava/lang/String;)Ljavax/naming/spi/ObjectFactory;","getObjectInstance(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;","getURLContext(Ljava/lang/String;Ljava/util/Hashtable;)Ljavax/naming/Context;","getURLObject(Ljava/lang/String;Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;","getURLScheme(Ljava/lang/String;)Ljava/lang/String;","hasInitialContextFactoryBuilder()Z","lambda$getFactory$2(Ljava/lang/String;Ljava/util/ServiceLoader$Provider;)Z","lambda$getInitialContext$1(Ljava/lang/ClassLoader;Ljdk/internal/loader/AbstractClassLoaderValue$Sub;)Ljavax/naming/spi/InitialContextFactory;","processURL(Ljava/lang/Object;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;","processURLAddrs(Ljavax/naming/Reference;Ljavax/naming/Name;Ljavax/naming/Context;Ljava/util/Hashtable;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/naming/spi/ObjectFactory;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/ObjectFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/naming/spi/ResolveResult;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/ResolveResult.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","appendRemainingComponent(Ljava/lang/String;)V","appendRemainingName(Ljavax/naming/Name;)V","getRemainingName()Ljavax/naming/Name;","getResolvedObj()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/naming/spi/Resolver;",
    "module": "java.naming",
    "source": "/java.naming/javax/naming/spi/Resolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/net/DefaultSocketFactory;",
    "module": "java.base",
    "source": "/java.base/javax/net/DefaultSocketFactory.class",
    "super": "Ljavax/net/SocketFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;"]
  }
,
  {
    "className": "Ljavax/net/SocketFactory;",
    "module": "java.base",
    "source": "/java.base/javax/net/SocketFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getDefault()Ljavax/net/SocketFactory;"]
  }
,
  {
    "className": "Ljavax/net/ssl/KeyManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/KeyManager.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/net/ssl/KeyManagerFactory$1;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/KeyManagerFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/net/ssl/KeyManagerFactory;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/KeyManagerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/net/ssl/KeyManagerFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V","getDefaultAlgorithm()Ljava/lang/String;","getInstance(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;","getKeyManagers()[Ljavax/net/ssl/KeyManager;","init(Ljava/security/KeyStore;[C)V"]
  }
,
  {
    "className": "Ljavax/net/ssl/KeyManagerFactorySpi;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/KeyManagerFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/net/ssl/SSLContextSpi;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/SSLContextSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/net/ssl/SSLSessionContext;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/SSLSessionContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/net/ssl/TrustManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/TrustManager.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/net/ssl/TrustManagerFactory$1;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/TrustManagerFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/net/ssl/TrustManagerFactory;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/TrustManagerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/net/ssl/TrustManagerFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V","getDefaultAlgorithm()Ljava/lang/String;","getInstance(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;","getProvider()Ljava/security/Provider;","getTrustManagers()[Ljavax/net/ssl/TrustManager;","init(Ljava/security/KeyStore;)V"]
  }
,
  {
    "className": "Ljavax/net/ssl/TrustManagerFactorySpi;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/TrustManagerFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/net/ssl/X509ExtendedKeyManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/X509ExtendedKeyManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/net/ssl/X509KeyManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/net/ssl/X509ExtendedTrustManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/X509ExtendedTrustManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/net/ssl/X509TrustManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/net/ssl/X509KeyManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/X509KeyManager.class",
    "super": "null",
    "interfaces": ["Ljavax/net/ssl/KeyManager;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/net/ssl/X509TrustManager;",
    "module": "java.base",
    "source": "/java.base/javax/net/ssl/X509TrustManager.class",
    "super": "null",
    "interfaces": ["Ljavax/net/ssl/TrustManager;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/DestroyFailedException;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/DestroyFailedException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/Destroyable;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/Destroyable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/callback/Callback;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/callback/Callback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/callback/CallbackHandler;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/callback/CallbackHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/callback/PasswordCallback;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/callback/PasswordCallback.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/auth/callback/Callback;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Z)V","clearPassword()V","getPassword()[C","setPassword([C)V"]
  }
,
  {
    "className": "Ljavax/security/auth/callback/UnsupportedCallbackException;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/callback/UnsupportedCallbackException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/security/auth/callback/Callback;)V"]
  }
,
  {
    "className": "Ljavax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/security/auth/login/AppConfigurationEntry;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/AppConfigurationEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljavax/security/auth/login/AppConfigurationEntry$LoginModuleControlFlag;Ljava/util/Map;)V"]
  }
,
  {
    "className": "Ljavax/security/auth/login/Configuration$Parameters;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/Configuration$Parameters.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/login/Configuration;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/Configuration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/auth/login/ConfigurationSpi;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/ConfigurationSpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/security/auth/login/FailedLoginException;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/FailedLoginException.class",
    "super": "Ljavax/security/auth/login/LoginException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/security/auth/login/LoginException;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/login/LoginException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/security/auth/x500/X500Principal;",
    "module": "java.base",
    "source": "/java.base/javax/security/auth/x500/X500Principal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/Principal;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/x509/X500Name;)V","equals(Ljava/lang/Object;)Z","getEncoded()[B","getName()Ljava/lang/String;","getName(Ljava/lang/String;)Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/security/sasl/SaslClientFactory;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/javax/security/sasl/SaslClientFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/security/sasl/SaslServerFactory;",
    "module": "java.security.sasl",
    "source": "/java.security.sasl/javax/security/sasl/SaslServerFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/DispatcherType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/DispatcherType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/Filter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/Filter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/FilterRegistration$Dynamic;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/FilterRegistration$Dynamic.class",
    "super": "null",
    "interfaces": ["Ljavax/servlet/FilterRegistration;","Ljavax/servlet/Registration$Dynamic;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/FilterRegistration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/FilterRegistration.class",
    "super": "null",
    "interfaces": ["Ljavax/servlet/Registration;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/MultipartConfigElement;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/MultipartConfigElement.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/Registration$Dynamic;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/Registration$Dynamic.class",
    "super": "null",
    "interfaces": ["Ljavax/servlet/Registration;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/Registration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/Registration.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/Servlet;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/Servlet.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletConfig;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletConfig.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletContextAttributeListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletContextAttributeListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletContextListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletContextListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletRegistration$Dynamic;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletRegistration$Dynamic.class",
    "super": "null",
    "interfaces": ["Ljavax/servlet/ServletRegistration;","Ljavax/servlet/Registration$Dynamic;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletRegistration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletRegistration.class",
    "super": "null",
    "interfaces": ["Ljavax/servlet/Registration;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletRequest;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletRequest.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletRequestAttributeListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletRequestAttributeListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletRequestListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletRequestListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/ServletResponse;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/ServletResponse.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/http/HttpSession;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/http/HttpSession.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/http/HttpSessionAttributeListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/http/HttpSessionAttributeListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/http/HttpSessionBindingListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/http/HttpSessionBindingListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/servlet/http/HttpSessionListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/tomcat-embed-core-9.0.39.jar!/javax/servlet/http/HttpSessionListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/smartcardio/CardTerminals;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/javax/smartcardio/CardTerminals.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/smartcardio/TerminalFactorySpi;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/javax/smartcardio/TerminalFactorySpi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/swing/SwingContainer;",
    "module": "java.desktop",
    "source": "/java.desktop/javax/swing/SwingContainer.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/catalog/AltCatalog;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/AltCatalog.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;Ljava/lang/String;)V","getCatalogURI()Ljava/net/URI;","setCatalog(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/BaseEntry$CatalogEntryType;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/BaseEntry$CatalogEntryType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getType(Ljava/lang/String;)Ljavax/xml/catalog/BaseEntry$CatalogEntryType;","isType(Ljava/lang/String;)Z","values()[Ljavax/xml/catalog/BaseEntry$CatalogEntryType;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/BaseEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/BaseEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;)V","<init>(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;Ljava/lang/String;)V","getBaseURI()Ljava/net/URL;","getMatchId()Ljava/lang/String;","setBaseURI(Ljava/lang/String;)V","setMatchId(Ljava/lang/String;)V","setType(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;)V","verifyURI(Ljava/lang/String;Ljava/net/URL;Ljava/lang/String;)Ljava/net/URL;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/Catalog;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/Catalog.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogEntry.class",
    "super": "Ljavax/xml/catalog/GroupEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogException;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogFeatures$Builder;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogFeatures$Builder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","build()Ljavax/xml/catalog/CatalogFeatures;","with(Ljavax/xml/catalog/CatalogFeatures$Feature;Ljava/lang/String;)Ljavax/xml/catalog/CatalogFeatures$Builder;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogFeatures$Feature;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogFeatures$Feature.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["defaultValue()Ljava/lang/String;","getPropertyName()Ljava/lang/String;","hasSystemProperty()Z","values()[Ljavax/xml/catalog/CatalogFeatures$Feature;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogFeatures$State;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogFeatures$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogFeatures;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogFeatures.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/CatalogFeatures$Builder;)V","builder()Ljavax/xml/catalog/CatalogFeatures$Builder;","defaults()Ljavax/xml/catalog/CatalogFeatures;","get(Ljavax/xml/catalog/CatalogFeatures$Feature;)Ljava/lang/String;","getSystemProperty(Ljavax/xml/catalog/CatalogFeatures$Feature;Ljava/lang/String;)Z","init()V","lambda$setProperties$0(Ljava/util/Map$Entry;)V","readSystemProperties()V","setProperties(Ljavax/xml/catalog/CatalogFeatures$Builder;)V","setProperty(Ljavax/xml/catalog/CatalogFeatures$Feature;Ljavax/xml/catalog/CatalogFeatures$State;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogImpl$1;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/CatalogImpl;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljavax/xml/catalog/Catalog;","nextCatalog()Ljavax/xml/catalog/Catalog;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogImpl;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogImpl.class",
    "super": "Ljavax/xml/catalog/GroupEntry;",
    "interfaces": ["Ljavax/xml/catalog/Catalog;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/CatalogFeatures;[Ljava/net/URI;)V","<init>(Ljavax/xml/catalog/CatalogImpl;Ljavax/xml/catalog/CatalogFeatures;[Ljava/net/URI;)V","addNextCatalog(Ljavax/xml/catalog/NextCatalog;)V","catalogs()Ljava/util/stream/Stream;","getCatalog(Ljavax/xml/catalog/CatalogImpl;Ljava/net/URI;)Ljavax/xml/catalog/Catalog;","getParser()Ljavax/xml/parsers/SAXParser;","getResolve()Ljavax/xml/catalog/GroupEntry$ResolveType;","init(Ljavax/xml/catalog/CatalogFeatures;)V","isDeferred()Z","isTop()Z","lambda$loadNextCatalogs$2(Ljavax/xml/catalog/NextCatalog;)V","lambda$loadNextCatalogs$3(Ljava/lang/String;)V","lambda$reset$0(Ljavax/xml/catalog/BaseEntry;)Z","lambda$reset$1(Ljavax/xml/catalog/BaseEntry;)V","load()V","loadNextCatalogs()V","markAsSearched()V","parse(Ljava/lang/String;)V","reset()V","setDeferred(Ljava/lang/String;)V","setResolve(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogManager;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["catalog(Ljavax/xml/catalog/CatalogFeatures;[Ljava/net/URI;)Ljavax/xml/catalog/Catalog;","catalogResolver(Ljavax/xml/catalog/CatalogFeatures;[Ljava/net/URI;)Ljavax/xml/catalog/CatalogResolver;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogMessages;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogMessages.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.isArray()",
    "invokedMethods": ["<clinit>()V","formatMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","formatMessage(Ljava/lang/String;[Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","reportError(Ljava/lang/String;)V","reportError(Ljava/lang/String;[Ljava/lang/Object;)V","reportIAE(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","reportNPEOnNull(Ljava/lang/String;Ljava/lang/Object;)V","reportRunTimeError(Ljava/lang/String;Ljava/lang/Throwable;)V","reportRunTimeError(Ljava/lang/String;[Ljava/lang/Object;)V","reportRunTimeError(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","sanitize(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogReader$1;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogReader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogReader;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogReader.class",
    "super": "Lorg/xml/sax/helpers/DefaultHandler;",
    "interfaces": ["Lorg/xml/sax/EntityResolver;","Ljavax/xml/transform/URIResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/Catalog;Ljavax/xml/parsers/SAXParser;)V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogResolver;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogResolver.class",
    "super": "null",
    "interfaces": ["Lorg/xml/sax/EntityResolver;","Ljavax/xml/stream/XMLResolver;","Ljavax/xml/transform/URIResolver;","Lorg/w3c/dom/ls/LSResourceResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogResolverImpl$1;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogResolverImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/CatalogResolverImpl;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/CatalogResolverImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/xml/catalog/CatalogResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/xml/catalog/Catalog;)V","resolve(Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","setEntityResolver(Ljavax/xml/transform/sax/SAXSource;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/DelegatePublic;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/DelegatePublic.class",
    "super": "Ljavax/xml/catalog/AltCatalog;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","matchURI(Ljava/lang/String;I)Ljava/net/URI;","setPublicIdStartString(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/DelegateSystem;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/DelegateSystem.class",
    "super": "Ljavax/xml/catalog/AltCatalog;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","matchURI(Ljava/lang/String;I)Ljava/net/URI;","setSystemIdStartString(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/DelegateUri;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/DelegateUri.class",
    "super": "Ljavax/xml/catalog/AltCatalog;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","matchURI(Ljava/lang/String;I)Ljava/net/URI;","setURIStartString(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/GroupEntry$1;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/GroupEntry$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/GroupEntry$PreferType;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/GroupEntry$PreferType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["prefer(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Ljavax/xml/catalog/GroupEntry$ResolveType;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/GroupEntry$ResolveType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getType(Ljava/lang/String;)Ljavax/xml/catalog/GroupEntry$ResolveType;","isType(Ljava/lang/String;)Z","values()[Ljavax/xml/catalog/GroupEntry$ResolveType;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/GroupEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/GroupEntry.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V","<init>(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;Ljavax/xml/catalog/CatalogImpl;)V","<init>(Ljavax/xml/catalog/CatalogImpl;Ljava/lang/String;[Ljava/lang/String;)V","addEntry(Ljavax/xml/catalog/BaseEntry;)V","getLoadedCatalog(Ljava/lang/String;)Ljavax/xml/catalog/CatalogImpl;","isCircular(Ljavax/xml/catalog/CatalogImpl;Ljava/lang/String;)Z","isPreferPublic()Z","lambda$loadDelegateCatalogs$0(Ljavax/xml/catalog/BaseEntry;)Z","lambda$loadDelegateCatalogs$1(Ljavax/xml/catalog/BaseEntry;)Ljavax/xml/catalog/AltCatalog;","lambda$loadDelegateCatalogs$2(Ljavax/xml/catalog/CatalogImpl;Ljavax/xml/catalog/AltCatalog;)V","loadDelegateCatalog(Ljavax/xml/catalog/CatalogImpl;Ljava/net/URI;)Ljavax/xml/catalog/Catalog;","loadDelegateCatalogs(Ljavax/xml/catalog/CatalogImpl;)V","matchDelegate(Ljavax/xml/catalog/BaseEntry$CatalogEntryType;Ljava/lang/String;)Ljava/lang/String;","matchPublic(Ljava/lang/String;)Ljava/lang/String;","matchSystem(Ljava/lang/String;)Ljava/lang/String;","matchURI(Ljava/lang/String;)Ljava/lang/String;","reset()V","setCatalog(Ljavax/xml/catalog/CatalogImpl;)V","setPrefer(Ljava/lang/String;)V","verifyCatalogFile(Ljavax/xml/catalog/CatalogImpl;Ljava/net/URI;)Z"]
  }
,
  {
    "className": "Ljavax/xml/catalog/NextCatalog;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/NextCatalog.class",
    "super": "Ljavax/xml/catalog/AltCatalog;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/Normalizer;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/Normalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decodeURN(Ljava/lang/String;)Ljava/lang/String;","normalizePublicId(Ljava/lang/String;)Ljava/lang/String;","normalizeURI(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/xml/catalog/PublicEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/PublicEntry.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","match(Ljava/lang/String;)Ljava/lang/String;","setPublicId(Ljava/lang/String;)V","setURI(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/RewriteSystem;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/RewriteSystem.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getSystemIdStartString()Ljava/lang/String;","match(Ljava/lang/String;I)Ljava/lang/String;","setRewritePrefix(Ljava/lang/String;)V","setSystemIdStartString(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/RewriteUri;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/RewriteUri.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getURIStartString()Ljava/lang/String;","match(Ljava/lang/String;I)Ljava/lang/String;","setRewritePrefix(Ljava/lang/String;)V","setURIStartString(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/SystemEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/SystemEntry.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","match(Ljava/lang/String;)Ljava/lang/String;","setSystemId(Ljava/lang/String;)V","setURI(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/SystemSuffix;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/SystemSuffix.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getSystemIdSuffix()Ljava/lang/String;","match(Ljava/lang/String;I)Ljava/lang/String;","setSystemIdSuffix(Ljava/lang/String;)V","setURI(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/UriEntry;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/UriEntry.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","match(Ljava/lang/String;)Ljava/lang/String;","setName(Ljava/lang/String;)V","setURI(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/UriSuffix;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/UriSuffix.class",
    "super": "Ljavax/xml/catalog/BaseEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getURISuffix()Ljava/lang/String;","match(Ljava/lang/String;I)Ljava/lang/String;","setURI(Ljava/lang/String;)V","setURISuffix(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/catalog/Util;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/catalog/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNotNullOrEmpty(Ljava/lang/String;)Ljava/lang/String;","isFileUri(Ljava/net/URI;)Z","isFileUriExist(Ljava/net/URI;Z)Z","resolve(Ljavax/xml/catalog/CatalogImpl;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","validateFeatureInput(Ljavax/xml/catalog/CatalogFeatures$Feature;Ljava/lang/String;)V","validateUriSyntax(Ljava/net/URI;)V","validateUrisSyntax([Ljava/lang/String;)V","validateUrisSyntax([Ljava/net/URI;)V"]
  }
,
  {
    "className": "Ljavax/xml/crypto/AlgorithmMethod;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/AlgorithmMethod.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/crypto/XMLStructure;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/XMLStructure.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/crypto/dsig/Transform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/dsig/Transform.class",
    "super": "null",
    "interfaces": ["Ljavax/xml/crypto/XMLStructure;","Ljavax/xml/crypto/AlgorithmMethod;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/crypto/dsig/TransformService;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/dsig/TransformService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/xml/crypto/dsig/Transform;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/xml/crypto/dsig/XMLSignatureFactory;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/dsig/XMLSignatureFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/xml/crypto/dsig/keyinfo/KeyInfoFactory;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/javax/xml/crypto/dsig/keyinfo/KeyInfoFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljavax/xml/datatype/DatatypeFactory;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/datatype/DatatypeFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Ljavax/xml/namespace/QName;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/namespace/QName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getLocalPart()Ljava/lang/String;","getNamespaceURI()Ljava/lang/String;","getPrefix()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/xml/parsers/DocumentBuilder;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/DocumentBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/io/InputStream;)Lorg/w3c/dom/Document;"]
  }
,
  {
    "className": "Ljavax/xml/parsers/DocumentBuilderFactory;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/DocumentBuilderFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isCoalescing()Z","isExpandEntityReferences()Z","isIgnoringComments()Z","isIgnoringElementContentWhitespace()Z","isNamespaceAware()Z","isValidating()Z","newInstance()Ljavax/xml/parsers/DocumentBuilderFactory;","setNamespaceAware(Z)V","setValidating(Z)V"]
  }
,
  {
    "className": "Ljavax/xml/parsers/FactoryConfigurationError;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/FactoryConfigurationError.class",
    "super": "Ljava/lang/Error;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;Ljava/lang/String;)V","<init>(Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljavax/xml/parsers/FactoryFinder$1;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/FactoryFinder$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/xml/parsers/FactoryFinder;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/FactoryFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.Properties.UNSAFE",
    "invokedMethods": ["<clinit>()V","dPrint(Ljava/util/function/Supplier;)V","find(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","findServiceProvider(Ljava/lang/Class;)Ljava/lang/Object;","getProviderClass(Ljava/lang/String;Ljava/lang/ClassLoader;ZZ)Ljava/lang/Class;","lambda$find$1(Ljava/lang/String;)Ljava/lang/String;","lambda$find$2(Ljava/lang/String;)Ljava/lang/String;","lambda$find$3(Ljava/io/File;)Ljava/lang/String;","lambda$find$4(Ljava/lang/String;)Ljava/lang/String;","lambda$find$5(Ljava/lang/String;)Ljava/lang/String;","lambda$newInstance$0(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/String;","newInstance(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/lang/Object;","newInstance(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/ClassLoader;ZZ)Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljavax/xml/parsers/ParserConfigurationException;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/ParserConfigurationException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljavax/xml/parsers/SAXParser;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/SAXParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Lorg/xml/sax/helpers/DefaultHandler;)V"]
  }
,
  {
    "className": "Ljavax/xml/parsers/SAXParserFactory;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/parsers/SAXParserFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newInstance()Ljavax/xml/parsers/SAXParserFactory;"]
  }
,
  {
    "className": "Ljavax/xml/stream/XMLResolver;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/XMLResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/stream/XMLStreamConstants;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/XMLStreamConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/stream/XMLStreamException;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/XMLStreamException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLocation()Ljavax/xml/stream/Location;","getNestedException()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Ljavax/xml/stream/events/Attribute;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/events/Attribute.class",
    "super": "null",
    "interfaces": ["Ljavax/xml/stream/events/XMLEvent;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/stream/events/Namespace;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/events/Namespace.class",
    "super": "null",
    "interfaces": ["Ljavax/xml/stream/events/Attribute;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/stream/events/ProcessingInstruction;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/events/ProcessingInstruction.class",
    "super": "null",
    "interfaces": ["Ljavax/xml/stream/events/XMLEvent;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/stream/events/XMLEvent;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/stream/events/XMLEvent.class",
    "super": "null",
    "interfaces": ["Ljavax/xml/stream/XMLStreamConstants;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/transform/Source;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/transform/Source.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/transform/URIResolver;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/transform/URIResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljavax/xml/transform/sax/SAXSource;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/transform/sax/SAXSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/xml/transform/Source;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/xml/sax/InputSource;)V","getSystemId()Ljava/lang/String;","getXMLReader()Lorg/xml/sax/XMLReader;","isEmpty()Z","setInputSource(Lorg/xml/sax/InputSource;)V","setXMLReader(Lorg/xml/sax/XMLReader;)V"]
  }
,
  {
    "className": "Ljavax/xml/validation/TypeInfoProvider;",
    "module": "java.xml",
    "source": "/java.xml/javax/xml/validation/TypeInfoProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/HotSpotIntrinsicCandidate;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/HotSpotIntrinsicCandidate.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/event/Event;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/event/Event.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/event/EventHelper;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/event/EventHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["isLoggingSecurity()Z","logX509CertificateEvent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJJJ)V"]
  }
,
  {
    "className": "Ljdk/internal/event/X509CertificateEvent;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/event/X509CertificateEvent.class",
    "super": "Ljdk/internal/event/Event;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","commit()V","shouldCommit()Z"]
  }
,
  {
    "className": "Ljdk/internal/jrtfs/JrtFileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/jrtfs/JrtFileSystemProvider.class",
    "super": "Ljava/nio/file/spi/FileSystemProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/AbstractClassLoaderValue$Memoizer$RecursiveInvocationException;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/AbstractClassLoaderValue$Memoizer$RecursiveInvocationException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/loader/AbstractClassLoaderValue$Memoizer;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/AbstractClassLoaderValue$Memoizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Supplier;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;Ljdk/internal/loader/AbstractClassLoaderValue;Ljava/util/function/BiFunction;)V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljdk/internal/loader/AbstractClassLoaderValue$Sub;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/AbstractClassLoaderValue$Sub.class",
    "super": "Ljdk/internal/loader/AbstractClassLoaderValue;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/loader/AbstractClassLoaderValue;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I","key()Ljava/lang/Object;","parent()Ljdk/internal/loader/AbstractClassLoaderValue;"]
  }
,
  {
    "className": "Ljdk/internal/loader/AbstractClassLoaderValue;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/AbstractClassLoaderValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","computeIfAbsent(Ljava/lang/ClassLoader;Ljava/util/function/BiFunction;)Ljava/lang/Object;","extractValue(Ljava/lang/Object;)Ljava/lang/Object;","map(Ljava/lang/ClassLoader;)Ljava/util/concurrent/ConcurrentHashMap;","sub(Ljava/lang/Object;)Ljdk/internal/loader/AbstractClassLoaderValue$Sub;"]
  }
,
  {
    "className": "Ljdk/internal/loader/BootLoader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/BootLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["definePackage(Ljava/lang/Class;)Ljava/lang/Package;","findResource(Ljava/lang/String;)Ljava/net/URL;","findResources(Ljava/lang/String;)Ljava/util/Enumeration;","getClassLoaderValueMap()Ljava/util/concurrent/ConcurrentHashMap;","getDefinedPackage(Ljava/lang/String;)Ljava/lang/Package;","getUnnamedModule()Ljava/lang/Module;","hasClassPath()Z","loadClass(Ljava/lang/Module;Ljava/lang/String;)Ljava/lang/Class;","loadClassOrNull(Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Ljdk/internal/loader/BuiltinClassLoader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/BuiltinClassLoader.class",
    "super": "Ljava/security/SecureClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/ClassLoaderValue;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/ClassLoaderValue.class",
    "super": "Ljdk/internal/loader/AbstractClassLoaderValue;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/ClassLoaders$AppClassLoader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/ClassLoaders$AppClassLoader.class",
    "super": "Ljdk/internal/loader/BuiltinClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/ClassLoaders$PlatformClassLoader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/ClassLoaders$PlatformClassLoader.class",
    "super": "Ljdk/internal/loader/BuiltinClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/ClassLoaders;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/ClassLoaders.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["platformClassLoader()Ljava/lang/ClassLoader;"]
  }
,
  {
    "className": "Ljdk/internal/loader/Loader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/Loader.class",
    "super": "Ljava/security/SecureClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/URLClassPath$Loader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/URLClassPath$Loader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/loader/URLClassPath;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/loader/URLClassPath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/net/URL;Ljava/net/URLStreamHandlerFactory;Ljava/security/AccessControlContext;)V","<init>([Ljava/net/URL;Ljava/security/AccessControlContext;)V","closeLoaders()Ljava/util/List;","getURLs()[Ljava/net/URL;"]
  }
,
  {
    "className": "Ljdk/internal/logger/AbstractLoggerWrapper;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/AbstractLoggerWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/System$Logger;","Lsun/util/logging/PlatformLogger$Bridge;","Lsun/util/logging/PlatformLogger$ConfigurableBridge;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","isLoggable(Ljava/lang/System$Logger$Level;)Z","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","lambda$logp$0(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/String;","lambda$logp$1(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/String;","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$BootstrapExecutors$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$BootstrapExecutors$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/logger/BootstrapLogger$BootstrapExecutors;Ljava/util/concurrent/ExecutorService;Ljava/lang/Runnable;)V","run()Ljava/lang/Object;","run()Ljava/lang/Thread;"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$BootstrapExecutors$BootstrapMessageLoggerTask;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$BootstrapExecutors$BootstrapMessageLoggerTask.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/concurrent/ExecutorService;Ljava/lang/Runnable;)V","run()V"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$BootstrapExecutors;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$BootstrapExecutors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/ThreadFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","enqueue(Ljdk/internal/logger/BootstrapLogger$LogEvent;)V","flush()V","getExecutor()Ljava/util/concurrent/ExecutorService;","newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;","submit(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$DetectBackend;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$DetectBackend.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$LogEvent;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$LogEvent.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V","<init>(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;[Ljava/lang/Object;)V","<init>(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;[Ljava/lang/Object;)V","<init>(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/Throwable;[Ljava/lang/Object;)V","lambda$log$0(Ljdk/internal/logger/BootstrapLogger$LogEvent;Ljava/lang/System$Logger;)V","log(Ljava/lang/System$Logger;)V","log(Ljdk/internal/logger/BootstrapLogger$LogEvent;)V","log(Ljdk/internal/logger/BootstrapLogger$LogEvent;Ljava/lang/System$Logger;)V","log(Ljdk/internal/logger/BootstrapLogger$LogEvent;Lsun/util/logging/PlatformLogger$Bridge;)V","log(Lsun/util/logging/PlatformLogger$Bridge;)V","valueOf(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/Throwable;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","valueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)Ljdk/internal/logger/BootstrapLogger$LogEvent;","vaueOf(Ljdk/internal/logger/BootstrapLogger;Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)Ljdk/internal/logger/BootstrapLogger$LogEvent;"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$LoggingBackend;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$LoggingBackend.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger$RedirectedLoggers;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger$RedirectedLoggers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)Ljdk/internal/logger/SurrogateLogger;","drainLoggersMap()Ljava/util/Map;","get(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)Ljdk/internal/logger/SurrogateLogger;","replaceSurrogateLoggers(Ljava/util/Map;)V"]
  }
,
  {
    "className": "Ljdk/internal/logger/BootstrapLogger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/BootstrapLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/System$Logger;","Lsun/util/logging/PlatformLogger$Bridge;","Lsun/util/logging/PlatformLogger$ConfigurableBridge;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)V","checkBootstrapping()Z","createSurrogateLogger(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)Ljava/lang/System$Logger;","flush(Ljdk/internal/logger/BootstrapLogger$LogEvent;)V","getLogger(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)Ljava/lang/System$Logger;","getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","isBooted()Z","isLoggable(Ljava/lang/System$Logger$Level;)Z","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","push(Ljdk/internal/logger/BootstrapLogger$LogEvent;)V","redirectTemporaryLoggers()V","releaseSurrogateLoggers()Ljava/util/Map;","useLazyLoggers()Z","useSurrogateLoggers()Z"]
  }
,
  {
    "className": "Ljdk/internal/logger/DefaultLoggerFinder$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/DefaultLoggerFinder$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Module;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljdk/internal/logger/DefaultLoggerFinder$SharedLoggers;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/DefaultLoggerFinder$SharedLoggers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/DefaultLoggerFinder;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/DefaultLoggerFinder.class",
    "super": "Ljava/lang/System$LoggerFinder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Void;)V","checkPermission()Ljava/lang/Void;","demandLoggerFor(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;","getLogger(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;","isSystem(Ljava/lang/Module;)Z"]
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/BiFunction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$JdkLazyLogger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$JdkLazyLogger.class",
    "super": "Ljdk/internal/logger/LazyLoggers$LazyLoggerWrapper;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Module;)V","<init>(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;Ljava/lang/Void;)V"]
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$LazyLoggerAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/logger/LazyLoggers$LoggerAccessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljdk/internal/logger/LazyLoggers$LazyLoggerFactories;Ljava/lang/Module;)V","<init>(Ljava/lang/String;Ljdk/internal/logger/LazyLoggers$LazyLoggerFactories;Ljava/lang/Module;Ljava/lang/Void;)V","createLogger()Ljava/lang/System$Logger;","getConcreteLogger(Ljdk/internal/logger/BootstrapLogger;)Ljava/lang/System$Logger;","getConcretePlatformLogger(Ljdk/internal/logger/BootstrapLogger;)Lsun/util/logging/PlatformLogger$Bridge;","getLoggerName()Ljava/lang/String;","makeAccessor(Ljava/lang/String;Ljdk/internal/logger/LazyLoggers$LazyLoggerFactories;Ljava/lang/Module;)Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;","platform()Lsun/util/logging/PlatformLogger$Bridge;","release(Ljdk/internal/logger/SimpleConsoleLogger;Z)V","setWrappedIfNotSet(Ljava/lang/System$Logger;)V","wrapped()Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$LazyLoggerFactories;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$LazyLoggerFactories.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$LazyLoggerWrapper;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$LazyLoggerWrapper.class",
    "super": "Ljdk/internal/logger/AbstractLoggerWrapper;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;)V","<init>(Ljdk/internal/logger/LazyLoggers$LazyLoggerAccessor;Ljava/lang/Void;)V","platformProxy()Lsun/util/logging/PlatformLogger$Bridge;","wrapped()Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers$LoggerAccessor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers$LoggerAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/logger/LazyLoggers;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LazyLoggers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accessLoggerFinder()Ljava/lang/System$LoggerFinder;","getLazyLogger(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;","getLogger(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;","getLoggerFromFinder(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LoggerFinderLoader$ErrorPolicy;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LoggerFinderLoader$ErrorPolicy.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["valueOf(Ljava/lang/String;)Ljdk/internal/logger/LoggerFinderLoader$ErrorPolicy;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LoggerFinderLoader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LoggerFinderLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["configurationErrorPolicy()Ljdk/internal/logger/LoggerFinderLoader$ErrorPolicy;","ensureSingletonProvider()Z","findLoggerFinderProviders()Ljava/util/Iterator;","getLoggerFinder()Ljava/lang/System$LoggerFinder;","loadDefaultImplementation()Ljava/lang/System$LoggerFinder;","loadLoggerFinder()Ljava/lang/System$LoggerFinder;","service()Ljava/lang/System$LoggerFinder;"]
  }
,
  {
    "className": "Ljdk/internal/logger/LoggerWrapper;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/LoggerWrapper.class",
    "super": "Ljdk/internal/logger/AbstractLoggerWrapper;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/System$Logger;)V","<init>(Ljava/lang/System$Logger;Ljava/lang/Void;)V","getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","isLoggable(Ljava/lang/System$Logger$Level;)Z","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","platformProxy()Lsun/util/logging/PlatformLogger$Bridge;","wrapped()Ljava/lang/System$Logger;"]
  }
,
  {
    "className": "Ljdk/internal/logger/SimpleConsoleLogger$CallerFinder;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/SimpleConsoleLogger$CallerFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Predicate;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","get()Ljava/util/Optional;","isLoggerImplFrame(Ljava/lang/String;)Z","lambda$get$0(Ljava/util/stream/Stream;)Ljava/util/Optional;","test(Ljava/lang/Object;)Z","test(Ljava/lang/StackWalker$StackFrame;)Z"]
  }
,
  {
    "className": "Ljdk/internal/logger/SimpleConsoleLogger$Formatting;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/SimpleConsoleLogger$Formatting.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["formatMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getSimpleFormat(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/String;","isFilteredFrame(Ljava/lang/StackWalker$StackFrame;)Z"]
  }
,
  {
    "className": "Ljdk/internal/logger/SimpleConsoleLogger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/SimpleConsoleLogger.class",
    "super": "Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;",
    "interfaces": ["Ljava/lang/System$Logger;","Lsun/util/logging/PlatformLogger$Bridge;","Lsun/util/logging/PlatformLogger$ConfigurableBridge;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Z)V","defaultPlatformLevel()Lsun/util/logging/PlatformLogger$Level;","effectiveLevel()Lsun/util/logging/PlatformLogger$Level;","format(Ljava/lang/Enum;Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/String;","getCallerInfo()Ljava/lang/String;","getCallerInfo(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","getPlatformLevel()Lsun/util/logging/PlatformLogger$Level;","getSimpleFormatString()Ljava/lang/String;","getString(Ljava/util/ResourceBundle;Ljava/lang/String;)Ljava/lang/String;","isLoggable(Ljava/lang/System$Logger$Level;)Z","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)V","logLevel(Ljava/lang/System$Logger$Level;)Ljava/lang/Enum;","logLevel(Lsun/util/logging/PlatformLogger$Level;)Ljava/lang/Enum;","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","makeSimpleLogger(Ljava/lang/String;)Ljdk/internal/logger/SimpleConsoleLogger;","outputStream()Ljava/io/PrintStream;","publish(Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;)V","publish(Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;Ljava/lang/Throwable;)V","publish(Ljava/lang/String;Ljava/lang/Enum;Ljava/lang/String;[Ljava/lang/Object;)V","setPlatformLevel(Lsun/util/logging/PlatformLogger$Level;)V","toString(Ljava/lang/Throwable;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/logger/SurrogateLogger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/logger/SurrogateLogger.class",
    "super": "Ljdk/internal/logger/SimpleConsoleLogger;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","defaultPlatformLevel()Lsun/util/logging/PlatformLogger$Level;","getSimpleFormat(Ljava/util/function/Function;)Ljava/lang/String;","getSimpleFormatString()Ljava/lang/String;","isFilteredFrame(Ljava/lang/StackWalker$StackFrame;)Z","makeSurrogateLogger(Ljava/lang/String;)Ljdk/internal/logger/SurrogateLogger;"]
  }
,
  {
    "className": "Ljdk/internal/math/FDBigInteger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FDBigInteger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(J[CII)V","<init>([II)V","add(Ljdk/internal/math/FDBigInteger;)Ljdk/internal/math/FDBigInteger;","addAndCmp(Ljdk/internal/math/FDBigInteger;Ljdk/internal/math/FDBigInteger;)I","big5pow(I)Ljdk/internal/math/FDBigInteger;","big5powRec(I)Ljdk/internal/math/FDBigInteger;","checkZeroTail([II)I","cmp(Ljdk/internal/math/FDBigInteger;)I","cmpPow52(II)I","getNormalizationBias()I","leftInplaceSub(Ljdk/internal/math/FDBigInteger;)Ljdk/internal/math/FDBigInteger;","leftShift(I)Ljdk/internal/math/FDBigInteger;","leftShift([II[IIII)V","makeImmutable()V","mult(I)Ljdk/internal/math/FDBigInteger;","mult(Ljdk/internal/math/FDBigInteger;)Ljdk/internal/math/FDBigInteger;","mult([IIII[I)V","mult([III[I)V","mult([II[II[I)V","multAddMe(II)V","multAndCarryBy10([II[I)I","multBy10()Ljdk/internal/math/FDBigInteger;","multByPow52(II)Ljdk/internal/math/FDBigInteger;","multDiffMe(JLjdk/internal/math/FDBigInteger;)J","quoRemIteration(Ljdk/internal/math/FDBigInteger;)I","rightInplaceSub(Ljdk/internal/math/FDBigInteger;)Ljdk/internal/math/FDBigInteger;","size()I","toBigInteger()Ljava/math/BigInteger;","toString()Ljava/lang/String;","trimLeadingZeros()V","valueOfMulPow52(JII)Ljdk/internal/math/FDBigInteger;","valueOfPow2(I)Ljdk/internal/math/FDBigInteger;","valueOfPow52(II)Ljdk/internal/math/FDBigInteger;"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Ljdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer;"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$ASCIIToBinaryBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ZI[CI)V","doubleValue()D","floatValue()F"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","appendTo(Ljava/lang/Appendable;)V","decimalDigitsExact()Z","developLongDigits(IJI)V","digitsRoundedUp()Z","dtoa(IJIZ)V","estimateDecExp(JI)I","getChars([C)I","getDecimalExponent()I","getDigits([C)I","insignificantDigitsForPow2(I)I","isExceptional()Z","isNegative()Z","roundup()V","setSign(Z)V","toJavaFormatString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$BinaryToASCIIConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$ExceptionalBinaryToASCIIBuffer;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$ExceptionalBinaryToASCIIBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["appendTo(Ljava/lang/Appendable;)V","decimalDigitsExact()Z","digitsRoundedUp()Z","getDecimalExponent()I","getDigits([C)I","isExceptional()Z","isNegative()Z","toJavaFormatString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$HexFloatPattern;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$HexFloatPattern.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal$PreparedASCIIToBinaryBuffer;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal$PreparedASCIIToBinaryBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(DF)V","doubleValue()D","floatValue()F"]
  }
,
  {
    "className": "Ljdk/internal/math/FloatingDecimal;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FloatingDecimal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["appendTo(DLjava/lang/Appendable;)V","appendTo(FLjava/lang/Appendable;)V","getBinaryToASCIIBuffer()Ljdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer;","getBinaryToASCIIConverter(D)Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;","getBinaryToASCIIConverter(DZ)Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;","getBinaryToASCIIConverter(F)Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;","getHexDigit(Ljava/lang/String;I)I","parseDouble(Ljava/lang/String;)D","parseFloat(Ljava/lang/String;)F","parseHexString(Ljava/lang/String;)Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter;","readJavaFormatString(Ljava/lang/String;)Ljdk/internal/math/FloatingDecimal$ASCIIToBinaryConverter;","stripLeadingZeros(Ljava/lang/String;)Ljava/lang/String;","toJavaFormatString(D)Ljava/lang/String;","toJavaFormatString(F)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/math/FormattedFloatingDecimal$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FormattedFloatingDecimal$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;"]
  }
,
  {
    "className": "Ljdk/internal/math/FormattedFloatingDecimal$2;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FormattedFloatingDecimal$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/math/FormattedFloatingDecimal$Form;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FormattedFloatingDecimal$Form.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/math/FormattedFloatingDecimal;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/math/FormattedFloatingDecimal.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(ILjdk/internal/math/FormattedFloatingDecimal$Form;Ljdk/internal/math/FloatingDecimal$BinaryToASCIIConverter;)V","applyPrecision(I[CII)I","create(ZI)[C","fillCompatible(I[CIIZ)V","fillDecimal(I[CIIZ)V","fillScientific(I[CIIZ)V","getBuffer()[C","getExponent()[C","getExponentRounded()I","getMantissa()[C","valueOf(DILjdk/internal/math/FormattedFloatingDecimal$Form;)Ljdk/internal/math/FormattedFloatingDecimal;"]
  }
,
  {
    "className": "Ljdk/internal/misc/InnocuousThread$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/InnocuousThread$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Ljava/lang/Thread;"]
  }
,
  {
    "className": "Ljdk/internal/misc/InnocuousThread;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/InnocuousThread.class",
    "super": "Ljava/lang/Thread;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/ClassLoader;)V","eraseThreadLocals()V","newName()Ljava/lang/String;","newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;","newThread(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Thread;","run()V","setContextClassLoader(Ljava/lang/ClassLoader;)V","setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V"]
  }
,
  {
    "className": "Ljdk/internal/misc/JavaAWTAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaAWTAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaBeansAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaBeansAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaIOAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaIOAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaIOFileDescriptorAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaIOFileDescriptorAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaIOFilePermissionAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaIOFilePermissionAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaIORandomAccessFileAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaIORandomAccessFileAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaLangAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaLangAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaLangRefAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaLangRefAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaNetInetAddressAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaNetInetAddressAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaSecurityAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaSecurityAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaUtilJarAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaUtilJarAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaUtilResourceBundleAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaUtilResourceBundleAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaUtilZipFileAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaUtilZipFileAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/JavaxCryptoSealedObjectAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/JavaxCryptoSealedObjectAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/SharedSecrets;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/SharedSecrets.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getEpollAccess()Lsun/nio/ch/EpollAccess;","getJavaAWTAccess()Ljdk/internal/misc/JavaAWTAccess;","getJavaBeansAccess()Ljdk/internal/misc/JavaBeansAccess;","getJavaIOAccess()Ljdk/internal/misc/JavaIOAccess;","getJavaIOFileDescriptorAccess()Ljdk/internal/misc/JavaIOFileDescriptorAccess;","getJavaIORandomAccessFileAccess()Ljdk/internal/misc/JavaIORandomAccessFileAccess;","getJavaLangAccess()Ljdk/internal/misc/JavaLangAccess;","getJavaLangRefAccess()Ljdk/internal/misc/JavaLangRefAccess;","getJavaSecurityAccess()Ljdk/internal/misc/JavaSecurityAccess;","getJavaxCryptoSealedObjectAccess()Ljdk/internal/misc/JavaxCryptoSealedObjectAccess;","getUnsafeAccess()Ljdk/internal/misc/UnsafeAccess;","getWispFileSyncIOAccess()Ljdk/internal/misc/WispFileSyncIOAccess;","setJavaAWTAccess(Ljdk/internal/misc/JavaAWTAccess;)V","setJavaBeansAccess(Ljdk/internal/misc/JavaBeansAccess;)V","setJavaIOFilePermissionAccess(Ljdk/internal/misc/JavaIOFilePermissionAccess;)V","setJavaIORandomAccessFileAccess(Ljdk/internal/misc/JavaIORandomAccessFileAccess;)V","setJavaNetInetAddressAccess(Ljdk/internal/misc/JavaNetInetAddressAccess;)V"]
  }
,
  {
    "className": "Ljdk/internal/misc/TerminatingThreadLocal$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/TerminatingThreadLocal$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Ljava/util/Collection;"]
  }
,
  {
    "className": "Ljdk/internal/misc/TerminatingThreadLocal;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/TerminatingThreadLocal.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["_threadTerminated()V","register(Ljdk/internal/misc/TerminatingThreadLocal;)V","set(Ljava/lang/Object;)V","threadTerminated()V"]
  }
,
  {
    "className": "Ljdk/internal/misc/Unsafe$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/Unsafe$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/UnsafeAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["park0(ZJ)V","unpark0(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljdk/internal/misc/Unsafe;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/Unsafe.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["allocateMemory(J)J","allocateMemory0(J)J","allocateMemoryChecks(J)V","allocateUninitializedArray(Ljava/lang/Class;I)Ljava/lang/Object;","arrayBaseOffset(Ljava/lang/Class;)I","arrayIndexScale(Ljava/lang/Class;)I","checkNativeAddress(J)V","checkOffset(Ljava/lang/Object;J)V","checkPointer(Ljava/lang/Object;J)V","checkPrimitiveArray(Ljava/lang/Class;)V","checkPrimitivePointer(Ljava/lang/Object;J)V","checkSize(J)V","compareAndSetInt(Ljava/lang/Object;JII)Z","compareAndSetLong(Ljava/lang/Object;JJJ)Z","compareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z","convEndian(ZI)I","convEndian(ZJ)J","copyMemory(JJJ)V","copyMemory(Ljava/lang/Object;JLjava/lang/Object;JJ)V","copyMemory0(Ljava/lang/Object;JLjava/lang/Object;JJ)V","copyMemoryChecks(Ljava/lang/Object;JLjava/lang/Object;JJ)V","ensureClassInitialized(Ljava/lang/Class;)V","freeMemory(J)V","freeMemory0(J)V","freeMemoryChecks(J)V","fullFence()V","getAndAddInt(Ljava/lang/Object;JI)I","getAndAddLong(Ljava/lang/Object;JJ)J","getAndBitwiseOrInt(Ljava/lang/Object;JI)I","getAndSetInt(Ljava/lang/Object;JI)I","getAndSetObject(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;","getBoolean(Ljava/lang/Object;J)Z","getByte(J)B","getByte(Ljava/lang/Object;J)B","getChar(Ljava/lang/Object;J)C","getDouble(Ljava/lang/Object;J)D","getFloat(Ljava/lang/Object;J)F","getInt(Ljava/lang/Object;J)I","getIntAcquire(Ljava/lang/Object;J)I","getIntUnaligned(Ljava/lang/Object;J)I","getIntUnaligned(Ljava/lang/Object;JZ)I","getIntVolatile(Ljava/lang/Object;J)I","getLong(Ljava/lang/Object;J)J","getLongUnaligned(Ljava/lang/Object;J)J","getLongUnaligned(Ljava/lang/Object;JZ)J","getObject(Ljava/lang/Object;J)Ljava/lang/Object;","getObjectAcquire(Ljava/lang/Object;J)Ljava/lang/Object;","getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;","getShort(Ljava/lang/Object;J)S","getUnsafe()Ljdk/internal/misc/Unsafe;","invalidInput()Ljava/lang/RuntimeException;","loadFence()V","objectFieldOffset(Ljava/lang/Class;Ljava/lang/String;)J","objectFieldOffset(Ljava/lang/reflect/Field;)J","pageSize()I","park(ZJ)V","park0(ZJ)V","putBoolean(Ljava/lang/Object;JZ)V","putByte(JB)V","putByte(Ljava/lang/Object;JB)V","putChar(Ljava/lang/Object;JC)V","putDouble(Ljava/lang/Object;JD)V","putFloat(Ljava/lang/Object;JF)V","putInt(Ljava/lang/Object;JI)V","putIntOpaque(Ljava/lang/Object;JI)V","putIntRelease(Ljava/lang/Object;JI)V","putIntUnaligned(Ljava/lang/Object;JI)V","putIntUnaligned(Ljava/lang/Object;JIZ)V","putLong(Ljava/lang/Object;JJ)V","putLongUnaligned(Ljava/lang/Object;JJ)V","putLongUnaligned(Ljava/lang/Object;JJZ)V","putObject(Ljava/lang/Object;JLjava/lang/Object;)V","putObjectRelease(Ljava/lang/Object;JLjava/lang/Object;)V","putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V","putShort(Ljava/lang/Object;JS)V","setMemory(JJB)V","setMemory(Ljava/lang/Object;JJB)V","setMemory0(Ljava/lang/Object;JJB)V","setMemoryChecks(Ljava/lang/Object;JJB)V","storeFence()V","unpark(Ljava/lang/Object;)V","unpark0(Ljava/lang/Object;)V","weakCompareAndSetInt(Ljava/lang/Object;JII)Z","weakCompareAndSetLong(Ljava/lang/Object;JJJ)Z","weakCompareAndSetObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Ljdk/internal/misc/UnsafeAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/UnsafeAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/misc/VM;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/VM.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addFinalRefCount(I)V","getNanoTimeAdjustment(J)J","initLevel()I","initLevel(I)V","isBooted()Z","isDirectMemoryPageAligned()Z","isModuleSystemInited()Z","isShutdown()Z","isSystemDomainLoader(Ljava/lang/ClassLoader;)Z","maxDirectMemory()J","shutdown()V","toThreadState(I)Ljava/lang/Thread$State;"]
  }
,
  {
    "className": "Ljdk/internal/misc/WispEngineAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/misc/WispEngineAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/module/IllegalAccessLogger$Mode;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/IllegalAccessLogger$Mode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/module/IllegalAccessLogger$StackWalkerHolder;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/IllegalAccessLogger$StackWalkerHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/module/IllegalAccessLogger$Usage;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/IllegalAccessLogger$Usage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Ljdk/internal/module/IllegalAccessLogger$Usages;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/IllegalAccessLogger$Usages.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljdk/internal/module/IllegalAccessLogger$Usage;)Z","removeEldestEntry(Ljava/util/Map$Entry;)Z"]
  }
,
  {
    "className": "Ljdk/internal/module/IllegalAccessLogger;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/IllegalAccessLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["codeSource(Ljava/lang/Class;)Ljava/net/URL;","hash(Ljava/util/List;)I","illegalAccessLogger()Ljdk/internal/module/IllegalAccessLogger;","isExportedForIllegalAccess(Ljava/lang/Module;Ljava/lang/String;)Z","isJavaBase(Ljava/lang/StackWalker$StackFrame;)Z","isOpenForIllegalAccess(Ljava/lang/Module;Ljava/lang/String;)Z","lambda$log$1(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;","lambda$log$2(Ljava/util/stream/Stream;)Ljava/util/List;","lambda$log$3(Ljava/lang/Class;)Ljdk/internal/module/IllegalAccessLogger$Usages;","lambda$log$4(Ljava/lang/StringBuilder;Ljava/lang/StackWalker$StackFrame;)V","lambda$logIfOpenedForIllegalAccess$0(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/String;","log(Ljava/lang/Class;Ljava/lang/String;)V","log(Ljava/lang/Class;Ljava/lang/String;Ljava/util/function/Supplier;)V","logIfExportedForIllegalAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Supplier;)V","logIfOpenedForIllegalAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Supplier;)V","logIfOpenedForIllegalAccess(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/Class;)V","loudWarning(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/module/ServicesCatalog$ServiceProvider;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/ServicesCatalog$ServiceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/module/ServicesCatalog;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/module/ServicesCatalog.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/AnnotationVisitor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/AnnotationVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/AnnotationVisitor;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/AnnotationWriter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/AnnotationWriter.class",
    "super": "Ljdk/internal/org/objectweb/asm/AnnotationVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/org/objectweb/asm/ClassWriter;ZLjdk/internal/org/objectweb/asm/ByteVector;Ljdk/internal/org/objectweb/asm/ByteVector;I)V","getSize()I","put(Ljdk/internal/org/objectweb/asm/ByteVector;)V","put([Ljdk/internal/org/objectweb/asm/AnnotationWriter;ILjdk/internal/org/objectweb/asm/ByteVector;)V","putTarget(ILjdk/internal/org/objectweb/asm/TypePath;Ljdk/internal/org/objectweb/asm/ByteVector;)V","visit(Ljava/lang/String;Ljava/lang/Object;)V","visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitArray(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitEnd()V","visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Attribute$NestHost;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Attribute$NestHost.class",
    "super": "Ljdk/internal/org/objectweb/asm/Attribute;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","read(Ljdk/internal/org/objectweb/asm/ClassReader;II[CI[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Attribute;","write(Ljdk/internal/org/objectweb/asm/ClassWriter;[BIII)Ljdk/internal/org/objectweb/asm/ByteVector;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Attribute$NestMembers;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Attribute$NestMembers.class",
    "super": "Ljdk/internal/org/objectweb/asm/Attribute;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","read(Ljdk/internal/org/objectweb/asm/ClassReader;II[CI[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Attribute;","write(Ljdk/internal/org/objectweb/asm/ClassWriter;[BIII)Ljdk/internal/org/objectweb/asm/ByteVector;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Attribute;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Attribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getCount()I","getSize(Ljdk/internal/org/objectweb/asm/ClassWriter;[BIII)I","isCodeAttribute()Z","put(Ljdk/internal/org/objectweb/asm/ClassWriter;[BIIILjdk/internal/org/objectweb/asm/ByteVector;)V","read(Ljdk/internal/org/objectweb/asm/ClassReader;II[CI[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Attribute;","write(Ljdk/internal/org/objectweb/asm/ClassWriter;[BIII)Ljdk/internal/org/objectweb/asm/ByteVector;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ByteVector;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ByteVector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","encodeUTF8(Ljava/lang/String;II)Ljdk/internal/org/objectweb/asm/ByteVector;","enlarge(I)V","put11(II)Ljdk/internal/org/objectweb/asm/ByteVector;","put12(II)Ljdk/internal/org/objectweb/asm/ByteVector;","putByte(I)Ljdk/internal/org/objectweb/asm/ByteVector;","putByteArray([BII)Ljdk/internal/org/objectweb/asm/ByteVector;","putInt(I)Ljdk/internal/org/objectweb/asm/ByteVector;","putLong(J)Ljdk/internal/org/objectweb/asm/ByteVector;","putShort(I)Ljdk/internal/org/objectweb/asm/ByteVector;","putUTF8(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/ByteVector;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ClassReader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ClassReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>([B)V","<init>([BII)V","accept(Ljdk/internal/org/objectweb/asm/ClassVisitor;I)V","accept(Ljdk/internal/org/objectweb/asm/ClassVisitor;[Ljdk/internal/org/objectweb/asm/Attribute;I)V","createDebugLabel(I[Ljdk/internal/org/objectweb/asm/Label;)V","createLabel(I[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Label;","getAttributes()I","getImplicitFrame(Ljdk/internal/org/objectweb/asm/Context;)V","readAnnotationTarget(Ljdk/internal/org/objectweb/asm/Context;I)I","readAnnotationValue(I[CLjava/lang/String;Ljdk/internal/org/objectweb/asm/AnnotationVisitor;)I","readAnnotationValues(I[CZLjdk/internal/org/objectweb/asm/AnnotationVisitor;)I","readAttribute([Ljdk/internal/org/objectweb/asm/Attribute;Ljava/lang/String;II[CI[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Attribute;","readByte(I)I","readClass(I[C)Ljava/lang/String;","readClass(Ljava/io/InputStream;Z)[B","readCode(Ljdk/internal/org/objectweb/asm/MethodVisitor;Ljdk/internal/org/objectweb/asm/Context;I)V","readConst(I[C)Ljava/lang/Object;","readField(Ljdk/internal/org/objectweb/asm/ClassVisitor;Ljdk/internal/org/objectweb/asm/Context;I)I","readFrame(IZZLjdk/internal/org/objectweb/asm/Context;)I","readFrameType([Ljava/lang/Object;II[C[Ljdk/internal/org/objectweb/asm/Label;)I","readInt(I)I","readLabel(I[Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Label;","readLong(I)J","readMethod(Ljdk/internal/org/objectweb/asm/ClassVisitor;Ljdk/internal/org/objectweb/asm/Context;I)I","readModule(I[C)Ljava/lang/String;","readModule(Ljdk/internal/org/objectweb/asm/ClassVisitor;Ljdk/internal/org/objectweb/asm/Context;ILjava/lang/String;I)V","readPackage(I[C)Ljava/lang/String;","readParameterAnnotations(Ljdk/internal/org/objectweb/asm/MethodVisitor;Ljdk/internal/org/objectweb/asm/Context;IZ)V","readShort(I)S","readStringish(I[C)Ljava/lang/String;","readTypeAnnotations(Ljdk/internal/org/objectweb/asm/MethodVisitor;Ljdk/internal/org/objectweb/asm/Context;IZ)[I","readUTF(II[C)Ljava/lang/String;","readUTF8(I[C)Ljava/lang/String;","readUnsignedShort(I)I"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ClassVisitor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ClassVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/ClassVisitor;)V","visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitEnd()V","visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljdk/internal/org/objectweb/asm/FieldVisitor;","visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/MethodVisitor;","visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitSource(Ljava/lang/String;Ljava/lang/String;)V","visitTypeAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ClassWriter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ClassWriter.class",
    "super": "Ljdk/internal/org/objectweb/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","addType(Ljava/lang/String;)I","addType(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;","addUninitializedType(Ljava/lang/String;I)I","get(Ljdk/internal/org/objectweb/asm/Item;)Ljdk/internal/org/objectweb/asm/Item;","getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getMergedType(II)I","newClass(Ljava/lang/String;)I","newConst(Ljava/lang/Object;)I","newConstItem(Ljava/lang/Object;)Ljdk/internal/org/objectweb/asm/Item;","newDouble(D)Ljdk/internal/org/objectweb/asm/Item;","newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","newFieldItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;","newFloat(F)Ljdk/internal/org/objectweb/asm/Item;","newHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I","newHandleItem(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/Item;","newInteger(I)Ljdk/internal/org/objectweb/asm/Item;","newInvokeDynamicItem(Ljava/lang/String;Ljava/lang/String;Ljdk/internal/org/objectweb/asm/Handle;[Ljava/lang/Object;)Ljdk/internal/org/objectweb/asm/Item;","newLong(J)Ljdk/internal/org/objectweb/asm/Item;","newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I","newMethodItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/Item;","newModule(Ljava/lang/String;)I","newNameType(Ljava/lang/String;Ljava/lang/String;)I","newNameTypeItem(Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;","newPackage(Ljava/lang/String;)I","newStringishItem(ILjava/lang/String;)Ljdk/internal/org/objectweb/asm/Item;","newUTF8(Ljava/lang/String;)I","put(Ljdk/internal/org/objectweb/asm/Item;)V","put112(III)V","put122(III)V","toByteArray()[B","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitAttribute(Ljdk/internal/org/objectweb/asm/Attribute;)V","visitEnd()V","visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljdk/internal/org/objectweb/asm/FieldVisitor;","visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/MethodVisitor;","visitModule(Ljava/lang/String;ILjava/lang/String;)Ljdk/internal/org/objectweb/asm/ModuleVisitor;","visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitSource(Ljava/lang/String;Ljava/lang/String;)V","visitTypeAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Context;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Context.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/CurrentFrame;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/CurrentFrame.class",
    "super": "Ljdk/internal/org/objectweb/asm/Frame;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","execute(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Edge;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Edge.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/FieldVisitor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/FieldVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/FieldVisitor;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/FieldWriter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/FieldWriter.class",
    "super": "Ljdk/internal/org/objectweb/asm/FieldVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/org/objectweb/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V","getSize()I","put(Ljdk/internal/org/objectweb/asm/ByteVector;)V","visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitAttribute(Ljdk/internal/org/objectweb/asm/Attribute;)V","visitEnd()V","visitTypeAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Frame;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Frame.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","convert(Ljdk/internal/org/objectweb/asm/ClassWriter;I[Ljava/lang/Object;[I)I","execute(IILjdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Item;)V","get(I)I","init(I)V","init(Ljdk/internal/org/objectweb/asm/ClassWriter;I)I","initInputFrame(Ljdk/internal/org/objectweb/asm/ClassWriter;I[Ljdk/internal/org/objectweb/asm/Type;I)V","merge(Ljdk/internal/org/objectweb/asm/ClassWriter;I[II)Z","merge(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljdk/internal/org/objectweb/asm/Frame;I)Z","pop()I","pop(I)V","pop(Ljava/lang/String;)V","push(I)V","push(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)V","set(II)V","set(Ljdk/internal/org/objectweb/asm/ClassWriter;I[Ljava/lang/Object;I[Ljava/lang/Object;)V","set(Ljdk/internal/org/objectweb/asm/Frame;)V","type(Ljdk/internal/org/objectweb/asm/ClassWriter;Ljava/lang/String;)I"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Handle;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Handle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","hashCode()I","isInterface()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Handler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Handler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","remove(Ljdk/internal/org/objectweb/asm/Handler;Ljdk/internal/org/objectweb/asm/Label;Ljdk/internal/org/objectweb/asm/Label;)Ljdk/internal/org/objectweb/asm/Handler;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Item;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Item.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/Item;)V","isEqualTo(Ljdk/internal/org/objectweb/asm/Item;)Z","set(D)V","set(F)V","set(I)V","set(II)V","set(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","set(J)V","set(Ljava/lang/String;Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Label;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Label.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addReference(II)V","addToSubroutine(JI)V","getFirst()Ljdk/internal/org/objectweb/asm/Label;","inSameSubroutine(Ljdk/internal/org/objectweb/asm/Label;)Z","inSubroutine(J)Z","put(Ljdk/internal/org/objectweb/asm/MethodWriter;Ljdk/internal/org/objectweb/asm/ByteVector;IZ)V","resolve(Ljdk/internal/org/objectweb/asm/MethodWriter;I[B)Z","toString()Ljava/lang/String;","visitSubroutine(Ljdk/internal/org/objectweb/asm/Label;JI)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/MethodVisitor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/MethodVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/MethodVisitor;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/MethodWriter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/MethodWriter.class",
    "super": "Ljdk/internal/org/objectweb/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/org/objectweb/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V","addSuccessor(ILjdk/internal/org/objectweb/asm/Label;)V","endFrame()V","getSize()I","noSuccessor()V","put(Ljdk/internal/org/objectweb/asm/ByteVector;)V","startFrame(III)I","visitAnnotation(Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitAnnotationDefault()Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitAttribute(Ljdk/internal/org/objectweb/asm/Attribute;)V","visitCode()V","visitEnd()V","visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V","visitFrame(Ljdk/internal/org/objectweb/asm/Frame;)V","visitIincInsn(II)V","visitImplicitFirstFrame()V","visitInsn(I)V","visitInsnAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitIntInsn(II)V","visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Ljdk/internal/org/objectweb/asm/Handle;[Ljava/lang/Object;)V","visitJumpInsn(ILjdk/internal/org/objectweb/asm/Label;)V","visitLabel(Ljdk/internal/org/objectweb/asm/Label;)V","visitLdcInsn(Ljava/lang/Object;)V","visitLineNumber(ILjdk/internal/org/objectweb/asm/Label;)V","visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljdk/internal/org/objectweb/asm/Label;Ljdk/internal/org/objectweb/asm/Label;I)V","visitLocalVariableAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;[Ljdk/internal/org/objectweb/asm/Label;[Ljdk/internal/org/objectweb/asm/Label;[ILjava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitLookupSwitchInsn(Ljdk/internal/org/objectweb/asm/Label;[I[Ljdk/internal/org/objectweb/asm/Label;)V","visitMaxs(II)V","visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","visitMultiANewArrayInsn(Ljava/lang/String;I)V","visitParameter(Ljava/lang/String;I)V","visitParameterAnnotation(ILjava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitSwitchInsn(Ljdk/internal/org/objectweb/asm/Label;[Ljdk/internal/org/objectweb/asm/Label;)V","visitTableSwitchInsn(IILjdk/internal/org/objectweb/asm/Label;[Ljdk/internal/org/objectweb/asm/Label;)V","visitTryCatchAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitTryCatchBlock(Ljdk/internal/org/objectweb/asm/Label;Ljdk/internal/org/objectweb/asm/Label;Ljdk/internal/org/objectweb/asm/Label;Ljava/lang/String;)V","visitTypeAnnotation(ILjdk/internal/org/objectweb/asm/TypePath;Ljava/lang/String;Z)Ljdk/internal/org/objectweb/asm/AnnotationVisitor;","visitTypeInsn(ILjava/lang/String;)V","visitVarInsn(II)V","writeFrame()V","writeFrameType(Ljava/lang/Object;)V","writeFrameTypes(II)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ModuleVisitor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ModuleVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjdk/internal/org/objectweb/asm/ModuleVisitor;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/ModuleWriter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/ModuleWriter.class",
    "super": "Ljdk/internal/org/objectweb/asm/ModuleVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/org/objectweb/asm/ClassWriter;III)V","put(Ljdk/internal/org/objectweb/asm/ByteVector;)V","putAttributes(Ljdk/internal/org/objectweb/asm/ByteVector;)V","visitEnd()V","visitExport(Ljava/lang/String;I[Ljava/lang/String;)V","visitMainClass(Ljava/lang/String;)V","visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V","visitPackage(Ljava/lang/String;)V","visitProvide(Ljava/lang/String;[Ljava/lang/String;)V","visitRequire(Ljava/lang/String;ILjava/lang/String;)V","visitUse(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Opcodes;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Opcodes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/Type;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/Type.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I[CII)V","equals(Ljava/lang/Object;)Z","getArgumentTypes(Ljava/lang/String;)[Ljdk/internal/org/objectweb/asm/Type;","getArgumentsAndReturnSizes(Ljava/lang/String;)I","getDescriptor()Ljava/lang/String;","getDescriptor(Ljava/lang/StringBuilder;)V","getInternalName()Ljava/lang/String;","getMethodType(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Type;","getObjectType(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Type;","getSort()I","getType(Ljava/lang/String;)Ljdk/internal/org/objectweb/asm/Type;","getType([CI)Ljdk/internal/org/objectweb/asm/Type;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/org/objectweb/asm/TypePath;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/objectweb/asm/TypePath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","getLength()I","getStep(I)I","getStepArgument(I)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/Attributes;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/Attributes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/ContentHandler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/ContentHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/DTDHandler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/DTDHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["startDTD(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","startInternalSub()V"]
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/EntityResolver;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/EntityResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/ErrorHandler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/ErrorHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/InputSource;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/InputSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","getByteStream()Ljava/io/InputStream;","getCharacterStream()Ljava/io/Reader;","getEncoding()Ljava/lang/String;","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","setByteStream(Ljava/io/InputStream;)V"]
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/Locator;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/Locator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/SAXException;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/SAXException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getCause()Ljava/lang/Throwable;","getMessage()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/SAXParseException;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/SAXParseException.class",
    "super": "Ljdk/internal/org/xml/sax/SAXException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljdk/internal/org/xml/sax/Locator;)V","init(Ljava/lang/String;Ljava/lang/String;II)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/XMLReader;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/XMLReader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/org/xml/sax/helpers/DefaultHandler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/org/xml/sax/helpers/DefaultHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/org/xml/sax/EntityResolver;","Ljdk/internal/org/xml/sax/DTDHandler;","Ljdk/internal/org/xml/sax/ContentHandler;","Ljdk/internal/org/xml/sax/ErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","characters([CII)V","endDocument()V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","endPrefixMapping(Ljava/lang/String;)V","fatalError(Ljdk/internal/org/xml/sax/SAXParseException;)V","notationDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","processingInstruction(Ljava/lang/String;Ljava/lang/String;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/xml/sax/InputSource;","setDocumentLocator(Ljdk/internal/org/xml/sax/Locator;)V","skippedEntity(Ljava/lang/String;)V","startDocument()V","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljdk/internal/org/xml/sax/Attributes;)V","startPrefixMapping(Ljava/lang/String;Ljava/lang/String;)V","unparsedEntityDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljdk/internal/perf/PerfCounter$CoreCounters;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/perf/PerfCounter$CoreCounters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/perf/PerfCounter;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/perf/PerfCounter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["add(J)V","addElapsedTimeFrom(J)V","get()J","getZipFileCount()Ljdk/internal/perf/PerfCounter;","getZipFileOpenTime()Ljdk/internal/perf/PerfCounter;","increment()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/ref/Cleaner$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/Cleaner$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljdk/internal/ref/Cleaner;Ljava/lang/Throwable;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Ljdk/internal/ref/Cleaner;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/Cleaner.class",
    "super": "Ljava/lang/ref/PhantomReference;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Runnable;)V","add(Ljdk/internal/ref/Cleaner;)Ljdk/internal/ref/Cleaner;","clean()V","create(Ljava/lang/Object;Ljava/lang/Runnable;)Ljdk/internal/ref/Cleaner;","remove(Ljdk/internal/ref/Cleaner;)Z"]
  }
,
  {
    "className": "Ljdk/internal/ref/CleanerFactory;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/CleanerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["cleaner()Ljava/lang/ref/Cleaner;"]
  }
,
  {
    "className": "Ljdk/internal/ref/CleanerImpl$PhantomCleanableRef;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/CleanerImpl$PhantomCleanableRef.class",
    "super": "Ljdk/internal/ref/PhantomCleanable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/ref/Cleaner;Ljava/lang/Runnable;)V","clear()V","get()Ljava/lang/Object;","performCleanup()V"]
  }
,
  {
    "className": "Ljdk/internal/ref/CleanerImpl$SoftCleanableRef;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/CleanerImpl$SoftCleanableRef.class",
    "super": "Ljdk/internal/ref/SoftCleanable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["clear()V","get()Ljava/lang/Object;","performCleanup()V"]
  }
,
  {
    "className": "Ljdk/internal/ref/CleanerImpl$WeakCleanableRef;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/CleanerImpl$WeakCleanableRef.class",
    "super": "Ljdk/internal/ref/WeakCleanable;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["clear()V","get()Ljava/lang/Object;","performCleanup()V"]
  }
,
  {
    "className": "Ljdk/internal/ref/CleanerImpl;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/CleanerImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCleanerImpl(Ljava/lang/ref/Cleaner;)Ljdk/internal/ref/CleanerImpl;","run()V"]
  }
,
  {
    "className": "Ljdk/internal/ref/PhantomCleanable;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/PhantomCleanable.class",
    "super": "Ljava/lang/ref/PhantomReference;",
    "interfaces": ["Ljava/lang/ref/Cleaner$Cleanable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/ref/Cleaner;)V","clean()V","clear()V","insert()V","isListEmpty()Z","remove()Z"]
  }
,
  {
    "className": "Ljdk/internal/ref/SoftCleanable;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/SoftCleanable.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": ["Ljava/lang/ref/Cleaner$Cleanable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clean()V","isListEmpty()Z","remove()Z"]
  }
,
  {
    "className": "Ljdk/internal/ref/WeakCleanable;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/ref/WeakCleanable.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": ["Ljava/lang/ref/Cleaner$Cleanable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clean()V","isListEmpty()Z","remove()Z"]
  }
,
  {
    "className": "Ljdk/internal/reflect/AccessorGenerator;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/AccessorGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/reflect/ClassFileConstants;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/reflect/ClassFileConstants;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/ClassFileConstants.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/ConstructorAccessor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/ConstructorAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/ConstructorAccessorImpl;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/ConstructorAccessorImpl.class",
    "super": "Ljdk/internal/reflect/MagicAccessorImpl;",
    "interfaces": ["Ljdk/internal/reflect/ConstructorAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/FieldAccessor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/FieldAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/LangReflectAccess;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/LangReflectAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/MagicAccessorImpl;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/MagicAccessorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/MethodAccessor;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/MethodAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/reflect/MethodAccessorGenerator;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/MethodAccessorGenerator.class",
    "super": "Ljdk/internal/reflect/AccessorGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","generateSerializationConstructor(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;ILjava/lang/Class;)Ljdk/internal/reflect/SerializationConstructorAccessorImpl;"]
  }
,
  {
    "className": "Ljdk/internal/reflect/Reflection;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/Reflection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["areNestMates(Ljava/lang/Class;Ljava/lang/Class;)Z","getCallerClass()Ljava/lang/Class;","getClassAccessFlags(Ljava/lang/Class;)I","isSameClassPackage(Ljava/lang/Class;Ljava/lang/Class;)Z","isSubclassOf(Ljava/lang/Class;Ljava/lang/Class;)Z","newIllegalAccessException(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)Ljava/lang/IllegalAccessException;","verifyMemberAccess(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;I)Z","verifyModuleAccess(Ljava/lang/Module;Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Ljdk/internal/reflect/ReflectionFactory;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/ReflectionFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["copyConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;","copyField(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Field;","copyMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","generateConstructor(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;","getExecutableSharedParameterTypes(Ljava/lang/reflect/Executable;)[Ljava/lang/Class;","getReflectionFactory()Ljdk/internal/reflect/ReflectionFactory;","langReflectAccess()Ljdk/internal/reflect/LangReflectAccess;","newConstructor(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;IILjava/lang/String;[B[B)Ljava/lang/reflect/Constructor;","newConstructorForSerialization(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","packageEquals(Ljava/lang/Class;Ljava/lang/Class;)Z","setConstructorAccessor(Ljava/lang/reflect/Constructor;Ljdk/internal/reflect/ConstructorAccessor;)V","superHasAccessibleConstructor(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Ljdk/internal/reflect/SerializationConstructorAccessorImpl;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/reflect/SerializationConstructorAccessorImpl.class",
    "super": "Ljdk/internal/reflect/ConstructorAccessorImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/util/ArraysSupport;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/ArraysSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["vectorizedMismatch(Ljava/lang/Object;JLjava/lang/Object;JII)I"]
  }
,
  {
    "className": "Ljdk/internal/util/Preconditions$1;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/Preconditions$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/BiFunction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Function;)V","apply(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/lang/String;Ljava/util/List;)Ljava/lang/RuntimeException;"]
  }
,
  {
    "className": "Ljdk/internal/util/Preconditions;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/Preconditions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkFromIndexSize(IIILjava/util/function/BiFunction;)I","checkIndex(IILjava/util/function/BiFunction;)I","outOfBounds(Ljava/util/function/BiFunction;Ljava/lang/String;[Ljava/lang/Integer;)Ljava/lang/RuntimeException;","outOfBoundsCheckFromIndexSize(Ljava/util/function/BiFunction;III)Ljava/lang/RuntimeException;","outOfBoundsCheckIndex(Ljava/util/function/BiFunction;II)Ljava/lang/RuntimeException;","outOfBoundsExceptionFormatter(Ljava/util/function/Function;)Ljava/util/function/BiFunction;","outOfBoundsMessage(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/util/StaticProperty;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/StaticProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/internal/util/xml/PropertiesDefaultHandler;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/PropertiesDefaultHandler.class",
    "super": "Ljdk/internal/org/xml/sax/helpers/DefaultHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","characters([CII)V","endElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","fatalError(Ljdk/internal/org/xml/sax/SAXParseException;)V","load(Ljava/util/Properties;Ljava/io/InputStream;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/xml/sax/InputSource;","startDTD(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","startElement(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljdk/internal/org/xml/sax/Attributes;)V","startInternalSub()V"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/SAXParser;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/SAXParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/Attrs;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/Attrs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/org/xml/sax/Attributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getIndex(Ljava/lang/String;)I","getValue(Ljava/lang/String;)Ljava/lang/String;","setLength(C)V"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/Input;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/Input.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>([C)V"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/Pair;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/Pair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","eqname([C)Z","eqpref([C)Z","local()Ljava/lang/String;","qname()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/Parser;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/Parser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","attr(Ljdk/internal/util/xml/impl/Pair;)V","atype(Ljdk/internal/util/xml/impl/Pair;)Ljava/lang/String;","bappend(C)V","bappend(CC)V","bcopy(II)V","bkch()V","bkeyword()C","bname(Z)V","bntok()V","bom(Ljava/io/InputStream;C)Ljava/io/Reader;","bqstr(C)V","cdat()V","chtyp(C)C","cleanup()V","comm()V","del(Ljdk/internal/util/xml/impl/Pair;)Ljdk/internal/util/xml/impl/Pair;","dtd()V","dtdatt(Ljdk/internal/util/xml/impl/Pair;)V","dtdattl()V","dtdelm()V","dtdent()V","dtdnot()V","dtdsub()V","eappend(C)V","enc(Ljava/lang/String;Ljava/io/InputStream;)Ljava/io/Reader;","ent(C)Ljava/lang/String;","eqstr(C)Ljava/lang/String;","find(Ljdk/internal/util/xml/impl/Pair;[C)Ljdk/internal/util/xml/impl/Pair;","getch()C","init()V","isdecl(Ljdk/internal/util/xml/impl/Pair;Ljava/lang/String;)Z","name(Z)Ljava/lang/String;","pair(Ljdk/internal/util/xml/impl/Pair;)Ljdk/internal/util/xml/impl/Pair;","pent(C)V","pi()V","pop()V","pubsys(C)Ljdk/internal/util/xml/impl/Pair;","push(Ljdk/internal/util/xml/impl/Input;)V","qname(Z)[C","rslv([C)Ljava/lang/String;","setch(C)V","setinp(Ljdk/internal/org/xml/sax/InputSource;)V","step()I","utf16(Ljava/io/InputStream;)Ljava/io/Reader;","wsskip()C","xml(Ljava/io/Reader;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/ParserSAX;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/ParserSAX.class",
    "super": "Ljdk/internal/util/xml/impl/Parser;",
    "interfaces": ["Ljdk/internal/org/xml/sax/XMLReader;","Ljdk/internal/org/xml/sax/Locator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","bflash()V","bflash_ws()V","comm([CI)V","docType(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","getColumnNumber()I","getLineNumber()I","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","newPrefix()V","notDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","panic(Ljava/lang/String;)V","parse()V","parse(Ljava/io/InputStream;Ljdk/internal/org/xml/sax/helpers/DefaultHandler;)V","parse(Ljdk/internal/org/xml/sax/InputSource;Ljdk/internal/org/xml/sax/helpers/DefaultHandler;)V","pi(Ljava/lang/String;Ljava/lang/String;)V","resolveEnt(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljdk/internal/org/xml/sax/InputSource;","skippedEnt(Ljava/lang/String;)V","startInternalSub()V","unparsedEntDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/ReaderUTF16;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/ReaderUTF16.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;C)V","close()V","read()I","read([CII)I"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/ReaderUTF8;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/ReaderUTF8.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","close()V","read()I","read([CII)I"]
  }
,
  {
    "className": "Ljdk/internal/util/xml/impl/SAXParserImpl;",
    "module": "java.base",
    "source": "/java.base/jdk/internal/util/xml/impl/SAXParserImpl.class",
    "super": "Ljdk/internal/util/xml/SAXParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/io/InputStream;Ljdk/internal/org/xml/sax/helpers/DefaultHandler;)V"]
  }
,
  {
    "className": "Ljdk/net/ExtendedSocketOptions$1;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/ExtendedSocketOptions$1.class",
    "super": "Lsun/net/ext/ExtendedSocketOptions;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/util/Set;)V","getOption(Ljava/io/FileDescriptor;Ljava/net/SocketOption;)Ljava/lang/Object;","setOption(Ljava/io/FileDescriptor;Ljava/net/SocketOption;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Ljdk/net/ExtendedSocketOptions$ExtSocketOption;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/ExtendedSocketOptions$ExtSocketOption.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/SocketOption;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;)V","name()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions$1;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/ExtendedSocketOptions$PlatformSocketOptions$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/ExtendedSocketOptions$PlatformSocketOptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","create()Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions;","flowSupported()Z","get()Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions;","getFlowOption(ILjdk/net/SocketFlow;)I","getQuickAck(I)Z","getTcpKeepAliveIntvl(I)I","getTcpKeepAliveTime(I)I","getTcpkeepAliveProbes(I)I","keepAliveOptionsSupported()Z","newInstance(Ljava/lang/String;)Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions;","quickAckSupported()Z","setFlowOption(IIJ)I","setQuickAck(IZ)V","setTcpKeepAliveIntvl(II)V","setTcpKeepAliveTime(II)V","setTcpkeepAliveProbes(II)V"]
  }
,
  {
    "className": "Ljdk/net/ExtendedSocketOptions;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/ExtendedSocketOptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","checkValueType(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","getFlowOption(Ljava/io/FileDescriptor;Ljdk/net/SocketFlow;)V","getQuickAckOption(Ljava/io/FileDescriptor;)Ljava/lang/Object;","getTcpKeepAliveIntvl(Ljava/io/FileDescriptor;)I","getTcpKeepAliveTime(Ljava/io/FileDescriptor;)I","getTcpkeepAliveProbes(Ljava/io/FileDescriptor;)I","options()Ljava/util/Set;","setFlowOption(Ljava/io/FileDescriptor;Ljdk/net/SocketFlow;)V","setQuickAckOption(Ljava/io/FileDescriptor;Z)V","setTcpKeepAliveIntvl(Ljava/io/FileDescriptor;I)V","setTcpKeepAliveTime(Ljava/io/FileDescriptor;I)V","setTcpkeepAliveProbes(Ljava/io/FileDescriptor;I)V"]
  }
,
  {
    "className": "Ljdk/net/LinuxSocketOptions;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/LinuxSocketOptions.class",
    "super": "Ljdk/net/ExtendedSocketOptions$PlatformSocketOptions;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","getQuickAck(I)Z","getQuickAck0(I)Z","getTcpKeepAliveIntvl(I)I","getTcpKeepAliveIntvl0(I)I","getTcpKeepAliveTime(I)I","getTcpKeepAliveTime0(I)I","getTcpkeepAliveProbes(I)I","getTcpkeepAliveProbes0(I)I","keepAliveOptionsSupported()Z","keepAliveOptionsSupported0()Z","lambda$static$0()Ljava/lang/Void;","quickAckSupported()Z","quickAckSupported0()Z","setQuickAck(IZ)V","setQuickAck0(IZ)V","setTcpKeepAliveIntvl(II)V","setTcpKeepAliveIntvl0(II)V","setTcpKeepAliveTime(II)V","setTcpKeepAliveTime0(II)V","setTcpkeepAliveProbes(II)V","setTcpkeepAliveProbes0(II)V"]
  }
,
  {
    "className": "Ljdk/net/SocketFlow$Status;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/SocketFlow$Status.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["from(I)Ljdk/net/SocketFlow$Status;"]
  }
,
  {
    "className": "Ljdk/net/SocketFlow;",
    "module": "jdk.net",
    "source": "/jdk.net/jdk/net/SocketFlow.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","bandwidth()J","create()Ljdk/net/SocketFlow;","priority()I","status()Ljdk/net/SocketFlow$Status;","status(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/nio/zipfs/ZipFileSystem;",
    "module": "jdk.zipfs",
    "source": "/jdk.zipfs/jdk/nio/zipfs/ZipFileSystem.class",
    "super": "Ljava/nio/file/FileSystem;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/nio/zipfs/ZipFileSystemProvider;",
    "module": "jdk.zipfs",
    "source": "/jdk.zipfs/jdk/nio/zipfs/ZipFileSystemProvider.class",
    "super": "Ljava/nio/file/spi/FileSystemProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFileSystem(Ljava/net/URI;)Ljava/nio/file/FileSystem;","getPath(Ljava/net/URI;)Ljava/nio/file/Path;","getScheme()Ljava/lang/String;","uriToPath(Ljava/net/URI;)Ljava/nio/file/Path;"]
  }
,
  {
    "className": "Ljdk/vm/ci/amd64/AMD64$1;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/amd64/AMD64$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/amd64/AMD64$CPUFeature;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/amd64/AMD64$CPUFeature.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Ljdk/vm/ci/amd64/AMD64$CPUFeature;"]
  }
,
  {
    "className": "Ljdk/vm/ci/amd64/AMD64;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/amd64/AMD64.class",
    "super": "Ljdk/vm/ci/code/Architecture;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getFeatures()Ljava/util/EnumSet;","getPlatformKind(Ljdk/vm/ci/meta/JavaKind;)Ljdk/vm/ci/meta/PlatformKind;"]
  }
,
  {
    "className": "Ljdk/vm/ci/amd64/AMD64Kind;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/amd64/AMD64Kind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Ljdk/vm/ci/meta/PlatformKind;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getSizeInBytes()I"]
  }
,
  {
    "className": "Ljdk/vm/ci/code/Architecture;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/code/Architecture.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getByteOrder()Ljava/nio/ByteOrder;","getName()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/code/TargetDescription;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/code/TargetDescription.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/Constant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/Constant.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/DeoptimizationAction;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/DeoptimizationAction.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/DeoptimizationReason;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/DeoptimizationReason.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/InvokeTarget;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/InvokeTarget.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaConstant$1;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaConstant$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaConstant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaConstant.class",
    "super": "null",
    "interfaces": ["Ljdk/vm/ci/meta/Constant;","Ljdk/vm/ci/meta/JavaValue;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["defaultForKind(Ljdk/vm/ci/meta/JavaKind;)Ljdk/vm/ci/meta/JavaConstant;","forBoolean(Z)Ljdk/vm/ci/meta/PrimitiveConstant;","forByte(B)Ljdk/vm/ci/meta/PrimitiveConstant;","forChar(C)Ljdk/vm/ci/meta/PrimitiveConstant;","forDouble(D)Ljdk/vm/ci/meta/PrimitiveConstant;","forFloat(F)Ljdk/vm/ci/meta/PrimitiveConstant;","forInt(I)Ljdk/vm/ci/meta/PrimitiveConstant;","forIntegerKind(Ljdk/vm/ci/meta/JavaKind;J)Ljdk/vm/ci/meta/PrimitiveConstant;","forLong(J)Ljdk/vm/ci/meta/PrimitiveConstant;","forShort(S)Ljdk/vm/ci/meta/PrimitiveConstant;","toString(Ljdk/vm/ci/meta/JavaConstant;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaKind$1;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaKind$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaKind$FormatWithToString;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaKind$FormatWithToString.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaKind;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaKind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["fromPrimitiveOrVoidTypeChar(C)Ljdk/vm/ci/meta/JavaKind;","getJavaName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaMethod;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaMethod.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/JavaValue;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/JavaValue.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/MetaUtil;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/MetaUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["identityHashCodeString(Ljava/lang/Object;)Ljava/lang/String;","internalNameToJava(Ljava/lang/String;ZZ)Ljava/lang/String;","toInternalName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/ModifiersProvider;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/ModifiersProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/NullConstant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/NullConstant.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/vm/ci/meta/JavaConstant;"],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getJavaKind()Ljdk/vm/ci/meta/JavaKind;","hashCode()I","toString()Ljava/lang/String;","toValueString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/PlatformKind;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/PlatformKind.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/PrimitiveConstant$1;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/PrimitiveConstant$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/PrimitiveConstant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/PrimitiveConstant.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/vm/ci/meta/JavaConstant;","Ljdk/vm/ci/meta/SerializableConstant;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljdk/vm/ci/meta/JavaKind;J)V","asBoolean()Z","asBoxedPrimitive()Ljava/lang/Object;","asDouble()D","asFloat()F","asInt()I","asLong()J","equals(Ljava/lang/Object;)Z","getJavaKind()Ljdk/vm/ci/meta/JavaKind;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Ljdk/vm/ci/meta/ResolvedJavaMethod;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/ResolvedJavaMethod.class",
    "super": "null",
    "interfaces": ["Ljdk/vm/ci/meta/JavaMethod;","Ljdk/vm/ci/meta/InvokeTarget;","Ljdk/vm/ci/meta/ModifiersProvider;","Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/SerializableConstant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/SerializableConstant.class",
    "super": "null",
    "interfaces": ["Ljdk/vm/ci/meta/Constant;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/meta/VMConstant;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/meta/VMConstant.class",
    "super": "null",
    "interfaces": ["Ljdk/vm/ci/meta/Constant;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/vm/ci/services/Services;",
    "module": "jdk.internal.vm.ci",
    "source": "/jdk.internal.vm.ci/jdk/vm/ci/services/Services.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Ljdk/xml/internal/JdkXmlUtils;",
    "module": "java.xml",
    "source": "/java.xml/jdk/xml/internal/JdkXmlUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: javax.xml.catalog.CatalogFeatures$Feature.FILES",
    "invokedMethods": ["<clinit>()V","getCatalogFeatures(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/catalog/CatalogFeatures;","getSAXFactory(Z)Ljavax/xml/parsers/SAXParserFactory;","getValue(Ljava/lang/Object;I)I","getXMLReader(ZZ)Lorg/xml/sax/XMLReader;","getXMLReaderWSAXFactory(Z)Lorg/xml/sax/XMLReader;","getXMLReaderWXMLReaderFactory()Lorg/xml/sax/XMLReader;"]
  }
,
  {
    "className": "Ljdk/xml/internal/SecuritySupport;",
    "module": "java.xml",
    "source": "/java.xml/jdk/xml/internal/SecuritySupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.lineSeparator",
    "invokedMethods": ["<clinit>()V","checkAccess(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","doesFileExist(Ljava/io/File;)Z","getClassLoader()Ljava/lang/ClassLoader;","getContextClassLoader()Ljava/lang/ClassLoader;","getErrorMessage(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getFileInputStream(Ljava/io/File;)Ljava/io/FileInputStream;","getJAXPSystemProperty(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;","getJAXPSystemProperty(Ljava/lang/String;)Ljava/lang/String;","getParentClassLoader(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;","getResourceAsStream(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;","getResourceBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;","getResourceBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","getSystemClassLoader()Ljava/lang/ClassLoader;","getSystemProperty(Ljava/lang/String;)Ljava/lang/String;","getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","isFileExists(Ljava/io/File;)Z","isProtocolAllowed(Ljava/lang/String;Ljava/lang/String;)Z","lambda$doesFileExist$6(Ljava/io/File;)Ljava/lang/Boolean;","lambda$getClassLoader$12()Ljava/lang/ClassLoader;","lambda$getContextClassLoader$8()Ljava/lang/ClassLoader;","lambda$getFileInputStream$3(Ljava/io/File;)Ljava/io/FileInputStream;","lambda$getParentClassLoader$10(Ljava/lang/ClassLoader;)Ljava/lang/ClassLoader;","lambda$getResourceAsStream$13(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;","lambda$getResourceBundle$5(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","lambda$getSystemClassLoader$9()Ljava/lang/ClassLoader;","lambda$getSystemProperty$0(Ljava/lang/String;)Ljava/lang/String;","lambda$isFileExists$2(Ljava/io/File;)Ljava/lang/Boolean;","readJAXPProperty(Ljava/lang/String;)Ljava/lang/String;","sanitizePath(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/aopalliance/aop/Advice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/aopalliance/aop/Advice.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/aopalliance/intercept/Interceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/aopalliance/intercept/Interceptor.class",
    "super": "null",
    "interfaces": ["Lorg/aopalliance/aop/Advice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/aopalliance/intercept/MethodInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/aopalliance/intercept/MethodInterceptor.class",
    "super": "null",
    "interfaces": ["Lorg/aopalliance/intercept/Interceptor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/commons/logging/Log;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/Log.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$JavaUtilAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$JavaUtilAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$JavaUtilLog;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$JavaUtilLog.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/commons/logging/Log;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","debug(Ljava/lang/Object;)V","debug(Ljava/lang/Object;Ljava/lang/Throwable;)V","error(Ljava/lang/Object;Ljava/lang/Throwable;)V","info(Ljava/lang/Object;)V","info(Ljava/lang/Object;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","log(Ljava/util/logging/Level;Ljava/lang/Object;Ljava/lang/Throwable;)V","trace(Ljava/lang/Object;)V","trace(Ljava/lang/Object;Ljava/lang/Throwable;)V","warn(Ljava/lang/Object;)V","warn(Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$LocationResolvingLogRecord;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$LocationResolvingLogRecord.class",
    "super": "Ljava/util/logging/LogRecord;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/util/logging/Level;Ljava/lang/String;)V","getSourceClassName()Ljava/lang/String;","getSourceMethodName()Ljava/lang/String;","resolve()V","setSourceClassName(Ljava/lang/String;)V","setSourceMethodName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$Log4jAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$Log4jAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$Log4jLog;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$Log4jLog.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/commons/logging/Log;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;)V","debug(Ljava/lang/Object;)V","debug(Ljava/lang/Object;Ljava/lang/Throwable;)V","error(Ljava/lang/Object;Ljava/lang/Throwable;)V","info(Ljava/lang/Object;)V","info(Ljava/lang/Object;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","log(Lorg/apache/logging/log4j/Level;Ljava/lang/Object;Ljava/lang/Throwable;)V","trace(Ljava/lang/Object;)V","trace(Ljava/lang/Object;Ljava/lang/Throwable;)V","warn(Ljava/lang/Object;)V","warn(Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$LogApi;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$LogApi.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/apache/commons/logging/LogAdapter$LogApi;"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$Slf4jAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$Slf4jAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createLocationAwareLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;","createLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$Slf4jLocationAwareLog;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$Slf4jLocationAwareLog.class",
    "super": "Lorg/apache/commons/logging/LogAdapter$Slf4jLog;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/slf4j/spi/LocationAwareLogger;)V","debug(Ljava/lang/Object;)V","debug(Ljava/lang/Object;Ljava/lang/Throwable;)V","error(Ljava/lang/Object;Ljava/lang/Throwable;)V","info(Ljava/lang/Object;)V","info(Ljava/lang/Object;Ljava/lang/Throwable;)V","trace(Ljava/lang/Object;)V","trace(Ljava/lang/Object;Ljava/lang/Throwable;)V","warn(Ljava/lang/Object;)V","warn(Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter$Slf4jLog;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter$Slf4jLog.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/commons/logging/Log;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/slf4j/Logger;)V","debug(Ljava/lang/Object;)V","debug(Ljava/lang/Object;Ljava/lang/Throwable;)V","error(Ljava/lang/Object;Ljava/lang/Throwable;)V","info(Ljava/lang/Object;)V","info(Ljava/lang/Object;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","trace(Ljava/lang/Object;)V","trace(Ljava/lang/Object;Ljava/lang/Throwable;)V","warn(Ljava/lang/Object;)V","warn(Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","createLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;","isPresent(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLog(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;","getLog(Ljava/lang/String;)Lorg/apache/commons/logging/Log;"]
  }
,
  {
    "className": "Lorg/apache/commons/logging/LogFactoryService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-jcl-5.3.1.jar!/org/apache/commons/logging/LogFactoryService.class",
    "super": "Lorg/apache/commons/logging/LogFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/Level;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/Level.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.spi.StandardLevel",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;I)V","clone()Ljava/lang/Object;","clone()Lorg/apache/logging/log4j/Level;","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/apache/logging/log4j/Level;)I","equals(Ljava/lang/Object;)Z","hashCode()I","intLevel()I","isMoreSpecificThan(Lorg/apache/logging/log4j/Level;)Z","toLevel(Ljava/lang/String;Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/Level;","toString()Ljava/lang/String;","toUpperCase(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/LogBuilder$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/LogBuilder$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/LogBuilder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/LogBuilder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/LogBuilder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/LogManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/LogManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.status.StatusLogger",
    "invokedMethods": ["<clinit>()V","getContext(Ljava/lang/ClassLoader;Z)Lorg/apache/logging/log4j/spi/LoggerContext;","getFactory()Lorg/apache/logging/log4j/spi/LoggerContextFactory;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/Logger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/Logger.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/LoggingException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/LoggingException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/Marker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/Marker.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/MarkerManager$Log4jMarker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/MarkerManager$Log4jMarker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/Marker;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","addParentInfo(Ljava/lang/StringBuilder;[Lorg/apache/logging/log4j/Marker;)V","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","getName()Ljava/lang/String;","getParents()[Lorg/apache/logging/log4j/Marker;","hashCode()I","setParents([Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/Marker;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/MarkerManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/MarkerManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["access$000(Ljava/lang/Object;Ljava/lang/String;)V","getMarker(Ljava/lang/String;)Lorg/apache/logging/log4j/Marker;","requireNonNull(Ljava/lang/Object;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/ThreadContext$ContextStack;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/ThreadContext$ContextStack.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;","Ljava/util/Collection;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/ThreadContext$EmptyIterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/ThreadContext$EmptyIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/apache/logging/log4j/ThreadContext$1;)V","hasNext()Z","next()Ljava/lang/Object;","remove()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/ThreadContext$EmptyThreadContextStack;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/ThreadContext$EmptyThreadContextStack.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextStack;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lorg/apache/logging/log4j/ThreadContext$1;)V","add(Ljava/lang/Object;)Z","add(Ljava/lang/String;)Z","addAll(Ljava/util/Collection;)Z","asList()Ljava/util/List;","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","iterator()Ljava/util/Iterator;","size()I","toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/ThreadContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/ThreadContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.Collections.EMPTY_MAP",
    "invokedMethods": ["<clinit>()V","getImmutableContext()Ljava/util/Map;","init()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/internal/DefaultLogBuilder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/internal/DefaultLogBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/LogBuilder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/AbstractMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/AbstractMessageFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/MessageFactory2;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["newMessage(Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/Clearable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/Clearable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/DefaultFlowMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/DefaultFlowMessageFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/FlowMessageFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/FlowMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/FlowMessageFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/Message;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/Message.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/MessageFactory2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/MessageFactory2.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/message/MessageFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/MessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/MessageFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ObjectMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ObjectMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/Message;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","equalObjectsOrStrings(Ljava/lang/Object;Ljava/lang/Object;)Z","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","appendArray(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;Ljava/lang/Class;)V","appendCollection(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V","appendDate(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z","appendMap(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V","appendPotentiallyRecursiveValue(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V","appendSpecialTypes(Ljava/lang/Object;Ljava/lang/StringBuilder;)Z","countArgumentPlaceholders(Ljava/lang/String;)I","countArgumentPlaceholders2(Ljava/lang/String;[I)I","formatMessage(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/Object;I)V","formatMessage2(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/Object;I[I)V","getSimpleDateFormat()Ljava/text/SimpleDateFormat;","handleErrorInObjectToString(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/lang/Throwable;)V","handleLastChar(Ljava/lang/StringBuilder;IC)V","handleLiteralChar(Ljava/lang/StringBuilder;IC)V","handleRemainingCharIfAny(Ljava/lang/String;ILjava/lang/StringBuilder;II)V","identityToString(Ljava/lang/Object;)Ljava/lang/String;","isDelimPair(CLjava/lang/String;I)Z","isMaybeRecursive(Ljava/lang/Object;)Z","isOdd(I)Z","recursiveDeepToString(Ljava/lang/Object;Ljava/lang/StringBuilder;Ljava/util/Set;)V","tryObjectToString(Ljava/lang/Object;Ljava/lang/StringBuilder;)V","writeArgOrDelimPair([Ljava/lang/Object;IILjava/lang/StringBuilder;)V","writeDelimPair(Ljava/lang/StringBuilder;)V","writeEscapedEscapeChars(ILjava/lang/StringBuilder;)V","writeUnescapedEscapeChars(ILjava/lang/StringBuilder;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterVisitable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterVisitable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterizedMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterizedMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/Message;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;[Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","getFormattedMessage()Ljava/lang/String;","getThreadLocalStringBuilder()Ljava/lang/StringBuilder;","getThrowable()Ljava/lang/Throwable;","hashCode()I","init(Ljava/lang/String;)V","initThrowable([Ljava/lang/Object;I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterizedMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterizedMessageFactory.class",
    "super": "Lorg/apache/logging/log4j/message/AbstractMessageFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterizedNoReferenceMessageFactory$StatusMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterizedNoReferenceMessageFactory$StatusMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/Message;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","getThrowable()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ParameterizedNoReferenceMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ParameterizedNoReferenceMessageFactory.class",
    "super": "Lorg/apache/logging/log4j/message/AbstractMessageFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newMessage(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ReusableMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ReusableMessage.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/message/Message;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ReusableMessageFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ReusableMessageFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/MessageFactory2;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>()V","getObject()Lorg/apache/logging/log4j/message/ReusableObjectMessage;","getParameterized()Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;","getSimple()Lorg/apache/logging/log4j/message/ReusableSimpleMessage;","newMessage(Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","release(Lorg/apache/logging/log4j/message/Message;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ReusableObjectMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ReusableObjectMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/ReusableMessage;","Lorg/apache/logging/log4j/message/ParameterVisitable;","Lorg/apache/logging/log4j/message/Clearable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","formatTo(Ljava/lang/StringBuilder;)V","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","set(Ljava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ReusableParameterizedMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/ReusableMessage;","Lorg/apache/logging/log4j/message/ParameterVisitable;","Lorg/apache/logging/log4j/message/Clearable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","count(Ljava/lang/String;[I)I","formatTo(Ljava/lang/StringBuilder;)V","getBuffer()Ljava/lang/StringBuilder;","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","getParams()[Ljava/lang/Object;","getThrowable()Ljava/lang/Throwable;","getTrimmedParams()[Ljava/lang/Object;","init(Ljava/lang/String;I[Ljava/lang/Object;)V","initThrowable([Ljava/lang/Object;II)V","reserve()Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;","set(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;","set(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;","set(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/ReusableParameterizedMessage;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/ReusableSimpleMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/ReusableSimpleMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/ReusableMessage;","Ljava/lang/CharSequence;","Lorg/apache/logging/log4j/message/ParameterVisitable;","Lorg/apache/logging/log4j/message/Clearable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","charAt(I)C","clear()V","formatTo(Ljava/lang/StringBuilder;)V","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","getThrowable()Ljava/lang/Throwable;","length()I","set(Ljava/lang/String;)V","subSequence(II)Ljava/lang/CharSequence;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/message/SimpleMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/message/SimpleMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/Message;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;","Ljava/lang/CharSequence;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","charAt(I)C","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","getFormat()Ljava/lang/String;","getFormattedMessage()Ljava/lang/String;","getParameters()[Ljava/lang/Object;","getThrowable()Ljava/lang/Throwable;","hashCode()I","length()I","subSequence(II)Ljava/lang/CharSequence;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/simple/SimpleLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/simple/SimpleLogger.class",
    "super": "Lorg/apache/logging/log4j/spi/AbstractLogger;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/apache/logging/log4j/Level;ZZZZLjava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/util/PropertiesUtil;Ljava/io/PrintStream;)V","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)Z","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V","setLevel(Lorg/apache/logging/log4j/Level;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/simple/SimpleLoggerContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/simple/SimpleLoggerContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/LoggerContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLogger(Ljava/lang/String;)Lorg/apache/logging/log4j/spi/ExtendedLogger;","getLogger(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/spi/ExtendedLogger;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/simple/SimpleLoggerContextFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/simple/SimpleLoggerContextFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/LoggerContextFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.spi.LoggerRegistry",
    "invokedMethods": ["<clinit>()V","<init>()V","getContext(Ljava/lang/String;Ljava/lang/ClassLoader;Ljava/lang/Object;Z)Lorg/apache/logging/log4j/spi/LoggerContext;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/AbstractLogger$LocalLogBuilder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/AbstractLogger$LocalLogBuilder.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/spi/AbstractLogger;Lorg/apache/logging/log4j/spi/AbstractLogger;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/AbstractLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/AbstractLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ExtendedLogger;","Lorg/apache/logging/log4j/spi/LocationAwareLogger;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.apache.logging.log4j.MarkerManager.MARKERS",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V","checkMessageFactory(Lorg/apache/logging/log4j/spi/ExtendedLogger;Lorg/apache/logging/log4j/message/MessageFactory;)V","createClassForProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;","createDefaultFlowMessageFactory()Lorg/apache/logging/log4j/message/FlowMessageFactory;","createDefaultMessageFactory()Lorg/apache/logging/log4j/message/MessageFactory2;","createFlowClassForProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;","debug(Ljava/lang/String;Ljava/lang/Object;)V","debug(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","decrementRecursionDepth()V","error(Ljava/lang/String;)V","error(Ljava/lang/String;Ljava/lang/Object;)V","error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","error(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V","fatal(Ljava/lang/String;Ljava/lang/Throwable;)V","getLocation(Ljava/lang/String;)Ljava/lang/StackTraceElement;","getMessageFactory()Lorg/apache/logging/log4j/message/MessageFactory;","getName()Ljava/lang/String;","getRecursionDepthHolder()[I","handleLogMessageException(Ljava/lang/Exception;Ljava/lang/String;Lorg/apache/logging/log4j/message/Message;)V","incrementRecursionDepth()V","isEnabled(Lorg/apache/logging/log4j/Level;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z","log(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V","logIfEnabled(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V","logMessageSafely(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V","logMessageTrackRecursion(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V","narrow(Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/message/MessageFactory2;","requiresLocation()Z","tryLogMessage(Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V","warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/CleanableThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/CleanableThreadContextMap.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextMap2;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/CopyOnWrite;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/CopyOnWrite.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/CopyOnWriteSortedArrayThreadContextMap$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/CopyOnWriteSortedArrayThreadContextMap$1.class",
    "super": "Ljava/lang/InheritableThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/spi/CopyOnWriteSortedArrayThreadContextMap;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/CopyOnWriteSortedArrayThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/CopyOnWriteSortedArrayThreadContextMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ReadOnlyThreadContextMap;","Lorg/apache/logging/log4j/spi/ObjectThreadContextMap;","Lorg/apache/logging/log4j/spi/CopyOnWrite;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.SortedArrayStringMap",
    "invokedMethods": ["<clinit>()V","<init>()V","createThreadLocalMap()Ljava/lang/ThreadLocal;","equals(Ljava/lang/Object;)Z","getImmutableMapOrNull()Ljava/util/Map;","hashCode()I","init()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/DefaultThreadContextMap$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/DefaultThreadContextMap$1.class",
    "super": "Ljava/lang/InheritableThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/DefaultThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/DefaultThreadContextMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextMap;","Lorg/apache/logging/log4j/util/ReadOnlyStringMap;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.PropertiesUtil",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","createThreadLocalMap(Z)Ljava/lang/ThreadLocal;","equals(Ljava/lang/Object;)Z","getImmutableMapOrNull()Ljava/util/Map;","hashCode()I","init()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/DefaultThreadContextStack;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/DefaultThreadContextStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextStack;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","add(Ljava/lang/Object;)Z","add(Ljava/lang/String;)Z","addAll(Ljava/util/Collection;)Z","asList()Ljava/util/List;","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","getNonNullStackCopy()Lorg/apache/logging/log4j/spi/MutableThreadContextStack;","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ExtendedLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ExtendedLogger.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/GarbageFreeSortedArrayThreadContextMap$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/GarbageFreeSortedArrayThreadContextMap$1.class",
    "super": "Ljava/lang/InheritableThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/spi/GarbageFreeSortedArrayThreadContextMap;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/GarbageFreeSortedArrayThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/GarbageFreeSortedArrayThreadContextMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ReadOnlyThreadContextMap;","Lorg/apache/logging/log4j/spi/ObjectThreadContextMap;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.PropertiesUtil",
    "invokedMethods": ["<clinit>()V","<init>()V","createThreadLocalMap()Ljava/lang/ThreadLocal;","equals(Ljava/lang/Object;)Z","getImmutableMapOrNull()Ljava/util/Map;","hashCode()I","init()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LocationAwareLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LocationAwareLogger.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LoggerContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LoggerContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LoggerContextFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LoggerContextFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LoggerRegistry$ConcurrentMapFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LoggerRegistry$ConcurrentMapFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createInnerMap()Ljava/util/Map;","createOuterMap()Ljava/util/Map;","putIfAbsent(Ljava/util/Map;Ljava/lang/String;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LoggerRegistry$MapFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/LoggerRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/LoggerRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.spi.AbstractLogger",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lorg/apache/logging/log4j/spi/LoggerRegistry$MapFactory;)V","factoryKey(Lorg/apache/logging/log4j/message/MessageFactory;)Ljava/lang/String;","getLogger(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/spi/ExtendedLogger;","getOrCreateInnerMap(Ljava/lang/String;)Ljava/util/Map;","putIfAbsent(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;Lorg/apache/logging/log4j/spi/ExtendedLogger;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/MessageFactory2Adapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/MessageFactory2Adapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/message/MessageFactory2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/message/MessageFactory;)V","newMessage(Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;","newMessage(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/MutableThreadContextStack;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/MutableThreadContextStack.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextStack;","Lorg/apache/logging/log4j/util/StringBuilderFormattable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/List;)V","<init>(Lorg/apache/logging/log4j/spi/MutableThreadContextStack;)V","add(Ljava/lang/Object;)Z","add(Ljava/lang/String;)Z","addAll(Ljava/util/Collection;)Z","asList()Ljava/util/List;","checkInvariants()V","clear()V","contains(Ljava/lang/Object;)Z","containsAll(Ljava/util/Collection;)Z","copy()Lorg/apache/logging/log4j/spi/ThreadContextStack;","equals(Ljava/lang/Object;)Z","formatTo(Ljava/lang/StringBuilder;)V","freeze()V","hashCode()I","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I","toArray()[Ljava/lang/Object;","toArray([Ljava/lang/Object;)[Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/NoOpThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/NoOpThreadContextMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getImmutableMapOrNull()Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ObjectThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ObjectThreadContextMap.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/spi/CleanableThreadContextMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/Provider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/Provider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Integer$IntegerCache.high",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V","<init>(Ljava/util/Properties;Ljava/net/URL;Ljava/lang/ClassLoader;)V","equals(Ljava/lang/Object;)Z","getClassName()Ljava/lang/String;","getPriority()Ljava/lang/Integer;","getThreadContextMap()Ljava/lang/String;","getUrl()Ljava/net/URL;","getVersions()Ljava/lang/String;","hashCode()I","loadLoggerContextFactory()Ljava/lang/Class;","loadThreadContextMap()Ljava/lang/Class;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ReadOnlyThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ReadOnlyThreadContextMap.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/StandardLevel;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/StandardLevel.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.internal.misc.SharedSecrets.javaLangAccess",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;II)V","getStandardLevel(I)Lorg/apache/logging/log4j/spi/StandardLevel;","intLevel()I","values()[Lorg/apache/logging/log4j/spi/StandardLevel;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ThreadContextMap2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ThreadContextMap2.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/spi/ThreadContextMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ThreadContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ThreadContextMap.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ThreadContextMapFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ThreadContextMapFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.status.StatusLogger",
    "invokedMethods": ["<clinit>()V","createDefaultThreadContextMap()Lorg/apache/logging/log4j/spi/ThreadContextMap;","createThreadContextMap()Lorg/apache/logging/log4j/spi/ThreadContextMap;","init()V","initPrivate()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/spi/ThreadContextStack;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/spi/ThreadContextStack.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/ThreadContext$ContextStack;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/status/StatusData;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/status/StatusData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;Ljava/lang/String;)V","getLevel()Lorg/apache/logging/log4j/Level;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/status/StatusListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/status/StatusListener.class",
    "super": "null",
    "interfaces": ["Ljava/io/Closeable;","Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/status/StatusLogger$BoundedQueue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/status/StatusLogger$BoundedQueue.class",
    "super": "Ljava/util/concurrent/ConcurrentLinkedQueue;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/status/StatusLogger;I)V","add(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/status/StatusLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/status/StatusLogger.class",
    "super": "Lorg/apache/logging/log4j/spi/AbstractLogger;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V","access$000(Lorg/apache/logging/log4j/status/StatusLogger;)Ljava/util/Queue;","getLogger()Lorg/apache/logging/log4j/status/StatusLogger;","getStackTraceElement(Ljava/lang/String;[Ljava/lang/StackTraceElement;)Ljava/lang/StackTraceElement;","isDebugPropertyEnabled()Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z","isEnabled(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)Z","logMessage(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/BiConsumer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/BiConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/Constants;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/Constants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.PropertiesUtil",
    "invokedMethods": ["<clinit>()V","getMajorVersion()I","getMajorVersion(Ljava/lang/String;)I","isClassAvailable(Ljava/lang/String;)Z","size(Ljava/lang/String;I)I"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/EnvironmentPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/EnvironmentPropertySource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/PropertySource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","forEach(Lorg/apache/logging/log4j/util/BiConsumer;)V","getNormalForm(Ljava/lang/Iterable;)Ljava/lang/CharSequence;","getPriority()I"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/IndexedReadOnlyStringMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/IndexedReadOnlyStringMap.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/util/ReadOnlyStringMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/IndexedStringMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/IndexedStringMap.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/util/IndexedReadOnlyStringMap;","Lorg/apache/logging/log4j/util/StringMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/LoaderUtil$ThreadContextClassLoaderGetter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/LoaderUtil$ThreadContextClassLoaderGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/apache/logging/log4j/util/LoaderUtil$1;)V","run()Ljava/lang/ClassLoader;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/LoaderUtil$UrlResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/LoaderUtil$UrlResource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;Ljava/net/URL;)V","equals(Ljava/lang/Object;)Z","getClassLoader()Ljava/lang/ClassLoader;","getUrl()Ljava/net/URL;","hashCode()I"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/LoaderUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/LoaderUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","access$100()Z","accumulateClassLoaders(Ljava/lang/ClassLoader;Ljava/util/Collection;)V","findResources(Ljava/lang/String;)Ljava/util/Collection;","findUrlResources(Ljava/lang/String;)Ljava/util/Collection;","getClassLoaders()[Ljava/lang/ClassLoader;","getThreadContextClassLoader()Ljava/lang/ClassLoader;","isIgnoreTccl()Z","loadClass(Ljava/lang/String;)Ljava/lang/Class;","newCheckedInstanceOf(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","newInstanceOf(Ljava/lang/Class;)Ljava/lang/Object;","newInstanceOf(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/LowLevelLogUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/LowLevelLogUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.err",
    "invokedMethods": ["<clinit>()V","log(Ljava/lang/String;)V","logException(Ljava/lang/String;Ljava/lang/Throwable;)V","logException(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertiesPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertiesPropertySource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/PropertySource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Properties;)V","forEach(Lorg/apache/logging/log4j/util/BiConsumer;)V","getNormalForm(Ljava/lang/Iterable;)Ljava/lang/CharSequence;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertiesUtil$Environment$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertiesUtil$Environment$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/BiConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;)V","accept(Ljava/lang/Object;Ljava/lang/Object;)V","accept(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertiesUtil$Environment$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertiesUtil$Environment$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/BiConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;Lorg/apache/logging/log4j/util/PropertySource;)V","accept(Ljava/lang/Object;Ljava/lang/Object;)V","accept(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertiesUtil$Environment.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/logging/log4j/util/PropertySource;)V","<init>(Lorg/apache/logging/log4j/util/PropertySource;Lorg/apache/logging/log4j/util/PropertiesUtil$1;)V","access$200(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;Ljava/lang/String;)Ljava/lang/String;","access$400(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;)Ljava/util/Map;","access$500(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;)Ljava/util/Map;","access$600(Lorg/apache/logging/log4j/util/PropertiesUtil$Environment;)Ljava/util/Map;","get(Ljava/lang/String;)Ljava/lang/String;","hasSystemProperty(Ljava/lang/String;)Z","reload()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertiesUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertiesUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.Properties.UNSAFE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;)V","getBooleanProperty(Ljava/lang/String;)Z","getBooleanProperty(Ljava/lang/String;Z)Z","getBooleanProperty(Ljava/lang/String;ZZ)Z","getIntegerProperty(Ljava/lang/String;I)I","getProperties()Lorg/apache/logging/log4j/util/PropertiesUtil;","getStringProperty(Ljava/lang/String;)Ljava/lang/String;","getStringProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","loadClose(Ljava/io/InputStream;Ljava/lang/Object;)Ljava/util/Properties;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertyFilePropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertyFilePropertySource.class",
    "super": "Lorg/apache/logging/log4j/util/PropertiesPropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getPriority()I","loadPropertiesFile(Ljava/lang/String;)Ljava/util/Properties;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertySource$Comparator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertySource$Comparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Lorg/apache/logging/log4j/util/PropertySource;Lorg/apache/logging/log4j/util/PropertySource;)I"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertySource$Util;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertySource$Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","joinAsCamelCase(Ljava/lang/Iterable;)Ljava/lang/CharSequence;","tokenize(Ljava/lang/CharSequence;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/PropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/PropertySource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["containsProperty(Ljava/lang/String;)Z","getProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/ProviderUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/ProviderUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.status.StatusLogger",
    "invokedMethods": ["<clinit>()V","<init>()V","findClassLoader()Ljava/lang/ClassLoader;","getProviders()Ljava/lang/Iterable;","hasProviders()Z","lazyInit()V","loadProvider(Ljava/net/URL;Ljava/lang/ClassLoader;)V","loadProviders(Ljava/lang/ClassLoader;)V","validVersion(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/ReadOnlyStringMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/ReadOnlyStringMap.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/SortedArrayStringMap$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/SortedArrayStringMap$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/TriConsumer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/SortedArrayStringMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/SortedArrayStringMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/IndexedStringMap;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","<init>(I)V","ceilingNextPowerOfTwo(I)I","equals(Ljava/lang/Object;)Z","freeze()V","getKeyAt(I)Ljava/lang/String;","getValueAt(I)Ljava/lang/Object;","hashCode()I","hashCode([Ljava/lang/Object;I)I","size()I","toMap()Ljava/util/Map;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StackLocator$FqcnCallerLocator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/META-INF/versions/9/org/apache/logging/log4j/util/StackLocator$FqcnCallerLocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Ljava/util/stream/Stream;)Ljava/lang/StackWalker$StackFrame;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StackLocator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/META-INF/versions/9/org/apache/logging/log4j/util/StackLocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.StackWalker$Option.RETAIN_CLASS_REFERENCE",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000()Ljava/lang/ThreadLocal;","calcLocation(Ljava/lang/String;)Ljava/lang/StackTraceElement;","getInstance()Lorg/apache/logging/log4j/util/StackLocator;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StackLocatorUtil;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/StackLocatorUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.StackLocator",
    "invokedMethods": ["<clinit>()V","calcLocation(Ljava/lang/String;)Ljava/lang/StackTraceElement;"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StringBuilderFormattable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/StringBuilderFormattable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StringBuilders;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/StringBuilders.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["appendSpecificTypes(Ljava/lang/StringBuilder;Ljava/lang/Object;)Z","appendValue(Ljava/lang/StringBuilder;Ljava/lang/Object;)V","trimToMaxSize(Ljava/lang/StringBuilder;I)V"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/StringMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/StringMap.class",
    "super": "null",
    "interfaces": ["Lorg/apache/logging/log4j/util/ReadOnlyStringMap;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/Strings;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/Strings.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.PropertiesUtil",
    "invokedMethods": ["<clinit>()V","isEmpty(Ljava/lang/CharSequence;)Z","isNotEmpty(Ljava/lang/CharSequence;)Z"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/SystemPropertiesPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/SystemPropertiesPropertySource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/util/PropertySource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","forEach(Lorg/apache/logging/log4j/util/BiConsumer;)V","getNormalForm(Ljava/lang/Iterable;)Ljava/lang/CharSequence;","getPriority()I"]
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/TriConsumer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/org/apache/logging/log4j/util/TriConsumer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/log4j/util/internal/DefaultObjectInputFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-api-2.13.3.jar!/META-INF/versions/9/org/apache/logging/log4j/util/internal/DefaultObjectInputFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/ObjectInputFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/apache/logging/slf4j/MDCContextMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-to-slf4j-2.13.3.jar!/org/apache/logging/slf4j/MDCContextMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/CleanableThreadContextMap;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.util.SortedArrayStringMap",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/slf4j/SLF4JLoggerContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-to-slf4j-2.13.3.jar!/org/apache/logging/slf4j/SLF4JLoggerContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/LoggerContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/slf4j/SLF4JLoggerContextFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-to-slf4j-2.13.3.jar!/org/apache/logging/slf4j/SLF4JLoggerContextFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/apache/logging/log4j/spi/LoggerContextFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.apache.logging.log4j.status.StatusLogger",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/apache/logging/slf4j/SLF4JProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/log4j-to-slf4j-2.13.3.jar!/org/apache/logging/slf4j/SLF4JProvider.class",
    "super": "Lorg/apache/logging/log4j/spi/Provider;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/ietf/jgss/GSSException;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/org/ietf/jgss/GSSException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILjava/lang/String;)V","getMajorString()Ljava/lang/String;","getMessage()Ljava/lang/String;","getMinorString()Ljava/lang/String;","toString()Ljava/lang/String;","validateMajor(I)Z"]
  }
,
  {
    "className": "Lorg/ietf/jgss/GSSManager;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/org/ietf/jgss/GSSManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/ietf/jgss/Oid;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/org/ietf/jgss/Oid.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/ApacheCanonicalizer;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/ApacheCanonicalizer.class",
    "super": "Ljavax/xml/crypto/dsig/TransformService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: com.sun.org.apache.xml.internal.security.Init",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/ApacheTransform.class",
    "super": "Ljavax/xml/crypto/dsig/TransformService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: com.sun.org.apache.xml.internal.security.Init",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMBase64Transform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMBase64Transform.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMCanonicalXMLC14N11Method;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMCanonicalXMLC14N11Method.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheCanonicalizer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMCanonicalXMLC14NMethod;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMCanonicalXMLC14NMethod.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheCanonicalizer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMEnvelopedTransform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMEnvelopedTransform.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMExcC14NMethod;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMExcC14NMethod.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheCanonicalizer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.class",
    "super": "Ljavax/xml/crypto/dsig/keyinfo/KeyInfoFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.class",
    "super": "Ljavax/xml/crypto/dsig/XMLSignatureFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMXPathFilter2Transform.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMXPathTransform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMXPathTransform.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/DOMXSLTTransform;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/DOMXSLTTransform.class",
    "super": "Lorg/jcp/xml/dsig/internal/dom/ApacheTransform;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI$2;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/XMLDSigRI$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI$ProviderService;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/XMLDSigRI$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/util/HashMap;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;",
    "module": "java.xml.crypto",
    "source": "/java.xml.crypto/org/jcp/xml/dsig/internal/dom/XMLDSigRI.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$100(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$1000(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$1100(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$1200(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$200(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$300(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$400(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$500(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$600(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$700(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$800(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V","access$900(Lorg/jcp/xml/dsig/internal/dom/XMLDSigRI;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lorg/slf4j/ILoggerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/ILoggerFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/Logger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/Logger.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/LoggerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/LoggerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.util.concurrent.locks.ReentrantLock.newCondition()",
    "invokedMethods": ["<clinit>()V","bind()V","emitReplayOrSubstituionWarning(Lorg/slf4j/event/SubstituteLoggingEvent;I)V","emitReplayWarning(I)V","emitSubstitutionWarning()V","failedBinding(Ljava/lang/Throwable;)V","findPossibleStaticLoggerBinderPathSet()Ljava/util/Set;","fixSubstituteLoggers()V","getILoggerFactory()Lorg/slf4j/ILoggerFactory;","getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;","isAmbiguousStaticLoggerBinderPathSet(Ljava/util/Set;)Z","isAndroid()Z","messageContainsOrgSlf4jImplStaticLoggerBinder(Ljava/lang/String;)Z","performInitialization()V","postBindCleanUp()V","replayEvents()V","replaySingleEvent(Lorg/slf4j/event/SubstituteLoggingEvent;)V","reportActualBinding(Ljava/util/Set;)V","reportMultipleBindingAmbiguity(Ljava/util/Set;)V","versionSanityCheck()V"]
  }
,
  {
    "className": "Lorg/slf4j/MDC;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/MDC.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Throwable.UNASSIGNED_STACK",
    "invokedMethods": ["<clinit>()V","bwCompatibleGetMDCAdapterFromBinder()Lorg/slf4j/spi/MDCAdapter;","getMDCAdapter()Lorg/slf4j/spi/MDCAdapter;"]
  }
,
  {
    "className": "Lorg/slf4j/Marker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/Marker.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/event/EventRecodingLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/event/EventRecodingLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/slf4j/helpers/SubstituteLogger;Ljava/util/Queue;)V","debug(Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","error(Ljava/lang/String;Ljava/lang/Throwable;)V","info(Ljava/lang/String;)V","info(Ljava/lang/String;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","recordEvent(Lorg/slf4j/event/Level;Lorg/slf4j/Marker;Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","recordEvent_0Args(Lorg/slf4j/event/Level;Lorg/slf4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)V","trace(Ljava/lang/String;)V","trace(Ljava/lang/String;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/slf4j/event/Level;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/event/Level.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/slf4j/event/LoggingEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/event/LoggingEvent.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/event/SubstituteLoggingEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/event/SubstituteLoggingEvent.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/event/LoggingEvent;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLogger()Lorg/slf4j/helpers/SubstituteLogger;","setArgumentArray([Ljava/lang/Object;)V","setLevel(Lorg/slf4j/event/Level;)V","setLogger(Lorg/slf4j/helpers/SubstituteLogger;)V","setLoggerName(Ljava/lang/String;)V","setMarker(Lorg/slf4j/Marker;)V","setMessage(Ljava/lang/String;)V","setThreadName(Ljava/lang/String;)V","setThrowable(Ljava/lang/Throwable;)V","setTimeStamp(J)V"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/FormattingTuple;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/FormattingTuple.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/MarkerIgnoringBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/MarkerIgnoringBase.class",
    "super": "Lorg/slf4j/helpers/NamedLoggerBase;",
    "interfaces": ["Lorg/slf4j/Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/MessageFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/MessageFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["arrayFormat(Ljava/lang/String;[Ljava/lang/Object;)Lorg/slf4j/helpers/FormattingTuple;","arrayFormat(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Throwable;)Lorg/slf4j/helpers/FormattingTuple;","booleanArrayAppend(Ljava/lang/StringBuilder;[Z)V","byteArrayAppend(Ljava/lang/StringBuilder;[B)V","charArrayAppend(Ljava/lang/StringBuilder;[C)V","deeplyAppendParameter(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljava/util/Map;)V","doubleArrayAppend(Ljava/lang/StringBuilder;[D)V","floatArrayAppend(Ljava/lang/StringBuilder;[F)V","getThrowableCandidate([Ljava/lang/Object;)Ljava/lang/Throwable;","intArrayAppend(Ljava/lang/StringBuilder;[I)V","isDoubleEscaped(Ljava/lang/String;I)Z","isEscapedDelimeter(Ljava/lang/String;I)Z","longArrayAppend(Ljava/lang/StringBuilder;[J)V","objectArrayAppend(Ljava/lang/StringBuilder;[Ljava/lang/Object;Ljava/util/Map;)V","safeObjectAppend(Ljava/lang/StringBuilder;Ljava/lang/Object;)V","shortArrayAppend(Ljava/lang/StringBuilder;[S)V","trimmedCopy([Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/NOPLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/NOPLogger.class",
    "super": "Lorg/slf4j/helpers/MarkerIgnoringBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["debug(Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","error(Ljava/lang/String;Ljava/lang/Throwable;)V","getName()Ljava/lang/String;","info(Ljava/lang/String;)V","info(Ljava/lang/String;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","trace(Ljava/lang/String;)V","trace(Ljava/lang/String;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/NOPLoggerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/NOPLoggerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/ILoggerFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/NOPMDCAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/NOPMDCAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/spi/MDCAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getCopyOfContextMap()Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/NamedLoggerBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/NamedLoggerBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/Logger;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/helpers/SubstituteLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/SubstituteLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Queue;Z)V","debug(Ljava/lang/String;)V","debug(Ljava/lang/String;Ljava/lang/Throwable;)V","delegate()Lorg/slf4j/Logger;","equals(Ljava/lang/Object;)Z","error(Ljava/lang/String;Ljava/lang/Throwable;)V","getEventRecordingLogger()Lorg/slf4j/Logger;","getName()Ljava/lang/String;","hashCode()I","info(Ljava/lang/String;)V","info(Ljava/lang/String;Ljava/lang/Throwable;)V","isDebugEnabled()Z","isDelegateEventAware()Z","isDelegateNOP()Z","isDelegateNull()Z","isErrorEnabled()Z","isInfoEnabled()Z","isTraceEnabled()Z","isWarnEnabled()Z","log(Lorg/slf4j/event/LoggingEvent;)V","setDelegate(Lorg/slf4j/Logger;)V","trace(Ljava/lang/String;)V","trace(Ljava/lang/String;Ljava/lang/Throwable;)V","warn(Ljava/lang/String;)V","warn(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/SubstituteLoggerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/SubstituteLoggerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/ILoggerFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","getEventQueue()Ljava/util/concurrent/LinkedBlockingQueue;","getLogger(Ljava/lang/String;)Lorg/slf4j/Logger;","getLoggers()Ljava/util/List;","postInitialization()V"]
  }
,
  {
    "className": "Lorg/slf4j/helpers/Util;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/helpers/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["report(Ljava/lang/String;)V","report(Ljava/lang/String;Ljava/lang/Throwable;)V","safeGetBooleanSystemProperty(Ljava/lang/String;)Z","safeGetSystemProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/slf4j/impl/StaticLoggerBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticLoggerBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/slf4j/spi/LoggerFactoryBinder;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.System.currentTimeMillis()",
    "invokedMethods": ["<clinit>()V","<init>()V","getLoggerFactory()Lorg/slf4j/ILoggerFactory;","getLoggerFactoryClassStr()Ljava/lang/String;","getSingleton()Lorg/slf4j/impl/StaticLoggerBinder;","init()V"]
  }
,
  {
    "className": "Lorg/slf4j/impl/StaticMDCBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/logback-classic-1.2.3.jar!/org/slf4j/impl/StaticMDCBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getMDCA()Lorg/slf4j/spi/MDCAdapter;"]
  }
,
  {
    "className": "Lorg/slf4j/spi/LocationAwareLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/spi/LocationAwareLogger.class",
    "super": "null",
    "interfaces": ["Lorg/slf4j/Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/spi/LoggerFactoryBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/spi/LoggerFactoryBinder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/slf4j/spi/MDCAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/slf4j-api-1.7.30.jar!/org/slf4j/spi/MDCAdapter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/Advisor$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/Advisor$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/aopalliance/aop/Advice;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/aop/Advisor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/Advisor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/aop/AfterAdvice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/AfterAdvice.class",
    "super": "null",
    "interfaces": ["Lorg/aopalliance/aop/Advice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/AfterReturningAdvice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/AfterReturningAdvice.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/AfterAdvice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/BeforeAdvice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/BeforeAdvice.class",
    "super": "null",
    "interfaces": ["Lorg/aopalliance/aop/Advice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/IntroductionAdvisor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/IntroductionAdvisor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/Advisor;","Lorg/springframework/aop/IntroductionInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/IntroductionAwareMethodMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/IntroductionAwareMethodMatcher.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/MethodMatcher;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/IntroductionInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/IntroductionInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/MethodBeforeAdvice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/MethodBeforeAdvice.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/BeforeAdvice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/MethodMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/MethodMatcher.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/aop/PointcutAdvisor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/PointcutAdvisor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/Advisor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/SpringProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/SpringProxy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/TargetClassAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/TargetClassAware.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/TargetSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/TargetSource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/TargetClassAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/ThrowsAdvice;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/ThrowsAdvice.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/AfterAdvice;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/TrueMethodMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/TrueMethodMatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/MethodMatcher;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/Advised;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/Advised.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/aop/TargetClassAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AdvisedSupport$MethodCacheKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AdvisedSupport$MethodCacheKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/aop/framework/AdvisedSupport$MethodCacheKey;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AdvisedSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AdvisedSupport.class",
    "super": "Lorg/springframework/aop/framework/ProxyConfig;",
    "interfaces": ["Lorg/springframework/aop/framework/Advised;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","addInterface(Ljava/lang/Class;)V","adviceChanged()V","getAdvisorCount()I","getAdvisors()[Lorg/springframework/aop/Advisor;","getConfigurationOnlyCopy()Lorg/springframework/aop/framework/AdvisedSupport;","getInterceptorsAndDynamicInterceptionAdvice(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/List;","getProxiedInterfaces()[Ljava/lang/Class;","getTargetClass()Ljava/lang/Class;","getTargetSource()Lorg/springframework/aop/TargetSource;","isInterfaceProxied(Ljava/lang/Class;)Z","isPreFiltered()Z","setInterfaces([Ljava/lang/Class;)V","setTargetSource(Lorg/springframework/aop/TargetSource;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AdvisedSupportListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AdvisedSupportListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AdvisorChainFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AdvisorChainFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AopConfigException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AopConfigException.class",
    "super": "Lorg/springframework/core/NestedRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AopInfrastructureBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AopInfrastructureBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AopProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AopProxy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AopProxyFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AopProxyFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/AopProxyUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/AopProxyUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["completeProxiedInterfaces(Lorg/springframework/aop/framework/AdvisedSupport;)[Ljava/lang/Class;","completeProxiedInterfaces(Lorg/springframework/aop/framework/AdvisedSupport;Z)[Ljava/lang/Class;","equalsAdvisors(Lorg/springframework/aop/framework/AdvisedSupport;Lorg/springframework/aop/framework/AdvisedSupport;)Z","equalsInProxy(Lorg/springframework/aop/framework/AdvisedSupport;Lorg/springframework/aop/framework/AdvisedSupport;)Z","equalsProxiedInterfaces(Lorg/springframework/aop/framework/AdvisedSupport;Lorg/springframework/aop/framework/AdvisedSupport;)Z","getSingletonTarget(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$AdvisedDispatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$AdvisedDispatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/Dispatcher;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$DynamicAdvisedInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$DynamicAdvisedInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$DynamicUnadvisedExposedInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$DynamicUnadvisedExposedInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/TargetSource;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$DynamicUnadvisedInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$DynamicUnadvisedInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/TargetSource;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$EqualsInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$EqualsInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$FixedChainStaticTargetInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$FixedChainStaticTargetInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;Ljava/lang/Object;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$HashCodeInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$HashCodeInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$ProxyCallbackFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$ProxyCallbackFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/framework/AdvisedSupport;Ljava/util/Map;I)V","accept(Ljava/lang/reflect/Method;)I","equals(Ljava/lang/Object;)Z","equalsAdviceClasses(Lorg/springframework/aop/Advisor;Lorg/springframework/aop/Advisor;)Z","equalsPointcuts(Lorg/springframework/aop/Advisor;Lorg/springframework/aop/Advisor;)Z","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$SerializableNoOp;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$SerializableNoOp.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/NoOp;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$StaticDispatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$StaticDispatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/Dispatcher;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$StaticUnadvisedExposedInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$StaticUnadvisedExposedInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy$StaticUnadvisedInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy$StaticUnadvisedInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/CglibAopProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/CglibAopProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/AopProxy;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V","createEnhancer()Lorg/springframework/cglib/proxy/Enhancer;","doValidateClass(Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/util/Set;)V","equals(Ljava/lang/Object;)Z","getCallbacks(Ljava/lang/Class;)[Lorg/springframework/cglib/proxy/Callback;","getProxy(Ljava/lang/ClassLoader;)Ljava/lang/Object;","hashCode()I","implementsInterface(Ljava/lang/reflect/Method;Ljava/util/Set;)Z","validateClassIfNecessary(Ljava/lang/Class;Ljava/lang/ClassLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/DefaultAdvisorChainFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/DefaultAdvisorChainFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/AdvisorChainFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInterceptorsAndDynamicInterceptionAdvice(Lorg/springframework/aop/framework/Advised;Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/util/List;","hasMatchingIntroductions([Lorg/springframework/aop/Advisor;Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/DefaultAopProxyFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/DefaultAopProxyFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/AopProxyFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V","createAopProxy(Lorg/springframework/aop/framework/AdvisedSupport;)Lorg/springframework/aop/framework/AopProxy;","hasNoUserSuppliedProxyInterfaces(Lorg/springframework/aop/framework/AdvisedSupport;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/InterceptorAndDynamicMethodMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/InterceptorAndDynamicMethodMatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/aopalliance/intercept/MethodInterceptor;Lorg/springframework/aop/MethodMatcher;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/JdkDynamicAopProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/JdkDynamicAopProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/AopProxy;","Ljava/lang/reflect/InvocationHandler;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V","equals(Ljava/lang/Object;)Z","findDefinedEqualsAndHashCodeMethods([Ljava/lang/Class;)V","getProxy(Ljava/lang/ClassLoader;)Ljava/lang/Object;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/ObjenesisCglibAopProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/ObjenesisCglibAopProxy.class",
    "super": "Lorg/springframework/aop/framework/CglibAopProxy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/aop/framework/AdvisedSupport;)V","createProxyClassAndInstance(Lorg/springframework/cglib/proxy/Enhancer;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/ProxyConfig;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/ProxyConfig.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","copyFrom(Lorg/springframework/aop/framework/ProxyConfig;)V","isExposeProxy()Z","isFrozen()Z","isOpaque()Z","isOptimize()Z","isProxyTargetClass()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/ProxyCreatorSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/ProxyCreatorSupport.class",
    "super": "Lorg/springframework/aop/framework/AdvisedSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","activate()V","adviceChanged()V","createAopProxy()Lorg/springframework/aop/framework/AopProxy;","getAopProxyFactory()Lorg/springframework/aop/framework/AopProxyFactory;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/ProxyFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/ProxyFactory.class",
    "super": "Lorg/springframework/aop/framework/ProxyCreatorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getProxy(Ljava/lang/ClassLoader;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/AdvisorAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/AdvisorAdapter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/AdvisorAdapterRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/AfterReturningAdviceAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/AfterReturningAdviceAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/adapter/AdvisorAdapter;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInterceptor(Lorg/springframework/aop/Advisor;)Lorg/aopalliance/intercept/MethodInterceptor;","supportsAdvice(Lorg/aopalliance/aop/Advice;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/AfterReturningAdviceInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/aopalliance/intercept/MethodInterceptor;","Lorg/springframework/aop/AfterAdvice;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/AfterReturningAdvice;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/DefaultAdvisorAdapterRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInterceptors(Lorg/springframework/aop/Advisor;)[Lorg/aopalliance/intercept/MethodInterceptor;","registerAdvisorAdapter(Lorg/springframework/aop/framework/adapter/AdvisorAdapter;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/GlobalAdvisorAdapterRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/GlobalAdvisorAdapterRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.util.List.add(Object)",
    "invokedMethods": ["<clinit>()V","getInstance()Lorg/springframework/aop/framework/adapter/AdvisorAdapterRegistry;"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/MethodBeforeAdviceAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/MethodBeforeAdviceAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/adapter/AdvisorAdapter;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInterceptor(Lorg/springframework/aop/Advisor;)Lorg/aopalliance/intercept/MethodInterceptor;","supportsAdvice(Lorg/aopalliance/aop/Advice;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/MethodBeforeAdviceInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/MethodBeforeAdviceInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/aopalliance/intercept/MethodInterceptor;","Lorg/springframework/aop/BeforeAdvice;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/aop/MethodBeforeAdvice;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/ThrowsAdviceAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/ThrowsAdviceAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/framework/adapter/AdvisorAdapter;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInterceptor(Lorg/springframework/aop/Advisor;)Lorg/aopalliance/intercept/MethodInterceptor;","supportsAdvice(Lorg/aopalliance/aop/Advice;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/ThrowsAdviceInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/ThrowsAdviceInterceptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/aopalliance/intercept/MethodInterceptor;","Lorg/springframework/aop/AfterAdvice;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/UnknownAdviceTypeException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/UnknownAdviceTypeException.class",
    "super": "Ljava/lang/IllegalArgumentException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/adapter/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/adapter/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/autoproxy/AutoProxyUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/autoproxy/AutoProxyUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/aop/framework/autoproxy/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/autoproxy/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/framework/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/framework/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/scope/ScopedProxyFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/scope/ScopedProxyFactoryBean.class",
    "super": "Lorg/springframework/aop/framework/ProxyConfig;",
    "interfaces": ["Lorg/springframework/beans/factory/FactoryBean;","Lorg/springframework/beans/factory/BeanFactoryAware;","Lorg/springframework/aop/framework/AopInfrastructureBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/scope/ScopedProxyUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/scope/ScopedProxyUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","createScopedProxy(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Z)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;","getTargetBeanName(Ljava/lang/String;)Ljava/lang/String;","isScopedTarget(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/scope/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/scope/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/support/AopUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/support/AopUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTargetClass(Ljava/lang/Object;)Ljava/lang/Class;","isCglibProxy(Ljava/lang/Object;)Z","isEqualsMethod(Ljava/lang/reflect/Method;)Z","isFinalizeMethod(Ljava/lang/reflect/Method;)Z","isHashCodeMethod(Ljava/lang/reflect/Method;)Z"]
  }
,
  {
    "className": "Lorg/springframework/aop/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/aop/target/EmptyTargetSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/target/EmptyTargetSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/TargetSource;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Z)V","equals(Ljava/lang/Object;)Z","forClass(Ljava/lang/Class;Z)Lorg/springframework/aop/target/EmptyTargetSource;","getTarget()Ljava/lang/Object;","getTargetClass()Ljava/lang/Class;","hashCode()I","isStatic()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/aop/target/SingletonTargetSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-aop-5.3.1.jar!/org/springframework/aop/target/SingletonTargetSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/TargetSource;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/asm/AnnotationVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/AnnotationVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/AnnotationVisitor;)V","visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/asm/AnnotationWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/AnnotationWriter.class",
    "super": "Lorg/springframework/asm/AnnotationVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/SymbolTable;ZLorg/springframework/asm/ByteVector;Lorg/springframework/asm/AnnotationWriter;)V","computeAnnotationsSize(Ljava/lang/String;)I","computeAnnotationsSize(Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;)I","computeParameterAnnotationsSize(Ljava/lang/String;[Lorg/springframework/asm/AnnotationWriter;I)I","create(Lorg/springframework/asm/SymbolTable;ILorg/springframework/asm/TypePath;Ljava/lang/String;Lorg/springframework/asm/AnnotationWriter;)Lorg/springframework/asm/AnnotationWriter;","create(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;Lorg/springframework/asm/AnnotationWriter;)Lorg/springframework/asm/AnnotationWriter;","putAnnotations(ILorg/springframework/asm/ByteVector;)V","putAnnotations(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/AnnotationWriter;Lorg/springframework/asm/ByteVector;)V","putParameterAnnotations(I[Lorg/springframework/asm/AnnotationWriter;ILorg/springframework/asm/ByteVector;)V","visit(Ljava/lang/String;Ljava/lang/Object;)V","visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;","visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;","visitEnd()V","visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/Attribute$Set;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Attribute$Set.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Lorg/springframework/asm/Attribute;)V","addAttributes(Lorg/springframework/asm/Attribute;)V","contains(Lorg/springframework/asm/Attribute;)Z","toArray()[Lorg/springframework/asm/Attribute;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Attribute;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Attribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","computeAttributesSize(Lorg/springframework/asm/SymbolTable;)I","computeAttributesSize(Lorg/springframework/asm/SymbolTable;II)I","computeAttributesSize(Lorg/springframework/asm/SymbolTable;[BIII)I","getAttributeCount()I","isCodeAttribute()Z","putAttributes(Lorg/springframework/asm/SymbolTable;IILorg/springframework/asm/ByteVector;)V","putAttributes(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/ByteVector;)V","putAttributes(Lorg/springframework/asm/SymbolTable;[BIIILorg/springframework/asm/ByteVector;)V","read(Lorg/springframework/asm/ClassReader;II[CI[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Attribute;","write(Lorg/springframework/asm/ClassWriter;[BIII)Lorg/springframework/asm/ByteVector;"]
  }
,
  {
    "className": "Lorg/springframework/asm/ByteVector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ByteVector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","<init>([B)V","encodeUtf8(Ljava/lang/String;II)Lorg/springframework/asm/ByteVector;","enlarge(I)V","put11(II)Lorg/springframework/asm/ByteVector;","put112(III)Lorg/springframework/asm/ByteVector;","put12(II)Lorg/springframework/asm/ByteVector;","put122(III)Lorg/springframework/asm/ByteVector;","putByte(I)Lorg/springframework/asm/ByteVector;","putByteArray([BII)Lorg/springframework/asm/ByteVector;","putInt(I)Lorg/springframework/asm/ByteVector;","putLong(J)Lorg/springframework/asm/ByteVector;","putShort(I)Lorg/springframework/asm/ByteVector;","putUTF8(Ljava/lang/String;)Lorg/springframework/asm/ByteVector;"]
  }
,
  {
    "className": "Lorg/springframework/asm/ClassReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ClassReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>([B)V","<init>([BII)V","<init>([BIZ)V","accept(Lorg/springframework/asm/ClassVisitor;I)V","accept(Lorg/springframework/asm/ClassVisitor;[Lorg/springframework/asm/Attribute;I)V","computeImplicitFrame(Lorg/springframework/asm/Context;)V","createDebugLabel(I[Lorg/springframework/asm/Label;)V","createLabel(I[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Label;","getFirstAttributeOffset()I","getTypeAnnotationBytecodeOffset([II)I","readAttribute([Lorg/springframework/asm/Attribute;Ljava/lang/String;II[CI[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Attribute;","readBootstrapMethodsAttribute(I)[I","readByte(I)I","readClass(I[C)Ljava/lang/String;","readCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/Context;I)V","readConst(I[C)Ljava/lang/Object;","readConstantDynamic(I[C)Lorg/springframework/asm/ConstantDynamic;","readElementValue(Lorg/springframework/asm/AnnotationVisitor;ILjava/lang/String;[C)I","readElementValues(Lorg/springframework/asm/AnnotationVisitor;IZ[C)I","readField(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/Context;I)I","readInt(I)I","readLabel(I[Lorg/springframework/asm/Label;)Lorg/springframework/asm/Label;","readLong(I)J","readMethod(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/Context;I)I","readModule(I[C)Ljava/lang/String;","readModuleAttributes(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/Context;IILjava/lang/String;)V","readPackage(I[C)Ljava/lang/String;","readParameterAnnotations(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/Context;IZ)V","readRecordComponent(Lorg/springframework/asm/ClassVisitor;Lorg/springframework/asm/Context;I)I","readShort(I)S","readStackMapFrame(IZZLorg/springframework/asm/Context;)I","readStream(Ljava/io/InputStream;Z)[B","readStringish(I[C)Ljava/lang/String;","readTypeAnnotationTarget(Lorg/springframework/asm/Context;I)I","readTypeAnnotations(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/asm/Context;IZ)[I","readUTF8(I[C)Ljava/lang/String;","readUnsignedShort(I)I","readUtf(II[C)Ljava/lang/String;","readUtf(I[C)Ljava/lang/String;","readVerificationTypeInfo(I[Ljava/lang/Object;I[C[Lorg/springframework/asm/Label;)I"]
  }
,
  {
    "className": "Lorg/springframework/asm/ClassTooLargeException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ClassTooLargeException.class",
    "super": "Ljava/lang/IndexOutOfBoundsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/ClassVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ClassVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/ClassVisitor;)V","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitEnd()V","visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;","visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;","visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/springframework/asm/ModuleVisitor;","visitNestHost(Ljava/lang/String;)V","visitNestMember(Ljava/lang/String;)V","visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitPermittedSubclass(Ljava/lang/String;)V","visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/RecordComponentVisitor;","visitSource(Ljava/lang/String;Ljava/lang/String;)V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/asm/ClassWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ClassWriter.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Lorg/springframework/asm/ClassReader;I)V","getAttributePrototypes()[Lorg/springframework/asm/Attribute;","getClassLoader()Ljava/lang/ClassLoader;","getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","replaceAsmInstructions([BZ)[B","toByteArray()[B","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitEnd()V","visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/asm/FieldVisitor;","visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;","visitModule(Ljava/lang/String;ILjava/lang/String;)Lorg/springframework/asm/ModuleVisitor;","visitNestHost(Ljava/lang/String;)V","visitNestMember(Ljava/lang/String;)V","visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitPermittedSubclass(Ljava/lang/String;)V","visitRecordComponent(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/RecordComponentVisitor;","visitSource(Ljava/lang/String;Ljava/lang/String;)V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/asm/ConstantDynamic;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ConstantDynamic.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getBootstrapMethod()Lorg/springframework/asm/Handle;","getBootstrapMethodArgumentsUnsafe()[Ljava/lang/Object;","getDescriptor()Ljava/lang/String;","getName()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Context;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Context.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/asm/CurrentFrame;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/CurrentFrame.class",
    "super": "Lorg/springframework/asm/Frame;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/Label;)V","execute(IILorg/springframework/asm/Symbol;Lorg/springframework/asm/SymbolTable;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/Edge;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Edge.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILorg/springframework/asm/Label;Lorg/springframework/asm/Edge;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/FieldVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/FieldVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/FieldVisitor;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/FieldWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/FieldWriter.class",
    "super": "Lorg/springframework/asm/FieldVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V","collectAttributePrototypes(Lorg/springframework/asm/Attribute$Set;)V","computeFieldInfoSize()I","putFieldInfo(Lorg/springframework/asm/ByteVector;)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitEnd()V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Frame;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Frame.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/Label;)V","accept(Lorg/springframework/asm/MethodWriter;)V","addInitializedType(I)V","copyFrom(Lorg/springframework/asm/Frame;)V","execute(IILorg/springframework/asm/Symbol;Lorg/springframework/asm/SymbolTable;)V","getAbstractTypeFromApiFormat(Lorg/springframework/asm/SymbolTable;Ljava/lang/Object;)I","getAbstractTypeFromDescriptor(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;I)I","getAbstractTypeFromInternalName(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;)I","getConcreteOutputType(II)I","getInitializedType(Lorg/springframework/asm/SymbolTable;I)I","getInputStackSize()I","getLocal(I)I","merge(Lorg/springframework/asm/SymbolTable;I[II)Z","merge(Lorg/springframework/asm/SymbolTable;Lorg/springframework/asm/Frame;I)Z","pop()I","pop(I)V","pop(Ljava/lang/String;)V","push(I)V","push(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;)V","putAbstractType(Lorg/springframework/asm/SymbolTable;ILorg/springframework/asm/ByteVector;)V","setInputFrameFromApiFormat(Lorg/springframework/asm/SymbolTable;I[Ljava/lang/Object;I[Ljava/lang/Object;)V","setInputFrameFromDescriptor(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;I)V","setLocal(II)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/Handle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Handle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","getDesc()Ljava/lang/String;","getName()Ljava/lang/String;","getOwner()Ljava/lang/String;","getTag()I","hashCode()I","isInterface()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Handler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Handler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/Handler;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","<init>(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;ILjava/lang/String;)V","getExceptionTableLength(Lorg/springframework/asm/Handler;)I","getExceptionTableSize(Lorg/springframework/asm/Handler;)I","putExceptionTable(Lorg/springframework/asm/Handler;Lorg/springframework/asm/ByteVector;)V","removeRange(Lorg/springframework/asm/Handler;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)Lorg/springframework/asm/Handler;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Label;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Label.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(Lorg/springframework/asm/MethodVisitor;Z)V","addForwardReference(III)V","addLineNumber(I)V","addSubroutineRetSuccessors(Lorg/springframework/asm/Label;)V","getCanonicalInstance()Lorg/springframework/asm/Label;","markSubroutine(S)V","pushSuccessors(Lorg/springframework/asm/Label;)Lorg/springframework/asm/Label;","put(Lorg/springframework/asm/ByteVector;IZ)V","resolve([BI)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/asm/MethodTooLargeException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/MethodTooLargeException.class",
    "super": "Ljava/lang/IndexOutOfBoundsException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/MethodVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/MethodVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/MethodVisitor;)V","visitAnnotableParameterCount(IZ)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitCode()V","visitEnd()V","visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V","visitIincInsn(II)V","visitInsn(I)V","visitInsnAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitIntInsn(II)V","visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V","visitJumpInsn(ILorg/springframework/asm/Label;)V","visitLabel(Lorg/springframework/asm/Label;)V","visitLdcInsn(Ljava/lang/Object;)V","visitLineNumber(ILorg/springframework/asm/Label;)V","visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V","visitLocalVariableAnnotation(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V","visitMaxs(II)V","visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","visitMultiANewArrayInsn(Ljava/lang/String;I)V","visitParameter(Ljava/lang/String;I)V","visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V","visitTryCatchAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitTypeInsn(ILjava/lang/String;)V","visitVarInsn(II)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/MethodWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/MethodWriter.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/SymbolTable;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;I)V","addSuccessorToCurrentBasicBlock(ILorg/springframework/asm/Label;)V","canCopyMethodAttributes(Lorg/springframework/asm/ClassReader;ZZIII)Z","collectAttributePrototypes(Lorg/springframework/asm/Attribute$Set;)V","computeAllFrames()V","computeMaxStackAndLocal()V","computeMethodInfoSize()I","endCurrentBasicBlockWithNoSuccessor()V","hasAsmInstructions()Z","hasFrames()Z","putAbstractTypes(II)V","putFrame()V","putFrameType(Ljava/lang/Object;)V","putMethodInfo(Lorg/springframework/asm/ByteVector;)V","setMethodAttributesSource(II)V","visitAbstractType(II)V","visitAnnotableParameterCount(IZ)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAnnotationDefault()Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitCode()V","visitEnd()V","visitFieldInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V","visitFrameEnd()V","visitFrameStart(III)I","visitIincInsn(II)V","visitInsn(I)V","visitInsnAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitIntInsn(II)V","visitInvokeDynamicInsn(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)V","visitJumpInsn(ILorg/springframework/asm/Label;)V","visitLabel(Lorg/springframework/asm/Label;)V","visitLdcInsn(Ljava/lang/Object;)V","visitLineNumber(ILorg/springframework/asm/Label;)V","visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V","visitLocalVariableAnnotation(ILorg/springframework/asm/TypePath;[Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;[ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitLookupSwitchInsn(Lorg/springframework/asm/Label;[I[Lorg/springframework/asm/Label;)V","visitMaxs(II)V","visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","visitMultiANewArrayInsn(Ljava/lang/String;I)V","visitParameter(Ljava/lang/String;I)V","visitParameterAnnotation(ILjava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitSwitchInsn(Lorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V","visitTableSwitchInsn(IILorg/springframework/asm/Label;[Lorg/springframework/asm/Label;)V","visitTryCatchAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitTryCatchBlock(Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/lang/String;)V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitTypeInsn(ILjava/lang/String;)V","visitVarInsn(II)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/ModuleVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ModuleVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/ModuleVisitor;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/ModuleWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/ModuleWriter.class",
    "super": "Lorg/springframework/asm/ModuleVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/SymbolTable;III)V","computeAttributesSize()I","getAttributeCount()I","putAttributes(Lorg/springframework/asm/ByteVector;)V","visitEnd()V","visitExport(Ljava/lang/String;I[Ljava/lang/String;)V","visitMainClass(Ljava/lang/String;)V","visitOpen(Ljava/lang/String;I[Ljava/lang/String;)V","visitPackage(Ljava/lang/String;)V","visitProvide(Ljava/lang/String;[Ljava/lang/String;)V","visitRequire(Ljava/lang/String;ILjava/lang/String;)V","visitUse(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/Opcodes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Opcodes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/asm/RecordComponentVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/RecordComponentVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(ILorg/springframework/asm/RecordComponentVisitor;)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/RecordComponentWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/RecordComponentWriter.class",
    "super": "Lorg/springframework/asm/RecordComponentVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/SymbolTable;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","collectAttributePrototypes(Lorg/springframework/asm/Attribute$Set;)V","computeRecordComponentInfoSize()I","putRecordComponentInfo(Lorg/springframework/asm/ByteVector;)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitAttribute(Lorg/springframework/asm/Attribute;)V","visitEnd()V","visitTypeAnnotation(ILorg/springframework/asm/TypePath;Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/asm/Symbol;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Symbol.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;J)V","getArgumentsAndReturnSizes()I"]
  }
,
  {
    "className": "Lorg/springframework/asm/SymbolTable$Entry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/SymbolTable$Entry.class",
    "super": "Lorg/springframework/asm/Symbol;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIJI)V","<init>(IILjava/lang/String;I)V","<init>(IILjava/lang/String;JI)V","<init>(IILjava/lang/String;Ljava/lang/String;I)V","<init>(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;JI)V"]
  }
,
  {
    "className": "Lorg/springframework/asm/SymbolTable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/SymbolTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/ClassWriter;)V","<init>(Lorg/springframework/asm/ClassWriter;Lorg/springframework/asm/ClassReader;)V","add(Lorg/springframework/asm/SymbolTable$Entry;)V","addBootstrapMethod(III)Lorg/springframework/asm/Symbol;","addBootstrapMethod(Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;","addConstant(Ljava/lang/Object;)Lorg/springframework/asm/Symbol;","addConstantClass(Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantDouble(D)Lorg/springframework/asm/Symbol;","addConstantDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;","addConstantDynamicOrInvokeDynamicReference(IILjava/lang/String;Ljava/lang/String;I)V","addConstantDynamicOrInvokeDynamicReference(ILjava/lang/String;Ljava/lang/String;I)Lorg/springframework/asm/Symbol;","addConstantFieldref(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantFloat(F)Lorg/springframework/asm/Symbol;","addConstantInteger(I)Lorg/springframework/asm/Symbol;","addConstantIntegerOrFloat(II)Lorg/springframework/asm/Symbol;","addConstantIntegerOrFloat(III)V","addConstantInvokeDynamic(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Handle;[Ljava/lang/Object;)Lorg/springframework/asm/Symbol;","addConstantLong(J)Lorg/springframework/asm/Symbol;","addConstantLongOrDouble(IIJ)V","addConstantLongOrDouble(IJ)Lorg/springframework/asm/Symbol;","addConstantMemberReference(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","addConstantMemberReference(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/SymbolTable$Entry;","addConstantMethodHandle(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","addConstantMethodHandle(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/springframework/asm/Symbol;","addConstantMethodType(Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantMethodref(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/springframework/asm/Symbol;","addConstantModule(Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantNameAndType(ILjava/lang/String;Ljava/lang/String;)V","addConstantNameAndType(Ljava/lang/String;Ljava/lang/String;)I","addConstantPackage(Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantString(Ljava/lang/String;)Lorg/springframework/asm/Symbol;","addConstantUtf8(ILjava/lang/String;)V","addConstantUtf8(Ljava/lang/String;)I","addConstantUtf8Reference(IILjava/lang/String;)V","addConstantUtf8Reference(ILjava/lang/String;)Lorg/springframework/asm/Symbol;","addMergedType(II)I","addType(Ljava/lang/String;)I","addTypeInternal(Lorg/springframework/asm/SymbolTable$Entry;)I","addUninitializedType(Ljava/lang/String;I)I","computeBootstrapMethodsSize()I","copyBootstrapMethods(Lorg/springframework/asm/ClassReader;[C)V","get(I)Lorg/springframework/asm/SymbolTable$Entry;","getClassName()Ljava/lang/String;","getConstantPoolCount()I","getConstantPoolLength()I","getMajorVersion()I","getSource()Lorg/springframework/asm/ClassReader;","getType(I)Lorg/springframework/asm/Symbol;","hash(II)I","hash(IJ)I","hash(ILjava/lang/String;)I","hash(ILjava/lang/String;I)I","hash(ILjava/lang/String;Ljava/lang/String;)I","hash(ILjava/lang/String;Ljava/lang/String;I)I","hash(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)I","hash(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I","put(Lorg/springframework/asm/SymbolTable$Entry;)Lorg/springframework/asm/SymbolTable$Entry;","putBootstrapMethods(Lorg/springframework/asm/ByteVector;)V","putConstantPool(Lorg/springframework/asm/ByteVector;)V","setMajorVersionAndClassName(ILjava/lang/String;)I"]
  }
,
  {
    "className": "Lorg/springframework/asm/Type;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/Type.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;II)V","appendDescriptor(Ljava/lang/Class;Ljava/lang/StringBuilder;)V","appendDescriptor(Ljava/lang/StringBuilder;)V","equals(Ljava/lang/Object;)Z","getArgumentTypes(Ljava/lang/String;)[Lorg/springframework/asm/Type;","getArgumentsAndReturnSizes(Ljava/lang/String;)I","getClassName()Ljava/lang/String;","getDescriptor()Ljava/lang/String;","getDescriptor(Ljava/lang/Class;)Ljava/lang/String;","getDimensions()I","getElementType()Lorg/springframework/asm/Type;","getInternalName()Ljava/lang/String;","getInternalName(Ljava/lang/Class;)Ljava/lang/String;","getMethodDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;","getMethodDescriptor(Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)Ljava/lang/String;","getMethodType(Ljava/lang/String;)Lorg/springframework/asm/Type;","getObjectType(Ljava/lang/String;)Lorg/springframework/asm/Type;","getOpcode(I)I","getReturnType(Ljava/lang/String;)Lorg/springframework/asm/Type;","getReturnTypeOffset(Ljava/lang/String;)I","getSize()I","getSort()I","getType(Ljava/lang/Class;)Lorg/springframework/asm/Type;","getType(Ljava/lang/String;)Lorg/springframework/asm/Type;","getTypeInternal(Ljava/lang/String;II)Lorg/springframework/asm/Type;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/asm/TypePath;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/TypePath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BI)V","getLength()I","getStep(I)I","getStepArgument(I)I","put(Lorg/springframework/asm/TypePath;Lorg/springframework/asm/ByteVector;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/asm/TypeReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/asm/TypeReference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["putTarget(ILorg/springframework/asm/ByteVector;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;ZZ)V","getCollectionType(I)Ljava/lang/Class;","getMapKeyType(I)Ljava/lang/Class;","getMapValueType(I)Ljava/lang/Class;","getPropertyType()Ljava/lang/Class;","isReadable()Z","isWritable()Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/AbstractNestablePropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/AbstractNestablePropertyAccessor.class",
    "super": "Lorg/springframework/beans/AbstractPropertyAccessor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/AbstractNestablePropertyAccessor;)V","<init>(Z)V","convertForProperty(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertIfNecessary(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","createDefaultPropertyValue(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;)Lorg/springframework/beans/PropertyValue;","getAutoGrowCollectionLimit()I","getFinalPath(Lorg/springframework/beans/AbstractNestablePropertyAccessor;Ljava/lang/String;)Ljava/lang/String;","getNestedPath()Ljava/lang/String;","getNestedPropertyAccessor(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor;","getPropertyAccessorForPropertyPath(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor;","getPropertyHandler(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler;","getPropertyHoldingValue(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;)Ljava/lang/Object;","getPropertyNameKeyEnd(Ljava/lang/String;I)I","getPropertyNameTokens(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;","getPropertyType(Ljava/lang/String;)Ljava/lang/Class;","getPropertyTypeDescriptor(Ljava/lang/String;)Lorg/springframework/core/convert/TypeDescriptor;","getPropertyValue(Ljava/lang/String;)Ljava/lang/Object;","getPropertyValue(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;)Ljava/lang/Object;","getRootClass()Ljava/lang/Class;","getRootInstance()Ljava/lang/Object;","getWrappedClass()Ljava/lang/Class;","getWrappedInstance()Ljava/lang/Object;","growArrayIfNecessary(Ljava/lang/Object;ILjava/lang/String;)Ljava/lang/Object;","growCollectionIfNecessary(Ljava/util/Collection;ILjava/lang/String;Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler;I)V","isWritableProperty(Ljava/lang/String;)Z","newValue(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/String;)Ljava/lang/Object;","processKeyedProperty(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;Lorg/springframework/beans/PropertyValue;)V","processLocalProperty(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;Lorg/springframework/beans/PropertyValue;)V","setAutoGrowCollectionLimit(I)V","setDefaultValue(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;)Ljava/lang/Object;","setPropertyValue(Ljava/lang/String;Ljava/lang/Object;)V","setPropertyValue(Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyTokenHolder;Lorg/springframework/beans/PropertyValue;)V","setPropertyValue(Lorg/springframework/beans/PropertyValue;)V","setWrappedInstance(Ljava/lang/Object;)V","setWrappedInstance(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/AbstractPropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/AbstractPropertyAccessor.class",
    "super": "Lorg/springframework/beans/TypeConverterSupport;",
    "interfaces": ["Lorg/springframework/beans/ConfigurablePropertyAccessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","isAutoGrowNestedPaths()Z","isExtractOldValueForEditor()Z","setAutoGrowNestedPaths(Z)V","setExtractOldValueForEditor(Z)V","setPropertyValues(Lorg/springframework/beans/PropertyValues;)V","setPropertyValues(Lorg/springframework/beans/PropertyValues;ZZ)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanInfoFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanInfoFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/BeanInstantiationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanInstantiationException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;)V","<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/reflect/Constructor;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/reflect/Method;Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanMetadataAttribute;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanMetadataAttribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanMetadataAttributeAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanMetadataAttributeAccessor.class",
    "super": "Lorg/springframework/core/AttributeAccessorSupport;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAttribute(Ljava/lang/String;)Ljava/lang/Object;","getSource()Ljava/lang/Object;","removeAttribute(Ljava/lang/String;)Ljava/lang/Object;","setAttribute(Ljava/lang/String;Ljava/lang/Object;)V","setSource(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanMetadataElement;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanMetadataElement.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/BeanUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","findDeclaredMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;","findDeclaredMethodWithMinimalParameters(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;","findEditorByConvention(Ljava/lang/Class;)Ljava/beans/PropertyEditor;","findMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;","findMethodWithMinimalParameters(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;","findMethodWithMinimalParameters([Ljava/lang/reflect/Method;Ljava/lang/String;)Ljava/lang/reflect/Method;","findPrimaryConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getPropertyDescriptors(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;","getWriteMethodParameter(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/MethodParameter;","instantiateClass(Ljava/lang/Class;)Ljava/lang/Object;","instantiateClass(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;","instantiateClass(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;","isSimpleProperty(Ljava/lang/Class;)Z","isSimpleValueType(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanWrapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanWrapper.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/ConfigurablePropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/BeanWrapperImpl$BeanPropertyHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanWrapperImpl$BeanPropertyHandler.class",
    "super": "Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/BeanWrapperImpl;Ljava/beans/PropertyDescriptor;)V","getResolvableType()Lorg/springframework/core/ResolvableType;","getValue()Ljava/lang/Object;","nested(I)Lorg/springframework/core/convert/TypeDescriptor;","setValue(Ljava/lang/Object;)V","toTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeanWrapperImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeanWrapperImpl.class",
    "super": "Lorg/springframework/beans/AbstractNestablePropertyAccessor;",
    "interfaces": ["Lorg/springframework/beans/BeanWrapper;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/BeanWrapperImpl;)V","<init>(Z)V","access$000(Lorg/springframework/beans/BeanWrapperImpl;Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/Property;","convertForProperty(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","createNotWritablePropertyException(Ljava/lang/String;)Lorg/springframework/beans/NotWritablePropertyException;","getCachedIntrospectionResults()Lorg/springframework/beans/CachedIntrospectionResults;","getLocalPropertyHandler(Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler;","getLocalPropertyHandler(Ljava/lang/String;)Lorg/springframework/beans/BeanWrapperImpl$BeanPropertyHandler;","getPropertyDescriptor(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;","getPropertyDescriptors()[Ljava/beans/PropertyDescriptor;","newNestedPropertyAccessor(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/AbstractNestablePropertyAccessor;","newNestedPropertyAccessor(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/BeanWrapperImpl;","property(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/Property;","setBeanInstance(Ljava/lang/Object;)V","setIntrospectionClass(Ljava/lang/Class;)V","setSecurityContext(Ljava/security/AccessControlContext;)V","setWrappedInstance(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/BeansException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/BeansException.class",
    "super": "Lorg/springframework/core/NestedRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/CachedIntrospectionResults;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/CachedIntrospectionResults.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;)V","addTypeDescriptor(Ljava/beans/PropertyDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;","buildGenericTypeAwarePropertyDescriptor(Ljava/lang/Class;Ljava/beans/PropertyDescriptor;)Ljava/beans/PropertyDescriptor;","clearClassLoader(Ljava/lang/ClassLoader;)V","forClass(Ljava/lang/Class;)Lorg/springframework/beans/CachedIntrospectionResults;","getBeanClass()Ljava/lang/Class;","getBeanInfo(Ljava/lang/Class;)Ljava/beans/BeanInfo;","getPropertyDescriptor(Ljava/lang/String;)Ljava/beans/PropertyDescriptor;","getPropertyDescriptors()[Ljava/beans/PropertyDescriptor;","getTypeDescriptor(Ljava/beans/PropertyDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;","introspectInterfaces(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Set;)V","introspectPlainAccessors(Ljava/lang/Class;Ljava/util/Set;)V","isClassLoaderAccepted(Ljava/lang/ClassLoader;)Z","isPlainAccessor(Ljava/lang/reflect/Method;)Z","isUnderneathClassLoader(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z","lambda$clearClassLoader$0(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z","lambda$clearClassLoader$1(Ljava/lang/ClassLoader;Ljava/lang/Class;)Z","lambda$clearClassLoader$2(Ljava/lang/ClassLoader;Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/ConfigurablePropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/ConfigurablePropertyAccessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/PropertyAccessor;","Lorg/springframework/beans/PropertyEditorRegistry;","Lorg/springframework/beans/TypeConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/ConversionNotSupportedException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/ConversionNotSupportedException.class",
    "super": "Lorg/springframework/beans/TypeMismatchException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Class;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/FatalBeanException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/FatalBeanException.class",
    "super": "Lorg/springframework/beans/BeansException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/GenericTypeAwarePropertyDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/GenericTypeAwarePropertyDescriptor.class",
    "super": "Ljava/beans/PropertyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;)V","equals(Ljava/lang/Object;)Z","getBeanClass()Ljava/lang/Class;","getPropertyEditorClass()Ljava/lang/Class;","getPropertyType()Ljava/lang/Class;","getReadMethod()Ljava/lang/reflect/Method;","getWriteMethod()Ljava/lang/reflect/Method;","getWriteMethodForActualAccess()Ljava/lang/reflect/Method;","getWriteMethodParameter()Lorg/springframework/core/MethodParameter;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/beans/InvalidPropertyException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/InvalidPropertyException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/Mergeable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/Mergeable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/MethodInvocationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/MethodInvocationException.class",
    "super": "Lorg/springframework/beans/PropertyAccessException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/MutablePropertyValues;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/MutablePropertyValues.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/PropertyValues;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/List;)V","<init>(Lorg/springframework/beans/PropertyValues;)V","add(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/MutablePropertyValues;","addPropertyValue(Lorg/springframework/beans/PropertyValue;)Lorg/springframework/beans/MutablePropertyValues;","addPropertyValues(Lorg/springframework/beans/PropertyValues;)Lorg/springframework/beans/MutablePropertyValues;","contains(Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","getPropertyValue(Ljava/lang/String;)Lorg/springframework/beans/PropertyValue;","getPropertyValueList()Ljava/util/List;","getPropertyValues()[Lorg/springframework/beans/PropertyValue;","hashCode()I","isConverted()Z","isEmpty()Z","iterator()Ljava/util/Iterator;","mergeIfRequired(Lorg/springframework/beans/PropertyValue;Lorg/springframework/beans/PropertyValue;)Lorg/springframework/beans/PropertyValue;","setConverted()V","setPropertyValueAt(Lorg/springframework/beans/PropertyValue;I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/NotReadablePropertyException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/NotReadablePropertyException.class",
    "super": "Lorg/springframework/beans/InvalidPropertyException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/NotWritablePropertyException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/NotWritablePropertyException.class",
    "super": "Lorg/springframework/beans/InvalidPropertyException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/NullValueInNestedPathException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/NullValueInNestedPathException.class",
    "super": "Lorg/springframework/beans/InvalidPropertyException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;)V","<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyAccessException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyAccessException.class",
    "super": "Lorg/springframework/beans/BeansException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyAccessorUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyAccessorUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFirstNestedPropertySeparatorIndex(Ljava/lang/String;)I","getLastNestedPropertySeparatorIndex(Ljava/lang/String;)I","getNestedPropertySeparatorIndex(Ljava/lang/String;Z)I","getPropertyName(Ljava/lang/String;)Ljava/lang/String;","isNestedOrIndexedProperty(Ljava/lang/String;)Z","matchesProperty(Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyBatchUpdateException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyBatchUpdateException.class",
    "super": "Lorg/springframework/beans/BeansException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Lorg/springframework/beans/PropertyAccessException;)V","contains(Ljava/lang/Class;)Z","getExceptionCount()I","getMessage()Ljava/lang/String;","printStackTrace(Ljava/io/PrintStream;)V","printStackTrace(Ljava/io/PrintWriter;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyDescriptorUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyDescriptorUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/beans/PropertyDescriptor;Ljava/beans/PropertyDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyEditorRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyEditorRegistrar.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyEditorRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyEditorRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/beans/PropertyEditor;Ljava/lang/Class;)V","<init>(Ljava/beans/PropertyEditor;Ljava/lang/Class;Lorg/springframework/beans/PropertyEditorRegistrySupport$1;)V","access$100(Lorg/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder;Ljava/lang/Class;)Ljava/beans/PropertyEditor;","access$200(Lorg/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder;)Ljava/lang/Class;","access$300(Lorg/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder;)Ljava/beans/PropertyEditor;","getPropertyEditor()Ljava/beans/PropertyEditor;","getPropertyEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;","getRegisteredType()Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyEditorRegistrySupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyEditorRegistrySupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/PropertyEditorRegistry;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>()V","addStrippedPropertyPaths(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V","copyCustomEditorsTo(Lorg/springframework/beans/PropertyEditorRegistry;Ljava/lang/String;)V","copyDefaultEditorsTo(Lorg/springframework/beans/PropertyEditorRegistrySupport;)V","createDefaultEditors()V","findCustomEditor(Ljava/lang/Class;Ljava/lang/String;)Ljava/beans/PropertyEditor;","getConversionService()Lorg/springframework/core/convert/ConversionService;","getCustomEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;","getCustomEditor(Ljava/lang/String;Ljava/lang/Class;)Ljava/beans/PropertyEditor;","getDefaultEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;","getPropertyType(Ljava/lang/String;)Ljava/lang/Class;","guessPropertyTypeFromEditors(Ljava/lang/String;)Ljava/lang/Class;","hasCustomEditorForElement(Ljava/lang/Class;Ljava/lang/String;)Z","lambda$copyCustomEditorsTo$0(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/PropertyEditorRegistry;Ljava/lang/String;Lorg/springframework/beans/PropertyEditorRegistrySupport$CustomEditorHolder;)V","overrideDefaultEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V","registerCustomEditor(Ljava/lang/Class;Ljava/beans/PropertyEditor;)V","registerCustomEditor(Ljava/lang/Class;Ljava/lang/String;Ljava/beans/PropertyEditor;)V","registerDefaultEditors()V","setConversionService(Lorg/springframework/core/convert/ConversionService;)V","useConfigValueEditors()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyMatches$BeanPropertyMatches;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyMatches$BeanPropertyMatches.class",
    "super": "Lorg/springframework/beans/PropertyMatches;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;I)V","buildErrorMessage()Ljava/lang/String;","calculateMatches(Ljava/lang/String;[Ljava/beans/PropertyDescriptor;I)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyMatches;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyMatches.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V","<init>(Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/beans/PropertyMatches$1;)V","access$100(Ljava/lang/String;Ljava/lang/String;)I","appendHintMessage(Ljava/lang/StringBuilder;)V","calculateStringDistance(Ljava/lang/String;Ljava/lang/String;)I","forProperty(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/beans/PropertyMatches;","forProperty(Ljava/lang/String;Ljava/lang/Class;I)Lorg/springframework/beans/PropertyMatches;","getPossibleMatches()[Ljava/lang/String;","getPropertyName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyValue.class",
    "super": "Lorg/springframework/beans/BeanMetadataAttributeAccessor;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","<init>(Lorg/springframework/beans/PropertyValue;)V","<init>(Lorg/springframework/beans/PropertyValue;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getConvertedValue()Ljava/lang/Object;","getName()Ljava/lang/String;","getOriginalPropertyValue()Lorg/springframework/beans/PropertyValue;","getValue()Ljava/lang/Object;","hashCode()I","isConverted()Z","isOptional()Z","setConvertedValue(Ljava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/PropertyValues;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/PropertyValues.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/SimpleTypeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/SimpleTypeConverter.class",
    "super": "Lorg/springframework/beans/TypeConverterSupport;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/TypeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/TypeConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/TypeConverterDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/TypeConverterDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/PropertyEditorRegistrySupport;)V","<init>(Lorg/springframework/beans/PropertyEditorRegistrySupport;Ljava/lang/Object;)V","attemptToConvertStringToEnum(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;","buildIndexedPropertyName(Ljava/lang/String;I)Ljava/lang/String;","buildKeyedPropertyName(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;","canCreateCopy(Ljava/lang/Class;)Z","convertIfNecessary(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","convertIfNecessary(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertToTypedArray(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","convertToTypedCollection(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/Collection;","convertToTypedMap(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/util/Map;","doConvertTextValue(Ljava/lang/Object;Ljava/lang/String;Ljava/beans/PropertyEditor;)Ljava/lang/Object;","doConvertValue(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Ljava/beans/PropertyEditor;)Ljava/lang/Object;","findDefaultEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;"]
  }
,
  {
    "className": "Lorg/springframework/beans/TypeConverterSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/TypeConverterSupport.class",
    "super": "Lorg/springframework/beans/PropertyEditorRegistrySupport;",
    "interfaces": ["Lorg/springframework/beans/TypeConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","convertIfNecessary(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","convertIfNecessary(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/reflect/Field;)Ljava/lang/Object;","convertIfNecessary(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/MethodParameter;)Ljava/lang/Object;","convertIfNecessary(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/TypeMismatchException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/TypeMismatchException.class",
    "super": "Lorg/springframework/beans/PropertyAccessException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/beans/PropertyChangeEvent;Ljava/lang/Class;Ljava/lang/Throwable;)V","<init>(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/Aware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/Aware.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanClassLoaderAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanClassLoaderAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanCreationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanCreationException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V","addRelatedCause(Ljava/lang/Throwable;)V","contains(Ljava/lang/Class;)Z","getBeanName()Ljava/lang/String;","printStackTrace(Ljava/io/PrintStream;)V","printStackTrace(Ljava/io/PrintWriter;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanCreationNotAllowedException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanCreationNotAllowedException.class",
    "super": "Lorg/springframework/beans/factory/BeanCreationException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanCurrentlyInCreationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanCurrentlyInCreationException.class",
    "super": "Lorg/springframework/beans/factory/BeanCreationException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanDefinitionStoreException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanDefinitionStoreException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanExpressionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanExpressionException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanFactoryAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanFactoryAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanFactoryUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanFactoryUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["beanNamesForTypeIncludingAncestors(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;ZZ)[Ljava/lang/String;","isFactoryDereference(Ljava/lang/String;)Z","lambda$transformedBeanName$0(Ljava/lang/String;)Ljava/lang/String;","mergeNamesWithParent([Ljava/lang/String;[Ljava/lang/String;Lorg/springframework/beans/factory/HierarchicalBeanFactory;)[Ljava/lang/String;","transformedBeanName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanIsAbstractException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanIsAbstractException.class",
    "super": "Lorg/springframework/beans/factory/BeanCreationException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanIsNotAFactoryException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanIsNotAFactoryException.class",
    "super": "Lorg/springframework/beans/factory/BeanNotOfRequiredTypeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanNameAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanNameAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/BeanNotOfRequiredTypeException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/BeanNotOfRequiredTypeException.class",
    "super": "Lorg/springframework/beans/BeansException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/CannotLoadBeanClassException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/CannotLoadBeanClassException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassNotFoundException;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/LinkageError;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/DisposableBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/DisposableBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/FactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/FactoryBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/FactoryBeanNotInitializedException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/FactoryBeanNotInitializedException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/HierarchicalBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/HierarchicalBeanFactory.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/BeanFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/InitializingBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/InitializingBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/InjectionPoint;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/InjectionPoint.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/InjectionPoint;)V","<init>(Lorg/springframework/core/MethodParameter;)V","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getField()Ljava/lang/reflect/Field;","getMethodParameter()Lorg/springframework/core/MethodParameter;","hashCode()I","obtainMethodParameter()Lorg/springframework/core/MethodParameter;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/ListableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/ListableBeanFactory.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/BeanFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/NamedBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/NamedBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/NoSuchBeanDefinitionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/NoSuchBeanDefinitionException.class",
    "super": "Lorg/springframework/beans/BeansException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Ljava/lang/String;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Lorg/springframework/core/ResolvableType;)V","<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/NoUniqueBeanDefinitionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/NoUniqueBeanDefinitionException.class",
    "super": "Lorg/springframework/beans/factory/NoSuchBeanDefinitionException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;ILjava/lang/String;)V","<init>(Lorg/springframework/core/ResolvableType;Ljava/util/Collection;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/ObjectFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/ObjectFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/ObjectProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/ObjectProvider.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectFactory;","Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/SmartFactoryBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/SmartFactoryBean.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/FactoryBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/SmartInitializingSingleton;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/SmartInitializingSingleton.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/UnsatisfiedDependencyException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/UnsatisfiedDependencyException.class",
    "super": "Lorg/springframework/beans/factory/BeanCreationException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/BeansException;)V","<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/InjectionPoint;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/InjectionPoint;Lorg/springframework/beans/BeansException;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/AnnotatedBeanDefinition.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/AnnotatedGenericBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/AnnotatedGenericBeanDefinition.class",
    "super": "Lorg/springframework/beans/factory/support/GenericBeanDefinition;",
    "interfaces": ["Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","getMetadata()Lorg/springframework/core/type/AnnotationMetadata;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/Autowired;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/Autowired.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor;","Lorg/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor;","Lorg/springframework/core/PriorityOrdered;","Lorg/springframework/beans/factory/BeanFactoryAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/DestructionAwareBeanPostProcessor;","Lorg/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor;","Lorg/springframework/core/PriorityOrdered;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/Lookup;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/Lookup.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/Qualifier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/Qualifier.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver.class",
    "super": "Lorg/springframework/beans/factory/support/GenericTypeAwareAutowireCandidateResolver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkQualifier(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Ljava/lang/annotation/Annotation;Lorg/springframework/beans/TypeConverter;)Z","checkQualifiers(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;[Ljava/lang/annotation/Annotation;)Z","extractValue(Lorg/springframework/core/annotation/AnnotationAttributes;)Ljava/lang/Object;","findValue([Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","getFactoryMethodAnnotation(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getQualifiedElementAnnotation(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getSuggestedValue(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Ljava/lang/Object;","hasQualifier(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isAutowireCandidate(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isQualifier(Ljava/lang/Class;)Z","isRequired(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/Value;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/Value.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/annotation/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/annotation/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/AutowireCapableBeanFactory.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/BeanFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/AutowiredPropertyMarker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/AutowiredPropertyMarker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanDefinition.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/AttributeAccessor;","Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanDefinitionHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanDefinitionHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;)V","<init>(Lorg/springframework/beans/factory/config/BeanDefinition;Ljava/lang/String;[Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","getAliases()[Ljava/lang/String;","getBeanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;","getBeanName()Ljava/lang/String;","getLongDescription()Ljava/lang/String;","getShortDescription()Ljava/lang/String;","getSource()Ljava/lang/Object;","hashCode()I","matchesName(Ljava/lang/String;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanExpressionContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanExpressionContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Lorg/springframework/beans/factory/config/Scope;)V","containsObject(Ljava/lang/String;)Z","equals(Ljava/lang/Object;)Z","getBeanFactory()Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;","getObject(Ljava/lang/String;)Ljava/lang/Object;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanExpressionResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanExpressionResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanFactoryPostProcessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanPostProcessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/BeanReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/BeanReference.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/ConfigurableBeanFactory.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/HierarchicalBeanFactory;","Lorg/springframework/beans/factory/config/SingletonBeanRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/ConfigurableListableBeanFactory.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/ListableBeanFactory;","Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;","Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V","access$000(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)Z","access$100(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)I","contentEquals(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)Z","contentHashCode()I","copy()Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;","getConvertedValue()Ljava/lang/Object;","getName()Ljava/lang/String;","getSource()Ljava/lang/Object;","getType()Ljava/lang/String;","getValue()Ljava/lang/Object;","isConverted()Z","setSource(Ljava/lang/Object;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/ConstructorArgumentValues;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/ConstructorArgumentValues.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V","addArgumentValues(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V","addGenericArgumentValue(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V","addIndexedArgumentValue(ILorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V","addOrMergeGenericArgumentValue(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V","addOrMergeIndexedArgumentValue(Ljava/lang/Integer;Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V","equals(Ljava/lang/Object;)Z","getArgumentCount()I","getArgumentValue(ILjava/lang/Class;Ljava/lang/String;Ljava/util/Set;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;","getGenericArgumentValue(Ljava/lang/Class;Ljava/lang/String;Ljava/util/Set;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;","getGenericArgumentValues()Ljava/util/List;","getIndexedArgumentValue(ILjava/lang/Class;Ljava/lang/String;)Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;","getIndexedArgumentValues()Ljava/util/Map;","hashCode()I","isEmpty()Z","lambda$addArgumentValues$0(Ljava/lang/Integer;Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V","lambda$addArgumentValues$1(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)Z","lambda$addArgumentValues$2(Lorg/springframework/beans/factory/config/ConstructorArgumentValues$ValueHolder;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/DependencyDescriptor$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/DependencyDescriptor$1.class",
    "super": "Lorg/springframework/beans/factory/config/DependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/DependencyDescriptor;Lorg/springframework/beans/factory/config/DependencyDescriptor;)V","fallbackMatchAllowed()Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/DependencyDescriptor$KotlinDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/DependencyDescriptor$KotlinDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isNullable(Ljava/lang/reflect/Field;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/DependencyDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/DependencyDescriptor.class",
    "super": "Lorg/springframework/beans/factory/InjectionPoint;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/DependencyDescriptor;)V","<init>(Lorg/springframework/core/MethodParameter;Z)V","<init>(Lorg/springframework/core/MethodParameter;ZZ)V","equals(Ljava/lang/Object;)Z","fallbackMatchAllowed()Z","forFallbackMatch()Lorg/springframework/beans/factory/config/DependencyDescriptor;","getDependencyName()Ljava/lang/String;","getDependencyType()Ljava/lang/Class;","getResolvableType()Lorg/springframework/core/ResolvableType;","getTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;","hasNullableAnnotation()Z","hashCode()I","increaseNestingLevel()V","initParameterNameDiscovery(Lorg/springframework/core/ParameterNameDiscoverer;)V","isEager()Z","isRequired()Z","resolveCandidate(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;","resolveNotUnique(Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Ljava/lang/Object;","resolveShortcut(Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/DestructionAwareBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/DestructionAwareBeanPostProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/EmbeddedValueResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/EmbeddedValueResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/util/StringValueResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V","resolveStringValue(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/NamedBeanHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/NamedBeanHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/NamedBean;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","getBeanInstance()Ljava/lang/Object;","getBeanName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/RuntimeBeanNameReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/RuntimeBeanNameReference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanReference;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/RuntimeBeanReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/RuntimeBeanReference.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanReference;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/Scope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/Scope.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/SingletonBeanRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/SingletonBeanRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/TypedStringValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/TypedStringValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/config/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/config/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/EmptyReaderEventListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/EmptyReaderEventListener.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/parsing/ReaderEventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/FailFastProblemReporter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/FailFastProblemReporter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/parsing/ProblemReporter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/NullSourceExtractor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/NullSourceExtractor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/parsing/SourceExtractor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/ProblemReporter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/ProblemReporter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/ReaderContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/ReaderContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/io/Resource;Lorg/springframework/beans/factory/parsing/ProblemReporter;Lorg/springframework/beans/factory/parsing/ReaderEventListener;Lorg/springframework/beans/factory/parsing/SourceExtractor;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/ReaderEventListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/ReaderEventListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/SourceExtractor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/SourceExtractor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/parsing/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/parsing/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory$AutowireByTypeDependencyDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory$AutowireByTypeDependencyDescriptor.class",
    "super": "Lorg/springframework/beans/factory/config/DependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/MethodParameter;Z)V","getDependencyName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory$FactoryBeanMethodTypeFinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory$FactoryBeanMethodTypeFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/util/ReflectionUtils$MethodCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","doWith(Ljava/lang/reflect/Method;)V","getResult()Lorg/springframework/core/ResolvableType;","isFactoryBeanMethod(Ljava/lang/reflect/Method;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.class",
    "super": "Lorg/springframework/beans/factory/support/AbstractBeanFactory;",
    "interfaces": ["Lorg/springframework/beans/factory/config/AutowireCapableBeanFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V","applyBeanPostProcessorsAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","applyBeanPostProcessorsBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","applyBeanPostProcessorsBeforeInstantiation(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","applyMergedBeanDefinitionPostProcessors(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Class;Ljava/lang/String;)V","applyPropertyValues(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/BeanWrapper;Lorg/springframework/beans/PropertyValues;)V","autowireByName(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/BeanWrapper;Lorg/springframework/beans/MutablePropertyValues;)V","autowireByType(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/BeanWrapper;Lorg/springframework/beans/MutablePropertyValues;)V","autowireConstructor(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;","checkDependencies(Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;[Ljava/beans/PropertyDescriptor;Lorg/springframework/beans/PropertyValues;)V","clearSingletonCache()V","convertForProperty(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/BeanWrapper;Lorg/springframework/beans/TypeConverter;)Ljava/lang/Object;","createBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Ljava/lang/Object;","createBeanInstance(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;","determineConstructorsFromBeanPostProcessors(Ljava/lang/Class;Ljava/lang/String;)[Ljava/lang/reflect/Constructor;","determineTargetType(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Class;)Ljava/lang/Class;","doCreateBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Ljava/lang/Object;","filterPropertyDescriptorsForDependencyCheck(Lorg/springframework/beans/BeanWrapper;)[Ljava/beans/PropertyDescriptor;","filterPropertyDescriptorsForDependencyCheck(Lorg/springframework/beans/BeanWrapper;Z)[Ljava/beans/PropertyDescriptor;","getEarlyBeanReference(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Object;)Ljava/lang/Object;","getFactoryBeanGeneric(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","getInstantiationStrategy()Lorg/springframework/beans/factory/support/InstantiationStrategy;","getLogger()Lorg/apache/commons/logging/Log;","getNonSingletonFactoryBeanForTypeCheck(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Lorg/springframework/beans/factory/FactoryBean;","getObjectForBeanInstance(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;","getParameterNameDiscoverer()Lorg/springframework/core/ParameterNameDiscoverer;","getSingletonFactoryBeanForTypeCheck(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Lorg/springframework/beans/factory/FactoryBean;","getTypeForFactoryBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Z)Lorg/springframework/core/ResolvableType;","getTypeForFactoryBeanFromMethod(Ljava/lang/Class;Ljava/lang/String;)Lorg/springframework/core/ResolvableType;","getTypeForFactoryMethod(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Class;)Ljava/lang/Class;","ignoreDependencyInterface(Ljava/lang/Class;)V","initializeBean(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;","instantiateBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Lorg/springframework/beans/BeanWrapper;","instantiateUsingFactoryMethod(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;","invokeAwareMethods(Ljava/lang/String;Ljava/lang/Object;)V","invokeCustomInitMethod(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","invokeInitMethods(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","isExcludedFromDependencyCheck(Ljava/beans/PropertyDescriptor;)Z","lambda$doCreateBean$1(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Object;)Ljava/lang/Object;","lambda$getTypeForFactoryMethod$2(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","obtainFromSupplier(Ljava/util/function/Supplier;Ljava/lang/String;)Lorg/springframework/beans/BeanWrapper;","populateBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/BeanWrapper;)V","postProcessObjectFromFactoryBean(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","predictBeanType(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Class;)Ljava/lang/Class;","removeSingleton(Ljava/lang/String;)V","resolveBeforeInstantiation(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;","unsatisfiedNonSimpleProperties(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Lorg/springframework/beans/BeanWrapper;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractBeanDefinition.class",
    "super": "Lorg/springframework/beans/BeanMetadataAttributeAccessor;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanDefinition;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/beans/factory/config/BeanDefinition;)V","<init>(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/MutablePropertyValues;)V","addQualifier(Lorg/springframework/beans/factory/support/AutowireCandidateQualifier;)V","applyDefaults(Lorg/springframework/beans/factory/support/BeanDefinitionDefaults;)V","clone()Ljava/lang/Object;","copyQualifiersFrom(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V","equals(Ljava/lang/Object;)Z","getAutowireMode()I","getBeanClass()Ljava/lang/Class;","getBeanClassName()Ljava/lang/String;","getConstructorArgumentValues()Lorg/springframework/beans/factory/config/ConstructorArgumentValues;","getDependencyCheck()I","getDependsOn()[Ljava/lang/String;","getDestroyMethodName()Ljava/lang/String;","getFactoryBeanName()Ljava/lang/String;","getFactoryMethodName()Ljava/lang/String;","getInitMethodName()Ljava/lang/String;","getInstanceSupplier()Ljava/util/function/Supplier;","getLazyInit()Ljava/lang/Boolean;","getMethodOverrides()Lorg/springframework/beans/factory/support/MethodOverrides;","getOriginatingBeanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;","getPropertyValues()Lorg/springframework/beans/MutablePropertyValues;","getQualifier(Ljava/lang/String;)Lorg/springframework/beans/factory/support/AutowireCandidateQualifier;","getResolvableType()Lorg/springframework/core/ResolvableType;","getResolvedAutowireMode()I","getResource()Lorg/springframework/core/io/Resource;","getResourceDescription()Ljava/lang/String;","getRole()I","getScope()Ljava/lang/String;","hasBeanClass()Z","hasConstructorArgumentValues()Z","hasMethodOverrides()Z","hasPropertyValues()Z","hashCode()I","isAbstract()Z","isAutowireCandidate()Z","isEnforceDestroyMethod()Z","isEnforceInitMethod()Z","isLazyInit()Z","isLenientConstructorResolution()Z","isNonPublicAccessAllowed()Z","isPrimary()Z","isPrototype()Z","isSingleton()Z","isSynthetic()Z","overrideFrom(Lorg/springframework/beans/factory/config/BeanDefinition;)V","prepareMethodOverride(Lorg/springframework/beans/factory/support/MethodOverride;)V","prepareMethodOverrides()V","resolveBeanClass(Ljava/lang/ClassLoader;)Ljava/lang/Class;","setAbstract(Z)V","setAutowireCandidate(Z)V","setAutowireMode(I)V","setBeanClass(Ljava/lang/Class;)V","setBeanClassName(Ljava/lang/String;)V","setConstructorArgumentValues(Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)V","setDependencyCheck(I)V","setDependsOn([Ljava/lang/String;)V","setDescription(Ljava/lang/String;)V","setDestroyMethodName(Ljava/lang/String;)V","setEnforceDestroyMethod(Z)V","setEnforceInitMethod(Z)V","setFactoryBeanName(Ljava/lang/String;)V","setFactoryMethodName(Ljava/lang/String;)V","setInitMethodName(Ljava/lang/String;)V","setInstanceSupplier(Ljava/util/function/Supplier;)V","setLazyInit(Z)V","setLenientConstructorResolution(Z)V","setMethodOverrides(Lorg/springframework/beans/factory/support/MethodOverrides;)V","setNonPublicAccessAllowed(Z)V","setOriginatingBeanDefinition(Lorg/springframework/beans/factory/config/BeanDefinition;)V","setPrimary(Z)V","setPropertyValues(Lorg/springframework/beans/MutablePropertyValues;)V","setResource(Lorg/springframework/core/io/Resource;)V","setResourceDescription(Ljava/lang/String;)V","setRole(I)V","setScope(Ljava/lang/String;)V","setSynthetic(Z)V","toString()Ljava/lang/String;","validate()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractBeanDefinitionReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractBeanDefinitionReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/BeanDefinitionReader;","Lorg/springframework/core/env/EnvironmentCapable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","getBeanClassLoader()Ljava/lang/ClassLoader;","getRegistry()Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;","getResourceLoader()Lorg/springframework/core/io/ResourceLoader;","setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V","setEnvironment(Lorg/springframework/core/env/Environment;)V","setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCacheAwareList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCacheAwareList.class",
    "super": "Ljava/util/concurrent/CopyOnWriteArrayList;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/AbstractBeanFactory;)V","<init>(Lorg/springframework/beans/factory/support/AbstractBeanFactory;Lorg/springframework/beans/factory/support/AbstractBeanFactory$1;)V","add(Ljava/lang/Object;)Z","add(Lorg/springframework/beans/factory/config/BeanPostProcessor;)Z","addAll(Ljava/util/Collection;)Z","remove(Ljava/lang/Object;)Z","removeAll(Ljava/util/Collection;)Z","set(ILjava/lang/Object;)Ljava/lang/Object;","set(ILorg/springframework/beans/factory/config/BeanPostProcessor;)Lorg/springframework/beans/factory/config/BeanPostProcessor;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AbstractBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AbstractBeanFactory.class",
    "super": "Lorg/springframework/beans/factory/support/FactoryBeanRegistrySupport;",
    "interfaces": ["Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$102(Lorg/springframework/beans/factory/support/AbstractBeanFactory;Lorg/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCache;)Lorg/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCache;","addBeanPostProcessor(Lorg/springframework/beans/factory/config/BeanPostProcessor;)V","addBeanPostProcessors(Ljava/util/Collection;)V","addEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V","addPropertyEditorRegistrar(Lorg/springframework/beans/PropertyEditorRegistrar;)V","afterPrototypeCreation(Ljava/lang/String;)V","beforePrototypeCreation(Ljava/lang/String;)V","checkMergedBeanDefinition(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;[Ljava/lang/Object;)V","cleanupAfterBeanCreationFailure(Ljava/lang/String;)V","clearMergedBeanDefinition(Ljava/lang/String;)V","clearMetadataCache()V","containsBean(Ljava/lang/String;)Z","containsLocalBean(Ljava/lang/String;)Z","copyRelevantMergedBeanDefinitionCaches(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","doGetBean(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;Z)Ljava/lang/Object;","doResolveBeanClass(Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Class;)Ljava/lang/Class;","evaluateBeanDefinitionString(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/Object;","getAliases(Ljava/lang/String;)[Ljava/lang/String;","getApplicationStartup()Lorg/springframework/core/metrics/ApplicationStartup;","getBean(Ljava/lang/String;)Ljava/lang/Object;","getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getBean(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;","getBean(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;","getBeanClassLoader()Ljava/lang/ClassLoader;","getBeanExpressionResolver()Lorg/springframework/beans/factory/config/BeanExpressionResolver;","getBeanPostProcessorCache()Lorg/springframework/beans/factory/support/AbstractBeanFactory$BeanPostProcessorCache;","getBeanPostProcessorCount()I","getBeanPostProcessors()Ljava/util/List;","getConversionService()Lorg/springframework/core/convert/ConversionService;","getCustomTypeConverter()Lorg/springframework/beans/TypeConverter;","getMergedBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;","getMergedBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)Lorg/springframework/beans/factory/support/RootBeanDefinition;","getMergedBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/config/BeanDefinition;)Lorg/springframework/beans/factory/support/RootBeanDefinition;","getMergedLocalBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/support/RootBeanDefinition;","getObjectForBeanInstance(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Object;","getParentBeanFactory()Lorg/springframework/beans/factory/BeanFactory;","getRegisteredScope(Ljava/lang/String;)Lorg/springframework/beans/factory/config/Scope;","getTempClassLoader()Ljava/lang/ClassLoader;","getType(Ljava/lang/String;)Ljava/lang/Class;","getType(Ljava/lang/String;Z)Ljava/lang/Class;","getTypeConverter()Lorg/springframework/beans/TypeConverter;","getTypeForFactoryBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Z)Lorg/springframework/core/ResolvableType;","getTypeForFactoryBeanFromAttributes(Lorg/springframework/core/AttributeAccessor;)Lorg/springframework/core/ResolvableType;","hasBeanCreationStarted()Z","hasDestructionAwareBeanPostProcessors()Z","hasEmbeddedValueResolver()Z","hasInstantiationAwareBeanPostProcessors()Z","initBeanWrapper(Lorg/springframework/beans/BeanWrapper;)V","isActuallyInCreation(Ljava/lang/String;)Z","isBeanEligibleForMetadataCaching(Ljava/lang/String;)Z","isBeanNameInUse(Ljava/lang/String;)Z","isCacheBeanMetadata()Z","isFactoryBean(Ljava/lang/String;)Z","isFactoryBean(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Z","isPrototypeCurrentlyInCreation(Ljava/lang/String;)Z","isSingleton(Ljava/lang/String;)Z","isTypeMatch(Ljava/lang/String;Ljava/lang/Class;)Z","isTypeMatch(Ljava/lang/String;Lorg/springframework/core/ResolvableType;)Z","isTypeMatch(Ljava/lang/String;Lorg/springframework/core/ResolvableType;Z)Z","lambda$clearMetadataCache$4(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","lambda$doGetBean$0(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Ljava/lang/Object;","lambda$doGetBean$1(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Ljava/lang/Object;","lambda$registerCustomEditors$3(Lorg/springframework/beans/PropertyEditorRegistry;Ljava/lang/Class;Ljava/lang/Class;)V","markBeanAsCreated(Ljava/lang/String;)V","originalBeanName(Ljava/lang/String;)Ljava/lang/String;","registerCustomEditors(Lorg/springframework/beans/PropertyEditorRegistry;)V","registerDisposableBeanIfNecessary(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","registerScope(Ljava/lang/String;Lorg/springframework/beans/factory/config/Scope;)V","removeSingletonIfCreatedForTypeCheckOnly(Ljava/lang/String;)Z","requiresDestruction(Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Z","resolveBeanClass(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/Class;","resolveEmbeddedValue(Ljava/lang/String;)Ljava/lang/String;","setApplicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)V","setBeanClassLoader(Ljava/lang/ClassLoader;)V","setBeanExpressionResolver(Lorg/springframework/beans/factory/config/BeanExpressionResolver;)V","setConversionService(Lorg/springframework/core/convert/ConversionService;)V","setTempClassLoader(Ljava/lang/ClassLoader;)V","transformedBeanName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AutowireCandidateQualifier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AutowireCandidateQualifier.class",
    "super": "Lorg/springframework/beans/BeanMetadataAttributeAccessor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/String;)V","getTypeName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AutowireCandidateResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AutowireCandidateResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AutowireUtils$ObjectFactoryDelegatingInvocationHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AutowireUtils$ObjectFactoryDelegatingInvocationHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/InvocationHandler;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/ObjectFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/AutowireUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/AutowireUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","isExcludedFromDependencyCheck(Ljava/beans/PropertyDescriptor;)Z","isSetterDefinedInInterface(Ljava/beans/PropertyDescriptor;Ljava/util/Set;)Z","lambda$static$0(Ljava/lang/reflect/Executable;Ljava/lang/reflect/Executable;)I","resolveAutowiringValue(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","resolveReturnTypeForFactoryMethod(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/lang/ClassLoader;)Ljava/lang/Class;","sortConstructors([Ljava/lang/reflect/Constructor;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionDefaults;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionDefaults.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getAutowireMode()I","getDependencyCheck()I","getDestroyMethodName()Ljava/lang/String;","getInitMethodName()Ljava/lang/String;","getLazyInit()Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionOverrideException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionOverrideException.class",
    "super": "Lorg/springframework/beans/factory/BeanDefinitionStoreException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/config/BeanDefinition;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionReader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionReaderUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionReaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["registerBeanDefinition(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionRegistry.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/AliasRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/BeanDefinition;)V","equals(Ljava/lang/Object;)Z","exists()Z","getBeanDefinition()Lorg/springframework/beans/factory/config/BeanDefinition;","getDescription()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","hashCode()I","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionValidationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionValidationException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionValueResolver$KeyedArgName;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionValueResolver$KeyedArgName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanDefinitionValueResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanDefinitionValueResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory;Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/TypeConverter;)V","adaptInnerBeanName(Ljava/lang/String;)Ljava/lang/String;","doEvaluate(Ljava/lang/String;)Ljava/lang/Object;","evaluate(Ljava/lang/Object;)Ljava/lang/Object;","evaluate(Lorg/springframework/beans/factory/config/TypedStringValue;)Ljava/lang/Object;","lambda$resolveManagedMap$1(Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V","lambda$resolveValueIfNecessary$0(Ljava/lang/Object;Ljava/util/Properties;Ljava/lang/Object;Ljava/lang/Object;)V","resolveInnerBean(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/Object;","resolveManagedArray(Ljava/lang/Object;Ljava/util/List;Ljava/lang/Class;)Ljava/lang/Object;","resolveManagedList(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;","resolveManagedMap(Ljava/lang/Object;Ljava/util/Map;)Ljava/util/Map;","resolveManagedSet(Ljava/lang/Object;Ljava/util/Set;)Ljava/util/Set;","resolveReference(Ljava/lang/Object;Lorg/springframework/beans/factory/config/RuntimeBeanReference;)Ljava/lang/Object;","resolveTargetType(Lorg/springframework/beans/factory/config/TypedStringValue;)Ljava/lang/Class;","resolveValueIfNecessary(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/BeanNameGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/BeanNameGenerator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibIdentitySupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibIdentitySupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","equals(Ljava/lang/Object;)Z","getBeanDefinition()Lorg/springframework/beans/factory/support/RootBeanDefinition;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibSubclassCreator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibSubclassCreator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)V","createEnhancedSubclass(Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/Class;","instantiate(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$LookupOverrideMethodInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$LookupOverrideMethodInterceptor.class",
    "super": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibIdentitySupport;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$MethodOverrideCallbackFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$MethodOverrideCallbackFilter.class",
    "super": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibIdentitySupport;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","accept(Ljava/lang/reflect/Method;)I"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$ReplaceOverrideMethodInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$ReplaceOverrideMethodInterceptor.class",
    "super": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy$CglibIdentitySupport;",
    "interfaces": ["Lorg/springframework/cglib/proxy/MethodInterceptor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/BeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/CglibSubclassingInstantiationStrategy.class",
    "super": "Lorg/springframework/beans/factory/support/SimpleInstantiationStrategy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","instantiateWithMethodInjection(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;","instantiateWithMethodInjection(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ConstructorResolver$ArgumentsHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ConstructorResolver$ArgumentsHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>([Ljava/lang/Object;)V","getAssignabilityWeight([Ljava/lang/Class;)I","getTypeDifferenceWeight([Ljava/lang/Class;)I","storeCache(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/reflect/Executable;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ConstructorResolver$ConstructorPropertiesChecker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ConstructorResolver$ConstructorPropertiesChecker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["evaluate(Ljava/lang/reflect/Constructor;I)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ConstructorResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ConstructorResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.NamedThreadLocal",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory;)V","autowireConstructor(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;","createArgumentArray(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/BeanWrapper;[Ljava/lang/Class;[Ljava/lang/String;Ljava/lang/reflect/Executable;ZZ)Lorg/springframework/beans/factory/support/ConstructorResolver$ArgumentsHolder;","getCandidateMethods(Ljava/lang/Class;Lorg/springframework/beans/factory/support/RootBeanDefinition;)[Ljava/lang/reflect/Method;","getUserDeclaredConstructor(Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;","instantiate(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;","instantiate(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;","instantiateUsingFactoryMethod(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;[Ljava/lang/Object;)Lorg/springframework/beans/BeanWrapper;","isParamMismatch(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","resolveAutowiredArgument(Lorg/springframework/core/MethodParameter;Ljava/lang/String;Ljava/util/Set;Lorg/springframework/beans/TypeConverter;Z)Ljava/lang/Object;","resolveConstructorArguments(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/BeanWrapper;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;Lorg/springframework/beans/factory/config/ConstructorArgumentValues;)I","resolveFactoryMethodIfPossible(Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","resolvePreparedArguments(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/BeanWrapper;Ljava/lang/reflect/Executable;[Ljava/lang/Object;Z)[Ljava/lang/Object;","setCurrentInjectionPoint(Lorg/springframework/beans/factory/InjectionPoint;)Lorg/springframework/beans/factory/InjectionPoint;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultBeanNameGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultBeanNameGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/BeanNameGenerator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$2.class",
    "super": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$NestedDependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Lorg/springframework/beans/factory/config/DependencyDescriptor;[Ljava/lang/Object;)V","isRequired()Z","resolveCandidate(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$BeanObjectProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$BeanObjectProvider.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectProvider;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$DependencyObjectProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$DependencyObjectProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$BeanObjectProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;)V","getObject()Ljava/lang/Object;","resolveStream(Z)Ljava/util/stream/Stream;","stream()Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$FactoryAwareOrderSourceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/OrderComparator$OrderSourceProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Ljava/util/Map;)V","getOrderSource(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$Jsr330Factory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$Jsr330Factory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V","<init>(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$1;)V","createDependencyProvider(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$MultiElementDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$MultiElementDescriptor.class",
    "super": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$NestedDependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/DependencyDescriptor;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$NestedDependencyDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$NestedDependencyDescriptor.class",
    "super": "Lorg/springframework/beans/factory/config/DependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/DependencyDescriptor;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory$StreamDependencyDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory$StreamDependencyDescriptor.class",
    "super": "Lorg/springframework/beans/factory/config/DependencyDescriptor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/config/DependencyDescriptor;Z)V","isOrdered()Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultListableBeanFactory.class",
    "super": "Lorg/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory;",
    "interfaces": ["Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;","Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","access$600(Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;","adaptDependencyComparator(Ljava/util/Map;)Ljava/util/Comparator;","adaptOrderComparator(Ljava/util/Map;)Ljava/util/Comparator;","addCandidateEntry(Ljava/util/Map;Ljava/lang/String;Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/Class;)V","allowAliasOverriding()Z","checkBeanNotOfRequiredType(Ljava/lang/Class;Lorg/springframework/beans/factory/config/DependencyDescriptor;)V","checkForAliasCircle(Ljava/lang/String;Ljava/lang/String;)V","clearByTypeCache()V","clearMergedBeanDefinition(Ljava/lang/String;)V","clearMetadataCache()V","containsBeanDefinition(Ljava/lang/String;)Z","createFactoryAwareOrderSourceProvider(Ljava/util/Map;)Lorg/springframework/core/OrderComparator$OrderSourceProvider;","createOptionalDependency(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Optional;","destroySingleton(Ljava/lang/String;)V","destroySingletons()V","determineAutowireCandidate(Ljava/util/Map;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Ljava/lang/String;","determineHighestPriorityCandidate(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/String;","determinePrimaryCandidate(Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/String;","doGetBeanNamesForType(Lorg/springframework/core/ResolvableType;ZZ)[Ljava/lang/String;","doResolveDependency(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;Ljava/util/Set;Lorg/springframework/beans/TypeConverter;)Ljava/lang/Object;","findAutowireCandidates(Ljava/lang/String;Ljava/lang/Class;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Ljava/util/Map;","freezeConfiguration()V","getAutowireCandidateResolver()Lorg/springframework/beans/factory/support/AutowireCandidateResolver;","getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;","getBeanDefinitionCount()I","getBeanDefinitionNames()[Ljava/lang/String;","getBeanNamesForType(Ljava/lang/Class;)[Ljava/lang/String;","getBeanNamesForType(Ljava/lang/Class;ZZ)[Ljava/lang/String;","getBeanNamesForType(Lorg/springframework/core/ResolvableType;)[Ljava/lang/String;","getBeanNamesForType(Lorg/springframework/core/ResolvableType;ZZ)[Ljava/lang/String;","getBeansOfType(Ljava/lang/Class;)Ljava/util/Map;","getBeansOfType(Ljava/lang/Class;ZZ)Ljava/util/Map;","getDependencyComparator()Ljava/util/Comparator;","getPriority(Ljava/lang/Object;)Ljava/lang/Integer;","indicatesMultipleBeans(Ljava/lang/Class;)Z","isAllowBeanDefinitionOverriding()Z","isAllowEagerClassLoading()Z","isAutowireCandidate(Ljava/lang/String;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isAutowireCandidate(Ljava/lang/String;Lorg/springframework/beans/factory/config/DependencyDescriptor;Lorg/springframework/beans/factory/support/AutowireCandidateResolver;)Z","isAutowireCandidate(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/config/DependencyDescriptor;Lorg/springframework/beans/factory/support/AutowireCandidateResolver;)Z","isBeanEligibleForMetadataCaching(Ljava/lang/String;)Z","isConfigurationFrozen()Z","isPrimary(Ljava/lang/String;Ljava/lang/Object;)Z","isRequired(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isSelfReference(Ljava/lang/String;Ljava/lang/String;)Z","isSingleton(Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;)Z","lambda$createFactoryAwareOrderSourceProvider$10(Ljava/util/IdentityHashMap;Ljava/lang/String;Ljava/lang/Object;)V","lambda$destroySingletons$5(Ljava/util/Set;)Z","lambda$isAutowireCandidate$1(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;","lambda$registerSingleton$3(Ljava/lang/String;Ljava/util/Set;)V","lambda$registerSingleton$4(Ljava/lang/String;Ljava/util/Set;)Z","lambda$removeManualSingletonName$6(Ljava/lang/String;Ljava/util/Set;)V","lambda$removeManualSingletonName$7(Ljava/lang/String;Ljava/util/Set;)Z","lambda$resolveMultipleBeans$8(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","lambda$resolveMultipleBeans$9(Ljava/lang/Object;)Z","matchesBeanName(Ljava/lang/String;Ljava/lang/String;)Z","preInstantiateSingletons()V","raiseNoMatchingBeanFound(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;Lorg/springframework/beans/factory/config/DependencyDescriptor;)V","registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V","registerResolvableDependency(Ljava/lang/Class;Ljava/lang/Object;)V","registerSingleton(Ljava/lang/String;Ljava/lang/Object;)V","removeManualSingletonName(Ljava/lang/String;)V","requiresEagerInitForType(Ljava/lang/String;)Z","resetBeanDefinition(Ljava/lang/String;)V","resolveDependency(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;Ljava/util/Set;Lorg/springframework/beans/TypeConverter;)Ljava/lang/Object;","resolveMultipleBeans(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;Ljava/util/Set;Lorg/springframework/beans/TypeConverter;)Ljava/lang/Object;","resolveNamedBean(Ljava/lang/Class;)Lorg/springframework/beans/factory/config/NamedBeanHolder;","resolveNamedBean(Lorg/springframework/core/ResolvableType;[Ljava/lang/Object;Z)Lorg/springframework/beans/factory/config/NamedBeanHolder;","setAllowBeanDefinitionOverriding(Z)V","setAutowireCandidateResolver(Lorg/springframework/beans/factory/support/AutowireCandidateResolver;)V","setDependencyComparator(Ljava/util/Comparator;)V","setSerializationId(Ljava/lang/String;)V","toString()Ljava/lang/String;","updateManualSingletonNames(Ljava/util/function/Consumer;Ljava/util/function/Predicate;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DefaultSingletonBeanRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.class",
    "super": "Lorg/springframework/core/SimpleAliasRegistry;",
    "interfaces": ["Lorg/springframework/beans/factory/config/SingletonBeanRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addSingleton(Ljava/lang/String;Ljava/lang/Object;)V","addSingletonFactory(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)V","afterSingletonCreation(Ljava/lang/String;)V","beforeSingletonCreation(Ljava/lang/String;)V","clearSingletonCache()V","containsSingleton(Ljava/lang/String;)Z","destroyBean(Ljava/lang/String;Lorg/springframework/beans/factory/DisposableBean;)V","destroySingleton(Ljava/lang/String;)V","destroySingletons()V","getDependenciesForBean(Ljava/lang/String;)[Ljava/lang/String;","getDependentBeans(Ljava/lang/String;)[Ljava/lang/String;","getSingleton(Ljava/lang/String;)Ljava/lang/Object;","getSingleton(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;","getSingleton(Ljava/lang/String;Z)Ljava/lang/Object;","getSingletonMutex()Ljava/lang/Object;","hasDependentBean(Ljava/lang/String;)Z","isCurrentlyInCreation(Ljava/lang/String;)Z","isDependent(Ljava/lang/String;Ljava/lang/String;)Z","isDependent(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Z","isSingletonCurrentlyInCreation(Ljava/lang/String;)Z","lambda$registerContainedBean$0(Ljava/lang/String;)Ljava/util/Set;","lambda$registerDependentBean$1(Ljava/lang/String;)Ljava/util/Set;","lambda$registerDependentBean$2(Ljava/lang/String;)Ljava/util/Set;","onSuppressedException(Ljava/lang/Exception;)V","registerContainedBean(Ljava/lang/String;Ljava/lang/String;)V","registerDependentBean(Ljava/lang/String;Ljava/lang/String;)V","registerDisposableBean(Ljava/lang/String;Lorg/springframework/beans/factory/DisposableBean;)V","registerSingleton(Ljava/lang/String;Ljava/lang/Object;)V","removeSingleton(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/DisposableBeanAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/DisposableBeanAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/DisposableBean;","Ljava/lang/Runnable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/util/List;Ljava/security/AccessControlContext;)V","destroy()V","determineDestroyMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;","filterPostProcessors(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;","findDestroyMethod(Ljava/lang/String;)Ljava/lang/reflect/Method;","hasApplicableProcessors(Ljava/lang/Object;Ljava/util/List;)Z","hasDestroyMethod(Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Z","inferDestroyMethodIfNecessary(Ljava/lang/Object;Lorg/springframework/beans/factory/support/RootBeanDefinition;)Ljava/lang/String;","invokeCustomDestroyMethod(Ljava/lang/reflect/Method;)V","run()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/FactoryBeanRegistrySupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.class",
    "super": "Lorg/springframework/beans/factory/support/DefaultSingletonBeanRegistry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clearSingletonCache()V","doGetObjectFromFactoryBean(Lorg/springframework/beans/factory/FactoryBean;Ljava/lang/String;)Ljava/lang/Object;","getCachedObjectForFactoryBean(Ljava/lang/String;)Ljava/lang/Object;","getFactoryBean(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/beans/factory/FactoryBean;","getObjectFromFactoryBean(Lorg/springframework/beans/factory/FactoryBean;Ljava/lang/String;Z)Ljava/lang/Object;","getTypeForFactoryBean(Lorg/springframework/beans/factory/FactoryBean;)Ljava/lang/Class;","removeSingleton(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/GenericBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/GenericBeanDefinition.class",
    "super": "Lorg/springframework/beans/factory/support/AbstractBeanDefinition;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/beans/factory/config/BeanDefinition;)V","cloneBeanDefinition()Lorg/springframework/beans/factory/support/AbstractBeanDefinition;","equals(Ljava/lang/Object;)Z","getParentName()Ljava/lang/String;","setParentName(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/GenericTypeAwareAutowireCandidateResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/GenericTypeAwareAutowireCandidateResolver.class",
    "super": "Lorg/springframework/beans/factory/support/SimpleAutowireCandidateResolver;",
    "interfaces": ["Lorg/springframework/beans/factory/BeanFactoryAware;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkGenericTypeMatch(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","getBeanFactory()Lorg/springframework/beans/factory/BeanFactory;","getResolvedDecoratedDefinition(Lorg/springframework/beans/factory/support/RootBeanDefinition;)Lorg/springframework/beans/factory/support/RootBeanDefinition;","getReturnTypeForFactoryMethod(Lorg/springframework/beans/factory/support/RootBeanDefinition;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Lorg/springframework/core/ResolvableType;","isAutowireCandidate(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ImplicitlyAppearedSingletonException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ImplicitlyAppearedSingletonException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/InstantiationStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/InstantiationStrategy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/LookupOverride;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/LookupOverride.class",
    "super": "Lorg/springframework/beans/factory/support/MethodOverride;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ManagedArray;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ManagedArray.class",
    "super": "Lorg/springframework/beans/factory/support/ManagedList;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ManagedList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ManagedList.class",
    "super": "Ljava/util/ArrayList;",
    "interfaces": ["Lorg/springframework/beans/Mergeable;","Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ManagedMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ManagedMap.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": ["Lorg/springframework/beans/Mergeable;","Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ManagedProperties;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ManagedProperties.class",
    "super": "Ljava/util/Properties;",
    "interfaces": ["Lorg/springframework/beans/Mergeable;","Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ManagedSet;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ManagedSet.class",
    "super": "Ljava/util/LinkedHashSet;",
    "interfaces": ["Lorg/springframework/beans/Mergeable;","Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["resetBeanDefinition(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/MethodOverride;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/MethodOverride.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/BeanMetadataElement;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/MethodOverrides;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/MethodOverrides.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/beans/factory/support/MethodOverrides;)V","addOverrides(Lorg/springframework/beans/factory/support/MethodOverrides;)V","equals(Ljava/lang/Object;)Z","getOverride(Ljava/lang/reflect/Method;)Lorg/springframework/beans/factory/support/MethodOverride;","getOverrides()Ljava/util/Set;","hashCode()I","isEmpty()Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/NullBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/NullBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ReplaceOverride;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ReplaceOverride.class",
    "super": "Lorg/springframework/beans/factory/support/MethodOverride;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/RootBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/RootBeanDefinition.class",
    "super": "Lorg/springframework/beans/factory/support/AbstractBeanDefinition;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Class;)V","<init>(Lorg/springframework/beans/factory/config/BeanDefinition;)V","<init>(Lorg/springframework/beans/factory/support/RootBeanDefinition;)V","cloneBeanDefinition()Lorg/springframework/beans/factory/support/AbstractBeanDefinition;","cloneBeanDefinition()Lorg/springframework/beans/factory/support/RootBeanDefinition;","equals(Ljava/lang/Object;)Z","getDecoratedDefinition()Lorg/springframework/beans/factory/config/BeanDefinitionHolder;","getParentName()Ljava/lang/String;","getPreferredConstructors()[Ljava/lang/reflect/Constructor;","getQualifiedElement()Ljava/lang/reflect/AnnotatedElement;","getResolvableType()Lorg/springframework/core/ResolvableType;","getResolvedFactoryMethod()Ljava/lang/reflect/Method;","getTargetType()Ljava/lang/Class;","isExternallyManagedDestroyMethod(Ljava/lang/String;)Z","isExternallyManagedInitMethod(Ljava/lang/String;)Z","isFactoryMethod(Ljava/lang/reflect/Method;)Z","setDecoratedDefinition(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;)V","setParentName(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/ScopeNotActiveException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/ScopeNotActiveException.class",
    "super": "Lorg/springframework/beans/factory/BeanCreationException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/IllegalStateException;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/SimpleAutowireCandidateResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/SimpleAutowireCandidateResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/AutowireCandidateResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getLazyResolutionProxyIfNecessary(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;)Ljava/lang/Object;","getSuggestedValue(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Ljava/lang/Object;","hasQualifier(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isAutowireCandidate(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z","isRequired(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/SimpleInstantiationStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/SimpleInstantiationStrategy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/InstantiationStrategy;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>()V","instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;","instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;","instantiate(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;","instantiateWithMethodInjection(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Ljava/lang/Object;","instantiateWithMethodInjection(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/BeanDefinitionDocumentReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/BeanDefinitionDocumentReader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/BeansDtdResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/BeansDtdResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/EntityResolver;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/DefaultBeanDefinitionDocumentReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/xml/BeanDefinitionDocumentReader;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/DefaultDocumentLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/DefaultDocumentLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/xml/DocumentLoader;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V","createDocumentBuilder(Ljavax/xml/parsers/DocumentBuilderFactory;Lorg/xml/sax/EntityResolver;Lorg/xml/sax/ErrorHandler;)Ljavax/xml/parsers/DocumentBuilder;","createDocumentBuilderFactory(IZ)Ljavax/xml/parsers/DocumentBuilderFactory;","loadDocument(Lorg/xml/sax/InputSource;Lorg/xml/sax/EntityResolver;Lorg/xml/sax/ErrorHandler;IZ)Lorg/w3c/dom/Document;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/DefaultNamespaceHandlerResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/xml/NamespaceHandlerResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","<init>(Ljava/lang/ClassLoader;Ljava/lang/String;)V","getHandlerMappings()Ljava/util/Map;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/DelegatingEntityResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/DelegatingEntityResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/EntityResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/DocumentLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/DocumentLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/NamespaceHandlerResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/NamespaceHandlerResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/PluggableSchemaResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/PluggableSchemaResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/EntityResolver;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","getSchemaMappings()Ljava/util/Map;","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/ResourceEntityResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/ResourceEntityResolver.class",
    "super": "Lorg/springframework/beans/factory/xml/DelegatingEntityResolver;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/ResourceLoader;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/XmlBeanDefinitionReader$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/XmlBeanDefinitionReader$1.class",
    "super": "Lorg/springframework/core/NamedThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/xml/XmlBeanDefinitionReader;Ljava/lang/String;)V","initialValue()Ljava/lang/Object;","initialValue()Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/XmlBeanDefinitionReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/XmlBeanDefinitionReader.class",
    "super": "Lorg/springframework/beans/factory/support/AbstractBeanDefinitionReader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","createBeanDefinitionDocumentReader()Lorg/springframework/beans/factory/xml/BeanDefinitionDocumentReader;","createDefaultNamespaceHandlerResolver()Lorg/springframework/beans/factory/xml/NamespaceHandlerResolver;","createReaderContext(Lorg/springframework/core/io/Resource;)Lorg/springframework/beans/factory/xml/XmlReaderContext;","detectValidationMode(Lorg/springframework/core/io/Resource;)I","doLoadBeanDefinitions(Lorg/xml/sax/InputSource;Lorg/springframework/core/io/Resource;)I","doLoadDocument(Lorg/xml/sax/InputSource;Lorg/springframework/core/io/Resource;)Lorg/w3c/dom/Document;","getEntityResolver()Lorg/xml/sax/EntityResolver;","getNamespaceHandlerResolver()Lorg/springframework/beans/factory/xml/NamespaceHandlerResolver;","getValidationMode()I","getValidationModeForResource(Lorg/springframework/core/io/Resource;)I","isNamespaceAware()Z","loadBeanDefinitions(Lorg/springframework/core/io/Resource;)I","loadBeanDefinitions(Lorg/springframework/core/io/support/EncodedResource;)I","registerBeanDefinitions(Lorg/w3c/dom/Document;Lorg/springframework/core/io/Resource;)I"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/XmlBeanDefinitionStoreException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/XmlBeanDefinitionStoreException.class",
    "super": "Lorg/springframework/beans/factory/BeanDefinitionStoreException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/SAXException;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/XmlReaderContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/XmlReaderContext.class",
    "super": "Lorg/springframework/beans/factory/parsing/ReaderContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/io/Resource;Lorg/springframework/beans/factory/parsing/ProblemReporter;Lorg/springframework/beans/factory/parsing/ReaderEventListener;Lorg/springframework/beans/factory/parsing/SourceExtractor;Lorg/springframework/beans/factory/xml/XmlBeanDefinitionReader;Lorg/springframework/beans/factory/xml/NamespaceHandlerResolver;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/factory/xml/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/factory/xml/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/ByteArrayPropertyEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/ByteArrayPropertyEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CharArrayPropertyEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CharArrayPropertyEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CharacterEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CharacterEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V","isUnicodeCharacterSequence(Ljava/lang/String;)Z","setAsText(Ljava/lang/String;)V","setAsUnicode(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CharsetEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CharsetEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/ClassArrayEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/ClassArrayEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/ClassEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/ClassEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CurrencyEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CurrencyEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CustomBooleanEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CustomBooleanEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Z)V","<init>(Z)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CustomCollectionEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CustomCollectionEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Z)V","alwaysCreateNewCollection()Z","convertElement(Ljava/lang/Object;)Ljava/lang/Object;","createCollection(Ljava/lang/Class;I)Ljava/util/Collection;","setAsText(Ljava/lang/String;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CustomMapEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CustomMapEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Z)V","alwaysCreateNewMap()Z","convertKey(Ljava/lang/Object;)Ljava/lang/Object;","convertValue(Ljava/lang/Object;)Ljava/lang/Object;","createMap(Ljava/lang/Class;I)Ljava/util/Map;","lambda$setValue$0(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V","setAsText(Ljava/lang/String;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/CustomNumberEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/CustomNumberEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/text/NumberFormat;Z)V","<init>(Ljava/lang/Class;Z)V","setAsText(Ljava/lang/String;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/FileEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/FileEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/InputSourceEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/InputSourceEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/InputStreamEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/InputStreamEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/LocaleEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/LocaleEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/PathEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/PathEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/PatternEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/PatternEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/PropertiesEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/PropertiesEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/ReaderEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/ReaderEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/StringArrayPropertyEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/StringArrayPropertyEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;Ljava/lang/String;Z)V","<init>(Ljava/lang/String;Ljava/lang/String;ZZ)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/TimeZoneEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/TimeZoneEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/URIEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/URIEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","<init>(Ljava/lang/ClassLoader;Z)V","<init>(Z)V","createURI(Ljava/lang/String;)Ljava/net/URI;","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/URLEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/URLEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceEditor;)V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/UUIDEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/UUIDEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/ZoneIdEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/ZoneIdEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/propertyeditors/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/propertyeditors/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/beans/support/ResourceEditorRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/support/ResourceEditorRegistrar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/PropertyEditorRegistrar;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V","doRegisterEditor(Lorg/springframework/beans/PropertyEditorRegistry;Ljava/lang/Class;Ljava/beans/PropertyEditor;)V","registerCustomEditors(Lorg/springframework/beans/PropertyEditorRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/beans/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-beans-5.3.1.jar!/org/springframework/beans/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ApplicationArguments;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ApplicationArguments.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ApplicationContextFactory$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ApplicationContextFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/ApplicationContextFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ApplicationContextFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","lambda$static$0(Lorg/springframework/boot/WebApplicationType;)Lorg/springframework/context/ConfigurableApplicationContext;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ApplicationRunner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ApplicationRunner.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/Banner$Mode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/Banner$Mode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/Banner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/Banner.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/BeanDefinitionLoader$ClassExcludeFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BeanDefinitionLoader$ClassExcludeFilter.class",
    "super": "Lorg/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Object;)V","matchClassName(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/BeanDefinitionLoader$GroovyBeanDefinitionSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BeanDefinitionLoader$GroovyBeanDefinitionSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/BeanDefinitionLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BeanDefinitionLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/Object;)V","findPackage(Ljava/lang/CharSequence;)Ljava/lang/Package;","findResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","hasNoConstructors(Ljava/lang/Class;)Z","isEligible(Ljava/lang/Class;)Z","isGroovyClosure(Ljava/lang/Class;)Z","isGroovyPresent()Z","isLoadCandidate(Lorg/springframework/core/io/Resource;)Z","load()V","load(Ljava/lang/CharSequence;)V","load(Ljava/lang/Class;)V","load(Ljava/lang/Object;)V","load(Ljava/lang/Package;)V","load(Lorg/springframework/core/io/Resource;)V","loadAsResources(Ljava/lang/String;)Z","setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V","setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V","setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/BootstrapContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BootstrapContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/BootstrapContextClosedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BootstrapContextClosedEvent.class",
    "super": "Lorg/springframework/context/ApplicationEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/BootstrapContext;Lorg/springframework/context/ConfigurableApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/BootstrapRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/BootstrapRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/Bootstrapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/Bootstrapper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/CommandLineRunner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/CommandLineRunner.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ConfigurableBootstrapContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ConfigurableBootstrapContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/boot/BootstrapRegistry;","Lorg/springframework/boot/BootstrapContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/DefaultApplicationArguments$Source;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/DefaultApplicationArguments$Source.class",
    "super": "Lorg/springframework/core/env/SimpleCommandLinePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/String;)V","getNonOptionArgs()Ljava/util/List;","getOptionValues(Ljava/lang/String;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/boot/DefaultApplicationArguments;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/DefaultApplicationArguments.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/ApplicationArguments;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/String;)V","getSourceArgs()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/DefaultBootstrapContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/DefaultBootstrapContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/ConfigurableBootstrapContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","close(Lorg/springframework/context/ConfigurableApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/DefaultPropertiesPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/DefaultPropertiesPropertySource.class",
    "super": "Lorg/springframework/core/env/MapPropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","ifNotEmpty(Ljava/util/Map;Ljava/util/function/Consumer;)V","moveToEnd(Lorg/springframework/core/env/ConfigurableEnvironment;)V","moveToEnd(Lorg/springframework/core/env/MutablePropertySources;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/EnvironmentConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/EnvironmentConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","convertEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/Class;)Lorg/springframework/core/env/StandardEnvironment;","convertEnvironmentIfNecessary(Lorg/springframework/core/env/ConfigurableEnvironment;Ljava/lang/Class;)Lorg/springframework/core/env/StandardEnvironment;","copyPropertySources(Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/core/env/StandardEnvironment;)V","createEnvironment(Ljava/lang/Class;)Lorg/springframework/core/env/StandardEnvironment;","isServletEnvironment(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z","removePropertySources(Lorg/springframework/core/env/MutablePropertySources;Z)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/ExitCodeEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ExitCodeEvent.class",
    "super": "Lorg/springframework/context/ApplicationEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;I)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/ExitCodeExceptionMapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ExitCodeExceptionMapper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ExitCodeGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ExitCodeGenerator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ExitCodeGenerators$MappedExitCodeGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ExitCodeGenerators$MappedExitCodeGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/ExitCodeGenerator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;Lorg/springframework/boot/ExitCodeExceptionMapper;)V","getExitCode()I"]
  }
,
  {
    "className": "Lorg/springframework/boot/ExitCodeGenerators;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ExitCodeGenerators.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/Throwable;Lorg/springframework/boot/ExitCodeExceptionMapper;)V","add(Lorg/springframework/boot/ExitCodeGenerator;)V","addAll(Ljava/lang/Iterable;)V","addAll(Ljava/lang/Throwable;Ljava/lang/Iterable;)V","addAll([Lorg/springframework/boot/ExitCodeGenerator;)V","getExitCode()I","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ImageBanner$Frame;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ImageBanner$Frame.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/image/BufferedImage;I)V","getDelayTime()I","getImage()Ljava/awt/image/BufferedImage;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ImageBanner$PixelMode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ImageBanner$PixelMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getPixels()[C","valueOf(Ljava/lang/String;)Lorg/springframework/boot/ImageBanner$PixelMode;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ImageBanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ImageBanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/Banner;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/Resource;)V","findNode(Ljavax/imageio/metadata/IIOMetadataNode;Ljava/lang/String;)Ljavax/imageio/metadata/IIOMetadataNode;","getAsciiPixel(Ljava/awt/Color;ZLorg/springframework/boot/ImageBanner$PixelMode;)C","getBitDepthProperty(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/ansi/AnsiColors$BitDepth;","getDelayTime(Ljavax/imageio/ImageReader;I)I","getLuminance(IZD)D","getLuminance(Ljava/awt/Color;Z)I","getPixelModeProperty(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/ImageBanner$PixelMode;","getProperty(Lorg/springframework/core/env/Environment;Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","printBanner(Ljava/awt/image/BufferedImage;IZLorg/springframework/boot/ansi/AnsiColors$BitDepth;Lorg/springframework/boot/ImageBanner$PixelMode;Ljava/io/PrintStream;)V","printBanner(Lorg/springframework/core/env/Environment;Ljava/io/PrintStream;)V","printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V","readFrame(IILjavax/imageio/ImageReader;ILjavax/imageio/ImageReadParam;)Lorg/springframework/boot/ImageBanner$Frame;","readFrames(II)[Lorg/springframework/boot/ImageBanner$Frame;","readFrames(IILjavax/imageio/stream/ImageInputStream;)[Lorg/springframework/boot/ImageBanner$Frame;","resetCursor(Ljava/awt/image/BufferedImage;Ljava/io/PrintStream;)V","resizeImage(Ljava/awt/image/BufferedImage;II)Ljava/awt/image/BufferedImage;","sleep(I)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/LazyInitializationBeanFactoryPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/LazyInitializationBeanFactoryPostProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;","Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBeanType(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/lang/String;)Ljava/lang/Class;","getOrder()I","isExcluded(Ljava/util/Collection;Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Ljava/lang/Class;)Z","postProcess(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/util/Collection;Ljava/lang/String;Lorg/springframework/beans/factory/support/AbstractBeanDefinition;)V","postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/LazyInitializationExcludeFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/LazyInitializationExcludeFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ResourceBanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ResourceBanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/Banner;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/Resource;)V","getAnsiResolver()Lorg/springframework/core/env/PropertyResolver;","getApplicationTitle(Ljava/lang/Class;)Ljava/lang/String;","getApplicationVersion(Ljava/lang/Class;)Ljava/lang/String;","getBootVersion()Ljava/lang/String;","getPropertyResolvers(Lorg/springframework/core/env/Environment;Ljava/lang/Class;)Ljava/util/List;","getTitleResolver(Ljava/lang/Class;)Lorg/springframework/core/env/PropertyResolver;","getVersionResolver(Ljava/lang/Class;)Lorg/springframework/core/env/PropertyResolver;","getVersionString(Ljava/lang/String;Z)Ljava/lang/String;","getVersionsMap(Ljava/lang/Class;)Ljava/util/Map;","printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplication$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplication$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplication;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplication.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/ResourceLoader;[Ljava/lang/Class;)V","<init>([Ljava/lang/Class;)V","afterRefresh(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/boot/ApplicationArguments;)V","applyInitializers(Lorg/springframework/context/ConfigurableApplicationContext;)V","asUnmodifiableOrderedSet(Ljava/util/Collection;)Ljava/util/Set;","bindToSpringApplication(Lorg/springframework/core/env/ConfigurableEnvironment;)V","callRunner(Lorg/springframework/boot/ApplicationRunner;Lorg/springframework/boot/ApplicationArguments;)V","callRunner(Lorg/springframework/boot/CommandLineRunner;Lorg/springframework/boot/ApplicationArguments;)V","callRunners(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/ApplicationArguments;)V","close(Lorg/springframework/context/ApplicationContext;)V","configureAdditionalProfiles(Lorg/springframework/core/env/ConfigurableEnvironment;)V","configureEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V","configureHeadlessProperty()V","configureIgnoreBeanInfo(Lorg/springframework/core/env/ConfigurableEnvironment;)V","configureProfiles(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V","configurePropertySources(Lorg/springframework/core/env/ConfigurableEnvironment;[Ljava/lang/String;)V","createApplicationContext()Lorg/springframework/context/ConfigurableApplicationContext;","createBeanDefinitionLoader(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;[Ljava/lang/Object;)Lorg/springframework/boot/BeanDefinitionLoader;","createBootstrapContext()Lorg/springframework/boot/DefaultBootstrapContext;","createSpringFactoriesInstances(Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/ClassLoader;[Ljava/lang/Object;Ljava/util/Set;)Ljava/util/List;","deduceEnvironmentClass()Ljava/lang/Class;","deduceMainApplicationClass()Ljava/lang/Class;","exit(Lorg/springframework/context/ApplicationContext;[Lorg/springframework/boot/ExitCodeGenerator;)I","getAllSources()Ljava/util/Set;","getApplicationLog()Lorg/apache/commons/logging/Log;","getBeanDefinitionRegistry(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;","getClassLoader()Ljava/lang/ClassLoader;","getExceptionReporters(Lorg/springframework/context/ConfigurableApplicationContext;)Ljava/util/Collection;","getExitCodeFromException(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)I","getExitCodeFromExitCodeGeneratorException(Ljava/lang/Throwable;)I","getExitCodeFromMappedException(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)I","getInitializers()Ljava/util/Set;","getOrCreateEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;","getRunListeners([Ljava/lang/String;)Lorg/springframework/boot/SpringApplicationRunListeners;","getSpringBootExceptionHandler()Lorg/springframework/boot/SpringBootExceptionHandler;","getSpringFactoriesInstances(Ljava/lang/Class;)Ljava/util/Collection;","getSpringFactoriesInstances(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Collection;","handleExitCode(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V","handleRunFailure(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;Lorg/springframework/boot/SpringApplicationRunListeners;)V","isMainThread(Ljava/lang/Thread;)Z","lambda$createBootstrapContext$0(Lorg/springframework/boot/DefaultBootstrapContext;Lorg/springframework/boot/Bootstrapper;)V","load(Lorg/springframework/context/ApplicationContext;[Ljava/lang/Object;)V","logStartupInfo(Z)V","logStartupProfileInfo(Lorg/springframework/context/ConfigurableApplicationContext;)V","postProcessApplicationContext(Lorg/springframework/context/ConfigurableApplicationContext;)V","prepareContext(Lorg/springframework/boot/DefaultBootstrapContext;Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplicationRunListeners;Lorg/springframework/boot/ApplicationArguments;Lorg/springframework/boot/Banner;)V","prepareEnvironment(Lorg/springframework/boot/SpringApplicationRunListeners;Lorg/springframework/boot/DefaultBootstrapContext;Lorg/springframework/boot/ApplicationArguments;)Lorg/springframework/core/env/ConfigurableEnvironment;","printBanner(Lorg/springframework/core/env/ConfigurableEnvironment;)Lorg/springframework/boot/Banner;","refresh(Lorg/springframework/context/ApplicationContext;)V","refresh(Lorg/springframework/context/ConfigurableApplicationContext;)V","refreshContext(Lorg/springframework/context/ConfigurableApplicationContext;)V","registerLoggedException(Ljava/lang/Throwable;)V","reportFailure(Ljava/util/Collection;Ljava/lang/Throwable;)V","run(Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;","run([Ljava/lang/Class;[Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;","run([Ljava/lang/String;)Lorg/springframework/context/ConfigurableApplicationContext;","setInitializers(Ljava/util/Collection;)V","setListeners(Ljava/util/Collection;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplicationBannerPrinter$Banners;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplicationBannerPrinter$Banners.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/Banner;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/boot/SpringApplicationBannerPrinter$1;)V","addIfNotNull(Lorg/springframework/boot/Banner;)V","hasAtLeastOneBanner()Z","printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplicationBannerPrinter$PrintedBanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplicationBannerPrinter$PrintedBanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/Banner;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/Banner;Ljava/lang/Class;)V","printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplicationBannerPrinter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplicationBannerPrinter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/boot/Banner;)V","createStringFromBanner(Lorg/springframework/boot/Banner;Lorg/springframework/core/env/Environment;Ljava/lang/Class;)Ljava/lang/String;","getBanner(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/Banner;","getImageBanner(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/Banner;","getTextBanner(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/Banner;","print(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)Lorg/springframework/boot/Banner;","print(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Lorg/apache/commons/logging/Log;)Lorg/springframework/boot/Banner;"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplicationRunListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplicationRunListener.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/SpringApplicationRunListeners;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringApplicationRunListeners.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/commons/logging/Log;Ljava/util/Collection;Lorg/springframework/core/metrics/ApplicationStartup;)V","callFailedListener(Lorg/springframework/boot/SpringApplicationRunListener;Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V","contextLoaded(Lorg/springframework/context/ConfigurableApplicationContext;)V","contextPrepared(Lorg/springframework/context/ConfigurableApplicationContext;)V","doWithListeners(Ljava/lang/String;Ljava/util/function/Consumer;)V","doWithListeners(Ljava/lang/String;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V","environmentPrepared(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/core/env/ConfigurableEnvironment;)V","failed(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;)V","lambda$contextLoaded$4(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$contextPrepared$3(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$environmentPrepared$2(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/core/env/ConfigurableEnvironment;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$failed$7(Lorg/springframework/context/ConfigurableApplicationContext;Ljava/lang/Throwable;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$failed$8(Ljava/lang/Throwable;Lorg/springframework/core/metrics/StartupStep;)V","lambda$running$6(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$started$5(Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$starting$0(Lorg/springframework/boot/ConfigurableBootstrapContext;Lorg/springframework/boot/SpringApplicationRunListener;)V","lambda$starting$1(Ljava/lang/Class;Lorg/springframework/core/metrics/StartupStep;)V","running(Lorg/springframework/context/ConfigurableApplicationContext;)V","started(Lorg/springframework/context/ConfigurableApplicationContext;)V","starting(Lorg/springframework/boot/ConfigurableBootstrapContext;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringBootBanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringBootBanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/Banner;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","printBanner(Lorg/springframework/core/env/Environment;Ljava/lang/Class;Ljava/io/PrintStream;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringBootExceptionHandler$LoggedExceptionHandlerThreadLocal;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringBootExceptionHandler$LoggedExceptionHandlerThreadLocal.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/boot/SpringBootExceptionHandler$1;)V","initialValue()Ljava/lang/Object;","initialValue()Lorg/springframework/boot/SpringBootExceptionHandler;"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringBootExceptionHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringBootExceptionHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Thread$UncaughtExceptionHandler;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Thread$UncaughtExceptionHandler;)V","forCurrentThread()Lorg/springframework/boot/SpringBootExceptionHandler;","isLogConfigurationMessage(Ljava/lang/Throwable;)Z","isPassedToParent(Ljava/lang/Throwable;)Z","isRegistered(Ljava/lang/Throwable;)Z","registerExitCode(I)V","registerLoggedException(Ljava/lang/Throwable;)V","uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/SpringBootExceptionReporter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringBootExceptionReporter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/SpringBootVersion;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/SpringBootVersion.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["determineSpringBootVersion()Ljava/lang/String;","getImplementationVersion(Ljava/util/jar/JarFile;)Ljava/lang/String;","getVersion()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/StartupInfoLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/StartupInfoLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;)V","append(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;)V","append(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/lang/String;)V","appendApplicationName(Ljava/lang/StringBuilder;)V","appendContext(Ljava/lang/StringBuilder;)V","appendJavaVersion(Ljava/lang/StringBuilder;)V","appendOn(Ljava/lang/StringBuilder;)V","appendPid(Ljava/lang/StringBuilder;)V","appendVersion(Ljava/lang/StringBuilder;Ljava/lang/Class;)V","callIfPossible(Ljava/util/concurrent/Callable;)Ljava/lang/Object;","getRunningMessage()Ljava/lang/CharSequence;","getStartedMessage(Lorg/springframework/util/StopWatch;)Ljava/lang/CharSequence;","getStartingMessage()Ljava/lang/CharSequence;","lambda$appendContext$3()Ljava/lang/Object;","lambda$appendContext$4()Ljava/lang/Object;","lambda$appendJavaVersion$5()Ljava/lang/Object;","lambda$appendOn$1()Ljava/lang/Object;","lambda$appendOn$2(J)Ljava/lang/CharSequence;","lambda$appendVersion$0(Ljava/lang/Class;)Ljava/lang/Object;","logStarted(Lorg/apache/commons/logging/Log;Lorg/springframework/util/StopWatch;)V","logStarting(Lorg/apache/commons/logging/Log;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/WebApplicationType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/WebApplicationType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["deduceFromClasspath()Lorg/springframework/boot/WebApplicationType;","values()[Lorg/springframework/boot/WebApplicationType;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/Ansi8BitColor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/Ansi8BitColor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/ansi/AnsiElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","background(I)Lorg/springframework/boot/ansi/Ansi8BitColor;","equals(Ljava/lang/Object;)Z","foreground(I)Lorg/springframework/boot/ansi/Ansi8BitColor;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiBackground;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiBackground.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Lorg/springframework/boot/ansi/AnsiElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiColor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiColor.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Lorg/springframework/boot/ansi/AnsiElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiColors$BitDepth;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiColors$BitDepth.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["of(I)Lorg/springframework/boot/ansi/AnsiColors$BitDepth;","values()[Lorg/springframework/boot/ansi/AnsiColors$BitDepth;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiColors$LabColor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiColors$LabColor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.awt.color.ColorSpace.XYZspace",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/Color;)V","<init>(Ljava/lang/Integer;)V","f(D)D","fromXyz(FFF)[F","fromXyz([F)[F","getDistance(Lorg/springframework/boot/ansi/AnsiColors$LabColor;)D"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiColors;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiColors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: jdk.internal.misc.SharedSecrets.javaLangAccess",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/boot/ansi/AnsiColors$BitDepth;)V","findClosest(Ljava/awt/Color;)Lorg/springframework/boot/ansi/AnsiElement;","findClosest(Lorg/springframework/boot/ansi/AnsiColors$LabColor;)Lorg/springframework/boot/ansi/AnsiElement;","getLookup(Lorg/springframework/boot/ansi/AnsiColors$BitDepth;)Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiElement;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiElement.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiOutput$Enabled;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiOutput$Enabled.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiOutput;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiOutput.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.boot.ansi.AnsiOutput$Enabled.DETECT",
    "invokedMethods": ["<clinit>()V","buildDisabled(Ljava/lang/StringBuilder;[Ljava/lang/Object;)V","buildEnabled(Ljava/lang/StringBuilder;[Ljava/lang/Object;)V","detectIfAnsiCapable()Z","encode(Lorg/springframework/boot/ansi/AnsiElement;)Ljava/lang/String;","isEnabled()Z","toString([Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiPropertySource$Ansi8BitColorMapping;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiPropertySource$Ansi8BitColorMapping.class",
    "super": "Lorg/springframework/boot/ansi/AnsiPropertySource$Mapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/function/IntFunction;)V","containsOnlyDigits(Ljava/lang/String;)Z","getElement(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiElement;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiPropertySource$EnumMapping;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiPropertySource$EnumMapping.class",
    "super": "Lorg/springframework/boot/ansi/AnsiPropertySource$Mapping;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;)V","getElement(Ljava/lang/String;)Lorg/springframework/boot/ansi/AnsiElement;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiPropertySource$Mapping;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiPropertySource$Mapping.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getPrefix()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiPropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.ArrayList.DEFAULTCAPACITY_EMPTY_ELEMENTDATA",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Z)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/ansi/AnsiStyle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/ansi/AnsiStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Lorg/springframework/boot/ansi/AnsiElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/availability/AvailabilityChangeEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/availability/AvailabilityChangeEvent.class",
    "super": "Lorg/springframework/context/PayloadApplicationEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V","getResolvableType()Lorg/springframework/core/ResolvableType;","getState()Lorg/springframework/boot/availability/AvailabilityState;","getStateType()Ljava/lang/Class;","publish(Lorg/springframework/context/ApplicationContext;Lorg/springframework/boot/availability/AvailabilityState;)V","publish(Lorg/springframework/context/ApplicationEventPublisher;Ljava/lang/Object;Lorg/springframework/boot/availability/AvailabilityState;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/availability/AvailabilityState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/availability/AvailabilityState.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/availability/ReadinessState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/availability/ReadinessState.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": ["Lorg/springframework/boot/availability/AvailabilityState;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/AggregateBinder$AggregateSupplier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/AggregateBinder$AggregateSupplier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V","get()Ljava/lang/Object;","wasSupplied()Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/AggregateBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/AggregateBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/Binder$Context;)V","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)Ljava/lang/Object;","getContext()Lorg/springframework/boot/context/properties/bind/Binder$Context;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/AggregateElementBinder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ArrayBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ArrayBinder.class",
    "super": "Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/Binder$Context;)V","bindAggregate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)Ljava/lang/Object;","merge(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConstructorProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConverter$CompositeConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConverter$CompositeConversionService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/ConversionService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConverter$ResolvableTypeDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConverter$ResolvableTypeDescriptor.class",
    "super": "Lorg/springframework/core/convert/TypeDescriptor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConverter$TypeConverterConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConverter$TypeConverterConversionService.class",
    "super": "Lorg/springframework/core/convert/support/GenericConversionService;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Consumer;)V","canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","createTypeConverter(Ljava/util/function/Consumer;)Lorg/springframework/beans/SimpleTypeConverter;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConverter$TypeConverterConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConverter$TypeConverterConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/SimpleTypeConverter;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","getPropertyEditor(Ljava/lang/Class;)Ljava/beans/PropertyEditor;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;)V","access$000()Ljava/util/Set;","canConvert(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Z","convert(Ljava/lang/Object;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;","convert(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","get(Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;)Lorg/springframework/boot/context/properties/bind/BindConverter;","getConversionServices(Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": ["Lorg/springframework/boot/origin/OriginProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/source/ConfigurationProperty;Ljava/lang/Throwable;)V","buildMessage(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/String;","getOrigin()Lorg/springframework/boot/origin/Origin;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindHandler$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindHandler$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/BindHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","onCreate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;","onFailure(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Exception;)Ljava/lang/Object;","onFinish(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)V","onStart(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;)Lorg/springframework/boot/context/properties/bind/Bindable;","onSuccess(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindContext;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/BindResult;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/BindResult.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I","of(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/BindResult;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/Bindable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/Bindable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Ljava/util/function/Supplier;[Ljava/lang/annotation/Annotation;)V","box(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","equals(Ljava/lang/Object;)Z","getAnnotations()[Ljava/lang/annotation/Annotation;","getType()Lorg/springframework/core/ResolvableType;","getValue()Ljava/util/function/Supplier;","hashCode()I","lambda$withExistingValue$0()Ljava/lang/String;","lambda$withExistingValue$1(Ljava/lang/Object;)Ljava/lang/Object;","mapOf(Ljava/lang/Class;Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;","nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z","of(Ljava/lang/Class;)Lorg/springframework/boot/context/properties/bind/Bindable;","of(Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/Bindable;","ofInstance(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;","toString()Ljava/lang/String;","withAnnotations([Ljava/lang/annotation/Annotation;)Lorg/springframework/boot/context/properties/bind/Bindable;","withExistingValue(Ljava/lang/Object;)Lorg/springframework/boot/context/properties/bind/Bindable;","withSuppliedValue(Ljava/util/function/Supplier;)Lorg/springframework/boot/context/properties/bind/Bindable;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/Binder$Context;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/Binder$Context.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/BindContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/Binder;)V","access$000(Lorg/springframework/boot/context/properties/bind/Binder$Context;)I","access$100(Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/util/function/Supplier;)Ljava/lang/Object;","access$200(Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/lang/Class;)Z","access$300(Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;","access$800(Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Ljava/util/function/Supplier;)Ljava/lang/Object;","clearConfigurationProperty()V","decreaseDepth()V","getConfigurationProperty()Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","getConverter()Lorg/springframework/boot/context/properties/bind/BindConverter;","getPlaceholdersResolver()Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;","getSources()Ljava/lang/Iterable;","increaseDepth()V","isBindingDataObject(Ljava/lang/Class;)Z","isNestedConstructorBinding()Z","popConstructorBoundTypes()V","pushConstructorBoundTypes(Ljava/lang/Class;)V","setConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationProperty;)V","withDataObject(Ljava/lang/Class;Ljava/util/function/Supplier;)Ljava/lang/Object;","withIncreasedDepth(Ljava/util/function/Supplier;)Ljava/lang/Object;","withSource(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Ljava/util/function/Supplier;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/Binder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/Binder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;Lorg/springframework/boot/context/properties/bind/BindHandler;)V","<init>(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;Lorg/springframework/core/convert/ConversionService;Ljava/util/function/Consumer;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;)V","access$400(Lorg/springframework/boot/context/properties/bind/Binder;)Lorg/springframework/core/convert/ConversionService;","access$500(Lorg/springframework/boot/context/properties/bind/Binder;)Ljava/util/function/Consumer;","access$600(Lorg/springframework/boot/context/properties/bind/Binder;)Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;","access$700(Lorg/springframework/boot/context/properties/bind/Binder;)Ljava/lang/Iterable;","bind(Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/BindResult;","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/BindResult;","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;ZZ)Ljava/lang/Object;","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Z)Ljava/lang/Object;","bindAggregate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/bind/AggregateBinder;)Ljava/lang/Object;","bindDataObject(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Z)Ljava/lang/Object;","bindObject(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Z)Ljava/lang/Object;","bindProperty(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/source/ConfigurationProperty;)Ljava/lang/Object;","containsNoDescendantOf(Ljava/lang/Iterable;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","create(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Ljava/lang/Object;","findProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","get(Lorg/springframework/core/env/Environment;)Lorg/springframework/boot/context/properties/bind/Binder;","get(Lorg/springframework/core/env/Environment;Lorg/springframework/boot/context/properties/bind/BindHandler;)Lorg/springframework/boot/context/properties/bind/Binder;","getAggregateBinder(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Lorg/springframework/boot/context/properties/bind/AggregateBinder;","handleBindError(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/lang/Exception;)Ljava/lang/Object;","handleBindResult(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/lang/Object;Z)Ljava/lang/Object;","isUnbindableBean(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Z","lambda$bindAggregate$2(Lorg/springframework/boot/context/properties/bind/AggregateBinder;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)Ljava/lang/Object;","lambda$bindAggregate$3(Lorg/springframework/boot/context/properties/bind/AggregateBinder;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)Ljava/lang/Object;","lambda$bindDataObject$4(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Ljava/lang/String;Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;","lambda$bindDataObject$5(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;)Ljava/lang/Object;","lambda$handleBindResult$0(Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/String;","lambda$null$1(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindHandler;Lorg/springframework/boot/context/properties/bind/Binder$Context;Z)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/CollectionBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/CollectionBinder.class",
    "super": "Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/Binder$Context;)V","bindAggregate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)Ljava/lang/Object;","copyIfPossible(Ljava/util/Collection;)Ljava/util/Collection;","createNewCollection(Ljava/util/Collection;)Ljava/util/Collection;","getExistingIfPossible(Ljava/util/function/Supplier;)Ljava/util/Collection;","lambda$bindAggregate$0(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;)Ljava/util/Collection;","merge(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;","merge(Ljava/util/function/Supplier;Ljava/util/Collection;)Ljava/util/Collection;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/DataObjectBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/DataObjectBinder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/DataObjectPropertyBinder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/DataObjectPropertyName;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/DataObjectPropertyName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toDashedForm(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/DefaultBindConstructorProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getBindConstructor(Lorg/springframework/boot/context/properties/bind/Bindable;Z)Ljava/lang/reflect/Constructor;","getDeducedKotlinConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/DefaultValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/DefaultValue.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier.class",
    "super": "Lorg/springframework/boot/context/properties/bind/AggregateBinder$AggregateSupplier;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/IndexedElementsBinder.class",
    "super": "Lorg/springframework/boot/context/properties/bind/AggregateBinder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/Binder$Context;)V","assertNoUnboundChildren(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/util/MultiValueMap;)V","bindIndexed(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier;)V","bindIndexed(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier;Lorg/springframework/core/ResolvableType;)V","bindIndexed(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;Lorg/springframework/boot/context/properties/bind/IndexedElementsBinder$IndexedCollectionSupplier;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V","bindValue(Lorg/springframework/boot/context/properties/bind/Bindable;Ljava/util/Collection;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;Ljava/lang/Object;)V","convert(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","getKnownIndexedChildren(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/util/MultiValueMap;","isAllowRecursiveBinding(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$Bean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/JavaBeanBinder$Bean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;)V","addField(Ljava/lang/reflect/Field;)V","addMethodIfPossible(Ljava/lang/reflect/Method;Ljava/lang/String;ILjava/util/function/BiConsumer;)V","addProperties(Ljava/lang/Class;)V","addProperties([Ljava/lang/reflect/Method;[Ljava/lang/reflect/Field;)V","get(Lorg/springframework/boot/context/properties/bind/Bindable;Z)Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$Bean;","getBeanProperty(Ljava/lang/String;)Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty;","getProperties()Ljava/util/Map;","getSupplier(Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanSupplier;","isCandidate(Ljava/lang/reflect/Method;)Z","isInstantiable(Ljava/lang/Class;)Z","isOfType(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;)Z","lambda$getSupplier$0(Lorg/springframework/boot/context/properties/bind/Bindable;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/core/ResolvableType;)V","addField(Ljava/lang/reflect/Field;)V","addGetter(Ljava/lang/reflect/Method;)V","addSetter(Ljava/lang/reflect/Method;)V","getAnnotations()[Ljava/lang/annotation/Annotation;","getName()Ljava/lang/String;","getType()Lorg/springframework/core/ResolvableType;","getValue(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;","isBetterGetter(Ljava/lang/reflect/Method;)Z","isBetterSetter(Ljava/lang/reflect/Method;)Z","isSettable()Z","lambda$getValue$0(Ljava/util/function/Supplier;)Ljava/lang/Object;","setValue(Ljava/util/function/Supplier;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanSupplier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/JavaBeanBinder$BeanSupplier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Supplier;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/JavaBeanBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/JavaBeanBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/DataObjectBinder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["bind(Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$Bean;Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanSupplier;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Z","bind(Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanSupplier;Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;Lorg/springframework/boot/context/properties/bind/JavaBeanBinder$BeanProperty;)Z","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;)Ljava/lang/Object;","create(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Ljava/lang/Object;","hasKnownBindableProperties(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/MapBinder$EntryBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/MapBinder$EntryBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/MapBinder;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)V","bindEntries(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Ljava/util/Map;)V","chopNameAtNumericIndex(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","getEntryName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","getKeyName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/lang/String;","getValueBindable(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/bind/Bindable;","isScalarValue(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isValueTreatedAsNestedMap()Z","lambda$bindEntries$0(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/MapBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/MapBinder.class",
    "super": "Lorg/springframework/boot/context/properties/bind/AggregateBinder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.ResolvableType",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/boot/context/properties/bind/Binder$Context;)V","bindAggregate(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/AggregateElementBinder;)Ljava/lang/Object;","copyIfPossible(Ljava/util/Map;)Ljava/util/Map;","createNewMap(Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;","getExistingIfPossible(Ljava/util/function/Supplier;)Ljava/util/Map;","hasDescendants(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isAllowRecursiveBinding(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;)Z","merge(Ljava/util/function/Supplier;Ljava/lang/Object;)Ljava/lang/Object;","merge(Ljava/util/function/Supplier;Ljava/util/Map;)Ljava/util/Map;","resolveTarget(Lorg/springframework/boot/context/properties/bind/Bindable;)Lorg/springframework/boot/context/properties/bind/Bindable;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/Name;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/Name.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/PlaceholdersResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","lambda$static$0(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/PropertySourcesPlaceholdersResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/PropertySourcesPlaceholdersResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/PlaceholdersResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Iterable;Lorg/springframework/util/PropertyPlaceholderHelper;)V","<init>(Lorg/springframework/core/env/Environment;)V","getSources(Lorg/springframework/core/env/Environment;)Lorg/springframework/core/env/PropertySources;","resolvePlaceholder(Ljava/lang/String;)Ljava/lang/String;","resolvePlaceholders(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/UnboundConfigurationPropertiesException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/UnboundConfigurationPropertiesException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;)V","buildMessage(Ljava/util/Set;)Ljava/lang/String;","lambda$buildMessage$0(Lorg/springframework/boot/context/properties/source/ConfigurationProperty;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ConstructorParameter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ValueObjectBinder$ConstructorParameter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)V","bind(Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;)Ljava/lang/Object;","getAnnotations()[Ljava/lang/annotation/Annotation;","getType()Lorg/springframework/core/ResolvableType;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$DefaultValueObject;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ValueObjectBinder$DefaultValueObject.class",
    "super": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.DefaultParameterNameDiscoverer",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)V","get(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;","getConstructorParameters()Ljava/util/List;","lambda$parseConstructorParameters$0(Ljava/lang/reflect/Constructor;)Ljava/lang/String;","parseConstructorParameters(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$KotlinValueObject;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ValueObjectBinder$KotlinValueObject.class",
    "super": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(Ljava/lang/reflect/Constructor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;)V","get(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ValueObject;","instantiate(Ljava/util/List;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/bind/ValueObjectBinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/bind/ValueObjectBinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/bind/DataObjectBinder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/bind/BindConstructorProvider;)V","bind(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/bind/DataObjectPropertyBinder;)Ljava/lang/Object;","convertDefaultValue(Lorg/springframework/boot/context/properties/bind/BindConverter;[Ljava/lang/String;Lorg/springframework/core/ResolvableType;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","create(Lorg/springframework/boot/context/properties/bind/Bindable;Lorg/springframework/boot/context/properties/bind/Binder$Context;)Ljava/lang/Object;","getDefaultValue(Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/boot/context/properties/bind/ValueObjectBinder$ConstructorParameter;)Ljava/lang/Object;","getNewInstanceIfPossible(Lorg/springframework/boot/context/properties/bind/Binder$Context;Lorg/springframework/core/ResolvableType;)Ljava/lang/Object;","isAggregate(Ljava/lang/Class;)Z","isEmptyDefaultValueAllowed(Ljava/lang/Class;)Z","lambda$getNewInstanceIfPossible$0(Lorg/springframework/core/ResolvableType;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/CachingConfigurationPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/CachingConfigurationPropertySource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationProperty;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/origin/OriginProvider;","Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/lang/Object;Lorg/springframework/boot/origin/Origin;)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/boot/context/properties/source/ConfigurationProperty;)I","equals(Ljava/lang/Object;)Z","getName()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","getOrigin()Lorg/springframework/boot/origin/Origin;","getValue()Ljava/lang/Object;","hashCode()I","of(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/lang/Object;Lorg/springframework/boot/origin/Origin;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyCaching.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementCharPredicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementCharPredicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["allowsDashIgnoringEqualityCheck()Z","allowsFastEqualityCheck()Z","isIndexed()Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;I[I[I[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;[Ljava/lang/CharSequence;)V","append(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","canShortcutWithSource(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;)Z","canShortcutWithSource(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;)Z","charAt(II)C","chop(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","get(I)Ljava/lang/CharSequence;","getLength(I)I","getSize()I","getSource()Ljava/lang/CharSequence;","getType(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;","newResolved(I)[Ljava/lang/CharSequence;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementsParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementsParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;C)V","<init>(Ljava/lang/CharSequence;CI)V","add(IILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/util/function/Function;)V","expand([I)[I","expand([Ljava/lang/CharSequence;)[Ljava/lang/CharSequence;","expand([Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;)[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;","isAlpha(C)Z","isAlphaNumeric(C)Z","isNumeric(C)Z","isValidChar(CI)Z","parse()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","parse(Ljava/util/function/Function;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","updateType(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;CI)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName$Form.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;)V","adapt(Ljava/lang/CharSequence;C)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","adapt(Ljava/lang/CharSequence;CLjava/util/function/Function;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","append(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","buildToString()Ljava/lang/String;","chop(I)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","compare(Ljava/lang/String;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;Ljava/lang/String;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementType;)I","compare(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)I","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)I","convertElement(Ljava/lang/CharSequence;ZLorg/springframework/boot/context/properties/source/ConfigurationPropertyName$ElementCharPredicate;)Ljava/lang/CharSequence;","convertToDashedElement(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;","convertToOriginalForm(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;","convertToUniformElement(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;","dashIgnoringElementEquals(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;I)Z","defaultElementEquals(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;I)Z","elementDiffers(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;I)Z","elementsEqual(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","elementsOf(Ljava/lang/CharSequence;Z)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","elementsOf(Ljava/lang/CharSequence;ZI)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","equals(Ljava/lang/Object;)Z","fastElementEquals(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;I)Z","getElement(ILorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;)Ljava/lang/String;","getInvalidChars(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;I)Ljava/util/List;","getLastElement(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Form;)Ljava/lang/String;","getNumberOfElements()I","getParent()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","hashCode()I","isAncestorOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isEmpty()Z","isIndexed(I)Z","isLastElementIndexed()Z","isNumericIndex(I)Z","isParentOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","lambda$convertToOriginalForm$0(CI)Z","lambda$convertToUniformElement$1(CI)Z","of(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","of(Ljava/lang/CharSequence;Z)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","ofIfValid(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","probablySingleElementOf(Ljava/lang/CharSequence;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName$Elements;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertySource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertySources;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertySources.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["attach(Lorg/springframework/core/env/Environment;)V","from(Ljava/lang/Iterable;)Ljava/lang/Iterable;","get(Lorg/springframework/core/env/Environment;)Ljava/lang/Iterable;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource;",
    "interfaces": ["Lorg/springframework/boot/origin/OriginLookup;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Iterable;)V","findConfigurationProperty(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","findConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","getOrigin(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;","getOrigin(Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;","getProperty(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/ConfigurationPropertyState.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["search(Ljava/lang/Iterable;Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/DefaultPropertyMapper$LastMapping;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/DefaultPropertyMapper$LastMapping.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","getMapping()Ljava/lang/Object;","isFrom(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/DefaultPropertyMapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/DefaultPropertyMapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/PropertyMapper;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","map(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","map(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/List;","tryMap(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/FilteredConfigurationPropertiesSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/FilteredConfigurationPropertiesSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;Ljava/util/function/Predicate;)V","containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","getConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","getFilter()Ljava/util/function/Predicate;","getSource()Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","getUnderlyingSource()Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/FilteredIterableConfigurationPropertiesSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/FilteredIterableConfigurationPropertiesSource.class",
    "super": "Lorg/springframework/boot/context/properties/source/FilteredConfigurationPropertiesSource;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;Ljava/util/function/Predicate;)V","containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","getSource()Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","getSource()Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;","stream()Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/InvalidConfigurationPropertyNameException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/InvalidConfigurationPropertyNameException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/IterableConfigurationPropertySource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","filter(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/PropertyMapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/PropertyMapper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","getAncestorOfCheck()Ljava/util/function/BiPredicate;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/ConfigurationPropertyCaching;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","get(Ljava/util/function/Supplier;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;","getValue()Ljava/lang/Object;","hasExpired()Z","now()Ljava/time/Instant;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringConfigurationPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.boot.context.properties.source.DefaultPropertyMapper",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/env/PropertySource;[Lorg/springframework/boot/context/properties/source/PropertyMapper;)V","containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","containsDescendantOfForRandom(Ljava/lang/String;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","from(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/properties/source/SpringConfigurationPropertySource;","getConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","getMappers()[Lorg/springframework/boot/context/properties/source/PropertyMapper;","getPropertyMappers(Lorg/springframework/core/env/PropertySource;)[Lorg/springframework/boot/context/properties/source/PropertyMapper;","getPropertySource()Lorg/springframework/core/env/PropertySource;","getRootSource(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/core/env/PropertySource;","getUnderlyingSource()Ljava/lang/Object;","hasSystemEnvironmentName(Lorg/springframework/core/env/PropertySource;)Z","isFullEnumerable(Lorg/springframework/core/env/PropertySource;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringConfigurationPropertySources$SourcesIterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringConfigurationPropertySources$SourcesIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Iterator;Ljava/util/function/Function;)V","fetchNext()Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","hasNext()Z","isIgnored(Lorg/springframework/core/env/PropertySource;)Z","isRandomPropertySource(Lorg/springframework/core/env/PropertySource;)Z","next()Ljava/lang/Object;","next()Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","push(Lorg/springframework/core/env/ConfigurableEnvironment;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringConfigurationPropertySources;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringConfigurationPropertySources.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Iterable;)V","adapt(Lorg/springframework/core/env/PropertySource;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertySource;","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$ConfigurationPropertyNamesIterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$ConfigurationPropertyNamesIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)V","hasNext()Z","next()Ljava/lang/Object;","next()Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","skipNulls()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lorg/springframework/boot/context/properties/source/PropertyMapper;ZZ)V","add(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V","addParents(Ljava/util/Map;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)V","cloneOrCreate(Ljava/util/Map;I)Ljava/util/Map;","containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Ljava/util/function/BiPredicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","getConfigurationPropertyNames([Ljava/lang/String;)[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","getMapped(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/Set;","lambda$add$0(Ljava/lang/Object;)Ljava/util/Set;","updateMappings(Ljava/util/function/Supplier;)V","updateMappings([Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.class",
    "super": "Lorg/springframework/boot/context/properties/source/SpringConfigurationPropertySource;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;","Lorg/springframework/boot/context/properties/source/CachingConfigurationPropertySource;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/core/env/EnumerablePropertySource;[Lorg/springframework/boot/context/properties/source/PropertyMapper;)V","assertEnumerablePropertySource()V","containsDescendantOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;","createMappings()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;","getAncestorOfCheck([Lorg/springframework/boot/context/properties/source/PropertyMapper;)Ljava/util/function/BiPredicate;","getConfigurationProperty(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationProperty;","getConfigurationPropertyNames()[Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","getMappings()Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;","getPropertySource()Lorg/springframework/core/env/EnumerablePropertySource;","getPropertySource()Lorg/springframework/core/env/PropertySource;","isImmutablePropertySource()Z","iterator()Ljava/util/Iterator;","stream()Ljava/util/stream/Stream;","updateMappings(Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;)Lorg/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource$Mappings;"]
  }
,
  {
    "className": "Lorg/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/context/properties/source/SystemEnvironmentPropertyMapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/context/properties/source/PropertyMapper;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","buildLegacyCompatibleName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","convertLegacyName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/lang/String;","convertLegacyNameElement(Ljava/lang/String;)Ljava/lang/Object;","convertName(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","convertName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/lang/String;","convertName(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;I)Ljava/lang/String;","getAncestorOfCheck()Ljava/util/function/BiPredicate;","hasDashedEntries(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isAncestorOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isLegacyAncestorOf(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Z","isNumber(Ljava/lang/String;)Z","map(Ljava/lang/String;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;","map(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/List;","processElementValue(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/ApplicationConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/ApplicationConversionService.class",
    "super": "Lorg/springframework/format/support/FormattingConversionService;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/util/StringValueResolver;)V","addApplicationConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","addApplicationFormatters(Lorg/springframework/format/FormatterRegistry;)V","addDelimitedStringConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","configure(Lorg/springframework/format/FormatterRegistry;)V","getSharedInstance()Lorg/springframework/core/convert/ConversionService;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/ArrayToDelimitedStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/ArrayToDelimitedStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/CharArrayFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/CharArrayFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)[C","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print([CLjava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/CollectionToDelimitedStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/CollectionToDelimitedStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/util/Collection;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertElement(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/String;","getConvertibleTypes()Ljava/util/Set;","getDelimiter(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/CharSequence;","lambda$convert$0(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/String;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DataSizeUnit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DataSizeUnit.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DelimitedStringToArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DelimitedStringToArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/lang/String;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","getElements(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DelimitedStringToCollectionConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DelimitedStringToCollectionConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/lang/String;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","createCollection(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;I)Ljava/util/Collection;","getConvertibleTypes()Ljava/util/Set;","getElements(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;","lambda$convert$0(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/Delimiter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/Delimiter.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationFormat;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationFormat.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationStyle$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationStyle$1.class",
    "super": "Lorg/springframework/boot/convert/DurationStyle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;)V","parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Duration;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationStyle$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationStyle$2.class",
    "super": "Lorg/springframework/boot/convert/DurationStyle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;)V","parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Duration;","print(Ljava/time/Duration;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationStyle$Unit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationStyle$Unit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/time/temporal/ChronoUnit;Ljava/lang/String;Ljava/util/function/Function;)V","fromChronoUnit(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/boot/convert/DurationStyle$Unit;","fromSuffix(Ljava/lang/String;)Lorg/springframework/boot/convert/DurationStyle$Unit;","lambda$static$0(Ljava/time/Duration;)Ljava/lang/Long;","longValue(Ljava/time/Duration;)J","parse(Ljava/lang/String;)Ljava/time/Duration;","values()[Lorg/springframework/boot/convert/DurationStyle$Unit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationStyle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.boot.convert.DurationStyle$1",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/lang/String;)V","<init>(Ljava/lang/String;ILjava/lang/String;Lorg/springframework/boot/convert/DurationStyle$1;)V","detect(Ljava/lang/String;)Lorg/springframework/boot/convert/DurationStyle;","matcher(Ljava/lang/String;)Ljava/util/regex/Matcher;","matches(Ljava/lang/String;)Z","values()[Lorg/springframework/boot/convert/DurationStyle;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationToNumberConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationToNumberConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/time/Duration;Ljava/time/temporal/ChronoUnit;Ljava/lang/Class;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","getDurationUnit(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/time/temporal/ChronoUnit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/time/Duration;Lorg/springframework/boot/convert/DurationStyle;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;","getConvertibleTypes()Ljava/util/Set;","getDurationStyle(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/boot/convert/DurationStyle;","getDurationUnit(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/time/temporal/ChronoUnit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/DurationUnit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/DurationUnit.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/InetAddressFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/InetAddressFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/net/InetAddress;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/net/InetAddress;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/InputStreamSourceToByteArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/InputStreamSourceToByteArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Lorg/springframework/core/io/InputStreamSource;)[B","getName(Lorg/springframework/core/io/InputStreamSource;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/IsoOffsetFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/IsoOffsetFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/OffsetDateTime;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/OffsetDateTime;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/LenientBooleanToEnumConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/LenientBooleanToEnumConverterFactory.class",
    "super": "Lorg/springframework/boot/convert/LenientObjectToEnumConverterFactory;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/LenientObjectToEnumConverterFactory$LenientToEnumConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/LenientObjectToEnumConverterFactory$LenientToEnumConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/convert/LenientObjectToEnumConverterFactory;Ljava/lang/Class;)V","convert(Ljava/lang/Object;)Ljava/lang/Enum;","convert(Ljava/lang/Object;)Ljava/lang/Object;","findEnum(Ljava/lang/String;)Ljava/lang/Enum;","getCanonicalName(Ljava/lang/String;)Ljava/lang/String;","lambda$getCanonicalName$0(Ljava/lang/StringBuilder;I)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/LenientObjectToEnumConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/LenientObjectToEnumConverterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.invoke.MethodHandle.invokeBasic()",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000()Ljava/util/Map;","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;","lambda$getConverter$0(Ljava/lang/Class;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/LenientStringToEnumConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/LenientStringToEnumConverterFactory.class",
    "super": "Lorg/springframework/boot/convert/LenientObjectToEnumConverterFactory;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/NumberToDataSizeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/NumberToDataSizeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/NumberToDurationConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/NumberToDurationConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/NumberToPeriodConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/NumberToPeriodConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodFormat;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodFormat.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodStyle$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodStyle$1.class",
    "super": "Lorg/springframework/boot/convert/PeriodStyle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;I)V","hasAtLeastOneGroupValue(Ljava/util/regex/Matcher;)Z","lambda$parse$0(Ljava/lang/String;)Ljava/lang/String;","matches(Ljava/lang/String;)Z","parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Period;","parseInt(Ljava/util/regex/Matcher;I)I"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodStyle$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodStyle$2.class",
    "super": "Lorg/springframework/boot/convert/PeriodStyle;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;I)V","parse(Ljava/lang/String;Ljava/time/temporal/ChronoUnit;)Ljava/time/Period;","print(Ljava/time/Period;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodStyle$Unit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodStyle$Unit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/time/temporal/ChronoUnit;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;)V","access$200(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/boot/convert/PeriodStyle$Unit;","access$300(Lorg/springframework/boot/convert/PeriodStyle$Unit;Ljava/lang/String;)Ljava/time/Period;","fromChronoUnit(Ljava/time/temporal/ChronoUnit;)Lorg/springframework/boot/convert/PeriodStyle$Unit;","parse(Ljava/lang/String;)Ljava/time/Period;","values()[Lorg/springframework/boot/convert/PeriodStyle$Unit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodStyle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodStyle.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.boot.convert.PeriodStyle$1",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/lang/String;I)V","<init>(Ljava/lang/String;ILjava/lang/String;ILorg/springframework/boot/convert/PeriodStyle$1;)V","access$100()Ljava/util/regex/Pattern;","detect(Ljava/lang/String;)Lorg/springframework/boot/convert/PeriodStyle;","matcher(Ljava/lang/String;)Ljava/util/regex/Matcher;","matches(Ljava/lang/String;)Z","values()[Lorg/springframework/boot/convert/PeriodStyle;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/time/Period;Lorg/springframework/boot/convert/PeriodStyle;Ljava/time/temporal/ChronoUnit;)Ljava/lang/String;","getConvertibleTypes()Ljava/util/Set;","getPeriodStyle(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/boot/convert/PeriodStyle;","getPeriodUnit(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/time/temporal/ChronoUnit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/PeriodUnit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/PeriodUnit.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/convert/StringToDataSizeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/StringToDataSizeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/lang/String;Lorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;","getConvertibleTypes()Ljava/util/Set;","getDataUnit(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/util/unit/DataUnit;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/StringToDurationConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/StringToDurationConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/lang/String;Lorg/springframework/boot/convert/DurationStyle;Ljava/time/temporal/ChronoUnit;)Ljava/time/Duration;","getConvertibleTypes()Ljava/util/Set;","getDurationUnit(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/time/temporal/ChronoUnit;","getStyle(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/boot/convert/DurationStyle;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/StringToFileConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/StringToFileConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/io/File;","getFile(Lorg/springframework/core/io/Resource;)Ljava/io/File;"]
  }
,
  {
    "className": "Lorg/springframework/boot/convert/StringToPeriodConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/convert/StringToPeriodConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convert(Ljava/lang/String;Lorg/springframework/boot/convert/PeriodStyle;Ljava/time/temporal/ChronoUnit;)Ljava/time/Period;","getConvertibleTypes()Ljava/util/Set;","getPeriodUnit(Lorg/springframework/core/convert/TypeDescriptor;)Ljava/time/temporal/ChronoUnit;","getStyle(Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/boot/convert/PeriodStyle;"]
  }
,
  {
    "className": "Lorg/springframework/boot/origin/Origin;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/origin/Origin.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["from(Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;"]
  }
,
  {
    "className": "Lorg/springframework/boot/origin/OriginLookup;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/origin/OriginLookup.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getOrigin(Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/boot/origin/Origin;"]
  }
,
  {
    "className": "Lorg/springframework/boot/origin/OriginProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/origin/OriginProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/origin/PropertySourceOrigin;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/origin/PropertySourceOrigin.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/origin/Origin;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)V","get(Lorg/springframework/core/env/PropertySource;Ljava/lang/String;)Lorg/springframework/boot/origin/Origin;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/system/ApplicationHome;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/system/ApplicationHome.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","findDefaultHomeDir()Ljava/io/File;","findHomeDir(Ljava/io/File;)Ljava/io/File;","findSource(Ljava/lang/Class;)Ljava/io/File;","findSource(Ljava/net/URL;)Ljava/io/File;","getDir()Ljava/io/File;","getRootJarFile(Ljava/util/jar/JarFile;)Ljava/io/File;","getSource()Ljava/io/File;","getStartClass()Ljava/lang/Class;","getStartClass(Ljava/util/Enumeration;)Ljava/lang/Class;","isUnitTest()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/system/ApplicationPid;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/system/ApplicationPid.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","equals(Ljava/lang/Object;)Z","getPid()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/context/ConfigurableWebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/context/ConfigurableWebServerApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ConfigurableApplicationContext;","Lorg/springframework/boot/web/context/WebServerApplicationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/context/WebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/context/WebServerApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/context/WebServerInitializedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/context/WebServerInitializedEvent.class",
    "super": "Lorg/springframework/context/ApplicationEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/server/WebServer;)V","getSource()Ljava/lang/Object;","getSource()Lorg/springframework/boot/web/server/WebServer;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebServerApplicationContext.class",
    "super": "Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;",
    "interfaces": ["Lorg/springframework/context/annotation/AnnotationConfigRegistry;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","prepareRefresh()V","setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/ConfigurableReactiveWebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/ConfigurableReactiveWebApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ConfigurableApplicationContext;","Lorg/springframework/boot/web/reactive/context/ReactiveWebApplicationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/ConfigurableReactiveWebEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/ConfigurableReactiveWebEnvironment.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/ConfigurableEnvironment;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/FilteredReactiveWebContextResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/FilteredReactiveWebContextResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","exists()Z","getDescription()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext.class",
    "super": "Lorg/springframework/context/support/GenericApplicationContext;",
    "interfaces": ["Lorg/springframework/boot/web/reactive/context/ConfigurableReactiveWebApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","createEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;","getResourceByPath(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/ReactiveWebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/ReactiveWebApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext.class",
    "super": "Lorg/springframework/boot/web/reactive/context/GenericReactiveWebApplicationContext;",
    "interfaces": ["Lorg/springframework/boot/web/context/ConfigurableWebServerApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","createWebServer()V","doClose()V","getHttpHandler()Lorg/springframework/http/server/reactive/HttpHandler;","getWebServerFactory(Ljava/lang/String;)Lorg/springframework/boot/web/reactive/server/ReactiveWebServerFactory;","getWebServerFactoryBeanName()Ljava/lang/String;","onRefresh()V","refresh()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/ReactiveWebServerInitializedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/ReactiveWebServerInitializedEvent.class",
    "super": "Lorg/springframework/boot/web/context/WebServerInitializedEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/server/WebServer;Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/StandardReactiveWebEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/StandardReactiveWebEnvironment.class",
    "super": "Lorg/springframework/core/env/StandardEnvironment;",
    "interfaces": ["Lorg/springframework/boot/web/reactive/context/ConfigurableReactiveWebEnvironment;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/WebServerGracefulShutdownLifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/WebServerGracefulShutdownLifecycle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/SmartLifecycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/reactive/context/WebServerManager;)V","isRunning()Z","start()V","stop(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/WebServerManager$DelayedInitializationHttpHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/WebServerManager$DelayedInitializationHttpHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/http/server/reactive/HttpHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;Z)V","<init>(Ljava/util/function/Supplier;ZLorg/springframework/boot/web/reactive/context/WebServerManager$1;)V","initializeHandler()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/WebServerManager$LazyHttpHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/WebServerManager$LazyHttpHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/http/server/reactive/HttpHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V","<init>(Ljava/util/function/Supplier;Lorg/springframework/boot/web/reactive/context/WebServerManager$1;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/WebServerManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/WebServerManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext;Lorg/springframework/boot/web/reactive/server/ReactiveWebServerFactory;Ljava/util/function/Supplier;Z)V","getWebServer()Lorg/springframework/boot/web/server/WebServer;","shutDownGracefully(Ljava/lang/Runnable;)V","start()V","stop()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/context/WebServerStartStopLifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/context/WebServerStartStopLifecycle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/SmartLifecycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/reactive/context/WebServerManager;)V","getPhase()I","isRunning()Z","start()V","stop()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/reactive/server/ReactiveWebServerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/reactive/server/ReactiveWebServerFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/server/GracefulShutdownCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/server/GracefulShutdownCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/server/WebServer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/server/WebServer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/AbstractFilterRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/DynamicRegistrationBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>([Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V","addRegistration(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/FilterRegistration$Dynamic;","addRegistration(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/Registration$Dynamic;","configure(Ljavax/servlet/FilterRegistration$Dynamic;)V","configure(Ljavax/servlet/Registration$Dynamic;)V","getDescription()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/AbstractFilterRegistrationBean;",
    "interfaces": ["Lorg/springframework/context/ApplicationContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/DynamicRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/DynamicRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/RegistrationBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","configure(Ljavax/servlet/Registration$Dynamic;)V","getOrDeduceName(Ljava/lang/Object;)Ljava/lang/String;","register(Ljava/lang/String;Ljavax/servlet/ServletContext;)V","setName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/FilterRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/FilterRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/AbstractFilterRegistrationBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/servlet/Filter;[Lorg/springframework/boot/web/servlet/ServletRegistrationBean;)V","getFilter()Ljavax/servlet/Filter;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/RegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/RegistrationBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/web/servlet/ServletContextInitializer;","Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","getOrder()I","isEnabled()Z","onStartup(Ljavax/servlet/ServletContext;)V","setOrder(I)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans$1.class",
    "super": "Lorg/springframework/core/annotation/AnnotationAwareOrderComparator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans;)V","getOrder(Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$FilterRegistrationBeanAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans$FilterRegistrationBeanAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$1;)V","createRegistrationBean(Ljava/lang/String;Ljava/lang/Object;I)Lorg/springframework/boot/web/servlet/RegistrationBean;","createRegistrationBean(Ljava/lang/String;Ljavax/servlet/Filter;I)Lorg/springframework/boot/web/servlet/RegistrationBean;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$ServletListenerRegistrationBeanAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans$ServletListenerRegistrationBeanAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$1;)V","createRegistrationBean(Ljava/lang/String;Ljava/lang/Object;I)Lorg/springframework/boot/web/servlet/RegistrationBean;","createRegistrationBean(Ljava/lang/String;Ljava/util/EventListener;I)Lorg/springframework/boot/web/servlet/RegistrationBean;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$ServletRegistrationBeanAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans$ServletRegistrationBeanAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/servlet/MultipartConfigElement;)V","createRegistrationBean(Ljava/lang/String;Ljava/lang/Object;I)Lorg/springframework/boot/web/servlet/RegistrationBean;","createRegistrationBean(Ljava/lang/String;Ljavax/servlet/Servlet;I)Lorg/springframework/boot/web/servlet/RegistrationBean;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletContextInitializerBeans.class",
    "super": "Ljava/util/AbstractCollection;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/ListableBeanFactory;[Ljava/lang/Class;)V","addAdaptableBeans(Lorg/springframework/beans/factory/ListableBeanFactory;)V","addAsRegistrationBean(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;)V","addAsRegistrationBean(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;Lorg/springframework/boot/web/servlet/ServletContextInitializerBeans$RegistrationBeanAdapter;)V","addServletContextInitializerBean(Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/boot/web/servlet/ServletContextInitializer;Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Object;)V","addServletContextInitializerBean(Ljava/lang/String;Lorg/springframework/boot/web/servlet/ServletContextInitializer;Lorg/springframework/beans/factory/ListableBeanFactory;)V","addServletContextInitializerBeans(Lorg/springframework/beans/factory/ListableBeanFactory;)V","getMultipartConfig(Lorg/springframework/beans/factory/ListableBeanFactory;)Ljavax/servlet/MultipartConfigElement;","getOrder(Ljava/lang/Object;)I","getOrderedBeansOfType(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/List;","getOrderedBeansOfType(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;Ljava/util/Set;)Ljava/util/List;","getResourceDescription(Ljava/lang/String;Lorg/springframework/beans/factory/ListableBeanFactory;)Ljava/lang/String;","iterator()Ljava/util/Iterator;","lambda$getOrderedBeansOfType$1(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I","lambda$new$0(Ljava/util/List;)Ljava/util/stream/Stream;","logMappings(Ljava/lang/String;Lorg/springframework/util/MultiValueMap;Ljava/lang/Class;Ljava/lang/Class;)V","logMappings(Lorg/springframework/util/MultiValueMap;)V","size()I"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletListenerRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletListenerRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/RegistrationBean;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/util/EventListener;)V","getDescription()Ljava/lang/String;","getListener()Ljava/util/EventListener;","getSupportedTypes()Ljava/util/Set;","isSupportedType(Ljava/util/EventListener;)Z","register(Ljava/lang/String;Ljavax/servlet/ServletContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/ServletRegistrationBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/ServletRegistrationBean.class",
    "super": "Lorg/springframework/boot/web/servlet/DynamicRegistrationBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljavax/servlet/Servlet;Z[Ljava/lang/String;)V","<init>(Ljavax/servlet/Servlet;[Ljava/lang/String;)V","addRegistration(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/Registration$Dynamic;","addRegistration(Ljava/lang/String;Ljavax/servlet/ServletContext;)Ljavax/servlet/ServletRegistration$Dynamic;","configure(Ljavax/servlet/Registration$Dynamic;)V","configure(Ljavax/servlet/ServletRegistration$Dynamic;)V","getDescription()Ljava/lang/String;","getServlet()Ljavax/servlet/Servlet;","getServletName()Ljava/lang/String;","getUrlMappings()Ljava/util/Collection;","setMultipartConfig(Ljavax/servlet/MultipartConfigElement;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContext.class",
    "super": "Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;",
    "interfaces": ["Lorg/springframework/context/annotation/AnnotationConfigRegistry;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","prepareRefresh()V","setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext$ExistingWebApplicationScopes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext$ExistingWebApplicationScopes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","lambda$restore$0(Ljava/lang/String;Lorg/springframework/beans/factory/config/Scope;)V","restore()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.class",
    "super": "Lorg/springframework/web/context/support/GenericWebApplicationContext;",
    "interfaces": ["Lorg/springframework/boot/web/context/ConfigurableWebServerApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000()Lorg/apache/commons/logging/Log;","createWebServer()V","doClose()V","getResourceByPath(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getSelfInitializer()Lorg/springframework/boot/web/servlet/ServletContextInitializer;","getServletConfig()Ljavax/servlet/ServletConfig;","getServletContextInitializerBeans()Ljava/util/Collection;","getWebServerFactory()Lorg/springframework/boot/web/servlet/server/ServletWebServerFactory;","onRefresh()V","postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","prepareWebApplicationContext(Ljavax/servlet/ServletContext;)V","refresh()V","registerApplicationScope(Ljavax/servlet/ServletContext;)V","registerWebApplicationScopes()V","selfInitialize(Ljavax/servlet/ServletContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/ServletWebServerInitializedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/ServletWebServerInitializedEvent.class",
    "super": "Lorg/springframework/boot/web/context/WebServerInitializedEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/server/WebServer;Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/WebApplicationContextServletContextAwareProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/WebApplicationContextServletContextAwareProcessor.class",
    "super": "Lorg/springframework/web/context/support/ServletContextAwareProcessor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/web/context/ConfigurableWebApplicationContext;)V","getServletConfig()Ljavax/servlet/ServletConfig;","getServletContext()Ljavax/servlet/ServletContext;"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/WebServerGracefulShutdownLifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/WebServerGracefulShutdownLifecycle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/SmartLifecycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/server/WebServer;)V","isRunning()Z","start()V","stop(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/context/WebServerStartStopLifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/context/WebServerStartStopLifecycle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/SmartLifecycle;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/boot/web/servlet/context/ServletWebServerApplicationContext;Lorg/springframework/boot/web/server/WebServer;)V","getPhase()I","isRunning()Z","start()V","stop()V"]
  }
,
  {
    "className": "Lorg/springframework/boot/web/servlet/server/ServletWebServerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-boot-2.4.0.jar!/org/springframework/boot/web/servlet/server/ServletWebServerFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Predicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)V","evaluate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/internal/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/internal/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)V","apply(Ljava/lang/Object;)Ljava/lang/Object;","apply(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","access$000(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/util/Set;","get(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;","getClassLoader()Ljava/lang/ClassLoader;","getUniqueNamePredicate()Lorg/springframework/cglib/core/Predicate;","reserveName(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator$Source;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator$Source.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AbstractClassGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AbstractClassGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ClassGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.ThreadLocal.nextHashCode",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/cglib/core/AbstractClassGenerator$Source;)V","access$100(Lorg/springframework/cglib/core/AbstractClassGenerator;)Ljava/lang/Object;","create(Ljava/lang/Object;)Ljava/lang/Object;","generate(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/lang/Class;","generateClassName(Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;","getClassLoader()Ljava/lang/ClassLoader;","getClassName()Ljava/lang/String;","getUseCache()Z","setClassLoader(Ljava/lang/ClassLoader;)V","setClassName(Ljava/lang/String;)V","setContextClass(Ljava/lang/Class;)V","setNamePrefix(Ljava/lang/String;)V","setNamingPolicy(Lorg/springframework/cglib/core/NamingPolicy;)V","setStrategy(Lorg/springframework/cglib/core/GeneratorStrategy;)V","setUseCache(Z)V","unwrapCachedValue(Ljava/lang/Object;)Ljava/lang/Object;","wrapCachedClass(Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/AsmApi;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/AsmApi.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["value()I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Block;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Block.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;)V","end()V","getEnd()Lorg/springframework/asm/Label;","getStart()Lorg/springframework/asm/Label;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassEmitter$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassEmitter$1.class",
    "super": "Lorg/springframework/cglib/core/ClassInfo;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;I)V","getModifiers()I","getSuperType()Lorg/springframework/asm/Type;","getType()Lorg/springframework/asm/Type;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassEmitter$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassEmitter$2.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/ClassEmitter;ILorg/springframework/asm/MethodVisitor;)V","visitInsn(I)V","visitMaxs(II)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassEmitter$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassEmitter$3.class",
    "super": "Lorg/springframework/cglib/core/CodeEmitter;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/asm/MethodVisitor;ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V","isStaticHook()Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassEmitter$FieldInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassEmitter$FieldInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassEmitter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassEmitter.class",
    "super": "Lorg/springframework/cglib/transform/ClassTransformer;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/ClassVisitor;)V","begin_class(IILjava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;Ljava/lang/String;)V","begin_method(ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/CodeEmitter;","begin_static()Lorg/springframework/cglib/core/CodeEmitter;","declare_field(ILjava/lang/String;Lorg/springframework/asm/Type;Ljava/lang/Object;)V","end_class()V","getAccess()I","getClassInfo()Lorg/springframework/cglib/core/ClassInfo;","getClassType()Lorg/springframework/asm/Type;","getFieldInfo(Ljava/lang/String;)Lorg/springframework/cglib/core/ClassEmitter$FieldInfo;","getNextHook()I","getStaticHook()Lorg/springframework/cglib/core/CodeEmitter;","getSuperType()Lorg/springframework/asm/Type;","init()V","isFieldDeclared(Ljava/lang/String;)Z","setTarget(Lorg/springframework/asm/ClassVisitor;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassGenerator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassLoaderAwareGeneratorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassLoaderAwareGeneratorStrategy.class",
    "super": "Lorg/springframework/cglib/core/DefaultGeneratorStrategy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","generate(Lorg/springframework/cglib/core/ClassGenerator;)[B"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassNameReader$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassNameReader$1.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILorg/springframework/asm/ClassVisitor;Ljava/util/List;)V","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassNameReader$EarlyExitException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassNameReader$EarlyExitException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/cglib/core/ClassNameReader$1;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ClassNameReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ClassNameReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Throwable.UNASSIGNED_STACK",
    "invokedMethods": ["<clinit>()V","access$100()Lorg/springframework/cglib/core/ClassNameReader$EarlyExitException;","getClassInfo(Lorg/springframework/asm/ClassReader;)[Ljava/lang/String;","getClassName(Lorg/springframework/asm/ClassReader;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/CodeEmitter$State;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/CodeEmitter$State.class",
    "super": "Lorg/springframework/cglib/core/MethodInfo;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/ClassInfo;ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V","getClassInfo()Lorg/springframework/cglib/core/ClassInfo;","getExceptionTypes()[Lorg/springframework/asm/Type;","getModifiers()I","getSignature()Lorg/springframework/cglib/core/Signature;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/CodeEmitter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/CodeEmitter.class",
    "super": "Lorg/springframework/cglib/core/LocalVariablesSorter;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/asm/MethodVisitor;ILorg/springframework/cglib/core/Signature;[Lorg/springframework/asm/Type;)V","aaload()V","aaload(I)V","aastore()V","aconst_null()V","array_load(Lorg/springframework/asm/Type;)V","arraylength()V","athrow()V","begin_block()Lorg/springframework/cglib/core/Block;","box(Lorg/springframework/asm/Type;)V","cast_numeric(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V","catch_exception(Lorg/springframework/cglib/core/Block;Lorg/springframework/asm/Type;)V","checkcast(Lorg/springframework/asm/Type;)V","checkcast_this()V","create_arg_array()V","dup()V","dup2()V","dup2_x1()V","dup2_x2()V","dup_x1()V","dup_x2()V","emit_field(ILorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V","emit_invoke(ILorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;Z)V","emit_type(ILorg/springframework/asm/Type;)V","end_method()V","getClassEmitter()Lorg/springframework/cglib/core/ClassEmitter;","getReturnType()Lorg/springframework/asm/Type;","getfield(Ljava/lang/String;)V","getstatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V","goTo(Lorg/springframework/asm/Label;)V","if_cmp(Lorg/springframework/asm/Type;ILorg/springframework/asm/Label;)V","if_icmp(ILorg/springframework/asm/Label;)V","if_jump(ILorg/springframework/asm/Label;)V","ifnonnull(Lorg/springframework/asm/Label;)V","ifnull(Lorg/springframework/asm/Label;)V","iinc(Lorg/springframework/cglib/core/Local;I)V","instance_of(Lorg/springframework/asm/Type;)V","instance_of_this()V","invoke(Lorg/springframework/cglib/core/MethodInfo;)V","invoke(Lorg/springframework/cglib/core/MethodInfo;Lorg/springframework/asm/Type;)V","invoke_constructor(Lorg/springframework/asm/Type;)V","invoke_constructor(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V","invoke_constructor_this(Lorg/springframework/cglib/core/Signature;)V","invoke_interface(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V","invoke_static(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V","invoke_static(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;Z)V","invoke_static_this(Lorg/springframework/cglib/core/Signature;)V","invoke_virtual(Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/Signature;)V","invoke_virtual_this(Lorg/springframework/cglib/core/Signature;)V","isSorted([I)Z","isStaticHook()Z","load_arg(I)V","load_args()V","load_args(II)V","load_local(Lorg/springframework/asm/Type;I)V","load_local(Lorg/springframework/cglib/core/Local;)V","load_this()V","make_label()Lorg/springframework/asm/Label;","make_local()Lorg/springframework/cglib/core/Local;","make_local(Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Local;","mark()Lorg/springframework/asm/Label;","mark(Lorg/springframework/asm/Label;)V","math(ILorg/springframework/asm/Type;)V","new_instance(Lorg/springframework/asm/Type;)V","new_instance_this()V","newarray()V","newarray(Lorg/springframework/asm/Type;)V","pop()V","pop2()V","process_switch([ILorg/springframework/cglib/core/ProcessSwitchCallback;)V","process_switch([ILorg/springframework/cglib/core/ProcessSwitchCallback;Z)V","push(D)V","push(F)V","push(I)V","push(J)V","push(Ljava/lang/String;)V","putfield(Ljava/lang/String;)V","putstatic(Lorg/springframework/asm/Type;Ljava/lang/String;Lorg/springframework/asm/Type;)V","return_value()V","skipArgs(I)I","store_local(Lorg/springframework/asm/Type;I)V","store_local(Lorg/springframework/cglib/core/Local;)V","super_invoke()V","super_invoke(Lorg/springframework/cglib/core/Signature;)V","super_invoke_constructor()V","super_invoke_constructor(Lorg/springframework/cglib/core/Signature;)V","swap()V","swap(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V","throw_exception(Lorg/springframework/asm/Type;Ljava/lang/String;)V","unbox(Lorg/springframework/asm/Type;)V","unbox_or_zero(Lorg/springframework/asm/Type;)V","visitMaxs(II)V","zero_or_null(Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/CodeGenerationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/CodeGenerationException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V","getCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/CollectionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/CollectionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["bucket(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/Map;","filter(Ljava/util/Collection;Lorg/springframework/cglib/core/Predicate;)Ljava/util/Collection;","getIndexMap(Ljava/util/List;)Ljava/util/Map;","reverse(Ljava/util/Map;Ljava/util/Map;)V","transform(Ljava/util/Collection;Lorg/springframework/cglib/core/Transformer;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Constants;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Constants.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/asm/Opcodes;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Customizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Customizer.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/core/KeyFactoryCustomizer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/DebuggingClassWriter$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/DebuggingClassWriter$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/DebuggingClassWriter;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/DebuggingClassWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/DebuggingClassWriter.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(I)V","access$001(Lorg/springframework/cglib/core/DebuggingClassWriter;)Lorg/springframework/asm/ClassVisitor;","access$100()Ljava/lang/String;","access$200(Lorg/springframework/cglib/core/DebuggingClassWriter;)Ljava/lang/String;","access$300()Ljava/lang/reflect/Constructor;","toByteArray()[B","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/DefaultGeneratorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/DefaultGeneratorStrategy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/GeneratorStrategy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","generate(Lorg/springframework/cglib/core/ClassGenerator;)[B","getClassVisitor()Lorg/springframework/cglib/core/DebuggingClassWriter;","transform(Lorg/springframework/cglib/core/ClassGenerator;)Lorg/springframework/cglib/core/ClassGenerator;","transform([B)[B"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/DefaultNamingPolicy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/DefaultNamingPolicy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/NamingPolicy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","equals(Ljava/lang/Object;)Z","getClassName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;","getTag()Ljava/lang/String;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/DuplicatesPredicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/DuplicatesPredicate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Predicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","evaluate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$10;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$10.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","getParameterTypes(Lorg/springframework/cglib/core/MethodInfo;)[Lorg/springframework/asm/Type;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$11;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$11.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$12;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$12.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ObjectSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/Map;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","processCase(Ljava/lang/Object;Lorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$13;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$13.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;)V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$14;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$14.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$15;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$15.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;I)V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$16;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$16.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ObjectSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/Map;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/util/BitSet;)V","processCase(Ljava/lang/Object;Lorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$4;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;IILorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$5;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$6;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$6.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;ZLorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$7;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$7.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessArrayCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;ILorg/springframework/cglib/core/internal/CustomizerRegistry;)V","processElement(Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$8;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$8.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessArrayCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V","processElement(Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$9;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$9.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessArrayCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V","processElement(Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$ArrayDelimiters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","access$400(Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;)Ljava/lang/String;","access$600(Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;)Ljava/lang/String;","access$700(Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils$ParameterTyper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/EmitUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/EmitUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","access$000(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V","access$100()Lorg/springframework/cglib/core/Signature;","access$200(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","access$300(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","access$500()Lorg/springframework/cglib/core/Signature;","access$800(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","access$900(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/util/BitSet;)V","append_string(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V","append_string_helper(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/EmitUtils$ArrayDelimiters;Lorg/springframework/cglib/core/internal/CustomizerRegistry;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","begin_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/CodeEmitter;","begin_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;I)Lorg/springframework/cglib/core/CodeEmitter;","constructor_switch(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V","factory_method(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/Signature;)V","getSwitchKeys(Ljava/util/Map;)[I","hash_array(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/internal/CustomizerRegistry;)V","hash_code(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;ILorg/springframework/cglib/core/internal/CustomizerRegistry;)V","hash_long(Lorg/springframework/cglib/core/CodeEmitter;)V","hash_object(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V","hash_primitive(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V","load_class(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V","load_class_helper(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V","load_class_this(Lorg/springframework/cglib/core/CodeEmitter;)V","load_method(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V","member_helper_size(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","member_helper_type(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/cglib/core/EmitUtils$ParameterTyper;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;Ljava/util/BitSet;)V","member_switch_helper(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Z)V","not_equals(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;)V","not_equals_helper(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/asm/Label;Lorg/springframework/cglib/core/internal/CustomizerRegistry;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","null_constructor(Lorg/springframework/cglib/core/ClassEmitter;)V","nullcmp(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;)V","process_array(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","process_arrays(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;Lorg/springframework/cglib/core/ProcessArrayCallback;)V","push_array(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/Object;)V","push_object(Lorg/springframework/cglib/core/CodeEmitter;Ljava/lang/Object;)V","remapComponentType(Ljava/lang/Class;)Ljava/lang/Class;","shrinkStringBuffer(Lorg/springframework/cglib/core/CodeEmitter;I)V","stringSwitchHelper(Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/List;Lorg/springframework/cglib/core/ObjectSwitchCallback;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V","string_switch(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/String;ILorg/springframework/cglib/core/ObjectSwitchCallback;)V","string_switch_hash(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/String;Lorg/springframework/cglib/core/ObjectSwitchCallback;Z)V","string_switch_trie(Lorg/springframework/cglib/core/CodeEmitter;[Ljava/lang/String;Lorg/springframework/cglib/core/ObjectSwitchCallback;)V","wrap_undeclared_throwable(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/Block;[Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/FieldTypeCustomizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/FieldTypeCustomizer.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/core/KeyFactoryCustomizer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/GeneratorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/GeneratorStrategy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/HashCodeCustomizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/HashCodeCustomizer.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/core/KeyFactoryCustomizer;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Customizer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customize(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/FieldTypeCustomizer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customize(Lorg/springframework/cglib/core/CodeEmitter;ILorg/springframework/asm/Type;)V","getOutType(ILorg/springframework/asm/Type;)Lorg/springframework/asm/Type;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/HashCodeCustomizer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customize(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory$4;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Customizer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customize(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory$Generator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory$Generator.class",
    "super": "Lorg/springframework/cglib/core/AbstractClassGenerator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","addCustomizer(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V","create()Lorg/springframework/cglib/core/KeyFactory;","firstInstance(Ljava/lang/Class;)Ljava/lang/Object;","generateClass(Lorg/springframework/asm/ClassVisitor;)V","getCustomizers(Ljava/lang/Class;)Ljava/util/List;","getDefaultClassLoader()Ljava/lang/ClassLoader;","getFieldName(I)Ljava/lang/String;","getProtectionDomain()Ljava/security/ProtectionDomain;","nextInstance(Ljava/lang/Object;)Ljava/lang/Object;","setInterface(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","access$000()Lorg/springframework/cglib/core/Signature;","access$100()Lorg/springframework/cglib/core/Signature;","access$200()Lorg/springframework/cglib/core/Signature;","access$300()Lorg/springframework/asm/Type;","access$400()Lorg/springframework/cglib/core/Signature;","access$500()[I","access$600()Lorg/springframework/cglib/core/Signature;","access$700()Lorg/springframework/cglib/core/Signature;","access$800()Lorg/springframework/cglib/core/Signature;","create(Ljava/lang/Class;)Lorg/springframework/cglib/core/KeyFactory;","create(Ljava/lang/Class;Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/KeyFactory;","create(Ljava/lang/Class;Lorg/springframework/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/springframework/cglib/core/KeyFactory;","create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/springframework/cglib/core/Customizer;)Lorg/springframework/cglib/core/KeyFactory;","create(Ljava/lang/ClassLoader;Ljava/lang/Class;Lorg/springframework/cglib/core/KeyFactoryCustomizer;Ljava/util/List;)Lorg/springframework/cglib/core/KeyFactory;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/KeyFactoryCustomizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/KeyFactoryCustomizer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Local;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Local.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILorg/springframework/asm/Type;)V","getIndex()I","getType()Lorg/springframework/asm/Type;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/LocalVariablesSorter$State;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/LocalVariablesSorter$State.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/cglib/core/LocalVariablesSorter$1;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/LocalVariablesSorter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/LocalVariablesSorter.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Lorg/springframework/asm/MethodVisitor;)V","newLocal(I)I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/MethodInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/MethodInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/MethodInfoTransformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/MethodInfoTransformer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getInstance()Lorg/springframework/cglib/core/MethodInfoTransformer;","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/MethodWrapper$MethodWrapperKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/MethodWrapper$MethodWrapperKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/MethodWrapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/MethodWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.KeyFactory",
    "invokedMethods": ["<clinit>()V","create(Ljava/lang/reflect/Method;)Ljava/lang/Object;","createSet(Ljava/util/Collection;)Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/NamingPolicy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/NamingPolicy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ObjectSwitchCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ObjectSwitchCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Predicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Predicate.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ProcessArrayCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ProcessArrayCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ProcessSwitchCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ProcessSwitchCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$4;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$5;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$6;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$6.class",
    "super": "Lorg/springframework/cglib/core/MethodInfo;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Member;ILorg/springframework/cglib/core/Signature;)V","getClassInfo()Lorg/springframework/cglib/core/ClassInfo;","getExceptionTypes()[Lorg/springframework/asm/Type;","getModifiers()I","getSignature()Lorg/springframework/cglib/core/Signature;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils$7;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils$7.class",
    "super": "Lorg/springframework/cglib/core/ClassInfo;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;Ljava/lang/Class;)V","getModifiers()I","getType()Lorg/springframework/asm/Type;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/ReflectUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/ReflectUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","access$000()Ljava/util/List;","addAllMethods(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;","defineClass(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;Ljava/lang/Class;)Ljava/lang/Class;","findInterfaceMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;","findNewInstance(Ljava/lang/Class;)Ljava/lang/reflect/Method;","findPackageProtected([Ljava/lang/Class;)I","getClassInfo(Ljava/lang/Class;)Lorg/springframework/cglib/core/ClassInfo;","getConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getExceptionTypes(Ljava/lang/reflect/Member;)[Lorg/springframework/asm/Type;","getMethodInfo(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/MethodInfo;","getMethodInfo(Ljava/lang/reflect/Member;I)Lorg/springframework/cglib/core/MethodInfo;","getNames([Ljava/lang/Class;)[Ljava/lang/String;","getProtectionDomain(Ljava/lang/Class;)Ljava/security/ProtectionDomain;","getSignature(Ljava/lang/reflect/Member;)Lorg/springframework/cglib/core/Signature;","newInstance(Ljava/lang/Class;)Ljava/lang/Object;","newInstance(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object;","newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/RejectModifierPredicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/RejectModifierPredicate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Predicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","evaluate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Signature;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Signature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Lorg/springframework/asm/Type;[Lorg/springframework/asm/Type;)V","equals(Ljava/lang/Object;)Z","getArgumentTypes()[Lorg/springframework/asm/Type;","getDescriptor()Ljava/lang/String;","getName()Ljava/lang/String;","getReturnType()Lorg/springframework/asm/Type;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/SpringNamingPolicy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/SpringNamingPolicy.class",
    "super": "Lorg/springframework/cglib/core/DefaultNamingPolicy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","getTag()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/Transformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/Transformer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/TypeUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/TypeUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","DCONST(D)I","FCONST(F)I","ICONST(I)I","LCONST(J)I","NEWARRAY(Lorg/springframework/asm/Type;)I","add([Lorg/springframework/asm/Type;Lorg/springframework/asm/Type;)[Lorg/springframework/asm/Type;","emulateClassGetName(Lorg/springframework/asm/Type;)Ljava/lang/String;","escapeType(Ljava/lang/String;)Ljava/lang/String;","getBoxedType(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;","getClassName(Lorg/springframework/asm/Type;)Ljava/lang/String;","getComponentType(Lorg/springframework/asm/Type;)Lorg/springframework/asm/Type;","getPackageName(Ljava/lang/String;)Ljava/lang/String;","getPackageName(Lorg/springframework/asm/Type;)Ljava/lang/String;","getTypes([Ljava/lang/Class;)[Lorg/springframework/asm/Type;","isAbstract(I)Z","isArray(Lorg/springframework/asm/Type;)Z","isBridge(I)Z","isFinal(I)Z","isInterface(I)Z","isPrimitive(Lorg/springframework/asm/Type;)Z","isProtected(I)Z","isPublic(I)Z","isStatic(I)Z","map(Ljava/lang/String;)Ljava/lang/String;","parseConstructor(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;","parseConstructor([Lorg/springframework/asm/Type;)Lorg/springframework/cglib/core/Signature;","parseSignature(Ljava/lang/String;)Lorg/springframework/cglib/core/Signature;","parseType(Ljava/lang/String;)Lorg/springframework/asm/Type;","parseTypes(Ljava/lang/String;II)Ljava/util/List;","toInternalNames([Lorg/springframework/asm/Type;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/VisibilityPredicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/VisibilityPredicate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Predicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Z)V","evaluate(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/WeakCacheKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/WeakCacheKey.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/internal/CustomizerRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/internal/CustomizerRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/Class;)V","add(Lorg/springframework/cglib/core/KeyFactoryCustomizer;)V","get(Ljava/lang/Class;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/internal/Function;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/internal/Function.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/core/internal/LoadingCache$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/internal/LoadingCache$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/internal/Function;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/internal/LoadingCache$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/internal/LoadingCache$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/concurrent/Callable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/core/internal/LoadingCache;Ljava/lang/Object;)V","call()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/core/internal/LoadingCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/core/internal/LoadingCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/cglib/core/internal/Function;Lorg/springframework/cglib/core/internal/Function;)V","createEntry(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","get(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder$1.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder;I)V","visitMethodInsn(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Set;Ljava/util/Map;)V","access$000(Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder;)Lorg/springframework/cglib/core/Signature;","access$002(Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder;Lorg/springframework/cglib/core/Signature;)Lorg/springframework/cglib/core/Signature;","access$100(Lorg/springframework/cglib/proxy/BridgeMethodResolver$BridgedFinder;)Ljava/util/Map;","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/BridgeMethodResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/BridgeMethodResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;Ljava/lang/ClassLoader;)V","resolveAll()Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Callback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Callback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/CallbackFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/CallbackFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/CallbackGenerator$Context;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/CallbackGenerator$Context.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/CallbackGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/CallbackGenerator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/CallbackInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/CallbackInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.cglib.proxy.NoOpGenerator.INSTANCE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;Lorg/springframework/cglib/proxy/CallbackGenerator;)V","determineType(Ljava/lang/Class;Z)Lorg/springframework/asm/Type;","determineType(Lorg/springframework/cglib/proxy/Callback;Z)Lorg/springframework/asm/Type;","determineTypes([Ljava/lang/Class;)[Lorg/springframework/asm/Type;","determineTypes([Ljava/lang/Class;Z)[Lorg/springframework/asm/Type;","determineTypes([Lorg/springframework/cglib/proxy/Callback;)[Lorg/springframework/asm/Type;","determineTypes([Lorg/springframework/cglib/proxy/Callback;Z)[Lorg/springframework/asm/Type;","getGenerator(Lorg/springframework/asm/Type;)Lorg/springframework/cglib/proxy/CallbackGenerator;","getGenerators([Lorg/springframework/asm/Type;)[Lorg/springframework/cglib/proxy/CallbackGenerator;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Dispatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Dispatcher.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/DispatcherGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/DispatcherGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","accept(Ljava/lang/reflect/Method;)I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/Enhancer;Ljava/util/Set;)V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/Enhancer;Lorg/springframework/cglib/core/CodeEmitter;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$4;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ProcessSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/Enhancer;Lorg/springframework/cglib/core/CodeEmitter;)V","processCase(ILorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$5;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$5.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ObjectSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/Enhancer;Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/asm/Type;)V","processCase(Ljava/lang/Object;Lorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$6;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$6.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator$Context;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/Enhancer;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V","beginMethod(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/CodeEmitter;","emitCallback(Lorg/springframework/cglib/core/CodeEmitter;I)V","emitLoadArgsAndInvoke(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;)V","getImplSignature(Lorg/springframework/cglib/core/MethodInfo;)Lorg/springframework/cglib/core/Signature;","getIndex(Lorg/springframework/cglib/core/MethodInfo;)I","getOriginalModifiers(Lorg/springframework/cglib/core/MethodInfo;)I"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$EnhancerFactoryData;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$EnhancerFactoryData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/Class;Z)V","newInstance([Ljava/lang/Class;[Ljava/lang/Object;[Lorg/springframework/cglib/proxy/Callback;)Ljava/lang/Object;","setThreadCallbacks([Lorg/springframework/cglib/proxy/Callback;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer$EnhancerKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer$EnhancerKey.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Enhancer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Enhancer.class",
    "super": "Lorg/springframework/cglib/core/AbstractClassGenerator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;","access$100(I)Ljava/lang/String;","access$200(Lorg/springframework/cglib/proxy/Enhancer;)[Lorg/springframework/asm/Type;","access$300()Lorg/springframework/asm/Type;","access$400(Lorg/springframework/cglib/proxy/Enhancer;Lorg/springframework/cglib/core/CodeEmitter;I)V","access$500(Lorg/springframework/cglib/proxy/Enhancer;Lorg/springframework/cglib/core/Signature;I)Lorg/springframework/cglib/core/Signature;","access$600(Lorg/springframework/cglib/proxy/Enhancer;)Z","createClass()Ljava/lang/Class;","createHelper()Ljava/lang/Object;","createUsingReflection(Ljava/lang/Class;)Ljava/lang/Object;","emitBindCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","emitCommonNewInstance(Lorg/springframework/cglib/core/CodeEmitter;)V","emitConstructors(Lorg/springframework/cglib/core/ClassEmitter;Ljava/util/List;)V","emitCurrentCallback(Lorg/springframework/cglib/core/CodeEmitter;I)V","emitDefaultConstructor(Lorg/springframework/cglib/core/ClassEmitter;)V","emitGetCallback(Lorg/springframework/cglib/core/ClassEmitter;[I)V","emitGetCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","emitMethods(Lorg/springframework/cglib/core/ClassEmitter;Ljava/util/List;Ljava/util/List;)V","emitNewInstanceCallback(Lorg/springframework/cglib/core/ClassEmitter;)V","emitNewInstanceCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","emitNewInstanceMultiarg(Lorg/springframework/cglib/core/ClassEmitter;Ljava/util/List;)V","emitSetCallback(Lorg/springframework/cglib/core/ClassEmitter;[I)V","emitSetCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","emitSetStaticCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","emitSetThreadCallbacks(Lorg/springframework/cglib/core/ClassEmitter;)V","filterConstructors(Ljava/lang/Class;Ljava/util/List;)V","firstInstance(Ljava/lang/Class;)Ljava/lang/Object;","generate(Lorg/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData;)Ljava/lang/Class;","generateClass(Lorg/springframework/asm/ClassVisitor;)V","getCallbackField(I)Ljava/lang/String;","getCallbackKeys()[I","getCallbacksSetter(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;","getDefaultClassLoader()Ljava/lang/ClassLoader;","getMethods(Ljava/lang/Class;[Ljava/lang/Class;Ljava/util/List;Ljava/util/List;Ljava/util/Set;)V","getProtectionDomain()Ljava/security/ProtectionDomain;","getThisType(Lorg/springframework/cglib/core/CodeEmitter;)Lorg/springframework/asm/Type;","nextInstance(Ljava/lang/Object;)Ljava/lang/Object;","preValidate()V","rename(Lorg/springframework/cglib/core/Signature;I)Lorg/springframework/cglib/core/Signature;","setCallbackFilter(Lorg/springframework/cglib/proxy/CallbackFilter;)V","setCallbackTypes([Ljava/lang/Class;)V","setCallbacksHelper(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;Ljava/lang/String;)V","setInterfaces([Ljava/lang/Class;)V","setSuperclass(Ljava/lang/Class;)V","setThreadCallbacks(Ljava/lang/Class;[Lorg/springframework/cglib/proxy/Callback;)V","unwrapCachedValue(Ljava/lang/Object;)Ljava/lang/Object;","validate()V","wrapCachedClass(Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/Factory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/Factory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/FixedValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/FixedValue.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/FixedValueGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/FixedValueGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>()V","generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/InvocationHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/InvocationHandler.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/InvocationHandlerGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/InvocationHandlerGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>()V","generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/LazyLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/LazyLoader.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/LazyLoaderGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/LazyLoaderGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>()V","generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","loadMethod(I)Lorg/springframework/cglib/core/Signature;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/MethodInterceptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/MethodInterceptor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/MethodInterceptorGenerator$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/MethodInterceptorGenerator$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/Transformer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","transform(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/MethodInterceptorGenerator$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/MethodInterceptorGenerator$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/core/ObjectSwitchCallback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/cglib/proxy/MethodInterceptorGenerator;Lorg/springframework/cglib/core/CodeEmitter;Ljava/util/Map;)V","processCase(Ljava/lang/Object;Lorg/springframework/asm/Label;)V","processDefault()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/MethodInterceptorGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/MethodInterceptorGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.cglib.core.TypeUtils",
    "invokedMethods": ["<clinit>()V","<init>()V","generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateFindProxy(Lorg/springframework/cglib/core/ClassEmitter;Ljava/util/Map;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","getMethodField(Lorg/springframework/cglib/core/Signature;)Ljava/lang/String;","getMethodProxyField(Lorg/springframework/cglib/core/Signature;)Ljava/lang/String;","superHelper(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/core/MethodInfo;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/NoOp$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/NoOp$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/NoOp;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/NoOp;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/NoOp.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/NoOpGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/NoOpGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/cglib/proxy/CallbackGenerator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["generate(Lorg/springframework/cglib/core/ClassEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V","generateStatic(Lorg/springframework/cglib/core/CodeEmitter;Lorg/springframework/cglib/proxy/CallbackGenerator$Context;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/cglib/proxy/ProxyRefDispatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/proxy/ProxyRefDispatcher.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/cglib/proxy/Callback;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/cglib/transform/ClassTransformer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/cglib/transform/ClassTransformer.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/EnvironmentCapable;","Lorg/springframework/beans/factory/ListableBeanFactory;","Lorg/springframework/beans/factory/HierarchicalBeanFactory;","Lorg/springframework/context/MessageSource;","Lorg/springframework/context/ApplicationEventPublisher;","Lorg/springframework/core/io/support/ResourcePatternResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationContextAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationContextAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationContextException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationContextException.class",
    "super": "Lorg/springframework/beans/FatalBeanException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationContextInitializer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationContextInitializer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationEvent.class",
    "super": "Ljava/util/EventObject;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationEventPublisher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationEventPublisher.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationEventPublisherAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationEventPublisherAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ApplicationStartupAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ApplicationStartupAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ConfigurableApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ConfigurableApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationContext;","Lorg/springframework/context/Lifecycle;","Ljava/io/Closeable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/EmbeddedValueResolverAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/EmbeddedValueResolverAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/EnvironmentAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/EnvironmentAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/HierarchicalMessageSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/HierarchicalMessageSource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/MessageSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/Lifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/Lifecycle.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/LifecycleProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/LifecycleProcessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/Lifecycle;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/MessageSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/MessageSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/MessageSourceAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/MessageSourceAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/PayloadApplicationEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/PayloadApplicationEvent.class",
    "super": "Lorg/springframework/context/ApplicationEvent;",
    "interfaces": ["Lorg/springframework/core/ResolvableTypeProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","getPayload()Ljava/lang/Object;","getResolvableType()Lorg/springframework/core/ResolvableType;"]
  }
,
  {
    "className": "Lorg/springframework/context/Phased;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/Phased.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/ResourceLoaderAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/ResourceLoaderAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/SmartLifecycle;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/SmartLifecycle.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/Lifecycle;","Lorg/springframework/context/Phased;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getPhase()I","isAutoStartup()Z","stop(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotatedBeanDefinitionReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotatedBeanDefinitionReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/core/env/Environment;)V","doRegisterBean(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/util/function/Supplier;[Lorg/springframework/beans/factory/config/BeanDefinitionCustomizer;)V","getOrCreateEnvironment(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/core/env/Environment;","register([Ljava/lang/Class;)V","registerBean(Ljava/lang/Class;)V","setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V","setEnvironment(Lorg/springframework/core/env/Environment;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotationBeanNameGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotationBeanNameGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/BeanNameGenerator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["buildDefaultBeanName(Lorg/springframework/beans/factory/config/BeanDefinition;)Ljava/lang/String;","buildDefaultBeanName(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;","determineBeanNameFromAnnotation(Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;)Ljava/lang/String;","generateBeanName(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;","isStereotypeWithNameValue(Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;)Z","lambda$determineBeanNameFromAnnotation$0(Lorg/springframework/core/type/AnnotationMetadata;Ljava/lang/String;)Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotationConfigApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotationConfigApplicationContext.class",
    "super": "Lorg/springframework/context/support/GenericApplicationContext;",
    "interfaces": ["Lorg/springframework/context/annotation/AnnotationConfigRegistry;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotationConfigRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotationConfigRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotationConfigUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotationConfigUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","applyScopedProxyMode(Lorg/springframework/context/annotation/ScopeMetadata;Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;","attributesFor(Lorg/springframework/core/type/AnnotatedTypeMetadata;Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationAttributes;","attributesFor(Lorg/springframework/core/type/AnnotatedTypeMetadata;Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationAttributes;","processCommonDefinitionAnnotations(Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;)V","processCommonDefinitionAnnotations(Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;Lorg/springframework/core/type/AnnotatedTypeMetadata;)V","registerAnnotationConfigProcessors(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","registerAnnotationConfigProcessors(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/Object;)Ljava/util/Set;","registerPostProcessor(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;","unwrapDefaultListableBeanFactory(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/AnnotationScopeMetadataResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/AnnotationScopeMetadataResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/annotation/ScopeMetadataResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","resolveScopeMetadata(Lorg/springframework/beans/factory/config/BeanDefinition;)Lorg/springframework/context/annotation/ScopeMetadata;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Bean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Bean.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ClassPathBeanDefinitionScanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ClassPathBeanDefinitionScanner.class",
    "super": "Lorg/springframework/context/annotation/ClassPathScanningCandidateComponentProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Z)V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;ZLorg/springframework/core/env/Environment;)V","<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;ZLorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;)V","checkCandidate(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)Z","doScan([Ljava/lang/String;)Ljava/util/Set;","getOrCreateEnvironment(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/core/env/Environment;","getRegistry()Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;","isCompatible(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/config/BeanDefinition;)Z","postProcessBeanDefinition(Lorg/springframework/beans/factory/support/AbstractBeanDefinition;Ljava/lang/String;)V","registerBeanDefinition(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)V","scan([Ljava/lang/String;)I","setBeanNameGenerator(Lorg/springframework/beans/factory/support/BeanNameGenerator;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ClassPathScanningCandidateComponentProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/env/EnvironmentCapable;","Lorg/springframework/context/ResourceLoaderAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addCandidateComponentsFromIndex(Lorg/springframework/context/index/CandidateComponentsIndex;Ljava/lang/String;)Ljava/util/Set;","addExcludeFilter(Lorg/springframework/core/type/filter/TypeFilter;)V","clearCache()V","extractStereotype(Lorg/springframework/core/type/filter/TypeFilter;)Ljava/lang/String;","findCandidateComponents(Ljava/lang/String;)Ljava/util/Set;","getEnvironment()Lorg/springframework/core/env/Environment;","getMetadataReaderFactory()Lorg/springframework/core/type/classreading/MetadataReaderFactory;","getResourcePatternResolver()Lorg/springframework/core/io/support/ResourcePatternResolver;","indexSupportsIncludeFilter(Lorg/springframework/core/type/filter/TypeFilter;)Z","indexSupportsIncludeFilters()Z","isCandidateComponent(Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;)Z","isCandidateComponent(Lorg/springframework/core/type/classreading/MetadataReader;)Z","isConditionMatch(Lorg/springframework/core/type/classreading/MetadataReader;)Z","registerDefaultFilters()V","resolveBasePackage(Ljava/lang/String;)Ljava/lang/String;","scanCandidateComponents(Ljava/lang/String;)Ljava/util/Set;","setEnvironment(Lorg/springframework/core/env/Environment;)V","setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/CommonAnnotationBeanPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.class",
    "super": "Lorg/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor;",
    "interfaces": ["Lorg/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor;","Lorg/springframework/beans/factory/BeanFactoryAware;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","loadAnnotationType(Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ComponentScan;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ComponentScan.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Condition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Condition.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConditionContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConditionContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConditionEvaluator$ConditionContextImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConditionEvaluator$ConditionContextImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/annotation/ConditionContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;)V","deduceBeanFactory(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;","deduceClassLoader(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)Ljava/lang/ClassLoader;","deduceEnvironment(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/core/env/Environment;","deduceResourceLoader(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Lorg/springframework/core/io/ResourceLoader;","getClassLoader()Ljava/lang/ClassLoader;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConditionEvaluator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConditionEvaluator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/core/env/Environment;Lorg/springframework/core/io/ResourceLoader;)V","getCondition(Ljava/lang/String;Ljava/lang/ClassLoader;)Lorg/springframework/context/annotation/Condition;","getConditionClasses(Lorg/springframework/core/type/AnnotatedTypeMetadata;)Ljava/util/List;","shouldSkip(Lorg/springframework/core/type/AnnotatedTypeMetadata;)Z","shouldSkip(Lorg/springframework/core/type/AnnotatedTypeMetadata;Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Conditional;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Conditional.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConfigurationClassPostProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConfigurationClassPostProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/support/BeanDefinitionRegistryPostProcessor;","Lorg/springframework/core/PriorityOrdered;","Lorg/springframework/context/ResourceLoaderAware;","Lorg/springframework/context/ApplicationStartupAware;","Lorg/springframework/beans/factory/BeanClassLoaderAware;","Lorg/springframework/context/EnvironmentAware;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.context.annotation.FullyQualifiedAnnotationBeanNameGenerator.INSTANCE",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConfigurationClassUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConfigurationClassUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","isConfigurationCandidate(Lorg/springframework/core/type/AnnotationMetadata;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConfigurationCondition$ConfigurationPhase.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConfigurationCondition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConfigurationCondition.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/annotation/Condition;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ConflictingBeanDefinitionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ConflictingBeanDefinitionException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/aop/TargetSource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver;Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;)V","getTarget()Ljava/lang/Object;","getTargetClass()Ljava/lang/Class;","isStatic()Z"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ContextAnnotationAutowireCandidateResolver.class",
    "super": "Lorg/springframework/beans/factory/annotation/QualifierAnnotationAutowireCandidateResolver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","buildLazyResolutionProxy(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;)Ljava/lang/Object;","getLazyResolutionProxyIfNecessary(Lorg/springframework/beans/factory/config/DependencyDescriptor;Ljava/lang/String;)Ljava/lang/Object;","isLazy(Lorg/springframework/beans/factory/config/DependencyDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/DependsOn;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/DependsOn.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Description;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Description.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/FullyQualifiedAnnotationBeanNameGenerator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/FullyQualifiedAnnotationBeanNameGenerator.class",
    "super": "Lorg/springframework/context/annotation/AnnotationBeanNameGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Import;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Import.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ImportResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ImportResource.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Lazy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Lazy.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Primary;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Primary.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Role;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Role.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ScannedGenericBeanDefinition;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ScannedGenericBeanDefinition.class",
    "super": "Lorg/springframework/beans/factory/support/GenericBeanDefinition;",
    "interfaces": ["Lorg/springframework/beans/factory/annotation/AnnotatedBeanDefinition;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/type/classreading/MetadataReader;)V","getMetadata()Lorg/springframework/core/type/AnnotationMetadata;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/Scope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/Scope.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ScopeMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ScopeMetadata.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getScopeName()Ljava/lang/String;","getScopedProxyMode()Lorg/springframework/context/annotation/ScopedProxyMode;","setScopeName(Ljava/lang/String;)V","setScopedProxyMode(Lorg/springframework/context/annotation/ScopedProxyMode;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ScopeMetadataResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ScopeMetadataResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ScopedProxyCreator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ScopedProxyCreator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createScopedProxy(Lorg/springframework/beans/factory/config/BeanDefinitionHolder;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Z)Lorg/springframework/beans/factory/config/BeanDefinitionHolder;"]
  }
,
  {
    "className": "Lorg/springframework/context/annotation/ScopedProxyMode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/ScopedProxyMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/annotation/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/annotation/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/AbstractApplicationEventMulticaster$CachedListenerRetriever;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/AbstractApplicationEventMulticaster$CachedListenerRetriever.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/event/AbstractApplicationEventMulticaster;)V","<init>(Lorg/springframework/context/event/AbstractApplicationEventMulticaster;Lorg/springframework/context/event/AbstractApplicationEventMulticaster$1;)V","getApplicationListeners()Ljava/util/Collection;"]
  }
,
  {
    "className": "Lorg/springframework/context/event/AbstractApplicationEventMulticaster$DefaultListenerRetriever;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/AbstractApplicationEventMulticaster$DefaultListenerRetriever.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/event/AbstractApplicationEventMulticaster;)V","<init>(Lorg/springframework/context/event/AbstractApplicationEventMulticaster;Lorg/springframework/context/event/AbstractApplicationEventMulticaster$1;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/AbstractApplicationEventMulticaster$ListenerCacheKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/AbstractApplicationEventMulticaster$ListenerCacheKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/context/event/AbstractApplicationEventMulticaster$ListenerCacheKey;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/context/event/AbstractApplicationEventMulticaster;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/AbstractApplicationEventMulticaster.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/event/ApplicationEventMulticaster;","Lorg/springframework/beans/factory/BeanClassLoaderAware;","Lorg/springframework/beans/factory/BeanFactoryAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$200(Lorg/springframework/context/event/AbstractApplicationEventMulticaster;)Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;","addApplicationListener(Lorg/springframework/context/ApplicationListener;)V","addApplicationListenerBean(Ljava/lang/String;)V","getApplicationListeners(Lorg/springframework/context/ApplicationEvent;Lorg/springframework/core/ResolvableType;)Ljava/util/Collection;","getBeanFactory()Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;","removeApplicationListener(Lorg/springframework/context/ApplicationListener;)V","removeApplicationListenerBean(Ljava/lang/String;)V","retrieveApplicationListeners(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;Lorg/springframework/context/event/AbstractApplicationEventMulticaster$CachedListenerRetriever;)Ljava/util/Collection;","setBeanClassLoader(Ljava/lang/ClassLoader;)V","setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V","supportsEvent(Ljava/lang/Class;Lorg/springframework/core/ResolvableType;)Z","supportsEvent(Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;Ljava/lang/String;Lorg/springframework/core/ResolvableType;)Z","supportsEvent(Lorg/springframework/context/ApplicationListener;Lorg/springframework/core/ResolvableType;Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/event/ApplicationContextEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ApplicationContextEvent.class",
    "super": "Lorg/springframework/context/ApplicationEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/ApplicationEventMulticaster;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ApplicationEventMulticaster.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/ContextClosedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ContextClosedEvent.class",
    "super": "Lorg/springframework/context/event/ApplicationContextEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/ContextRefreshedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ContextRefreshedEvent.class",
    "super": "Lorg/springframework/context/event/ApplicationContextEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/ContextStartedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ContextStartedEvent.class",
    "super": "Lorg/springframework/context/event/ApplicationContextEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/ContextStoppedEvent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/ContextStoppedEvent.class",
    "super": "Lorg/springframework/context/event/ApplicationContextEvent;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/DefaultEventListenerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/DefaultEventListenerFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/event/EventListenerFactory;","Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/EventListenerFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/EventListenerFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/EventListenerMethodProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/EventListenerMethodProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/SmartInitializingSingleton;","Lorg/springframework/context/ApplicationContextAware;","Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/GenericApplicationListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/GenericApplicationListener.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationListener;","Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/GenericApplicationListenerAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/GenericApplicationListenerAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/event/GenericApplicationListener;","Lorg/springframework/context/event/SmartApplicationListener;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/context/ApplicationListener;)V","getOrder()I","onApplicationEvent(Lorg/springframework/context/ApplicationEvent;)V","resolveDeclaredEventType(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","resolveDeclaredEventType(Lorg/springframework/context/ApplicationListener;)Lorg/springframework/core/ResolvableType;","supportsEventType(Lorg/springframework/core/ResolvableType;)Z","supportsSourceType(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/event/SimpleApplicationEventMulticaster;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/SimpleApplicationEventMulticaster.class",
    "super": "Lorg/springframework/context/event/AbstractApplicationEventMulticaster;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/beans/factory/BeanFactory;)V","doInvokeListener(Lorg/springframework/context/ApplicationListener;Lorg/springframework/context/ApplicationEvent;)V","getErrorHandler()Lorg/springframework/util/ErrorHandler;","getTaskExecutor()Ljava/util/concurrent/Executor;","invokeListener(Lorg/springframework/context/ApplicationListener;Lorg/springframework/context/ApplicationEvent;)V","lambda$multicastEvent$0(Lorg/springframework/context/ApplicationListener;Lorg/springframework/context/ApplicationEvent;)V","matchesClassCastMessage(Ljava/lang/String;Ljava/lang/Class;)Z","multicastEvent(Lorg/springframework/context/ApplicationEvent;)V","multicastEvent(Lorg/springframework/context/ApplicationEvent;Lorg/springframework/core/ResolvableType;)V","resolveDefaultEventType(Lorg/springframework/context/ApplicationEvent;)Lorg/springframework/core/ResolvableType;","setApplicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/event/SmartApplicationListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/SmartApplicationListener.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationListener;","Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/event/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/event/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/expression/BeanExpressionContextAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/BeanExpressionContextAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/PropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","getSpecificTargetClasses()[Ljava/lang/Class;","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/BeanFactoryAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/BeanFactoryAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/PropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","getSpecificTargetClasses()[Ljava/lang/Class;","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/BeanFactoryResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/BeanFactoryResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/BeanResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/BeanFactory;)V","resolve(Lorg/springframework/expression/EvaluationContext;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/EnvironmentAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/EnvironmentAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/PropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","getSpecificTargetClasses()[Ljava/lang/Class;","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/MapAccessor$MapAccessException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/MapAccessor$MapAccessException.class",
    "super": "Lorg/springframework/expression/AccessException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/MapAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/MapAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/CompilablePropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","generateCode(Ljava/lang/String;Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getPropertyType()Ljava/lang/Class;","getSpecificTargetClasses()[Ljava/lang/Class;","isCompilable()Z","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/StandardBeanExpressionResolver$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/StandardBeanExpressionResolver$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/ParserContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/expression/StandardBeanExpressionResolver;)V","getExpressionPrefix()Ljava/lang/String;","getExpressionSuffix()Ljava/lang/String;","isTemplate()Z"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/StandardBeanExpressionResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/StandardBeanExpressionResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanExpressionResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","access$000(Lorg/springframework/context/expression/StandardBeanExpressionResolver;)Ljava/lang/String;","access$100(Lorg/springframework/context/expression/StandardBeanExpressionResolver;)Ljava/lang/String;","customizeEvaluationContext(Lorg/springframework/expression/spel/support/StandardEvaluationContext;)V","evaluate(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanExpressionContext;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/context/expression/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/expression/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/i18n/LocaleContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/i18n/LocaleContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/i18n/LocaleContextHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/i18n/LocaleContextHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.NamedThreadLocal",
    "invokedMethods": ["<clinit>()V","getLocale()Ljava/util/Locale;","getLocale(Lorg/springframework/context/i18n/LocaleContext;)Ljava/util/Locale;","getLocaleContext()Lorg/springframework/context/i18n/LocaleContext;"]
  }
,
  {
    "className": "Lorg/springframework/context/i18n/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/i18n/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/index/CandidateComponentsIndex$Entry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/index/CandidateComponentsIndex$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","access$100(Lorg/springframework/context/index/CandidateComponentsIndex$Entry;)Ljava/lang/String;","match(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/index/CandidateComponentsIndex;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/index/CandidateComponentsIndex.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.AntPathMatcher",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/util/List;)V","access$000()Lorg/springframework/util/AntPathMatcher;","getCandidateTypes(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Set;","lambda$getCandidateTypes$1(Ljava/lang/String;Lorg/springframework/context/index/CandidateComponentsIndex$Entry;)Z","lambda$getCandidateTypes$2(Lorg/springframework/context/index/CandidateComponentsIndex$Entry;)Ljava/lang/String;","lambda$parseIndex$0(Lorg/springframework/util/MultiValueMap;Ljava/lang/Object;Ljava/lang/Object;)V","parseIndex(Ljava/util/List;)Lorg/springframework/util/MultiValueMap;"]
  }
,
  {
    "className": "Lorg/springframework/context/index/CandidateComponentsIndexLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/index/CandidateComponentsIndexLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","doLoadIndex(Ljava/lang/ClassLoader;)Lorg/springframework/context/index/CandidateComponentsIndex;","loadIndex(Ljava/lang/ClassLoader;)Lorg/springframework/context/index/CandidateComponentsIndex;"]
  }
,
  {
    "className": "Lorg/springframework/context/index/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/index/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/support/AbstractApplicationContext$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/AbstractApplicationContext$1.class",
    "super": "Ljava/lang/Thread;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/context/support/AbstractApplicationContext;Ljava/lang/String;)V","run()V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/AbstractApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/AbstractApplicationContext.class",
    "super": "Lorg/springframework/core/io/DefaultResourceLoader;",
    "interfaces": ["Lorg/springframework/context/ConfigurableApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000(Lorg/springframework/context/support/AbstractApplicationContext;)Ljava/lang/Object;","addApplicationListener(Lorg/springframework/context/ApplicationListener;)V","addBeanFactoryPostProcessor(Lorg/springframework/beans/factory/config/BeanFactoryPostProcessor;)V","assertBeanFactoryActive()V","cancelRefresh(Lorg/springframework/beans/BeansException;)V","close()V","containsBean(Ljava/lang/String;)Z","containsBeanDefinition(Ljava/lang/String;)Z","containsLocalBean(Ljava/lang/String;)Z","createEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;","destroyBeans()V","doClose()V","finishBeanFactoryInitialization(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","finishRefresh()V","getApplicationEventMulticaster()Lorg/springframework/context/event/ApplicationEventMulticaster;","getApplicationListeners()Ljava/util/Collection;","getApplicationName()Ljava/lang/String;","getApplicationStartup()Lorg/springframework/core/metrics/ApplicationStartup;","getBean(Ljava/lang/String;)Ljava/lang/Object;","getBean(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getBeanDefinitionCount()I","getBeanFactoryPostProcessors()Ljava/util/List;","getBeanNamesForType(Ljava/lang/Class;ZZ)[Ljava/lang/String;","getBeansOfType(Ljava/lang/Class;)Ljava/util/Map;","getDisplayName()Ljava/lang/String;","getEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;","getEnvironment()Lorg/springframework/core/env/Environment;","getId()Ljava/lang/String;","getInternalParentMessageSource()Lorg/springframework/context/MessageSource;","getLifecycleProcessor()Lorg/springframework/context/LifecycleProcessor;","getParent()Lorg/springframework/context/ApplicationContext;","getResourcePatternResolver()Lorg/springframework/core/io/support/ResourcePatternResolver;","getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","getStartupDate()J","initApplicationEventMulticaster()V","initLifecycleProcessor()V","initMessageSource()V","initPropertySources()V","invokeBeanFactoryPostProcessors(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","isActive()Z","isRunning()Z","lambda$finishBeanFactoryInitialization$0(Ljava/lang/String;)Ljava/lang/String;","obtainFreshBeanFactory()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;","onClose()V","onRefresh()V","postProcessBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","prepareBeanFactory(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","prepareRefresh()V","publishEvent(Ljava/lang/Object;Lorg/springframework/core/ResolvableType;)V","publishEvent(Lorg/springframework/context/ApplicationEvent;)V","refresh()V","registerBeanPostProcessors(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","registerListeners()V","registerShutdownHook()V","resetCommonCaches()V","setApplicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)V","setEnvironment(Lorg/springframework/core/env/ConfigurableEnvironment;)V","start()V","stop()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/context/support/ApplicationContextAwareProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/ApplicationContextAwareProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/ConfigurableApplicationContext;)V","invokeAwareInterfaces(Ljava/lang/Object;)V","postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/context/support/ApplicationListenerDetector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/ApplicationListenerDetector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/DestructionAwareBeanPostProcessor;","Lorg/springframework/beans/factory/support/MergedBeanDefinitionPostProcessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/context/support/AbstractApplicationContext;)V","equals(Ljava/lang/Object;)Z","hashCode()I","postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","postProcessBeforeDestruction(Ljava/lang/Object;Ljava/lang/String;)V","postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","postProcessMergedBeanDefinition(Lorg/springframework/beans/factory/support/RootBeanDefinition;Ljava/lang/Class;Ljava/lang/String;)V","requiresDestruction(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/support/ContextTypeMatchClassLoader$ContextOverridingClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/ContextTypeMatchClassLoader$ContextOverridingClassLoader.class",
    "super": "Lorg/springframework/core/OverridingClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/context/support/ContextTypeMatchClassLoader;Ljava/lang/ClassLoader;)V","isEligibleForOverriding(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/context/support/ContextTypeMatchClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/ContextTypeMatchClassLoader.class",
    "super": "Lorg/springframework/core/DecoratingClassLoader;",
    "interfaces": ["Lorg/springframework/core/SmartClassLoader;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","access$000(Lorg/springframework/context/support/ContextTypeMatchClassLoader;Ljava/lang/String;)Z","access$100()Ljava/lang/reflect/Method;","isClassReloadable(Ljava/lang/Class;)Z","loadClass(Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroup;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/support/DefaultLifecycleProcessor;IJLjava/util/Map;Z)V","add(Ljava/lang/String;Lorg/springframework/context/Lifecycle;)V","start()V","stop()V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroupMember;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroupMember.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/context/support/DefaultLifecycleProcessor;Ljava/lang/String;Lorg/springframework/context/Lifecycle;)V","access$100(Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroupMember;)Ljava/lang/String;","access$400(Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroupMember;)Lorg/springframework/context/Lifecycle;","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroupMember;)I"]
  }
,
  {
    "className": "Lorg/springframework/context/support/DefaultLifecycleProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/DefaultLifecycleProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/LifecycleProcessor;","Lorg/springframework/beans/factory/BeanFactoryAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lorg/springframework/context/support/DefaultLifecycleProcessor;)Lorg/apache/commons/logging/Log;","access$200(Lorg/springframework/context/support/DefaultLifecycleProcessor;Ljava/util/Map;Ljava/lang/String;Z)V","access$300(Lorg/springframework/context/support/DefaultLifecycleProcessor;Ljava/util/Map;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;Ljava/util/Set;)V","doStart(Ljava/util/Map;Ljava/lang/String;Z)V","doStop(Ljava/util/Map;Ljava/lang/String;Ljava/util/concurrent/CountDownLatch;Ljava/util/Set;)V","getBeanFactory()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;","getLifecycleBeans()Ljava/util/Map;","getPhase(Lorg/springframework/context/Lifecycle;)I","isRunning()Z","lambda$doStop$3(Ljava/util/concurrent/CountDownLatch;Ljava/util/Set;Ljava/lang/String;)V","lambda$null$0(ILjava/util/Map;ZLjava/lang/Integer;)Lorg/springframework/context/support/DefaultLifecycleProcessor$LifecycleGroup;","lambda$startBeans$1(ZLjava/util/Map;Ljava/util/Map;Ljava/lang/String;Lorg/springframework/context/Lifecycle;)V","lambda$stopBeans$2(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;Lorg/springframework/context/Lifecycle;)V","matchesBeanType(Ljava/lang/Class;Ljava/lang/String;Lorg/springframework/beans/factory/BeanFactory;)Z","onClose()V","onRefresh()V","setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V","start()V","startBeans(Z)V","stop()V","stopBeans()V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/DelegatingMessageSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/DelegatingMessageSource.class",
    "super": "Lorg/springframework/context/support/MessageSourceSupport;",
    "interfaces": ["Lorg/springframework/context/HierarchicalMessageSource;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getParentMessageSource()Lorg/springframework/context/MessageSource;","setParentMessageSource(Lorg/springframework/context/MessageSource;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/context/support/EmbeddedValueResolutionSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/EmbeddedValueResolutionSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/EmbeddedValueResolverAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","resolveEmbeddedValue(Ljava/lang/String;)Ljava/lang/String;","setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/GenericApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/GenericApplicationContext.class",
    "super": "Lorg/springframework/context/support/AbstractApplicationContext;",
    "interfaces": ["Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","cancelRefresh(Lorg/springframework/beans/BeansException;)V","closeBeanFactory()V","getBeanDefinition(Ljava/lang/String;)Lorg/springframework/beans/factory/config/BeanDefinition;","getBeanFactory()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;","getClassLoader()Ljava/lang/ClassLoader;","getDefaultListableBeanFactory()Lorg/springframework/beans/factory/support/DefaultListableBeanFactory;","getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","refreshBeanFactory()V","registerAlias(Ljava/lang/String;Ljava/lang/String;)V","registerBeanDefinition(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V","setApplicationStartup(Lorg/springframework/core/metrics/ApplicationStartup;)V","setClassLoader(Ljava/lang/ClassLoader;)V","setResourceLoader(Lorg/springframework/core/io/ResourceLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/LiveBeansView;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/LiveBeansView.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/context/support/LiveBeansViewMBean;","Lorg/springframework/context/ApplicationContextAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","registerApplicationContext(Lorg/springframework/context/ConfigurableApplicationContext;)V","setApplicationContext(Lorg/springframework/context/ApplicationContext;)V","unregisterApplicationContext(Lorg/springframework/context/ConfigurableApplicationContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/LiveBeansViewMBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/LiveBeansViewMBean.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/support/MessageSourceSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/MessageSourceSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.Locale$Category.FORMAT",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/PostProcessorRegistrationDelegate$BeanPostProcessorChecker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/PostProcessorRegistrationDelegate$BeanPostProcessorChecker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;I)V","isInfrastructureBean(Ljava/lang/String;)Z","postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/context/support/PostProcessorRegistrationDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/PostProcessorRegistrationDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["invokeBeanDefinitionRegistryPostProcessors(Ljava/util/Collection;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Lorg/springframework/core/metrics/ApplicationStartup;)V","invokeBeanFactoryPostProcessors(Ljava/util/Collection;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","invokeBeanFactoryPostProcessors(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/util/List;)V","registerBeanPostProcessors(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/util/List;)V","registerBeanPostProcessors(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Lorg/springframework/context/support/AbstractApplicationContext;)V","sortPostProcessors(Ljava/util/List;Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/weaving/LoadTimeWeaverAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/weaving/LoadTimeWeaverAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/context/weaving/LoadTimeWeaverAwareProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/weaving/LoadTimeWeaverAwareProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;","Lorg/springframework/beans/factory/BeanFactoryAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/beans/factory/BeanFactory;)V","postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/context/weaving/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/context/weaving/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/AliasRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/AliasRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/AttributeAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/AttributeAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/AttributeAccessorSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/AttributeAccessorSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/AttributeAccessor;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","attributeNames()[Ljava/lang/String;","copyAttributesFrom(Lorg/springframework/core/AttributeAccessor;)V","equals(Ljava/lang/Object;)Z","getAttribute(Ljava/lang/String;)Ljava/lang/Object;","hashCode()I","removeAttribute(Ljava/lang/String;)Ljava/lang/Object;","setAttribute(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/BridgeMethodResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/BridgeMethodResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","findBridgedMethod(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","findGenericDeclaration(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","isBridgeMethodFor(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;)Z","isBridgedCandidateFor(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","isResolvedTypeMatch(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;)Z","lambda$findBridgedMethod$0(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","searchCandidates(Ljava/util/List;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","searchForMatch(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","searchInterfaces([Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;"]
  }
,
  {
    "className": "Lorg/springframework/core/CollectionFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/CollectionFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","asEnumType(Ljava/lang/Class;)Ljava/lang/Class;","createApproximateCollection(Ljava/lang/Object;I)Ljava/util/Collection;","createApproximateMap(Ljava/lang/Object;I)Ljava/util/Map;","createCollection(Ljava/lang/Class;I)Ljava/util/Collection;","createCollection(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Collection;","createMap(Ljava/lang/Class;I)Ljava/util/Map;","createMap(Ljava/lang/Class;Ljava/lang/Class;I)Ljava/util/Map;","isApproximableCollectionType(Ljava/lang/Class;)Z","isApproximableMapType(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/Constants;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/Constants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/Conventions;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/Conventions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getClassForValue(Ljava/lang/Object;)Ljava/lang/Class;","getQualifiedAttributeName(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;","getVariableName(Ljava/lang/Object;)Ljava/lang/String;","peekAhead(Ljava/util/Collection;)Ljava/lang/Object;","pluralize(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/DecoratingClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/DecoratingClassLoader.class",
    "super": "Ljava/lang/ClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","excludeClass(Ljava/lang/String;)V","excludePackage(Ljava/lang/String;)V","isExcluded(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/DecoratingProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/DecoratingProxy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/DefaultParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/DefaultParameterNameDiscoverer.class",
    "super": "Lorg/springframework/core/PrioritizedParameterNameDiscoverer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/core/GenericTypeResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/GenericTypeResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","getSingleGeneric(Lorg/springframework/core/ResolvableType;)Ljava/lang/Class;","lambda$getSingleGeneric$0(Lorg/springframework/core/ResolvableType;)Ljava/lang/String;","resolveReturnType(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;","resolveTypeArgument(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/core/KotlinDetector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/KotlinDetector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","isKotlinPresent()Z","isKotlinReflectPresent()Z","isKotlinType(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/KotlinReflectionParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/KotlinReflectionParameterNameDiscoverer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ParameterNameDiscoverer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;","getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/LocalVariableTableParameterNameDiscoverer$LocalVariableTableVisitor.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;Z)V","computeLvtSlotIndices(Z[Lorg/springframework/asm/Type;)[I","isWideType(Lorg/springframework/asm/Type;)Z","resolveExecutable()Ljava/lang/reflect/Executable;","visitEnd()V","visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/Label;Lorg/springframework/asm/Label;I)V"]
  }
,
  {
    "className": "Lorg/springframework/core/LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/LocalVariableTableParameterNameDiscoverer$ParameterNameDiscoveringVisitor.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/util/Map;)V","isStatic(I)Z","isSyntheticOrBridged(I)Z","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;"]
  }
,
  {
    "className": "Lorg/springframework/core/LocalVariableTableParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/LocalVariableTableParameterNameDiscoverer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ParameterNameDiscoverer;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V","doGetParameterNames(Ljava/lang/reflect/Executable;)[Ljava/lang/String;","getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;","getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;","inspectClass(Ljava/lang/Class;)Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/springframework/core/MethodParameter$KotlinDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/MethodParameter$KotlinDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["access$000(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;","access$100(Ljava/lang/reflect/Method;)Ljava/lang/Class;","getGenericReturnType(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;","getReturnType(Ljava/lang/reflect/Method;)Ljava/lang/Class;","isOptional(Lorg/springframework/core/MethodParameter;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/MethodParameter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/MethodParameter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;I)V","<init>(Ljava/lang/reflect/Constructor;II)V","<init>(Ljava/lang/reflect/Executable;ILjava/lang/Class;)V","<init>(Ljava/lang/reflect/Method;I)V","<init>(Ljava/lang/reflect/Method;II)V","<init>(Lorg/springframework/core/MethodParameter;)V","adaptAnnotationArray([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;","clone()Ljava/lang/Object;","clone()Lorg/springframework/core/MethodParameter;","computeParameterType()Ljava/lang/Class;","equals(Ljava/lang/Object;)Z","forExecutable(Ljava/lang/reflect/Executable;I)Lorg/springframework/core/MethodParameter;","getAnnotatedElement()Ljava/lang/reflect/AnnotatedElement;","getConstructor()Ljava/lang/reflect/Constructor;","getContainingClass()Ljava/lang/Class;","getDeclaringClass()Ljava/lang/Class;","getExecutable()Ljava/lang/reflect/Executable;","getGenericParameterType()Ljava/lang/reflect/Type;","getMethod()Ljava/lang/reflect/Method;","getMethodAnnotations()[Ljava/lang/annotation/Annotation;","getNestedParameterType()Ljava/lang/Class;","getNestingLevel()I","getParameterAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getParameterAnnotations()[Ljava/lang/annotation/Annotation;","getParameterIndex()I","getParameterName()Ljava/lang/String;","getParameterType()Ljava/lang/Class;","getTypeIndexForLevel(I)Ljava/lang/Integer;","getTypeIndexesPerLevel()Ljava/util/Map;","hasNullableAnnotation()Z","hashCode()I","initParameterNameDiscovery(Lorg/springframework/core/ParameterNameDiscoverer;)V","isOptional()Z","lambda$validateIndex$0(I)Ljava/lang/String;","nested()Lorg/springframework/core/MethodParameter;","nested(ILjava/lang/Integer;)Lorg/springframework/core/MethodParameter;","nested(Ljava/lang/Integer;)Lorg/springframework/core/MethodParameter;","toString()Ljava/lang/String;","validateIndex(Ljava/lang/reflect/Executable;I)I","withContainingClass(Ljava/lang/Class;)Lorg/springframework/core/MethodParameter;"]
  }
,
  {
    "className": "Lorg/springframework/core/NamedInheritableThreadLocal;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/NamedInheritableThreadLocal.class",
    "super": "Ljava/lang/InheritableThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/NamedThreadLocal;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/NamedThreadLocal.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/NestedExceptionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/NestedExceptionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["buildMessage(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;","getRootCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lorg/springframework/core/NestedIOException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/NestedIOException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/NestedRuntimeException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/NestedRuntimeException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","contains(Ljava/lang/Class;)Z","getMessage()Ljava/lang/String;","getMostSpecificCause()Ljava/lang/Throwable;","getRootCause()Ljava/lang/Throwable;"]
  }
,
  {
    "className": "Lorg/springframework/core/OrderComparator$OrderSourceProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/OrderComparator$OrderSourceProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/OrderComparator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/OrderComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/lang/Object;Ljava/lang/Object;)I","doCompare(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/OrderComparator$OrderSourceProvider;)I","findOrder(Ljava/lang/Object;)Ljava/lang/Integer;","getOrder(Ljava/lang/Object;)I","getOrder(Ljava/lang/Object;Lorg/springframework/core/OrderComparator$OrderSourceProvider;)I","lambda$withSourceProvider$0(Lorg/springframework/core/OrderComparator$OrderSourceProvider;Ljava/lang/Object;Ljava/lang/Object;)I","withSourceProvider(Lorg/springframework/core/OrderComparator$OrderSourceProvider;)Ljava/util/Comparator;"]
  }
,
  {
    "className": "Lorg/springframework/core/Ordered;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/Ordered.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/OverridingClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/OverridingClassLoader.class",
    "super": "Lorg/springframework/core/DecoratingClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","<init>(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)V","loadClass(Ljava/lang/String;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/core/ParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ParameterNameDiscoverer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/PrioritizedParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/PrioritizedParameterNameDiscoverer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ParameterNameDiscoverer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addDiscoverer(Lorg/springframework/core/ParameterNameDiscoverer;)V","getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;","getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/PriorityOrdered;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/PriorityOrdered.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/Ordered;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$1.class",
    "super": "Lorg/springframework/core/ResolvableType;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;)V","getGenerics()[Lorg/springframework/core/ResolvableType;","isAssignableFrom(Ljava/lang/Class;)Z","isAssignableFrom(Lorg/springframework/core/ResolvableType;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$DefaultVariableResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$DefaultVariableResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ResolvableType$VariableResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType;)V","getSource()Ljava/lang/Object;","resolveVariable(Ljava/lang/reflect/TypeVariable;)Lorg/springframework/core/ResolvableType;"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$EmptyType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$EmptyType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/Type;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$SyntheticParameterizedType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$SyntheticParameterizedType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/ParameterizedType;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V","equals(Ljava/lang/Object;)Z","getActualTypeArguments()[Ljava/lang/reflect/Type;","getOwnerType()Ljava/lang/reflect/Type;","getRawType()Ljava/lang/reflect/Type;","getTypeName()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$TypeVariablesVariableResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$TypeVariablesVariableResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ResolvableType$VariableResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/reflect/TypeVariable;[Lorg/springframework/core/ResolvableType;)V","getSource()Ljava/lang/Object;","resolveVariable(Ljava/lang/reflect/TypeVariable;)Lorg/springframework/core/ResolvableType;"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$VariableResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$VariableResolver.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$WildcardBounds$Kind;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$WildcardBounds$Kind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType$WildcardBounds;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType$WildcardBounds.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/ResolvableType$WildcardBounds$Kind;[Lorg/springframework/core/ResolvableType;)V","get(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType$WildcardBounds;","getBounds()[Lorg/springframework/core/ResolvableType;","isAssignable(Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)Z","isAssignableFrom([Lorg/springframework/core/ResolvableType;)Z","isSameKind(Lorg/springframework/core/ResolvableType$WildcardBounds;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.core.ResolvableType$EmptyType.INSTANCE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Lorg/springframework/core/ResolvableType$1;)V","<init>(Ljava/lang/reflect/Type;Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Lorg/springframework/core/ResolvableType$VariableResolver;)V","<init>(Ljava/lang/reflect/Type;Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Lorg/springframework/core/ResolvableType$VariableResolver;Ljava/lang/Integer;)V","<init>(Ljava/lang/reflect/Type;Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Lorg/springframework/core/ResolvableType$VariableResolver;Lorg/springframework/core/ResolvableType;)V","access$100()[Lorg/springframework/core/ResolvableType;","access$200(Lorg/springframework/core/ResolvableType;Ljava/lang/reflect/TypeVariable;)Lorg/springframework/core/ResolvableType;","access$300(Lorg/springframework/core/ResolvableType;)Ljava/lang/reflect/Type;","access$400(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType$VariableResolver;","as(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","asCollection()Lorg/springframework/core/ResolvableType;","asMap()Lorg/springframework/core/ResolvableType;","asVariableResolver()Lorg/springframework/core/ResolvableType$VariableResolver;","calculateHashCode()I","clearCache()V","equals(Ljava/lang/Object;)Z","forArrayComponent(Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","forClass(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","forClassWithGenerics(Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","forClassWithGenerics(Ljava/lang/Class;[Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","forField(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;","forField(Ljava/lang/reflect/Field;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;","forInstance(Ljava/lang/Object;)Lorg/springframework/core/ResolvableType;","forMethodParameter(Ljava/lang/reflect/Method;ILjava/lang/Class;)Lorg/springframework/core/ResolvableType;","forMethodParameter(Lorg/springframework/core/MethodParameter;)Lorg/springframework/core/ResolvableType;","forMethodParameter(Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;","forMethodParameter(Lorg/springframework/core/MethodParameter;Ljava/lang/reflect/Type;I)Lorg/springframework/core/ResolvableType;","forMethodParameter(Lorg/springframework/core/MethodParameter;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","forMethodReturnType(Ljava/lang/reflect/Method;)Lorg/springframework/core/ResolvableType;","forMethodReturnType(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","forRawClass(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;","forType(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;","forType(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType$VariableResolver;)Lorg/springframework/core/ResolvableType;","forType(Ljava/lang/reflect/Type;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/ResolvableType;","forType(Ljava/lang/reflect/Type;Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;Lorg/springframework/core/ResolvableType$VariableResolver;)Lorg/springframework/core/ResolvableType;","getComponentType()Lorg/springframework/core/ResolvableType;","getGeneric([I)Lorg/springframework/core/ResolvableType;","getGenerics()[Lorg/springframework/core/ResolvableType;","getInterfaces()[Lorg/springframework/core/ResolvableType;","getNested(I)Lorg/springframework/core/ResolvableType;","getNested(ILjava/util/Map;)Lorg/springframework/core/ResolvableType;","getSuperType()Lorg/springframework/core/ResolvableType;","getType()Ljava/lang/reflect/Type;","hasGenerics()Z","hasUnresolvableGenerics()Z","hashCode()I","isArray()Z","isAssignableFrom(Ljava/lang/Class;)Z","isAssignableFrom(Lorg/springframework/core/ResolvableType;)Z","isAssignableFrom(Lorg/springframework/core/ResolvableType;Ljava/util/Map;)Z","isInstance(Ljava/lang/Object;)Z","isUnresolvableTypeVariable()Z","isWildcardWithoutBounds()Z","resolve()Ljava/lang/Class;","resolve(Ljava/lang/Class;)Ljava/lang/Class;","resolveBounds([Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;","resolveClass()Ljava/lang/Class;","resolveGeneric([I)Ljava/lang/Class;","resolveType()Lorg/springframework/core/ResolvableType;","resolveVariable(Ljava/lang/reflect/TypeVariable;)Lorg/springframework/core/ResolvableType;","toClass()Ljava/lang/Class;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/ResolvableTypeProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/ResolvableTypeProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper$FieldTypeProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper$FieldTypeProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Field;)V","getType()Ljava/lang/reflect/Type;"]
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper$MethodParameterTypeProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper$MethodParameterTypeProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/MethodParameter;)V","getType()Ljava/lang/reflect/Type;"]
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper$SerializableTypeProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper$SerializableTypeProxy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper$TypeProvider.class",
    "super": "null",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper$TypeProxyInvocationHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper$TypeProxyInvocationHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/InvocationHandler;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/SerializableTypeWrapper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SerializableTypeWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","forTypeProvider(Lorg/springframework/core/SerializableTypeWrapper$TypeProvider;)Ljava/lang/reflect/Type;","unwrap(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;"]
  }
,
  {
    "className": "Lorg/springframework/core/SimpleAliasRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SimpleAliasRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/AliasRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","canonicalName(Ljava/lang/String;)Ljava/lang/String;","checkForAliasCircle(Ljava/lang/String;Ljava/lang/String;)V","getAliases(Ljava/lang/String;)[Ljava/lang/String;","hasAlias(Ljava/lang/String;Ljava/lang/String;)Z","isAlias(Ljava/lang/String;)Z","lambda$retrieveAliases$0(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V","registerAlias(Ljava/lang/String;Ljava/lang/String;)V","retrieveAliases(Ljava/lang/String;Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/SmartClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SmartClassLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/SpringProperties;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/SpringProperties.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","getFlag(Ljava/lang/String;)Z","getProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/StandardReflectionParameterNameDiscoverer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/StandardReflectionParameterNameDiscoverer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/ParameterNameDiscoverer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getParameterNames(Ljava/lang/reflect/Constructor;)[Ljava/lang/String;","getParameterNames(Ljava/lang/reflect/Method;)[Ljava/lang/String;","getParameterNames([Ljava/lang/reflect/Parameter;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AbstractMergedAnnotation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AbstractMergedAnnotation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/MergedAnnotation;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","asAnnotationAttributes([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Lorg/springframework/core/annotation/AnnotationAttributes;","getDefaultValue(Ljava/lang/String;)Ljava/util/Optional;","getInt(Ljava/lang/String;)I","getRequiredAttributeValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getValue(Ljava/lang/String;)Ljava/util/Optional;","getValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;","isDirectlyPresent()Z","isMetaPresent()Z","lambda$asAnnotationAttributes$0(Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/AnnotationAttributes;","synthesize()Ljava/lang/annotation/Annotation;","synthesize(Ljava/util/function/Predicate;)Ljava/util/Optional;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AliasFor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AliasFor.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotatedElementUtils$AnnotatedElementForAnnotations;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotatedElementUtils$AnnotatedElementForAnnotations.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Ljava/lang/annotation/Annotation;)V","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotatedElementUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotatedElementUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forAnnotations([Ljava/lang/annotation/Annotation;)Ljava/lang/reflect/AnnotatedElement;","getAllAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/util/MultiValueMap;","getAnnotationAttributes(Lorg/springframework/core/annotation/MergedAnnotation;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;","getAnnotations(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/core/annotation/MergedAnnotations;","getMergedAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationAttributes;","getMergedAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;","isAnnotated(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z","isAnnotated(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Z","nullIfEmpty(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationAttributes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationAttributes.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Z)V","<init>(Ljava/util/Map;)V","assertAttributePresence(Ljava/lang/String;Ljava/lang/Object;)V","assertAttributeType(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)V","assertNotException(Ljava/lang/String;Ljava/lang/Object;)V","fromMap(Ljava/util/Map;)Lorg/springframework/core/annotation/AnnotationAttributes;","getBoolean(Ljava/lang/String;)Z","getEnum(Ljava/lang/String;)Ljava/lang/Enum;","getNumber(Ljava/lang/String;)Ljava/lang/Number;","getRequiredAttribute(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getString(Ljava/lang/String;)Ljava/lang/String;","getStringArray(Ljava/lang/String;)[Ljava/lang/String;","lambda$assertAttributePresence$0(Ljava/lang/String;)Ljava/lang/String;","toString()Ljava/lang/String;","valueToString(Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationAwareOrderComparator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationAwareOrderComparator.class",
    "super": "Lorg/springframework/core/OrderComparator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","findOrder(Ljava/lang/Object;)Ljava/lang/Integer;","findOrderFromAnnotation(Ljava/lang/Object;)Ljava/lang/Integer;","getPriority(Ljava/lang/Object;)Ljava/lang/Integer;","sort(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationConfigurationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationConfigurationException.class",
    "super": "Lorg/springframework/core/NestedRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationFilter$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationFilter$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","matches(Ljava/lang/Class;)Z","matches(Ljava/lang/String;)Z","matches(Ljava/lang/annotation/Annotation;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationFilter$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationFilter$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","matches(Ljava/lang/annotation/Annotation;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.annotation.PackagesAnnotationFilter",
    "invokedMethods": ["<clinit>()V","matches(Ljava/lang/Class;)Z","matches(Ljava/lang/annotation/Annotation;)Z","packages([Ljava/lang/String;)Lorg/springframework/core/annotation/AnnotationFilter;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets;)V","access$200(Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;)I","access$300(Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;)[I","get(I)Ljava/lang/reflect/Method;","getAttributeIndex(I)I","resolve(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)I","size()I","update()V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationTypeMapping$MirrorSets.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping;)V","access$400(Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets;)[Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;","get(I)Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;","getAssigned(I)Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;","resolve(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)[I","size()I","updateFrom(Ljava/util/Collection;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationTypeMapping;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationTypeMapping.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V","access$000(Lorg/springframework/core/annotation/AnnotationTypeMapping;)Lorg/springframework/core/annotation/AttributeMethods;","access$100()[Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;","access$500(Ljava/lang/reflect/Method;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)Z","addConventionAnnotationValues()V","addConventionMappings()V","afterAllMappingsSet()V","areEquivalent(Ljava/lang/Class;Ljava/lang/String;)Z","areEquivalent(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)Z","areEquivalent(Ljava/lang/annotation/Annotation;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)Z","areEquivalent([Ljava/lang/Class;[Ljava/lang/String;)Z","collectAliases(Ljava/util/List;)V","computeSynthesizableFlag()Z","filledIntArray(I)[I","getAliasMapping(I)I","getAnnotation()Ljava/lang/annotation/Annotation;","getAnnotationType()Ljava/lang/Class;","getAttributes()Lorg/springframework/core/annotation/AttributeMethods;","getConventionMapping(I)I","getDistance()I","getFirstRootAttributeIndex(Ljava/util/Collection;)I","getMappedAnnotationValue(IZ)Ljava/lang/Object;","getMetaTypes()Ljava/util/List;","getMirrorSets()Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets;","getRoot()Lorg/springframework/core/annotation/AnnotationTypeMapping;","getSource()Lorg/springframework/core/annotation/AnnotationTypeMapping;","isAliasPair(Ljava/lang/reflect/Method;)Z","isBetterConventionAnnotationValue(IZLorg/springframework/core/annotation/AnnotationTypeMapping;)Z","isCompatibleReturnType(Ljava/lang/Class;Ljava/lang/Class;)Z","isEquivalentToDefaultValue(Ljava/lang/reflect/Method;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;)Z","isSynthesizable()Z","lambda$resolveAliasedForTargets$0(Ljava/lang/reflect/Method;)Ljava/util/List;","merge(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;","processAliases()V","processAliases(ILjava/util/List;)V","resolveAliasTarget(Ljava/lang/reflect/Method;Lorg/springframework/core/annotation/AliasFor;)Ljava/lang/reflect/Method;","resolveAliasTarget(Ljava/lang/reflect/Method;Lorg/springframework/core/annotation/AliasFor;Z)Ljava/lang/reflect/Method;","resolveAliasedForTargets()Ljava/util/Map;","validateAllAliasesClaimed()V","validateMirrorSet(Lorg/springframework/core/annotation/AnnotationTypeMapping$MirrorSets$MirrorSet;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationTypeMappings$Cache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationTypeMappings$Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)V","createMappings(Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationTypeMappings;","get(Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationTypeMappings;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationTypeMappings;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationTypeMappings.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.annotation.IntrospectionFailureLogger",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;Ljava/lang/Class;)V","<init>(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;Ljava/lang/Class;Lorg/springframework/core/annotation/AnnotationTypeMappings$1;)V","addAllMappings(Ljava/lang/Class;)V","addIfPossible(Ljava/util/Deque;Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Class;Ljava/lang/annotation/Annotation;)V","addIfPossible(Ljava/util/Deque;Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/annotation/Annotation;)V","addMetaAnnotationsToQueue(Ljava/util/Deque;Lorg/springframework/core/annotation/AnnotationTypeMapping;)V","clearCache()V","forAnnotationType(Ljava/lang/Class;)Lorg/springframework/core/annotation/AnnotationTypeMappings;","forAnnotationType(Ljava/lang/Class;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/AnnotationTypeMappings;","forAnnotationType(Ljava/lang/Class;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/AnnotationTypeMappings;","get(I)Lorg/springframework/core/annotation/AnnotationTypeMapping;","isAlreadyMapped(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/annotation/Annotation;)Z","isMappable(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/annotation/Annotation;)Z","lambda$forAnnotationType$0(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/AnnotationTypeMappings$Cache;","lambda$forAnnotationType$1(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/AnnotationTypeMappings$Cache;","size()I"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.annotation.AnnotationFilter",
    "invokedMethods": ["<clinit>()V","clearCache()V","getAnnotation(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotationAttributes(Ljava/lang/annotation/Annotation;)Ljava/util/Map;","getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/AnnotationAttributes;","getAnnotationAttributes(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/annotation/Annotation;ZZ)Lorg/springframework/core/annotation/AnnotationAttributes;","getDefaultValue(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;","getDefaultValue(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;","getValue(Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","getValue(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;","handleIntrospectionFailure(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Throwable;)V","isAnnotationDeclaredLocally(Ljava/lang/Class;Ljava/lang/Class;)Z","isCandidateClass(Ljava/lang/Class;Ljava/lang/String;)Z","isSingleLevelPresent(Lorg/springframework/core/annotation/MergedAnnotation;)Z","lambda$getAnnotationAttributes$0(Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/AnnotationAttributes;","rethrowAnnotationConfigurationException(Ljava/lang/Throwable;)V","synthesizeAnnotation(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/AnnotatedElement;)Ljava/lang/annotation/Annotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationsProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationsProcessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["doWithAggregate(Ljava/lang/Object;I)Ljava/lang/Object;","finish(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationsScanner$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationsScanner$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AnnotationsScanner;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AnnotationsScanner.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","clearCache()V","getBaseTypeMethods(Ljava/lang/Object;Ljava/lang/Class;)[Ljava/lang/reflect/Method;","getDeclaredAnnotation(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getDeclaredAnnotations(Ljava/lang/reflect/AnnotatedElement;Z)[Ljava/lang/annotation/Annotation;","hasPlainJavaAnnotationsOnly(Ljava/lang/Class;)Z","hasPlainJavaAnnotationsOnly(Ljava/lang/Object;)Z","hasSameGenericTypeParameters(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z","hasSameParameterTypes(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","isIgnorable(Ljava/lang/Class;)Z","isKnownEmpty(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Z","isOverride(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)Z","isWithoutHierarchy(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Z","process(Ljava/lang/Object;Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processClass(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processClassHierarchy(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/annotation/AnnotationsProcessor;ZZ)Ljava/lang/Object;","processClassHierarchy(Ljava/lang/Object;[ILjava/lang/Class;Lorg/springframework/core/annotation/AnnotationsProcessor;ZZ)Ljava/lang/Object;","processClassInheritedAnnotations(Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processElement(Ljava/lang/Object;Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processMethod(Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processMethodAnnotations(Ljava/lang/Object;ILjava/lang/reflect/Method;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","processMethodHierarchy(Ljava/lang/Object;[ILjava/lang/Class;Lorg/springframework/core/annotation/AnnotationsProcessor;Ljava/lang/reflect/Method;Z)Ljava/lang/Object;","processMethodInheritedAnnotations(Ljava/lang/Object;Ljava/lang/reflect/Method;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","scan(Ljava/lang/Object;Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/AttributeMethods;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/AttributeMethods.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Byte.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;[Ljava/lang/reflect/Method;)V","assertAnnotation(Ljava/lang/annotation/Annotation;)V","canThrowTypeNotPresentException(I)Z","compute(Ljava/lang/Class;)Lorg/springframework/core/annotation/AttributeMethods;","describe(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;","describe(Ljava/lang/reflect/Method;)Ljava/lang/String;","forAnnotationType(Ljava/lang/Class;)Lorg/springframework/core/annotation/AttributeMethods;","get(I)Ljava/lang/reflect/Method;","get(Ljava/lang/String;)Ljava/lang/reflect/Method;","hasNestedAnnotation()Z","hasOnlyValueAttribute()Z","indexOf(Ljava/lang/String;)I","indexOf(Ljava/lang/reflect/Method;)I","isAttributeMethod(Ljava/lang/reflect/Method;)Z","isValid(Ljava/lang/annotation/Annotation;)Z","lambda$static$0(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I","size()I"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/IntrospectionFailureLogger$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/IntrospectionFailureLogger$1.class",
    "super": "Lorg/springframework/core/annotation/IntrospectionFailureLogger;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","isEnabled()Z","log(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/IntrospectionFailureLogger$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/IntrospectionFailureLogger$2.class",
    "super": "Lorg/springframework/core/annotation/IntrospectionFailureLogger;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","isEnabled()Z","log(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/IntrospectionFailureLogger;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/IntrospectionFailureLogger.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;ILorg/springframework/core/annotation/IntrospectionFailureLogger$1;)V","access$100()Lorg/apache/commons/logging/Log;","getLogger()Lorg/apache/commons/logging/Log;","log(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Exception;)V","values()[Lorg/springframework/core/annotation/IntrospectionFailureLogger;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotation$Adapt;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotation$Adapt.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["addIfTrue(Ljava/util/Set;Ljava/lang/Object;Z)V","isIn([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Z","values(ZZ)[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotation.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["from(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;","missing()Lorg/springframework/core/annotation/MergedAnnotation;","of(Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;","of(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;","of(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationCollectors;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationCollectors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","combiner(Lorg/springframework/util/MultiValueMap;Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;","isSameInstance(Ljava/lang/Object;Ljava/lang/Object;)Z","lambda$toMultiValueMap$4([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;Lorg/springframework/util/MultiValueMap;Lorg/springframework/core/annotation/MergedAnnotation;)V","toMultiValueMap(Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/stream/Collector;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationPredicates$UniquePredicate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationPredicates$UniquePredicate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Predicate;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Function;)V","test(Ljava/lang/Object;)Z","test(Lorg/springframework/core/annotation/MergedAnnotation;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationPredicates;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationPredicates.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["unique(Ljava/util/function/Function;)Ljava/util/function/Predicate;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationSelector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationSelector.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationSelectors$FirstDirectlyDeclared;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationSelectors$FirstDirectlyDeclared.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/MergedAnnotationSelector;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/annotation/MergedAnnotationSelectors$1;)V","isBestCandidate(Lorg/springframework/core/annotation/MergedAnnotation;)Z","select(Lorg/springframework/core/annotation/MergedAnnotation;Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/MergedAnnotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationSelectors$Nearest;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationSelectors$Nearest.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/MergedAnnotationSelector;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/annotation/MergedAnnotationSelectors$1;)V","isBestCandidate(Lorg/springframework/core/annotation/MergedAnnotation;)Z","select(Lorg/springframework/core/annotation/MergedAnnotation;Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/MergedAnnotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationSelectors;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationSelectors.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","firstDirectlyDeclared()Lorg/springframework/core/annotation/MergedAnnotationSelector;","nearest()Lorg/springframework/core/annotation/MergedAnnotationSelector;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotations$SearchStrategy.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotations;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotations.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/reflect/AnnotatedElement;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;","of(Ljava/util/Collection;)Lorg/springframework/core/annotation/MergedAnnotations;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationsCollection$AnnotationsSpliterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationsCollection$AnnotationsSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/MergedAnnotationsCollection;Ljava/lang/Object;)V","characteristics()I","createMergedAnnotationIfPossible(II)Lorg/springframework/core/annotation/MergedAnnotation;","estimateSize()J","getMapping(II)Lorg/springframework/core/annotation/AnnotationTypeMapping;","getNextSuitableMapping(I)Lorg/springframework/core/annotation/AnnotationTypeMapping;","tryAdvance(Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MergedAnnotationsCollection;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MergedAnnotationsCollection.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/MergedAnnotations;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Collection;)V","access$000(Lorg/springframework/core/annotation/MergedAnnotationsCollection;)[Lorg/springframework/core/annotation/MergedAnnotation;","access$100(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Object;)Z","access$200(Lorg/springframework/core/annotation/MergedAnnotationsCollection;)[Lorg/springframework/core/annotation/AnnotationTypeMappings;","find(Ljava/lang/Object;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/String;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;","isDirectlyPresent(Ljava/lang/String;)Z","isMappingForType(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Object;)Z","isPresent(Ljava/lang/Object;Z)Z","isPresent(Ljava/lang/String;)Z","iterator()Ljava/util/Iterator;","of(Ljava/util/Collection;)Lorg/springframework/core/annotation/MergedAnnotations;","spliterator()Ljava/util/Spliterator;","spliterator(Ljava/lang/Object;)Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","stream(Ljava/lang/String;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/MissingMergedAnnotation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/MissingMergedAnnotation.class",
    "super": "Lorg/springframework/core/annotation/AbstractMergedAnnotation;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["asAnnotationAttributes([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Lorg/springframework/core/annotation/AnnotationAttributes;","asMap(Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;","asMap([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;","createSynthesized()Ljava/lang/annotation/Annotation;","getAggregateIndex()I","getAttributeValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getDistance()I","getInstance()Lorg/springframework/core/annotation/MergedAnnotation;","getMetaTypes()Ljava/util/List;","getSource()Ljava/lang/Object;","getType()Ljava/lang/Class;","getValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;","isPresent()Z","toString()Ljava/lang/String;","withNonMergedAttributes()Lorg/springframework/core/annotation/MergedAnnotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/Order;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/Order.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/annotation/OrderUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/OrderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","findOrder(Lorg/springframework/core/annotation/MergedAnnotations;)Ljava/lang/Integer;","getOrderFromAnnotations(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations;)Ljava/lang/Integer;","getPriority(Ljava/lang/Class;)Ljava/lang/Integer;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/PackagesAnnotationFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/PackagesAnnotationFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationFilter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","matches(Ljava/lang/String;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/RepeatableContainers$NoRepeatableContainers;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/RepeatableContainers$NoRepeatableContainers.class",
    "super": "Lorg/springframework/core/annotation/RepeatableContainers;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["access$100()Lorg/springframework/core/annotation/RepeatableContainers$NoRepeatableContainers;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/RepeatableContainers$StandardRepeatableContainers;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/RepeatableContainers$StandardRepeatableContainers.class",
    "super": "Lorg/springframework/core/annotation/RepeatableContainers;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","<init>()V","access$000()Lorg/springframework/core/annotation/RepeatableContainers$StandardRepeatableContainers;","computeRepeatedAnnotationsMethod(Ljava/lang/Class;)Ljava/lang/Object;","findRepeatedAnnotations(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;","getRepeatedAnnotationsMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/RepeatableContainers;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/RepeatableContainers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/RepeatableContainers;)V","<init>(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/RepeatableContainers$1;)V","equals(Ljava/lang/Object;)Z","findRepeatedAnnotations(Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;","hashCode()I","none()Lorg/springframework/core/annotation/RepeatableContainers;","standardRepeatables()Lorg/springframework/core/annotation/RepeatableContainers;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/SynthesizedAnnotation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/SynthesizedAnnotation.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/SynthesizedMergedAnnotationInvocationHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/InvocationHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/MergedAnnotation;Ljava/lang/Class;)V","createProxy(Lorg/springframework/core/annotation/MergedAnnotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","isVisible(Ljava/lang/ClassLoader;Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotation.class",
    "super": "Lorg/springframework/core/annotation/AbstractMergedAnnotation;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Boolean.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;I)V","<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;IZLjava/util/function/Predicate;[I[I)V","<init>(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;I[I)V","adapt(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","adaptForAttribute(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;","adaptToMergedAnnotation(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;","adaptValueForMapOptions(Ljava/lang/reflect/Method;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/lang/Object;","asMap(Ljava/util/function/Function;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;","asMap([Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/util/Map;","createIfPossible(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/core/annotation/ValueExtractor;ILorg/springframework/core/annotation/IntrospectionFailureLogger;)Lorg/springframework/core/annotation/TypeMappedAnnotation;","createIfPossible(Lorg/springframework/core/annotation/AnnotationTypeMapping;Ljava/lang/Object;Ljava/lang/annotation/Annotation;ILorg/springframework/core/annotation/IntrospectionFailureLogger;)Lorg/springframework/core/annotation/TypeMappedAnnotation;","createIfPossible(Lorg/springframework/core/annotation/AnnotationTypeMapping;Lorg/springframework/core/annotation/MergedAnnotation;Lorg/springframework/core/annotation/IntrospectionFailureLogger;)Lorg/springframework/core/annotation/TypeMappedAnnotation;","createSynthesized()Ljava/lang/annotation/Annotation;","emptyArray(Ljava/lang/Class;)Ljava/lang/Object;","extractFromMap(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;","from(Ljava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;","getAdaptType(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;","getAggregateIndex()I","getAttributeIndex(Ljava/lang/String;Z)I","getAttributeValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getClassLoader()Ljava/lang/ClassLoader;","getDefaultValue(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;","getDistance()I","getMetaTypes()Ljava/util/List;","getSource()Ljava/lang/Object;","getType()Ljava/lang/Class;","getTypeForMapOptions(Ljava/lang/reflect/Method;[Lorg/springframework/core/annotation/MergedAnnotation$Adapt;)Ljava/lang/Class;","getValue(ILjava/lang/Class;)Ljava/lang/Object;","getValue(IZZ)Ljava/lang/Object;","getValueExtractor(Ljava/lang/Object;)Lorg/springframework/core/annotation/ValueExtractor;","getValueForMirrorResolution(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;","getValueFromMetaAnnotation(IZ)Ljava/lang/Object;","isEmptyObjectArray(Ljava/lang/Object;)Z","isFiltered(Ljava/lang/String;)Z","isPresent()Z","isSynthesizable()Z","lambda$asMap$3(Lorg/springframework/core/annotation/MergedAnnotation;)Ljava/util/LinkedHashMap;","of(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/Map;)Lorg/springframework/core/annotation/MergedAnnotation;","withNonMergedAttributes()Lorg/springframework/core/annotation/MergedAnnotation;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations$Aggregate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations$Aggregate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Object;Ljava/util/List;)V","createMergedAnnotationIfPossible(IILorg/springframework/core/annotation/IntrospectionFailureLogger;)Lorg/springframework/core/annotation/MergedAnnotation;","getMapping(II)Lorg/springframework/core/annotation/AnnotationTypeMapping;","getMappings(I)Lorg/springframework/core/annotation/AnnotationTypeMappings;","size()I"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations$AggregatesCollector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations$AggregatesCollector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationsProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/TypeMappedAnnotations;)V","<init>(Lorg/springframework/core/annotation/TypeMappedAnnotations;Lorg/springframework/core/annotation/TypeMappedAnnotations$1;)V","addAggregateAnnotations(Ljava/util/List;[Ljava/lang/annotation/Annotation;)V","createAggregate(ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/TypeMappedAnnotations$Aggregate;","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Ljava/util/List;","finish(Ljava/lang/Object;)Ljava/lang/Object;","finish(Ljava/util/List;)Ljava/util/List;","getAggregateAnnotations([Ljava/lang/annotation/Annotation;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations$AggregatesSpliterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations$AggregatesSpliterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Spliterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/TypeMappedAnnotations;Ljava/lang/Object;Ljava/util/List;)V","characteristics()I","estimateSize()J","getNextSuitableMapping(Lorg/springframework/core/annotation/TypeMappedAnnotations$Aggregate;I)Lorg/springframework/core/annotation/AnnotationTypeMapping;","tryAdvance(Ljava/util/function/Consumer;)Z","tryAdvance(Lorg/springframework/core/annotation/TypeMappedAnnotations$Aggregate;Ljava/util/function/Consumer;)Z","trySplit()Ljava/util/Spliterator;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations$IsPresent;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations$IsPresent.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationsProcessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.core.annotation.RepeatableContainers$NoRepeatableContainers.INSTANCE",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;Z)V","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Ljava/lang/Boolean;","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","get(Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;Z)Lorg/springframework/core/annotation/TypeMappedAnnotations$IsPresent;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations$MergedAnnotationFinder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/AnnotationsProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/annotation/TypeMappedAnnotations;Ljava/lang/Object;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)V","doWithAggregate(Ljava/lang/Object;I)Ljava/lang/Object;","doWithAggregate(Ljava/lang/Object;I)Lorg/springframework/core/annotation/MergedAnnotation;","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Ljava/lang/Object;","doWithAnnotations(Ljava/lang/Object;ILjava/lang/Object;[Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;","finish(Ljava/lang/Object;)Ljava/lang/Object;","finish(Lorg/springframework/core/annotation/MergedAnnotation;)Lorg/springframework/core/annotation/MergedAnnotation;","process(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/annotation/Annotation;)Lorg/springframework/core/annotation/MergedAnnotation;","updateLastResult(Lorg/springframework/core/annotation/MergedAnnotation;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/TypeMappedAnnotations;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/TypeMappedAnnotations.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/annotation/MergedAnnotations;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.core.annotation.RepeatableContainers$NoRepeatableContainers.INSTANCE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)V","<init>(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)V","access$100(Lorg/springframework/core/annotation/AnnotationTypeMapping;Lorg/springframework/core/annotation/AnnotationFilter;Ljava/lang/Object;)Z","access$200(Lorg/springframework/core/annotation/TypeMappedAnnotations;)Lorg/springframework/core/annotation/AnnotationFilter;","access$300(Lorg/springframework/core/annotation/TypeMappedAnnotations;)Lorg/springframework/core/annotation/RepeatableContainers;","from(Ljava/lang/Object;[Ljava/lang/annotation/Annotation;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;","from(Ljava/lang/reflect/AnnotatedElement;Lorg/springframework/core/annotation/MergedAnnotations$SearchStrategy;Lorg/springframework/core/annotation/RepeatableContainers;Lorg/springframework/core/annotation/AnnotationFilter;)Lorg/springframework/core/annotation/MergedAnnotations;","get(Ljava/lang/Class;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/Class;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/String;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/String;Ljava/util/function/Predicate;)Lorg/springframework/core/annotation/MergedAnnotation;","get(Ljava/lang/String;Ljava/util/function/Predicate;Lorg/springframework/core/annotation/MergedAnnotationSelector;)Lorg/springframework/core/annotation/MergedAnnotation;","getAggregates()Ljava/util/List;","isDirectlyPresent(Ljava/lang/String;)Z","isMappingForType(Lorg/springframework/core/annotation/AnnotationTypeMapping;Lorg/springframework/core/annotation/AnnotationFilter;Ljava/lang/Object;)Z","isPresent(Ljava/lang/Class;)Z","isPresent(Ljava/lang/String;)Z","iterator()Ljava/util/Iterator;","scan(Ljava/lang/Object;Lorg/springframework/core/annotation/AnnotationsProcessor;)Ljava/lang/Object;","spliterator()Ljava/util/Spliterator;","spliterator(Ljava/lang/Object;)Ljava/util/Spliterator;","stream()Ljava/util/stream/Stream;","stream(Ljava/lang/String;)Ljava/util/stream/Stream;"]
  }
,
  {
    "className": "Lorg/springframework/core/annotation/ValueExtractor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/ValueExtractor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/annotation/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/annotation/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/ConversionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/ConversionException.class",
    "super": "Lorg/springframework/core/NestedRuntimeException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/ConversionFailedException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/ConversionFailedException.class",
    "super": "Lorg/springframework/core/convert/ConversionException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/ConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/ConversionService.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/ConverterNotFoundException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/ConverterNotFoundException.class",
    "super": "Lorg/springframework/core/convert/ConversionException;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/Property;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/Property.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V","<init>(Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/String;)V","addAnnotationsToMap(Ljava/util/Map;Ljava/lang/reflect/AnnotatedElement;)V","declaringClass()Ljava/lang/Class;","equals(Ljava/lang/Object;)Z","getAnnotations()[Ljava/lang/annotation/Annotation;","getField()Ljava/lang/reflect/Field;","getMethodParameter()Lorg/springframework/core/MethodParameter;","getName()Ljava/lang/String;","getObjectType()Ljava/lang/Class;","getReadMethod()Ljava/lang/reflect/Method;","getType()Ljava/lang/Class;","getWriteMethod()Ljava/lang/reflect/Method;","hashCode()I","resolveAnnotations()[Ljava/lang/annotation/Annotation;","resolveMethodParameter()Lorg/springframework/core/MethodParameter;","resolveName()Ljava/lang/String;","resolveReadMethodParameter()Lorg/springframework/core/MethodParameter;","resolveWriteMethodParameter()Lorg/springframework/core/MethodParameter;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/TypeDescriptor$AnnotatedElementAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/AnnotatedElement;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/annotation/Annotation;)V","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","hashCode()I","isAnnotationPresent(Ljava/lang/Class;)Z","isEmpty()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/TypeDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/TypeDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.Boolean.TYPE",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/reflect/Field;)V","<init>(Lorg/springframework/core/MethodParameter;)V","<init>(Lorg/springframework/core/ResolvableType;Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V","<init>(Lorg/springframework/core/convert/Property;)V","access$000()[Ljava/lang/annotation/Annotation;","annotationEquals(Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Z","annotationsMatch(Lorg/springframework/core/convert/TypeDescriptor;)Z","collection(Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;","elementTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;","equals(Ljava/lang/Object;)Z","forObject(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getElementTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;","getMapKeyTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;","getMapKeyTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;","getMapValueTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;","getMapValueTypeDescriptor(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;","getObjectType()Ljava/lang/Class;","getRelatedIfResolvable(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/ResolvableType;)Lorg/springframework/core/convert/TypeDescriptor;","getResolvableType()Lorg/springframework/core/ResolvableType;","getType()Ljava/lang/Class;","hasAnnotation(Ljava/lang/Class;)Z","hashCode()I","isArray()Z","isAssignableTo(Lorg/springframework/core/convert/TypeDescriptor;)Z","isCollection()Z","isMap()Z","isNestedAssignable(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","isPrimitive()Z","narrow(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;","narrow(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/TypeDescriptor;","nested(Lorg/springframework/core/convert/Property;I)Lorg/springframework/core/convert/TypeDescriptor;","nested(Lorg/springframework/core/convert/TypeDescriptor;I)Lorg/springframework/core/convert/TypeDescriptor;","toString()Ljava/lang/String;","valueOf(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/ConditionalConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/ConditionalConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/ConditionalGenericConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/ConditionalGenericConverter.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;","Lorg/springframework/core/convert/converter/ConditionalConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/Converter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/Converter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/ConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/ConverterFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/ConverterRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/ConverterRegistry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/GenericConverter$ConvertiblePair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/Class;)V","equals(Ljava/lang/Object;)Z","getTargetType()Ljava/lang/Class;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/GenericConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/GenericConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/converter/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/converter/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/AbstractConditionalEnumConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/AbstractConditionalEnumConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ArrayToArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ArrayToArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ArrayToCollectionConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ArrayToCollectionConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ArrayToObjectConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ArrayToObjectConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ArrayToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ArrayToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ByteBufferConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ByteBufferConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.convert.TypeDescriptor",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertFromByteBuffer(Ljava/nio/ByteBuffer;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertToByteBuffer(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","matchesFromByteBuffer(Lorg/springframework/core/convert/TypeDescriptor;)Z","matchesToByteBuffer(Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CharacterToNumberFactory$CharacterToNumber;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CharacterToNumberFactory$CharacterToNumber.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","convert(Ljava/lang/Character;)Ljava/lang/Number;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CharacterToNumberFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CharacterToNumberFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CollectionToArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CollectionToArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CollectionToCollectionConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CollectionToCollectionConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CollectionToObjectConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CollectionToObjectConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/CollectionToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/CollectionToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ConfigurableConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ConfigurableConversionService.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/convert/ConversionService;","Lorg/springframework/core/convert/converter/ConverterRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ConversionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ConversionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["canConvertElements(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/ConversionService;)Z","getEnumType(Ljava/lang/Class;)Ljava/lang/Class;","invokeConverter(Lorg/springframework/core/convert/converter/GenericConverter;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","lambda$getEnumType$0(Ljava/lang/Class;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/DefaultConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/DefaultConversionService.class",
    "super": "Lorg/springframework/core/convert/support/GenericConversionService;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addCollectionConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","addDefaultConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","addScalarConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","getSharedInstance()Lorg/springframework/core/convert/ConversionService;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/EnumToIntegerConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/EnumToIntegerConverter.class",
    "super": "Lorg/springframework/core/convert/support/AbstractConditionalEnumConverter;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Enum;)Ljava/lang/Integer;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/EnumToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/EnumToStringConverter.class",
    "super": "Lorg/springframework/core/convert/support/AbstractConditionalEnumConverter;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Enum;)Ljava/lang/String;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/FallbackObjectToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/FallbackObjectToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$ConverterAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$ConverterAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$ConverterCacheKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/core/convert/support/GenericConversionService$ConverterCacheKey;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/ConverterFactory;Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$Converters;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$Converters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/convert/support/GenericConversionService$1;)V","add(Lorg/springframework/core/convert/converter/GenericConverter;)V","addInterfacesToClassHierarchy(Ljava/lang/Class;ZLjava/util/List;Ljava/util/Set;)V","addToClassHierarchy(ILjava/lang/Class;ZLjava/util/List;Ljava/util/Set;)V","find(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;","getClassHierarchy(Ljava/lang/Class;)Ljava/util/List;","getConverterStrings()Ljava/util/List;","getMatchableConverters(Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)Lorg/springframework/core/convert/support/GenericConversionService$ConvertersForPair;","getRegisteredConverter(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)Lorg/springframework/core/convert/converter/GenericConverter;","lambda$getMatchableConverters$0(Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)Lorg/springframework/core/convert/support/GenericConversionService$ConvertersForPair;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$ConvertersForPair;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$ConvertersForPair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/convert/support/GenericConversionService$1;)V","add(Lorg/springframework/core/convert/converter/GenericConverter;)V","getConverter(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService$NoOpConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService$NoOpConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/GenericConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/GenericConversionService.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/support/ConfigurableConversionService;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","addConverter(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)V","addConverter(Lorg/springframework/core/convert/converter/Converter;)V","addConverter(Lorg/springframework/core/convert/converter/GenericConverter;)V","addConverterFactory(Lorg/springframework/core/convert/converter/ConverterFactory;)V","assertNotPrimitiveTargetType(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V","canBypassConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","convert(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertNullSource(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConverter(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;","getDefaultConverter(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;","getRequiredTypeInfo(Ljava/lang/Class;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;","handleConverterNotFound(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","handleResult(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;","invalidateCache()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/IdToEntityConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/IdToEntityConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","getEntityName(Ljava/lang/Class;)Ljava/lang/String;","getFinder(Ljava/lang/Class;)Ljava/lang/reflect/Method;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/IntegerToEnumConverterFactory$IntegerToEnum;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/IntegerToEnumConverterFactory$IntegerToEnum.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","convert(Ljava/lang/Integer;)Ljava/lang/Enum;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/IntegerToEnumConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/IntegerToEnumConverterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/MapToMapConverter$MapEntry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/MapToMapConverter$MapEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","addToMap(Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/MapToMapConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/MapToMapConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","canConvertKey(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","canConvertValue(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertKey(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertValue(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/NumberToCharacterConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/NumberToCharacterConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Number;)Ljava/lang/Character;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/NumberToNumberConverterFactory$NumberToNumber;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/NumberToNumberConverterFactory$NumberToNumber.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","convert(Ljava/lang/Number;)Ljava/lang/Number;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/NumberToNumberConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/NumberToNumberConverterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;","Lorg/springframework/core/convert/converter/ConditionalConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToCollectionConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToCollectionConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToObjectConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToObjectConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","<init>()V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","determineFactoryConstructor(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","determineFactoryMethod(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;","determineToMethod(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;","getConvertibleTypes()Ljava/util/Set;","getValidatedMember(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Member;","hasConversionMethodOrConstructor(Ljava/lang/Class;Ljava/lang/Class;)Z","isApplicable(Ljava/lang/reflect/Member;Ljava/lang/Class;)Z","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToOptionalConverter$GenericTypeDescriptor.class",
    "super": "Lorg/springframework/core/convert/TypeDescriptor;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/TypeDescriptor;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToOptionalConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToOptionalConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ObjectToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ObjectToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/PropertiesToStringConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/PropertiesToStringConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Properties;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StreamConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StreamConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.convert.TypeDescriptor",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertFromStream(Ljava/util/stream/Stream;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","convertToStream(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","createConvertibleTypes()Ljava/util/Set;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","matchesFromStream(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","matchesToStream(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToArrayConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToArrayConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToBooleanConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToBooleanConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.util.Set.add(Object)",
    "invokedMethods": ["<clinit>()V","<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToCharacterConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToCharacterConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/lang/Character;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToCharsetConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToCharsetConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/nio/charset/Charset;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToCollectionConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToCollectionConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToCurrencyConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToCurrencyConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/util/Currency;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToEnumConverterFactory$StringToEnum;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToEnumConverterFactory$StringToEnum.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/lang/Enum;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToEnumConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToEnumConverterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToLocaleConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToLocaleConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/util/Locale;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToNumberConverterFactory$StringToNumber;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToNumberConverterFactory$StringToNumber.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/lang/Number;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToNumberConverterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToNumberConverterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getConverter(Ljava/lang/Class;)Lorg/springframework/core/convert/converter/Converter;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToPropertiesConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToPropertiesConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/util/Properties;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToTimeZoneConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToTimeZoneConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/util/TimeZone;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/StringToUUIDConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/StringToUUIDConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/lang/String;)Ljava/util/UUID;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ZoneIdToTimeZoneConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ZoneIdToTimeZoneConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZoneId;)Ljava/util/TimeZone;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/ZonedDateTimeToCalendarConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/ZonedDateTimeToCalendarConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/util/Calendar;"]
  }
,
  {
    "className": "Lorg/springframework/core/convert/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/convert/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/AbstractEnvironment$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/AbstractEnvironment$1.class",
    "super": "Lorg/springframework/core/env/ReadOnlySystemAttributesMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/env/AbstractEnvironment;)V","getSystemAttribute(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/AbstractEnvironment$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/AbstractEnvironment$2.class",
    "super": "Lorg/springframework/core/env/ReadOnlySystemAttributesMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/env/AbstractEnvironment;)V","getSystemAttribute(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/AbstractEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/AbstractEnvironment.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/env/ConfigurableEnvironment;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","doGetActiveProfiles()Ljava/util/Set;","doGetDefaultProfiles()Ljava/util/Set;","getActiveProfiles()[Ljava/lang/String;","getConversionService()Lorg/springframework/core/convert/support/ConfigurableConversionService;","getDefaultProfiles()[Ljava/lang/String;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","getPropertySources()Lorg/springframework/core/env/MutablePropertySources;","getReservedDefaultProfiles()Ljava/util/Set;","getSystemEnvironment()Ljava/util/Map;","getSystemProperties()Ljava/util/Map;","resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;","resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;","setActiveProfiles([Ljava/lang/String;)V","setConversionService(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V","setDefaultProfiles([Ljava/lang/String;)V","suppressGetenvAccess()Z","toString()Ljava/lang/String;","validateProfile(Ljava/lang/String;)V","validateRequiredProperties()V"]
  }
,
  {
    "className": "Lorg/springframework/core/env/AbstractPropertyResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/AbstractPropertyResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/env/ConfigurablePropertyResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertValueIfNecessary(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","createPlaceholderHelper(Z)Lorg/springframework/util/PropertyPlaceholderHelper;","doResolvePlaceholders(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper;)Ljava/lang/String;","getConversionService()Lorg/springframework/core/convert/support/ConfigurableConversionService;","getProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;","getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","resolveNestedPlaceholders(Ljava/lang/String;)Ljava/lang/String;","resolvePlaceholders(Ljava/lang/String;)Ljava/lang/String;","resolveRequiredPlaceholders(Ljava/lang/String;)Ljava/lang/String;","setConversionService(Lorg/springframework/core/convert/support/ConfigurableConversionService;)V","validateRequiredProperties()V"]
  }
,
  {
    "className": "Lorg/springframework/core/env/CommandLineArgs;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/CommandLineArgs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addNonOptionArg(Ljava/lang/String;)V","addOptionArg(Ljava/lang/String;Ljava/lang/String;)V","getNonOptionArgs()Ljava/util/List;","getOptionNames()Ljava/util/Set;","getOptionValues(Ljava/lang/String;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/CommandLinePropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/CommandLinePropertySource.class",
    "super": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/String;Ljava/lang/Object;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/CompositePropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/CompositePropertySource.class",
    "super": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","addPropertySource(Lorg/springframework/core/env/PropertySource;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getPropertyNames()[Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/ConfigurableEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/ConfigurableEnvironment.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/Environment;","Lorg/springframework/core/env/ConfigurablePropertyResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/ConfigurablePropertyResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/ConfigurablePropertyResolver.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/PropertyResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/EnumerablePropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/env/Environment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/Environment.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/PropertyResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/EnvironmentCapable;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/EnvironmentCapable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/MapPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/MapPropertySource.class",
    "super": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Map;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getPropertyNames()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/MissingRequiredPropertiesException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/MissingRequiredPropertiesException.class",
    "super": "Ljava/lang/IllegalStateException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addMissingRequiredProperty(Ljava/lang/String;)V","getMessage()Ljava/lang/String;","getMissingRequiredProperties()Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/MutablePropertySources;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/MutablePropertySources.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/env/PropertySources;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addFirst(Lorg/springframework/core/env/PropertySource;)V","addLast(Lorg/springframework/core/env/PropertySource;)V","assertPresentAndGetIndex(Ljava/lang/String;)I","contains(Ljava/lang/String;)Z","get(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;","iterator()Ljava/util/Iterator;","remove(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;","removeIfPresent(Lorg/springframework/core/env/PropertySource;)V","replace(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertiesPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertiesPropertySource.class",
    "super": "Lorg/springframework/core/env/MapPropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Map;)V","getPropertyNames()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertyResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertyResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertySource$ComparisonPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertySource$ComparisonPropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource$StubPropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getSource()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertySource$StubPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertySource$StubPropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertySource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getName()Ljava/lang/String;","getSource()Ljava/lang/Object;","hashCode()I","named(Ljava/lang/String;)Lorg/springframework/core/env/PropertySource;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertySources;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertySources.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/env/PropertySourcesPropertyResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/PropertySourcesPropertyResolver.class",
    "super": "Lorg/springframework/core/env/AbstractPropertyResolver;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/env/PropertySources;)V","getProperty(Ljava/lang/String;)Ljava/lang/String;","getProperty(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","getProperty(Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;","getPropertyAsRawString(Ljava/lang/String;)Ljava/lang/String;","logKeyFound(Ljava/lang/String;Lorg/springframework/core/env/PropertySource;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/env/ReadOnlySystemAttributesMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/ReadOnlySystemAttributesMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","get(Ljava/lang/Object;)Ljava/lang/String;","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/String;","size()I","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/SimpleCommandLineArgsParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/SimpleCommandLineArgsParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse([Ljava/lang/String;)Lorg/springframework/core/env/CommandLineArgs;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/SimpleCommandLinePropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/SimpleCommandLinePropertySource.class",
    "super": "Lorg/springframework/core/env/CommandLinePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V","<init>([Ljava/lang/String;)V","getNonOptionArgs()Ljava/util/List;","getOptionValues(Ljava/lang/String;)Ljava/util/List;","getPropertyNames()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/StandardEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/StandardEnvironment.class",
    "super": "Lorg/springframework/core/env/AbstractEnvironment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customizePropertySources(Lorg/springframework/core/env/MutablePropertySources;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/env/SystemEnvironmentPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/SystemEnvironmentPropertySource.class",
    "super": "Lorg/springframework/core/env/MapPropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Map;)V","checkPropertyName(Ljava/lang/String;)Ljava/lang/String;","containsKey(Ljava/lang/String;)Z","getProperty(Ljava/lang/String;)Ljava/lang/Object;","isSecurityManagerPresent()Z","resolvePropertyName(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/env/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/env/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/AbstractFileResolvingResource$VfsResourceDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/AbstractFileResolvingResource$VfsResourceDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getResource(Ljava/net/URI;)Lorg/springframework/core/io/Resource;","getResource(Ljava/net/URL;)Lorg/springframework/core/io/Resource;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/AbstractFileResolvingResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/AbstractFileResolvingResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customizeConnection(Ljava/net/HttpURLConnection;)V","customizeConnection(Ljava/net/URLConnection;)V","exists()Z","getFile()Ljava/io/File;","getFile(Ljava/net/URI;)Ljava/io/File;","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/io/AbstractResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/AbstractResource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/io/Resource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","equals(Ljava/lang/Object;)Z","getFile()Ljava/io/File;","getFilename()Ljava/lang/String;","getURI()Ljava/net/URI;","getURL()Ljava/net/URL;","hashCode()I","isOpen()Z","isReadable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/ClassPathResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/ClassPathResource.class",
    "super": "Lorg/springframework/core/io/AbstractFileResolvingResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;)V","<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","equals(Ljava/lang/Object;)Z","exists()Z","getClassLoader()Ljava/lang/ClassLoader;","getDescription()Ljava/lang/String;","getFilename()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getPath()Ljava/lang/String;","getURL()Ljava/net/URL;","hashCode()I","resolveURL()Ljava/net/URL;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/ContextResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/ContextResource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/io/Resource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/DefaultResourceLoader$ClassPathContextResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/DefaultResourceLoader$ClassPathContextResource.class",
    "super": "Lorg/springframework/core/io/ClassPathResource;",
    "interfaces": ["Lorg/springframework/core/io/ContextResource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/ClassLoader;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/DefaultResourceLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/DefaultResourceLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/io/ResourceLoader;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","clearResourceCaches()V","getClassLoader()Ljava/lang/ClassLoader;","getProtocolResolvers()Ljava/util/Collection;","getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getResourceByPath(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getResourceCache(Ljava/lang/Class;)Ljava/util/Map;","lambda$getResourceCache$0(Ljava/lang/Class;)Ljava/util/Map;","setClassLoader(Ljava/lang/ClassLoader;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/io/DescriptiveResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/DescriptiveResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","exists()Z","getDescription()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","hashCode()I","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/io/FileSystemResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/FileSystemResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": ["Lorg/springframework/core/io/WritableResource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/nio/file/FileSystem;Ljava/lang/String;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","equals(Ljava/lang/Object;)Z","exists()Z","getDescription()Ljava/lang/String;","getFile()Ljava/io/File;","getFilename()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getURL()Ljava/net/URL;","hashCode()I","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/io/FileUrlResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/FileUrlResource.class",
    "super": "Lorg/springframework/core/io/UrlResource;",
    "interfaces": ["Lorg/springframework/core/io/WritableResource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/URL;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getFile()Ljava/io/File;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/InputStreamSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/InputStreamSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/ProtocolResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/ProtocolResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/Resource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/Resource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/io/InputStreamSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/ResourceEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/ResourceEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;)V","<init>(Lorg/springframework/core/io/ResourceLoader;Lorg/springframework/core/env/PropertyResolver;Z)V","resolvePath(Ljava/lang/String;)Ljava/lang/String;","setAsText(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/io/ResourceLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/ResourceLoader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/UrlResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/UrlResource.class",
    "super": "Lorg/springframework/core/io/AbstractFileResolvingResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/net/URL;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","createRelativeURL(Ljava/lang/String;)Ljava/net/URL;","equals(Ljava/lang/Object;)Z","getCleanedUrl()Ljava/net/URL;","getCleanedUrl(Ljava/net/URL;Ljava/lang/String;)Ljava/net/URL;","getDescription()Ljava/lang/String;","getFile()Ljava/io/File;","getFilename()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getURL()Ljava/net/URL;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/core/io/VfsResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/VfsResource.class",
    "super": "Lorg/springframework/core/io/AbstractResource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","equals(Ljava/lang/Object;)Z","exists()Z","getDescription()Ljava/lang/String;","getFile()Ljava/io/File;","getFilename()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getURL()Ljava/net/URL;","hashCode()I","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/io/VfsUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/VfsUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","doGetPath(Ljava/lang/Object;)Ljava/lang/String;","exists(Ljava/lang/Object;)Z","getChild(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","getFile(Ljava/lang/Object;)Ljava/io/File;","getInputStream(Ljava/lang/Object;)Ljava/io/InputStream;","getName(Ljava/lang/Object;)Ljava/lang/String;","getRelative(Ljava/net/URL;)Ljava/lang/Object;","getRoot(Ljava/net/URI;)Ljava/lang/Object;","getRoot(Ljava/net/URL;)Ljava/lang/Object;","getURL(Ljava/lang/Object;)Ljava/net/URL;","invokeVfsMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;","isReadable(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/io/WritableResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/WritableResource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/io/Resource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/support/EncodedResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/EncodedResource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/io/InputStreamSource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/io/Resource;)V","<init>(Lorg/springframework/core/io/Resource;Ljava/lang/String;Ljava/nio/charset/Charset;)V","equals(Ljava/lang/Object;)Z","getEncoding()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getReader()Ljava/io/Reader;","getResource()Lorg/springframework/core/io/Resource;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/PathMatchingResourcePatternResolver$PatternVirtualFileVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/PathMatchingResourcePatternResolver$PatternVirtualFileVisitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/InvocationHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/util/PathMatcher;)V","getResources()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/PathMatchingResourcePatternResolver$VfsResourceMatchingDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findMatchingResources(Ljava/net/URL;Ljava/lang/String;Lorg/springframework/util/PathMatcher;)Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/PathMatchingResourcePatternResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/PathMatchingResourcePatternResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/io/support/ResourcePatternResolver;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Ljava/lang/ClassLoader;)V","<init>(Lorg/springframework/core/io/ResourceLoader;)V","addAllClassLoaderJarRoots(Ljava/lang/ClassLoader;Ljava/util/Set;)V","addClassPathManifestEntries(Ljava/util/Set;)V","convertClassLoaderURL(Ljava/net/URL;)Lorg/springframework/core/io/Resource;","determineRootDir(Ljava/lang/String;)Ljava/lang/String;","doFindAllClassPathResources(Ljava/lang/String;)Ljava/util/Set;","doFindMatchingFileSystemResources(Ljava/io/File;Ljava/lang/String;)Ljava/util/Set;","doFindPathMatchingFileResources(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Ljava/util/Set;","doFindPathMatchingJarResources(Lorg/springframework/core/io/Resource;Ljava/net/URL;Ljava/lang/String;)Ljava/util/Set;","doRetrieveMatchingFiles(Ljava/lang/String;Ljava/io/File;Ljava/util/Set;)V","findAllClassPathResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","findPathMatchingResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","getClassLoader()Ljava/lang/ClassLoader;","getJarFile(Ljava/lang/String;)Ljava/util/jar/JarFile;","getPathMatcher()Lorg/springframework/util/PathMatcher;","getResource(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","getResourceLoader()Lorg/springframework/core/io/ResourceLoader;","getResources(Ljava/lang/String;)[Lorg/springframework/core/io/Resource;","hasDuplicate(Ljava/lang/String;Ljava/util/Set;)Z","isJarResource(Lorg/springframework/core/io/Resource;)Z","listDirectory(Ljava/io/File;)[Ljava/io/File;","resolveRootDirResource(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/io/Resource;","retrieveMatchingFiles(Ljava/io/File;Ljava/lang/String;)Ljava/util/Set;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/PropertiesLoaderUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/PropertiesLoaderUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","fillProperties(Ljava/util/Properties;Lorg/springframework/core/io/Resource;)V","loadAllProperties(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/util/Properties;","loadProperties(Lorg/springframework/core/io/Resource;)Ljava/util/Properties;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/ResourceArrayPropertyEditor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/ResourceArrayPropertyEditor.class",
    "super": "Ljava/beans/PropertyEditorSupport;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;)V","<init>(Lorg/springframework/core/io/support/ResourcePatternResolver;Lorg/springframework/core/env/PropertyResolver;Z)V","resolvePath(Ljava/lang/String;)Ljava/lang/String;","setAsText(Ljava/lang/String;)V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/ResourcePatternResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/ResourcePatternResolver.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/io/ResourceLoader;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/io/support/ResourcePatternUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/ResourcePatternUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getResourcePatternResolver(Lorg/springframework/core/io/ResourceLoader;)Lorg/springframework/core/io/support/ResourcePatternResolver;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/SpringFactoriesLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/SpringFactoriesLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","instantiateFactory(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;","lambda$loadSpringFactories$0(Ljava/lang/String;)Ljava/util/List;","lambda$loadSpringFactories$1(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;","loadFactories(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;","loadFactoryNames(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/List;","loadSpringFactories(Ljava/lang/ClassLoader;)Ljava/util/Map;"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/VfsPatternUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/VfsPatternUtils.class",
    "super": "Lorg/springframework/core/io/VfsUtils;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["findRoot(Ljava/net/URL;)Ljava/lang/Object;","getPath(Ljava/lang/Object;)Ljava/lang/String;","visit(Ljava/lang/Object;Ljava/lang/reflect/InvocationHandler;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/io/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/io/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/log/LogMessage$FormatMessage1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/LogMessage$FormatMessage1.class",
    "super": "Lorg/springframework/core/log/LogMessage$FormatMessage;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;)V","buildString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/log/LogMessage$FormatMessage3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/LogMessage$FormatMessage3.class",
    "super": "Lorg/springframework/core/log/LogMessage$FormatMessage;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V","buildString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/log/LogMessage$FormatMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/LogMessage$FormatMessage.class",
    "super": "Lorg/springframework/core/log/LogMessage;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/log/LogMessage$SupplierMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/LogMessage$SupplierMessage.class",
    "super": "Lorg/springframework/core/log/LogMessage;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Supplier;)V","buildString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/log/LogMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/LogMessage.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/CharSequence;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","charAt(I)C","format(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;","format(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/core/log/LogMessage;","length()I","of(Ljava/util/function/Supplier;)Lorg/springframework/core/log/LogMessage;","subSequence(II)Ljava/lang/CharSequence;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/log/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/log/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/metrics/ApplicationStartup;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/ApplicationStartup.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/core/metrics/DefaultApplicationStartup$DefaultStartupStep$DefaultTags;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/DefaultApplicationStartup$DefaultStartupStep$DefaultTags.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/metrics/StartupStep$Tags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lorg/springframework/core/metrics/DefaultApplicationStartup$DefaultStartupStep;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/DefaultApplicationStartup$DefaultStartupStep.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/metrics/StartupStep;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","end()V","tag(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;","tag(Ljava/lang/String;Ljava/util/function/Supplier;)Lorg/springframework/core/metrics/StartupStep;"]
  }
,
  {
    "className": "Lorg/springframework/core/metrics/DefaultApplicationStartup;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/DefaultApplicationStartup.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/metrics/ApplicationStartup;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","start(Ljava/lang/String;)Lorg/springframework/core/metrics/DefaultApplicationStartup$DefaultStartupStep;","start(Ljava/lang/String;)Lorg/springframework/core/metrics/StartupStep;"]
  }
,
  {
    "className": "Lorg/springframework/core/metrics/StartupStep$Tag;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/StartupStep$Tag.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/metrics/StartupStep$Tags;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/StartupStep$Tags.class",
    "super": "null",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/metrics/StartupStep;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/StartupStep.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/metrics/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/metrics/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/style/DefaultToStringStyler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/DefaultToStringStyler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/style/ToStringStyler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/style/ValueStyler;)V","styleEnd(Ljava/lang/StringBuilder;Ljava/lang/Object;)V","styleField(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/Object;)V","styleFieldEnd(Ljava/lang/StringBuilder;Ljava/lang/String;)V","styleFieldSeparator(Ljava/lang/StringBuilder;)V","styleFieldStart(Ljava/lang/StringBuilder;Ljava/lang/String;)V","styleIdentityHashCode(Ljava/lang/StringBuilder;Ljava/lang/Object;)V","styleStart(Ljava/lang/StringBuilder;Ljava/lang/Object;)V","styleValue(Ljava/lang/StringBuilder;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/style/DefaultValueStyler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/DefaultValueStyler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/style/ValueStyler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getCollectionTypeString(Ljava/util/Collection;)Ljava/lang/String;","style(Ljava/lang/Object;)Ljava/lang/String;","style(Ljava/util/Collection;)Ljava/lang/String;","style(Ljava/util/Map$Entry;)Ljava/lang/String;","style(Ljava/util/Map;)Ljava/lang/String;","styleArray([Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/style/StylerUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/StylerUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/core/style/ToStringCreator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/ToStringCreator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: org.springframework.core.style.StylerUtils.DEFAULT_VALUE_STYLER",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Lorg/springframework/core/style/ToStringStyler;)V","append(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/core/style/ToStringCreator;","printFieldSeparatorIfNecessary()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/style/ToStringStyler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/ToStringStyler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/style/ValueStyler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/ValueStyler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/style/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/style/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/AnnotatedTypeMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/AnnotatedTypeMetadata.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;","getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;","isAnnotated(Ljava/lang/String;)Z","lambda$getAllAnnotationAttributes$0(Lorg/springframework/util/MultiValueMap;)Lorg/springframework/util/MultiValueMap;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/AnnotationMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/AnnotationMetadata.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/type/ClassMetadata;","Lorg/springframework/core/type/AnnotatedTypeMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getAnnotationTypes()Ljava/util/Set;","getMetaAnnotationTypes(Ljava/lang/String;)Ljava/util/Set;","hasAnnotatedMethods(Ljava/lang/String;)Z","hasAnnotation(Ljava/lang/String;)Z","hasMetaAnnotation(Ljava/lang/String;)Z","introspect(Ljava/lang/Class;)Lorg/springframework/core/type/AnnotationMetadata;","lambda$getAnnotationTypes$0(Lorg/springframework/core/annotation/MergedAnnotation;)Ljava/lang/String;","lambda$getMetaAnnotationTypes$1(Lorg/springframework/core/annotation/MergedAnnotation;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/ClassMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/ClassMetadata.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isConcrete()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/type/MethodMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/MethodMetadata.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/type/AnnotatedTypeMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/StandardAnnotationMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/StandardAnnotationMetadata.class",
    "super": "Lorg/springframework/core/type/StandardClassMetadata;",
    "interfaces": ["Lorg/springframework/core/type/AnnotationMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Z)V","from(Ljava/lang/Class;)Lorg/springframework/core/type/AnnotationMetadata;","getAllAnnotationAttributes(Ljava/lang/String;Z)Lorg/springframework/util/MultiValueMap;","getAnnotationAttributes(Ljava/lang/String;Z)Ljava/util/Map;","getAnnotationTypes()Ljava/util/Set;","getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;","hasAnnotatedMethods(Ljava/lang/String;)Z","isAnnotatedMethod(Ljava/lang/reflect/Method;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/core/type/StandardClassMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/StandardClassMetadata.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/ClassMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","getClassName()Ljava/lang/String;","getIntrospectedClass()Ljava/lang/Class;","isInterface()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/CachingMetadataReaderFactory$LocalResourceCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/CachingMetadataReaderFactory$LocalResourceCache.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","removeEldestEntry(Ljava/util/Map$Entry;)Z","setCacheLimit(I)V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/CachingMetadataReaderFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/CachingMetadataReaderFactory.class",
    "super": "Lorg/springframework/core/type/classreading/SimpleMetadataReaderFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceLoader;)V","clearCache()V","getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;","setCacheLimit(I)V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/MergedAnnotationReadingVisitor$ArrayVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/MergedAnnotationReadingVisitor$ArrayVisitor.class",
    "super": "Lorg/springframework/asm/AnnotationVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/type/classreading/MergedAnnotationReadingVisitor;Ljava/util/function/Consumer;)V","getComponentType()Ljava/lang/Class;","visit(Ljava/lang/String;Ljava/lang/Object;)V","visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;","visitEnd()V","visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/MergedAnnotationReadingVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/MergedAnnotationReadingVisitor.class",
    "super": "Lorg/springframework/asm/AnnotationVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;Ljava/util/function/Consumer;)V","access$000(Lorg/springframework/core/type/classreading/MergedAnnotationReadingVisitor;Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/asm/AnnotationVisitor;","get(Ljava/lang/ClassLoader;Ljava/util/function/Supplier;Ljava/lang/String;ZLjava/util/function/Consumer;)Lorg/springframework/asm/AnnotationVisitor;","lambda$visitAnnotation$1(Ljava/lang/String;Lorg/springframework/core/annotation/MergedAnnotation;)V","lambda$visitArray$2(Ljava/lang/String;[Ljava/lang/Object;)V","lambda$visitEnum$0(Ljava/lang/String;Ljava/lang/Enum;)V","visit(Ljava/lang/String;Ljava/lang/Object;)V","visitAnnotation(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;","visitAnnotation(Ljava/lang/String;Ljava/util/function/Consumer;)Lorg/springframework/asm/AnnotationVisitor;","visitArray(Ljava/lang/String;)Lorg/springframework/asm/AnnotationVisitor;","visitEnd()V","visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","visitEnum(Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/MetadataReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/MetadataReader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/MetadataReaderFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/MetadataReaderFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleAnnotationMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleAnnotationMetadata.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/AnnotationMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;[Ljava/lang/String;[Lorg/springframework/core/type/MethodMetadata;Lorg/springframework/core/annotation/MergedAnnotations;)V","getAnnotatedMethods(Ljava/lang/String;)Ljava/util/Set;","getAnnotationTypes()Ljava/util/Set;","getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;","getClassName()Ljava/lang/String;","getInterfaceNames()[Ljava/lang/String;","getSuperClassName()Ljava/lang/String;","isAbstract()Z","isIndependent()Z","isInterface()Z"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleAnnotationMetadataReadingVisitor$Source;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleAnnotationMetadataReadingVisitor$Source.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleAnnotationMetadataReadingVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleAnnotationMetadataReadingVisitor.class",
    "super": "Lorg/springframework/asm/ClassVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;)V","getMetadata()Lorg/springframework/core/type/classreading/SimpleAnnotationMetadata;","getSource()Lorg/springframework/core/type/classreading/SimpleAnnotationMetadataReadingVisitor$Source;","isBridge(I)Z","isInterface(I)Z","toClassName(Ljava/lang/String;)Ljava/lang/String;","visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitEnd()V","visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V","visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lorg/springframework/asm/MethodVisitor;","visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleMetadataReader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleMetadataReader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/classreading/MetadataReader;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/core/io/Resource;Ljava/lang/ClassLoader;)V","getAnnotationMetadata()Lorg/springframework/core/type/AnnotationMetadata;","getClassMetadata()Lorg/springframework/core/type/ClassMetadata;","getClassReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/asm/ClassReader;","getResource()Lorg/springframework/core/io/Resource;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleMetadataReaderFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleMetadataReaderFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/classreading/MetadataReaderFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/io/ResourceLoader;)V","getMetadataReader(Ljava/lang/String;)Lorg/springframework/core/type/classreading/MetadataReader;","getMetadataReader(Lorg/springframework/core/io/Resource;)Lorg/springframework/core/type/classreading/MetadataReader;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleMethodMetadata;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleMethodMetadata.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/MethodMetadata;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Lorg/springframework/core/annotation/MergedAnnotations;)V","getAnnotations()Lorg/springframework/core/annotation/MergedAnnotations;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleMethodMetadataReadingVisitor$Source;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleMethodMetadataReadingVisitor$Source.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/SimpleMethodMetadataReadingVisitor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/SimpleMethodMetadataReadingVisitor.class",
    "super": "Lorg/springframework/asm/MethodVisitor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/ClassLoader;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V","getSource()Ljava/lang/Object;","visitAnnotation(Ljava/lang/String;Z)Lorg/springframework/asm/AnnotationVisitor;","visitEnd()V"]
  }
,
  {
    "className": "Lorg/springframework/core/type/classreading/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/classreading/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/type/filter/TypeFilter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZZ)V","match(Ljava/lang/String;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z","match(Lorg/springframework/core/type/classreading/MetadataReader;Lorg/springframework/core/type/classreading/MetadataReaderFactory;)Z","matchClassName(Ljava/lang/String;)Z","matchInterface(Ljava/lang/String;)Ljava/lang/Boolean;","matchSelf(Lorg/springframework/core/type/classreading/MetadataReader;)Z","matchSuperClass(Ljava/lang/String;)Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/filter/AnnotationTypeFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/filter/AnnotationTypeFilter.class",
    "super": "Lorg/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","<init>(Ljava/lang/Class;Z)V","<init>(Ljava/lang/Class;ZZ)V","getAnnotationType()Ljava/lang/Class;","hasAnnotation(Ljava/lang/String;)Ljava/lang/Boolean;","matchInterface(Ljava/lang/String;)Ljava/lang/Boolean;","matchSelf(Lorg/springframework/core/type/classreading/MetadataReader;)Z","matchSuperClass(Ljava/lang/String;)Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Lorg/springframework/core/type/filter/AssignableTypeFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/filter/AssignableTypeFilter.class",
    "super": "Lorg/springframework/core/type/filter/AbstractTypeHierarchyTraversingFilter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/filter/TypeFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/filter/TypeFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/filter/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/filter/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/core/type/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/core/type/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/AccessException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/AccessException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Exception;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/BeanResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/BeanResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/ConstructorExecutor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ConstructorExecutor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/ConstructorResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ConstructorResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/EvaluationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/EvaluationContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/EvaluationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/EvaluationException.class",
    "super": "Lorg/springframework/expression/ExpressionException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;)V","<init>(ILjava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/Expression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/Expression.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/ExpressionException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ExpressionException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;)V","<init>(ILjava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;ILjava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Throwable;)V","getMessage()Ljava/lang/String;","getSimpleMessage()Ljava/lang/String;","toDetailedString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/ExpressionInvocationTargetException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ExpressionInvocationTargetException.class",
    "super": "Lorg/springframework/expression/EvaluationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/ExpressionParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ExpressionParser.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/MethodExecutor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/MethodExecutor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/MethodFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/MethodFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/MethodResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/MethodResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/Operation;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/Operation.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/OperatorOverloader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/OperatorOverloader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/ParseException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ParseException.class",
    "super": "Lorg/springframework/expression/ExpressionException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;)V","<init>(ILjava/lang/String;Ljava/lang/Throwable;)V","<init>(Ljava/lang/String;ILjava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/ParserContext$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ParserContext$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/ParserContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/expression/ParserContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/ParserContext.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/expression/PropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/PropertyAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/TypeComparator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/TypeComparator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/TypeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/TypeConverter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/TypeLocator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/TypeLocator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/TypedValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/TypedValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","<init>(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)V","equals(Ljava/lang/Object;)Z","getTypeDescriptor()Lorg/springframework/core/convert/TypeDescriptor;","getValue()Ljava/lang/Object;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/CompositeStringExpression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/CompositeStringExpression.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/Expression;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Lorg/springframework/expression/Expression;)V","getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;","getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/String;","getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/ExpressionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/ExpressionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convertTypedValue(Lorg/springframework/expression/EvaluationContext;Lorg/springframework/expression/TypedValue;Ljava/lang/Class;)Ljava/lang/Object;","convertValue(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;Ljava/lang/Class;)Ljava/lang/Object;","toBoolean(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)Z","toByte(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)B","toChar(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)C","toDouble(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)D","toFloat(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)F","toInt(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)I","toLong(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)J","toShort(Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/TypedValue;)S"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/LiteralExpression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/LiteralExpression.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/Expression;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;","getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/String;","getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/TemplateAwareExpressionParser$Bracket;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/TemplateAwareExpressionParser$Bracket.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(CI)V","compatibleWithCloseBracket(C)Z","theCloseBracketFor(C)C","theOpenBracketFor(C)C"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/TemplateAwareExpressionParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/TemplateAwareExpressionParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/ExpressionParser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isSuffixHere(Ljava/lang/String;ILjava/lang/String;)Z","parseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;","parseExpressions(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)[Lorg/springframework/expression/Expression;","parseTemplate(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;","skipToCorrectEndSuffix(Ljava/lang/String;Ljava/lang/String;I)I"]
  }
,
  {
    "className": "Lorg/springframework/expression/common/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/common/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/CodeFlow$ClinitAdder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/CodeFlow$ClinitAdder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/CodeFlow$FieldAdder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/CodeFlow$FieldAdder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/CodeFlow;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/CodeFlow.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/asm/Opcodes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/asm/ClassWriter;)V","areBoxingCompatible(Ljava/lang/String;Ljava/lang/String;)Z","arrayCodeFor(Ljava/lang/String;)I","createSignatureDescriptor(Ljava/lang/reflect/Constructor;)Ljava/lang/String;","createSignatureDescriptor(Ljava/lang/reflect/Method;)Ljava/lang/String;","enterCompilationScope()V","exitCompilationScope()V","finish()V","getClassName()Ljava/lang/String;","insertAnyNecessaryTypeConversionBytecodes(Lorg/springframework/asm/MethodVisitor;CLjava/lang/String;)V","insertArrayStore(Lorg/springframework/asm/MethodVisitor;Ljava/lang/String;)V","insertBoxIfNecessary(Lorg/springframework/asm/MethodVisitor;C)V","insertBoxIfNecessary(Lorg/springframework/asm/MethodVisitor;Ljava/lang/String;)V","insertCheckCast(Lorg/springframework/asm/MethodVisitor;Ljava/lang/String;)V","insertNewArrayCode(Lorg/springframework/asm/MethodVisitor;ILjava/lang/String;)V","insertNumericUnboxOrPrimitiveTypeCoercion(Lorg/springframework/asm/MethodVisitor;Ljava/lang/String;C)V","insertOptimalLoad(Lorg/springframework/asm/MethodVisitor;I)V","insertUnboxInsns(Lorg/springframework/asm/MethodVisitor;CLjava/lang/String;)V","insertUnboxNumberInsns(Lorg/springframework/asm/MethodVisitor;CLjava/lang/String;)V","isBooleanCompatible(Ljava/lang/String;)Z","isIntegerForNumericOp(Ljava/lang/Number;)Z","isPrimitive(Ljava/lang/String;)Z","isPrimitiveArray(Ljava/lang/String;)Z","isPrimitiveOrUnboxableSupportedNumber(Ljava/lang/String;)Z","isPrimitiveOrUnboxableSupportedNumberOrBoolean(Ljava/lang/String;)Z","isReferenceTypeArray(Ljava/lang/String;)Z","lastDescriptor()Ljava/lang/String;","loadEvaluationContext(Lorg/springframework/asm/MethodVisitor;)V","loadTarget(Lorg/springframework/asm/MethodVisitor;)V","nextFieldId()I","pushDescriptor(Ljava/lang/String;)V","registerNewClinit(Lorg/springframework/expression/spel/CodeFlow$ClinitAdder;)V","registerNewField(Lorg/springframework/expression/spel/CodeFlow$FieldAdder;)V","toBoxedDescriptor(Ljava/lang/String;)Ljava/lang/String;","toDescriptor(Ljava/lang/Class;)Ljava/lang/String;","toDescriptorFromObject(Ljava/lang/Object;)Ljava/lang/String;","toDescriptors([Ljava/lang/Class;)[Ljava/lang/String;","toJvmDescriptor(Ljava/lang/Class;)Ljava/lang/String;","toPrimitiveTargetDesc(Ljava/lang/String;)C","unboxBooleanIfNecessary(Lorg/springframework/asm/MethodVisitor;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/CompilablePropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/CompilablePropertyAccessor.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/expression/PropertyAccessor;","Lorg/springframework/asm/Opcodes;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/CompiledExpression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/CompiledExpression.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ExpressionState$VariableScope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ExpressionState$VariableScope.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;Ljava/lang/Object;)V","<init>(Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ExpressionState;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ExpressionState.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/EvaluationContext;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/spel/SpelParserConfiguration;)V","<init>(Lorg/springframework/expression/EvaluationContext;Lorg/springframework/expression/spel/SpelParserConfiguration;)V","convertValue(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","enterScope()V","enterScope(Ljava/lang/String;Ljava/lang/Object;)V","exitScope()V","findType(Ljava/lang/String;)Ljava/lang/Class;","getActiveContextObject()Lorg/springframework/expression/TypedValue;","getConfiguration()Lorg/springframework/expression/spel/SpelParserConfiguration;","getEvaluationContext()Lorg/springframework/expression/EvaluationContext;","getRootContextObject()Lorg/springframework/expression/TypedValue;","getScopeRootContextObject()Lorg/springframework/expression/TypedValue;","getTypeComparator()Lorg/springframework/expression/TypeComparator;","getTypeConverter()Lorg/springframework/expression/TypeConverter;","initScopeRootObjects()Ljava/util/Deque;","initVariableScopes()Ljava/util/Deque;","lookupVariable(Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","operate(Lorg/springframework/expression/Operation;Ljava/lang/Object;Ljava/lang/Object;)Lorg/springframework/expression/TypedValue;","popActiveContextObject()V","pushActiveContextObject(Lorg/springframework/expression/TypedValue;)V","setVariable(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/InternalParseException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/InternalParseException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/SpelParseException;)V","getCause()Ljava/lang/Throwable;","getCause()Lorg/springframework/expression/spel/SpelParseException;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelCompilerMode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelCompilerMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["valueOf(Ljava/lang/String;)Lorg/springframework/expression/spel/SpelCompilerMode;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelEvaluationException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelEvaluationException.class",
    "super": "Lorg/springframework/expression/EvaluationException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Throwable;Lorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","<init>(ILorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","<init>(Ljava/lang/Throwable;Lorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","<init>(Lorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","getMessageCode()Lorg/springframework/expression/spel/SpelMessage;","setPosition(I)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelMessage$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelMessage$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelMessage$Kind;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelMessage$Kind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/springframework/expression/spel/SpelMessage$Kind;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelMessage;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelMessage.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILorg/springframework/expression/spel/SpelMessage$Kind;ILjava/lang/String;)V","formatMessage([Ljava/lang/Object;)Ljava/lang/String;","values()[Lorg/springframework/expression/spel/SpelMessage;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelNode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelNode.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelParseException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelParseException.class",
    "super": "Lorg/springframework/expression/ParseException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/Throwable;Lorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","<init>(ILorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","<init>(Ljava/lang/String;ILorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/SpelParserConfiguration;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/SpelParserConfiguration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/expression/spel/SpelCompilerMode;Ljava/lang/ClassLoader;)V","<init>(Lorg/springframework/expression/spel/SpelCompilerMode;Ljava/lang/ClassLoader;ZZI)V","getCompilerClassLoader()Ljava/lang/ClassLoader;","getCompilerMode()Lorg/springframework/expression/spel/SpelCompilerMode;","getMaximumAutoGrowSize()I","isAutoGrowCollections()Z","isAutoGrowNullReferences()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Assign;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Assign.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/AstUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/AstUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getPropertyAccessorsToTry(Ljava/lang/Class;Ljava/util/List;)Ljava/util/List;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/BeanReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/BeanReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILjava/lang/String;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/BooleanLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/BooleanLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IIZ)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","getLiteralValue()Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/CompoundExpression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/CompoundExpression.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","setValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;)V","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/ConstructorReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/ConstructorReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","createArray(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","createNewInstance(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","findExecutorForConstructor(Ljava/lang/String;Ljava/util/List;Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/ConstructorExecutor;","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","hasInitializer()Z","isCompilable()Z","populateBooleanArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateByteArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateCharArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateDoubleArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateFloatArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateIntArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateLongArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","populateReferenceTypeArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;Ljava/lang/Class;)V","populateShortArray(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;Lorg/springframework/expression/TypeConverter;Lorg/springframework/expression/spel/ast/InlineList;)V","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Elvis;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Elvis.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","computeExitTypeDescriptor()V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/FloatLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/FloatLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IIF)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/FormatHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/FormatHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["formatClassNameForMessage(Ljava/lang/Class;)Ljava/lang/String;","formatMethodForMessage(Ljava/lang/String;Ljava/util/List;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/FunctionReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/FunctionReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","executeFunctionJLRMethod(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/reflect/Method;)Lorg/springframework/expression/TypedValue;","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getArguments(Lorg/springframework/expression/spel/ExpressionState;)[Ljava/lang/Object;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Identifier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Identifier.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$ArrayIndexingValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$ArrayIndexingValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/Indexer;Lorg/springframework/expression/TypeConverter;Ljava/lang/Object;ILorg/springframework/core/convert/TypeDescriptor;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$CollectionIndexingValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$CollectionIndexingValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/Indexer;Ljava/util/Collection;ILorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/expression/TypeConverter;ZI)V","getDefaultConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getValue()Lorg/springframework/expression/TypedValue;","growCollectionIfNecessary()V","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$IndexedType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$IndexedType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$MapIndexingValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$MapIndexingValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/Indexer;Lorg/springframework/expression/TypeConverter;Ljava/util/Map;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$PropertyIndexingValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$PropertyIndexingValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/Object;Ljava/lang/String;Lorg/springframework/expression/EvaluationContext;Lorg/springframework/core/convert/TypeDescriptor;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer$StringIndexingLValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer$StringIndexingLValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/String;ILorg/springframework/core/convert/TypeDescriptor;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Indexer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Indexer.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILorg/springframework/expression/spel/ast/SpelNodeImpl;)V","access$000(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/Object;I)Ljava/lang/Object;","access$100(Lorg/springframework/expression/spel/ast/Indexer;Lorg/springframework/expression/TypeConverter;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Class;)V","access$200(Lorg/springframework/expression/spel/ast/Indexer;)Ljava/lang/String;","access$202(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/String;)Ljava/lang/String;","access$300(Lorg/springframework/expression/spel/ast/Indexer;)Ljava/lang/Class;","access$302(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/Class;)Ljava/lang/Class;","access$400(Lorg/springframework/expression/spel/ast/Indexer;)Lorg/springframework/expression/PropertyAccessor;","access$402(Lorg/springframework/expression/spel/ast/Indexer;Lorg/springframework/expression/PropertyAccessor;)Lorg/springframework/expression/PropertyAccessor;","access$500(Lorg/springframework/expression/spel/ast/Indexer;)Ljava/lang/String;","access$502(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/String;)Ljava/lang/String;","access$600(Lorg/springframework/expression/spel/ast/Indexer;)Ljava/lang/Class;","access$602(Lorg/springframework/expression/spel/ast/Indexer;Ljava/lang/Class;)Ljava/lang/Class;","access$700(Lorg/springframework/expression/spel/ast/Indexer;)Lorg/springframework/expression/PropertyAccessor;","access$702(Lorg/springframework/expression/spel/ast/Indexer;Lorg/springframework/expression/PropertyAccessor;)Lorg/springframework/expression/PropertyAccessor;","accessArrayElement(Ljava/lang/Object;I)Ljava/lang/Object;","checkAccess(II)V","convertValue(Lorg/springframework/expression/TypeConverter;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","setArrayElement(Lorg/springframework/expression/TypeConverter;Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Class;)V","setValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;)V","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/InlineList;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/InlineList.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","checkIfConstant()V","generateClinitCode(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;Z)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getConstantValue()Ljava/util/List;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","isConstant()Z","lambda$generateCode$0(Ljava/lang/String;Lorg/springframework/asm/ClassWriter;Lorg/springframework/expression/spel/CodeFlow;)V","lambda$generateCode$1(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/InlineMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/InlineMap.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","checkIfConstant()V","getConstantValue()Ljava/util/Map;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isConstant()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/IntLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/IntLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;III)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Literal;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Literal.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","getIntLiteral(Ljava/lang/String;III)Lorg/springframework/expression/spel/ast/Literal;","getLongLiteral(Ljava/lang/String;III)Lorg/springframework/expression/spel/ast/Literal;","getRealLiteral(Ljava/lang/String;IIZ)Lorg/springframework/expression/spel/ast/Literal;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toString()Ljava/lang/String;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/LongLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/LongLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IIJ)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/MethodReference$CachedMethodExecutor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/MethodReference$CachedMethodExecutor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/MethodExecutor;Ljava/lang/Class;Lorg/springframework/core/convert/TypeDescriptor;Ljava/util/List;)V","get()Lorg/springframework/expression/MethodExecutor;","hasProxyTarget()Z","isSuitable(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Ljava/util/List;)Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/MethodReference$MethodValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/MethodReference$MethodValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/MethodReference;Lorg/springframework/expression/spel/ExpressionState;[Ljava/lang/Object;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/MethodReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/MethodReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZLjava/lang/String;II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","access$000(Lorg/springframework/expression/spel/ast/MethodReference;Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/Object;)Lorg/springframework/expression/TypedValue;","access$100(Lorg/springframework/expression/spel/ast/MethodReference;)V","findAccessorForMethod(Ljava/util/List;Ljava/lang/Object;Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/expression/MethodExecutor;","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getArgumentTypes([Ljava/lang/Object;)Ljava/util/List;","getArguments(Lorg/springframework/expression/spel/ExpressionState;)[Ljava/lang/Object;","getCachedExecutor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Ljava/util/List;)Lorg/springframework/expression/MethodExecutor;","getValueInternal(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;[Ljava/lang/Object;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","throwIfNotNullSafe(Ljava/util/List;)V","throwSimpleExceptionIfPossible(Ljava/lang/Object;Lorg/springframework/expression/AccessException;)V","toStringAST()Ljava/lang/String;","updateExitTypeDescriptor()V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/NullLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/NullLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpAnd;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpAnd.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","assertValueNotNull(Ljava/lang/Boolean;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getBooleanValue(Lorg/springframework/expression/spel/ExpressionState;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)Z","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpDec;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpDec.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIZ[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpDivide;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpDivide.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpEQ;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpEQ.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpGE;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpGE.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpGT;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpGT.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpInc;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpInc.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IIZ[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpLE;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpLE.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpLT;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpLT.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpMinus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpMinus.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getRightOperand()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpModulus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpModulus.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpMultiply;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpMultiply.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpNE;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpNE.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpOr;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpOr.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","assertValueNotNull(Ljava/lang/Boolean;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getBooleanValue(Lorg/springframework/expression/spel/ExpressionState;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)Z","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OpPlus;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OpPlus.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","convertTypedValueToString(Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/spel/ExpressionState;)Ljava/lang/String;","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getRightOperand()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;","walk(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Operator$DescriptorComparison;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Operator$DescriptorComparison.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZZC)V","checkNumericCompatibility(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/expression/spel/ast/Operator$DescriptorComparison;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Operator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Operator.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","equalityCheck(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/Object;)Z","generateComparisonCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;II)V","getLeftOperand()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","getOperatorName()Ljava/lang/String;","getRightOperand()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","isCompilableOperatorUsingNumerics()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorBetween;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorBetween.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorInstanceof;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorInstanceof.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorMatches$AccessCount;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorMatches$AccessCount.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/expression/spel/ast/OperatorMatches$1;)V","check()V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorMatches$MatcherInput;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorMatches$MatcherInput.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/CharSequence;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/CharSequence;Lorg/springframework/expression/spel/ast/OperatorMatches$AccessCount;)V","charAt(I)C","length()I","subSequence(II)Ljava/lang/CharSequence;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorMatches;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorMatches.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorNot;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorNot.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/support/BooleanTypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/OperatorPower;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/OperatorPower.class",
    "super": "Lorg/springframework/expression/spel/ast/Operator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Projection;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Projection.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZIILorg/springframework/expression/spel/ast/SpelNodeImpl;)V","determineCommonType(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/PropertyOrFieldReference$AccessorLValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/PropertyOrFieldReference$AccessorLValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Z)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZLjava/lang/String;II)V","access$000(Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Z)Lorg/springframework/expression/TypedValue;","access$100(Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;)Lorg/springframework/expression/PropertyAccessor;","access$200(Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;)Ljava/lang/String;","access$300(Lorg/springframework/expression/spel/ast/PropertyOrFieldReference;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Ljava/lang/String;Ljava/lang/Object;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getName()Ljava/lang/String;","getPropertyAccessorsToTry(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;","getValueInternal(Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Z)Lorg/springframework/expression/TypedValue;","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","isWritableProperty(Ljava/lang/String;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;)Z","readProperty(Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","setExitTypeDescriptor(Ljava/lang/String;)V","setValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;)V","toStringAST()Ljava/lang/String;","writeProperty(Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/QualifiedIdentifier;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/QualifiedIdentifier.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/RealLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/RealLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IID)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Selection;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Selection.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZIIILorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","prefix()Ljava/lang/String;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/SpelNodeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/SpelNode;","Lorg/springframework/asm/Opcodes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","generateCodeForArgument(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;Lorg/springframework/expression/spel/ast/SpelNodeImpl;Ljava/lang/String;)V","generateCodeForArguments(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;Ljava/lang/reflect/Member;[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getChild(I)Lorg/springframework/expression/spel/SpelNode;","getChildCount()I","getEndPosition()I","getExitDescriptor()Ljava/lang/String;","getObjectClass(Ljava/lang/Object;)Ljava/lang/Class;","getStartPosition()I","getTypedValue(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValue(Lorg/springframework/expression/spel/ExpressionState;)Ljava/lang/Object;","getValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Class;)Ljava/lang/Object;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","nextChildIs([Ljava/lang/Class;)Z","setValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/StringLiteral;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/StringLiteral.class",
    "super": "Lorg/springframework/expression/spel/ast/Literal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;IILjava/lang/String;)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getLiteralValue()Lorg/springframework/expression/TypedValue;","isCompilable()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/Ternary;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/Ternary.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II[Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","computeExitTypeDescriptor()V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/TypeCode;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/TypeCode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;ILjava/lang/Class;)V","forName(Ljava/lang/String;)Lorg/springframework/expression/spel/ast/TypeCode;","getType()Ljava/lang/Class;","valueOf(Ljava/lang/String;)Lorg/springframework/expression/spel/ast/TypeCode;","values()[Lorg/springframework/expression/spel/ast/TypeCode;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/TypeReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/TypeReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(IILorg/springframework/expression/spel/ast/SpelNodeImpl;I)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","isCompilable()Z","makeArrayIfNecessary(Ljava/lang/Class;)Ljava/lang/Class;","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/ValueRef$NullValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/ValueRef$NullValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/ValueRef$TypedValueHolderValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/ValueRef$TypedValueHolderValueRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/ValueRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/ValueRef.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/VariableReference$VariableRef;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/VariableReference$VariableRef.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/ast/ValueRef;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/expression/TypedValue;Lorg/springframework/expression/EvaluationContext;)V","getValue()Lorg/springframework/expression/TypedValue;","setValue(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/VariableReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/VariableReference.class",
    "super": "Lorg/springframework/expression/spel/ast/SpelNodeImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","generateCode(Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getValueInternal(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/TypedValue;","getValueRef(Lorg/springframework/expression/spel/ExpressionState;)Lorg/springframework/expression/spel/ast/ValueRef;","isCompilable()Z","setValue(Lorg/springframework/expression/spel/ExpressionState;Ljava/lang/Object;)V","toStringAST()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/ast/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/ast/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/InternalSpelExpressionParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/InternalSpelExpressionParser.class",
    "super": "Lorg/springframework/expression/common/TemplateAwareExpressionParser;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/expression/spel/SpelParserConfiguration;)V","checkLeftOperand(Lorg/springframework/expression/spel/standard/Token;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","checkOperands(Lorg/springframework/expression/spel/standard/Token;Lorg/springframework/expression/spel/ast/SpelNodeImpl;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","checkRightOperand(Lorg/springframework/expression/spel/standard/Token;Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","consumeArguments(Ljava/util/List;)V","doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;","eatConstructorArgs(Ljava/util/List;)V","eatDottedNode()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatLogicalAndExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatLogicalOrExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatNode()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatNonDottedNode()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatPossiblyQualifiedId()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatPowerIncDecExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatPrimaryExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatProductExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatRelationalExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatStartNode()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatSumExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","eatToken(Lorg/springframework/expression/spel/standard/TokenKind;)Lorg/springframework/expression/spel/standard/Token;","eatUnaryExpression()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","internalException(ILorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)Lorg/springframework/expression/spel/InternalParseException;","isValidQualifiedId(Lorg/springframework/expression/spel/standard/Token;)Z","maybeEatBeanReference()Z","maybeEatConstructorReference()Z","maybeEatFunctionOrVar()Z","maybeEatIndexer()Z","maybeEatInlineListOrMap()Z","maybeEatLiteral()Z","maybeEatMethodArgs()[Lorg/springframework/expression/spel/ast/SpelNodeImpl;","maybeEatMethodOrProperty(Z)Z","maybeEatNullReference()Z","maybeEatParenExpression()Z","maybeEatProjection(Z)Z","maybeEatRelationalOperator()Lorg/springframework/expression/spel/standard/Token;","maybeEatSelection(Z)Z","maybeEatTypeReference()Z","nextToken()Lorg/springframework/expression/spel/standard/Token;","peekIdentifierToken(Ljava/lang/String;)Z","peekSelectToken()Z","peekToken()Lorg/springframework/expression/spel/standard/Token;","peekToken(Lorg/springframework/expression/spel/standard/TokenKind;)Z","peekToken(Lorg/springframework/expression/spel/standard/TokenKind;Lorg/springframework/expression/spel/standard/TokenKind;)Z","peekToken(Lorg/springframework/expression/spel/standard/TokenKind;Lorg/springframework/expression/spel/standard/TokenKind;Lorg/springframework/expression/spel/standard/TokenKind;)Z","peekToken(Lorg/springframework/expression/spel/standard/TokenKind;Z)Z","pop()Lorg/springframework/expression/spel/ast/SpelNodeImpl;","positionOf(Lorg/springframework/expression/spel/standard/Token;)I","push(Lorg/springframework/expression/spel/ast/SpelNodeImpl;)V","takeToken()Lorg/springframework/expression/spel/standard/Token;","toString(Lorg/springframework/expression/spel/standard/Token;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/SpelCompiler$ChildClassLoader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/SpelCompiler$ChildClassLoader.class",
    "super": "Ljava/net/URLClassLoader;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","defineClass(Ljava/lang/String;[B)Ljava/lang/Class;","getClassesDefinedCount()I"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/SpelCompiler$ExpressionClassWriter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/SpelCompiler$ExpressionClassWriter.class",
    "super": "Lorg/springframework/asm/ClassWriter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/standard/SpelCompiler;)V","getClassLoader()Ljava/lang/ClassLoader;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/SpelCompiler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/SpelCompiler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/asm/Opcodes;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ClassLoader;)V","access$000(Lorg/springframework/expression/spel/standard/SpelCompiler;)Lorg/springframework/expression/spel/standard/SpelCompiler$ChildClassLoader;","compile(Lorg/springframework/expression/spel/ast/SpelNodeImpl;)Lorg/springframework/expression/spel/CompiledExpression;","createExpressionClass(Lorg/springframework/expression/spel/ast/SpelNodeImpl;)Ljava/lang/Class;","getCompiler(Ljava/lang/ClassLoader;)Lorg/springframework/expression/spel/standard/SpelCompiler;","getNextSuffix()I","loadClass(Ljava/lang/String;[B)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/SpelExpression;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/SpelExpression.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/Expression;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lorg/springframework/expression/spel/ast/SpelNodeImpl;Lorg/springframework/expression/spel/SpelParserConfiguration;)V","checkCompile(Lorg/springframework/expression/spel/ExpressionState;)V","compileExpression()Z","getValue(Lorg/springframework/expression/EvaluationContext;)Ljava/lang/Object;","getValue(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/SpelExpressionParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/SpelExpressionParser.class",
    "super": "Lorg/springframework/expression/common/TemplateAwareExpressionParser;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/SpelParserConfiguration;)V","doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/Expression;","doParseExpression(Ljava/lang/String;Lorg/springframework/expression/ParserContext;)Lorg/springframework/expression/spel/standard/SpelExpression;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/Token;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/Token.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/standard/TokenKind;II)V","<init>(Lorg/springframework/expression/spel/standard/TokenKind;[CII)V","asBetweenToken()Lorg/springframework/expression/spel/standard/Token;","asInstanceOfToken()Lorg/springframework/expression/spel/standard/Token;","asMatchesToken()Lorg/springframework/expression/spel/standard/Token;","getKind()Lorg/springframework/expression/spel/standard/TokenKind;","isIdentifier()Z","isNumericRelationalOperator()Z","stringValue()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/TokenKind;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/TokenKind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;ILjava/lang/String;)V","getLength()I","hasPayload()Z","toString()Ljava/lang/String;","valueOf(Ljava/lang/String;)Lorg/springframework/expression/spel/standard/TokenKind;","values()[Lorg/springframework/expression/spel/standard/TokenKind;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/Tokenizer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/Tokenizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","isAlphabetic(C)Z","isChar(CC)Z","isDigit(C)Z","isDoubleSuffix(C)Z","isExhausted()Z","isExponentChar(C)Z","isFloatSuffix(C)Z","isHexadecimalDigit(C)Z","isIdentifier(C)Z","isSign(C)Z","isTwoCharToken(Lorg/springframework/expression/spel/standard/TokenKind;)Z","lexDoubleQuotedStringLiteral()V","lexIdentifier()V","lexNumericLiteral(Z)V","lexQuotedStringLiteral()V","process()Ljava/util/List;","pushCharToken(Lorg/springframework/expression/spel/standard/TokenKind;)V","pushHexIntToken([CZII)V","pushIntToken([CZII)V","pushOneCharOrTwoCharToken(Lorg/springframework/expression/spel/standard/TokenKind;I[C)V","pushPairToken(Lorg/springframework/expression/spel/standard/TokenKind;)V","pushRealToken([CZII)V","raiseParseException(ILorg/springframework/expression/spel/SpelMessage;[Ljava/lang/Object;)V","subarray(II)[C"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/standard/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/standard/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/BooleanTypedValue;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/BooleanTypedValue.class",
    "super": "Lorg/springframework/expression/TypedValue;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Z)V","forValue(Z)Lorg/springframework/expression/spel/support/BooleanTypedValue;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchKind;)V","isCloseMatch()Z","isExactMatch()Z","isMatchRequiringConversion()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchKind;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchKind.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectionHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectionHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["compareArguments(Ljava/util/List;Ljava/util/List;Lorg/springframework/expression/TypeConverter;)Lorg/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchInfo;","compareArgumentsVarargs(Ljava/util/List;Ljava/util/List;Lorg/springframework/expression/TypeConverter;)Lorg/springframework/expression/spel/support/ReflectionHelper$ArgumentsMatchInfo;","convertAllArguments(Lorg/springframework/expression/TypeConverter;[Ljava/lang/Object;Ljava/lang/reflect/Method;)Z","convertArguments(Lorg/springframework/expression/TypeConverter;[Ljava/lang/Object;Ljava/lang/reflect/Executable;Ljava/lang/Integer;)Z","getTypeDifferenceWeight(Ljava/util/List;Ljava/util/List;)I","isFirstEntryInArray(Ljava/lang/Object;Ljava/lang/Object;)Z","setupArgumentsForVarargsInvocation([Ljava/lang/Class;[Ljava/lang/Object;)[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectiveConstructorExecutor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectiveConstructorExecutor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/ConstructorExecutor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;)V","execute(Lorg/springframework/expression/EvaluationContext;[Ljava/lang/Object;)Lorg/springframework/expression/TypedValue;","getConstructor()Ljava/lang/reflect/Constructor;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectiveConstructorResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectiveConstructorResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/ConstructorResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","lambda$resolve$0(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;)I","resolve(Lorg/springframework/expression/EvaluationContext;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/expression/ConstructorExecutor;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectiveMethodExecutor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectiveMethodExecutor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/MethodExecutor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;)V","didArgumentConversionOccur()Z","discoverPublicDeclaringClass(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/Class;","execute(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;[Ljava/lang/Object;)Lorg/springframework/expression/TypedValue;","getMethod()Ljava/lang/reflect/Method;","getPublicDeclaringClass()Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectiveMethodResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectiveMethodResolver.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/MethodResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","getMethods(Ljava/lang/Class;Ljava/lang/Object;)Ljava/util/Set;","isCandidateForInvocation(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z","lambda$resolve$0(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I","resolve(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/expression/MethodExecutor;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor$InvokerPair;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectivePropertyAccessor$InvokerPair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Member;Lorg/springframework/core/convert/TypeDescriptor;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor$OptimalPropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectivePropertyAccessor$OptimalPropertyAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/spel/CompilablePropertyAccessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor$InvokerPair;)V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","generateCode(Ljava/lang/String;Lorg/springframework/asm/MethodVisitor;Lorg/springframework/expression/spel/CodeFlow;)V","getPropertyType()Ljava/lang/Class;","getSpecificTargetClasses()[Ljava/lang/Class;","isCompilable()Z","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor$PropertyCacheKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectivePropertyAccessor$PropertyCacheKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/lang/String;Z)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor$PropertyCacheKey;)I","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/ReflectivePropertyAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/ReflectivePropertyAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/PropertyAccessor;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.Collections.EMPTY_SET",
    "invokedMethods": ["<clinit>()V","<init>()V","canRead(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","canWrite(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Z","createOptimalAccessor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/PropertyAccessor;","findField(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/reflect/Field;","findField(Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/reflect/Field;","findGetterForProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/reflect/Method;","findGetterForProperty(Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/reflect/Method;","findMethodForProperty([Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;ZILjava/util/Set;)Ljava/lang/reflect/Method;","findSetterForProperty(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/reflect/Method;","findSetterForProperty(Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/reflect/Method;","getPropertyMethodSuffix(Ljava/lang/String;)Ljava/lang/String;","getPropertyMethodSuffixes(Ljava/lang/String;)[Ljava/lang/String;","getSortedMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","getSpecificTargetClasses()[Ljava/lang/Class;","getTypeDescriptor(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/core/convert/TypeDescriptor;","isCandidateForProperty(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z","lambda$getSortedMethods$1(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","lambda$null$0(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I","read(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/expression/TypedValue;","write(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/StandardEvaluationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/StandardEvaluationContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/EvaluationContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","addBeforeDefault(Ljava/util/List;Ljava/lang/Object;)V","addPropertyAccessor(Lorg/springframework/expression/PropertyAccessor;)V","getBeanResolver()Lorg/springframework/expression/BeanResolver;","getConstructorResolvers()Ljava/util/List;","getMethodResolvers()Ljava/util/List;","getOperatorOverloader()Lorg/springframework/expression/OperatorOverloader;","getPropertyAccessors()Ljava/util/List;","getRootObject()Lorg/springframework/expression/TypedValue;","getTypeComparator()Lorg/springframework/expression/TypeComparator;","getTypeConverter()Lorg/springframework/expression/TypeConverter;","getTypeLocator()Lorg/springframework/expression/TypeLocator;","initConstructorResolvers()Ljava/util/List;","initMethodResolvers()Ljava/util/List;","initPropertyAccessors()Ljava/util/List;","lookupVariable(Ljava/lang/String;)Ljava/lang/Object;","setBeanResolver(Lorg/springframework/expression/BeanResolver;)V","setTypeConverter(Lorg/springframework/expression/TypeConverter;)V","setTypeLocator(Lorg/springframework/expression/TypeLocator;)V","setVariable(Ljava/lang/String;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/StandardOperatorOverloader;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/StandardOperatorOverloader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/OperatorOverloader;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","operate(Lorg/springframework/expression/Operation;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","overridesOperation(Lorg/springframework/expression/Operation;Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/StandardTypeComparator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/StandardTypeComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/TypeComparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/StandardTypeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/StandardTypeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/TypeConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/core/convert/ConversionService;)V","canConvert(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","convertValue(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/StandardTypeLocator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/StandardTypeLocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/expression/TypeLocator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/ClassLoader;)V","findType(Ljava/lang/String;)Ljava/lang/Class;","registerImport(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/expression/spel/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-expression-5.3.1.jar!/org/springframework/expression/spel/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/AnnotationFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/AnnotationFormatterFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/Formatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/Formatter.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/format/Printer;","Lorg/springframework/format/Parser;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/FormatterRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/FormatterRegistrar.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/FormatterRegistry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/FormatterRegistry.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConverterRegistry;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/Parser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/Parser.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/Printer;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/Printer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/annotation/DateTimeFormat$ISO;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/annotation/DateTimeFormat$ISO.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/springframework/format/annotation/DateTimeFormat$ISO;"]
  }
,
  {
    "className": "Lorg/springframework/format/annotation/DateTimeFormat;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/annotation/DateTimeFormat.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/annotation/NumberFormat$Style;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/annotation/NumberFormat$Style.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/annotation/NumberFormat;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/annotation/NumberFormat.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/annotation/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/annotation/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.util.calendar.ZoneInfoFile.zones",
    "invokedMethods": ["<clinit>()V","<init>()V","createDateFormat(Ljava/util/Locale;)Ljava/text/DateFormat;","getDateFormat(Ljava/util/Locale;)Ljava/text/DateFormat;","getStylePatternForChar(I)I","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Date;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/util/Date;Ljava/util/Locale;)Ljava/lang/String;","setIso(Lorg/springframework/format/annotation/DateTimeFormat$ISO;)V","setPattern(Ljava/lang/String;)V","setStylePattern(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$CalendarToDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$CalendarToDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/util/Date;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$CalendarToLongConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$CalendarToLongConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/lang/Long;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$DateToCalendarConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$DateToCalendarConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Date;)Ljava/util/Calendar;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$DateToLongConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$DateToLongConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Date;)Ljava/lang/Long;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$LongToCalendarConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$LongToCalendarConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Long;)Ljava/util/Calendar;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar$LongToDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar$LongToDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/DateFormatterRegistrar$1;)V","convert(Ljava/lang/Long;)Ljava/util/Date;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateFormatterRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateFormatterRegistrar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/FormatterRegistrar;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addDateConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V","registerFormatters(Lorg/springframework/format/FormatterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/DateTimeFormatAnnotationFormatterFactory.class",
    "super": "Lorg/springframework/context/support/EmbeddedValueResolutionSupport;",
    "interfaces": ["Lorg/springframework/format/AnnotationFormatterFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>()V","getFieldTypes()Ljava/util/Set;","getFormatter(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Lorg/springframework/format/Formatter;","getParser(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getParser(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getPrinter(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Printer;","getPrinter(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Lorg/springframework/format/Printer;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/DateTimeFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/DateTimeFormatterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToCalendarConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToCalendarConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToDateMidnightConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToDateMidnightConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLocalTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLongConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToLongConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToMutableDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateTimeToMutableDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/joda/JodaTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters$DateToReadableInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters$DateToReadableInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "false",
    "unsafeReason": "org/joda/time/ReadableInstant",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeConverters;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeConverters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["registerConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeFormatterRegistrar$Type;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/springframework/format/datetime/joda/JodaTimeFormatterRegistrar$Type;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/JodaTimeFormatterRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/JodaTimeFormatterRegistrar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/FormatterRegistrar;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFormatter(Lorg/springframework/format/datetime/joda/JodaTimeFormatterRegistrar$Type;)Ljava/lang/Object;","registerFormatters(Lorg/springframework/format/FormatterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/LocalDateParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/LocalDateParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Parser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/ReadablePartialPrinter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/ReadablePartialPrinter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Printer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/joda/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/joda/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/datetime/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeContextHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeContextHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.NamedThreadLocal",
    "invokedMethods": ["<clinit>()V","getDateTimeContext()Lorg/springframework/format/datetime/standard/DateTimeContext;","getFormatter(Ljava/time/format/DateTimeFormatter;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/Instant;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/LocalDate;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/LocalDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToLocalTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/LocalTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToOffsetDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToOffsetDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/OffsetDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$CalendarToZonedDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$CalendarToZonedDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/util/Calendar;)Ljava/time/ZonedDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$InstantToLongConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$InstantToLongConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/Instant;)Ljava/lang/Long;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$LocalDateTimeToLocalDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$LocalDateTimeToLocalDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/LocalDateTime;)Ljava/time/LocalDate;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$LocalDateTimeToLocalTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$LocalDateTimeToLocalTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/LocalDateTime;)Ljava/time/LocalTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$LongToInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$LongToInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Long;)Ljava/time/Instant;","convert(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/OffsetDateTime;)Ljava/time/Instant;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/OffsetDateTime;)Ljava/time/LocalDate;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/OffsetDateTime;)Ljava/time/LocalDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToLocalTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/OffsetDateTime;)Ljava/time/LocalTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToZonedDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$OffsetDateTimeToZonedDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/OffsetDateTime;)Ljava/time/ZonedDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToInstantConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToInstantConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/time/Instant;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalDateConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalDateConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/time/LocalDate;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/time/LocalDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToLocalTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/time/LocalTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToOffsetDateTimeConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters$ZonedDateTimeToOffsetDateTimeConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/Converter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/format/datetime/standard/DateTimeConverters$1;)V","convert(Ljava/lang/Object;)Ljava/lang/Object;","convert(Ljava/time/ZonedDateTime;)Ljava/time/OffsetDateTime;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeConverters;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeConverters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["access$2000(Ljava/util/Calendar;)Ljava/time/ZonedDateTime;","calendarToZonedDateTime(Ljava/util/Calendar;)Ljava/time/ZonedDateTime;","registerConverters(Lorg/springframework/core/convert/converter/ConverterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeFormatterFactory$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeFormatterFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeFormatterFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertStyleCharacter(C)Ljava/time/format/FormatStyle;","createDateTimeFormatter()Ljava/time/format/DateTimeFormatter;","createDateTimeFormatter(Ljava/time/format/DateTimeFormatter;)Ljava/time/format/DateTimeFormatter;","setIso(Lorg/springframework/format/annotation/DateTimeFormat$ISO;)V","setPattern(Ljava/lang/String;)V","setStylePattern(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeFormatterRegistrar$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar$Type;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeFormatterRegistrar$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar$Type;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DateTimeFormatterRegistrar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/FormatterRegistrar;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getFallbackFormatter(Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar$Type;)Ljava/time/format/DateTimeFormatter;","getFormatter(Lorg/springframework/format/datetime/standard/DateTimeFormatterRegistrar$Type;)Ljava/time/format/DateTimeFormatter;","registerFormatters(Lorg/springframework/format/FormatterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/DurationFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/DurationFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/Duration;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/Duration;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/InstantFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/InstantFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/Instant;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/Instant;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/Jsr310DateTimeFormatAnnotationFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/Jsr310DateTimeFormatAnnotationFormatterFactory.class",
    "super": "Lorg/springframework/context/support/EmbeddedValueResolutionSupport;",
    "interfaces": ["Lorg/springframework/format/AnnotationFormatterFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","<init>()V","getFieldTypes()Ljava/util/Set;","getFormatter(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Ljava/time/format/DateTimeFormatter;","getParser(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getParser(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getPrinter(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Printer;","getPrinter(Lorg/springframework/format/annotation/DateTimeFormat;Ljava/lang/Class;)Lorg/springframework/format/Printer;","isLocal(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/MonthDayFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/MonthDayFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/MonthDay;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/MonthDay;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/MonthFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/MonthFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/Month;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/Month;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/PeriodFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/PeriodFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/Period;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/Period;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/TemporalAccessorParser;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/TemporalAccessorParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Parser;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Ljava/time/format/DateTimeFormatter;)V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/temporal/TemporalAccessor;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/TemporalAccessorPrinter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/TemporalAccessorPrinter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Printer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/time/format/DateTimeFormatter;)V","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/temporal/TemporalAccessor;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/YearFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/YearFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/Year;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/Year;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/YearMonthFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/YearMonthFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/YearMonth;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/time/YearMonth;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/datetime/standard/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/datetime/standard/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/number/AbstractNumberFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/AbstractNumberFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Number;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","print(Ljava/lang/Number;Ljava/util/Locale;)Ljava/lang/String;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/CurrencyStyleFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/CurrencyStyleFormatter.class",
    "super": "Lorg/springframework/format/number/AbstractNumberFormatter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/math/BigDecimal;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/NumberFormatAnnotationFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/NumberFormatAnnotationFormatterFactory.class",
    "super": "Lorg/springframework/context/support/EmbeddedValueResolutionSupport;",
    "interfaces": ["Lorg/springframework/format/AnnotationFormatterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","configureFormatterFrom(Lorg/springframework/format/annotation/NumberFormat;)Lorg/springframework/format/Formatter;","getFieldTypes()Ljava/util/Set;","getParser(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getParser(Lorg/springframework/format/annotation/NumberFormat;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getPrinter(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Printer;","getPrinter(Lorg/springframework/format/annotation/NumberFormat;Ljava/lang/Class;)Lorg/springframework/format/Printer;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/NumberStyleFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/NumberStyleFormatter.class",
    "super": "Lorg/springframework/format/number/AbstractNumberFormatter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","getNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/PercentStyleFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/PercentStyleFormatter.class",
    "super": "Lorg/springframework/format/number/AbstractNumberFormatter;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/money/CurrencyUnitFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/CurrencyUnitFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory$NumberDecoratingFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory$NumberDecoratingFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/format/Formatter;)V","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory$PatternDecoratingFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory$PatternDecoratingFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "false",
    "unsafeReason": "javax/money/NumberValue",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/Jsr354NumberFormatAnnotationFormatterFactory.class",
    "super": "Lorg/springframework/context/support/EmbeddedValueResolutionSupport;",
    "interfaces": ["Lorg/springframework/format/AnnotationFormatterFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","configureFormatterFrom(Lorg/springframework/format/annotation/NumberFormat;)Lorg/springframework/format/Formatter;","getFieldTypes()Ljava/util/Set;","getParser(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getParser(Lorg/springframework/format/annotation/NumberFormat;Ljava/lang/Class;)Lorg/springframework/format/Parser;","getPrinter(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Lorg/springframework/format/Printer;","getPrinter(Lorg/springframework/format/annotation/NumberFormat;Ljava/lang/Class;)Lorg/springframework/format/Printer;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/money/MonetaryAmountFormatter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/MonetaryAmountFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/format/Formatter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getMonetaryAmountFormat(Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","parse(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;","print(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/number/money/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/money/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/number/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/number/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/format/support/DefaultFormattingConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/DefaultFormattingConversionService.class",
    "super": "Lorg/springframework/format/support/FormattingConversionService;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","addDefaultFormatters(Lorg/springframework/format/FormatterRegistry;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService$AnnotationConverterKey;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService$AnnotationConverterKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)V","equals(Ljava/lang/Object;)Z","getAnnotation()Ljava/lang/annotation/Annotation;","getFieldType()Ljava/lang/Class;","hashCode()I"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService$AnnotationParserConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService$AnnotationParserConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService$AnnotationPrinterConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/ConditionalGenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/format/support/FormattingConversionService;Ljava/lang/Class;Lorg/springframework/format/AnnotationFormatterFactory;Ljava/lang/Class;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","matches(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService$ParserConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService$ParserConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Lorg/springframework/format/Parser;Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService$PrinterConverter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService$PrinterConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/core/convert/converter/GenericConverter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/core/convert/ConversionService;)V","convert(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;","getConvertibleTypes()Ljava/util/Set;","resolvePrinterObjectType(Lorg/springframework/format/Printer;)Ljava/lang/Class;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/format/support/FormattingConversionService;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/FormattingConversionService.class",
    "super": "Lorg/springframework/core/convert/support/GenericConversionService;",
    "interfaces": ["Lorg/springframework/format/FormatterRegistry;","Lorg/springframework/context/EmbeddedValueResolverAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lorg/springframework/format/support/FormattingConversionService;)Ljava/util/Map;","access$100(Lorg/springframework/format/support/FormattingConversionService;)Ljava/util/Map;","addFormatter(Lorg/springframework/format/Formatter;)V","addFormatterForFieldAnnotation(Lorg/springframework/format/AnnotationFormatterFactory;)V","addFormatterForFieldType(Ljava/lang/Class;Lorg/springframework/format/Formatter;)V","addFormatterForFieldType(Ljava/lang/Class;Lorg/springframework/format/Printer;Lorg/springframework/format/Parser;)V","getAnnotationType(Lorg/springframework/format/AnnotationFormatterFactory;)Ljava/lang/Class;","getFieldType(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;","getFieldType(Lorg/springframework/format/Formatter;)Ljava/lang/Class;","lambda$getFieldType$0(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/String;","setEmbeddedValueResolver(Lorg/springframework/util/StringValueResolver;)V"]
  }
,
  {
    "className": "Lorg/springframework/format/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/format/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/http/server/reactive/HttpHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/http/server/reactive/HttpHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/http/server/reactive/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/http/server/reactive/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/instrument/classloading/LoadTimeWeaver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/instrument/classloading/LoadTimeWeaver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/instrument/classloading/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/instrument/classloading/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiAccessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getJndiTemplate()Lorg/springframework/jndi/JndiTemplate;"]
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiLocatorDelegate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiLocatorDelegate.class",
    "super": "Lorg/springframework/jndi/JndiLocatorSupport;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.core.SpringProperties",
    "invokedMethods": ["<clinit>()V","<init>()V","createDefaultResourceRefLocator()Lorg/springframework/jndi/JndiLocatorDelegate;","isDefaultJndiEnvironmentAvailable()Z","lookup(Ljava/lang/String;)Ljava/lang/Object;","lookup(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiLocatorSupport;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiLocatorSupport.class",
    "super": "Lorg/springframework/jndi/JndiAccessor;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertJndiName(Ljava/lang/String;)Ljava/lang/String;","isResourceRef()Z","lookup(Ljava/lang/String;)Ljava/lang/Object;","lookup(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","setResourceRef(Z)V"]
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiPropertySource.class",
    "super": "Lorg/springframework/core/env/PropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Lorg/springframework/jndi/JndiLocatorDelegate;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/jndi/JndiTemplate;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/JndiTemplate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","createInitialContext()Ljavax/naming/Context;","execute(Lorg/springframework/jndi/JndiCallback;)Ljava/lang/Object;","getContext()Ljavax/naming/Context;","getEnvironment()Ljava/util/Properties;","lambda$lookup$0(Ljava/lang/String;Ljavax/naming/Context;)Ljava/lang/Object;","lookup(Ljava/lang/String;)Ljava/lang/Object;","lookup(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;","releaseContext(Ljavax/naming/Context;)V"]
  }
,
  {
    "className": "Lorg/springframework/jndi/TypeMismatchNamingException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/TypeMismatchNamingException.class",
    "super": "Ljavax/naming/NamingException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/jndi/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/jndi/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/objenesis/Objenesis;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/Objenesis.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/objenesis/ObjenesisException;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/ObjenesisException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/SpringObjenesis;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/SpringObjenesis.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/Objenesis;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/objenesis/strategy/InstantiatorStrategy;)V","getInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;","isWorthTrying()Z","newInstance(Ljava/lang/Class;Z)Ljava/lang/Object;","newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/ObjectInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/ObjectInstantiator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/android/Android10Instantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/android/Android10Instantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","getNewStaticMethod()Ljava/lang/reflect/Method;","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/android/Android17Instantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/android/Android17Instantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","findConstructorIdForJavaLangObjectConstructor()Ljava/lang/Integer;","getNewInstanceMethod()Ljava/lang/reflect/Method;","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/android/Android18Instantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/android/Android18Instantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","findConstructorIdForJavaLangObjectConstructor()Ljava/lang/Long;","getNewInstanceMethod()Ljava/lang/reflect/Method;","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/basic/AccessibleInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/basic/AccessibleInstantiator.class",
    "super": "Lorg/springframework/objenesis/instantiator/basic/ConstructorInstantiator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/basic/ConstructorInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/basic/ConstructorInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.io.OutputStream.write(int)",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/Class;)V","advanceBuffer()V","available()I","initialize()V","read()I","read([BII)I"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/basic/ObjectInputStreamInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/gcj/GCJInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/gcj/GCJInstantiator.class",
    "super": "Lorg/springframework/objenesis/instantiator/gcj/GCJInstantiatorBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/gcj/GCJInstantiatorBase;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/gcj/GCJInstantiatorBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","initialize()V"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/perc/PercInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/perc/PercInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/sun/SunReflectionFactoryHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/sun/SunReflectionFactoryHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createReflectionFactory(Ljava/lang/Class;)Ljava/lang/Object;","getNewConstructorForSerializationMethod(Ljava/lang/Class;)Ljava/lang/reflect/Method;","getReflectionFactoryClass()Ljava/lang/Class;","newConstructorForSerialization(Ljava/lang/Class;Ljava/lang/reflect/Constructor;)Ljava/lang/reflect/Constructor;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/sun/SunReflectionFactoryInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/sun/SunReflectionFactoryInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","getJavaLangObjectConstructor()Ljava/lang/reflect/Constructor;","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/sun/UnsafeFactoryInstantiator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/sun/UnsafeFactoryInstantiator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","newInstance()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/instantiator/util/UnsafeUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/instantiator/util/UnsafeUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","getUnsafe()Lsun/misc/Unsafe;"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/strategy/BaseInstantiatorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/strategy/BaseInstantiatorStrategy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/objenesis/strategy/InstantiatorStrategy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/strategy/InstantiatorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/strategy/InstantiatorStrategy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/objenesis/strategy/PlatformDescription;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/strategy/PlatformDescription.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","getAndroidVersion()I","getAndroidVersion0()I","getGaeRuntimeVersion()Ljava/lang/String;","getIsAndroidOpenJDK()Z","isAndroidOpenJDK()Z","isGoogleAppEngine()Z","isThisJVM(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/objenesis/strategy/StdInstantiatorStrategy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/objenesis/strategy/StdInstantiatorStrategy.class",
    "super": "Lorg/springframework/objenesis/strategy/BaseInstantiatorStrategy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newInstantiatorOf(Ljava/lang/Class;)Lorg/springframework/objenesis/instantiator/ObjectInstantiator;"]
  }
,
  {
    "className": "Lorg/springframework/samples/petclinic/PetClinicApplication;",
    "module": "unnamed",
    "source": "/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/classes/org/springframework/samples/petclinic/PetClinicApplication.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["main([Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/stereotype/Component;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/stereotype/Component.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/stereotype/Indexed;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/stereotype/Indexed.class",
    "super": "null",
    "interfaces": ["Ljava/lang/annotation/Annotation;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/stereotype/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/stereotype/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/ui/context/HierarchicalThemeSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/HierarchicalThemeSource.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/ui/context/ThemeSource;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/ui/context/Theme;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/Theme.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/ui/context/ThemeSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/ThemeSource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/ui/context/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/ui/context/support/DelegatingThemeSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/support/DelegatingThemeSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/ui/context/HierarchicalThemeSource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getParentThemeSource()Lorg/springframework/ui/context/ThemeSource;","setParentThemeSource(Lorg/springframework/ui/context/ThemeSource;)V"]
  }
,
  {
    "className": "Lorg/springframework/ui/context/support/ResourceBundleThemeSource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/support/ResourceBundleThemeSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/ui/context/HierarchicalThemeSource;","Lorg/springframework/beans/factory/BeanClassLoaderAware;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getParentThemeSource()Lorg/springframework/ui/context/ThemeSource;","initParent(Lorg/springframework/ui/context/Theme;)V","setBeanClassLoader(Ljava/lang/ClassLoader;)V","setParentThemeSource(Lorg/springframework/ui/context/ThemeSource;)V"]
  }
,
  {
    "className": "Lorg/springframework/ui/context/support/UiApplicationContextUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/support/UiApplicationContextUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","initThemeSource(Lorg/springframework/context/ApplicationContext;)Lorg/springframework/ui/context/ThemeSource;"]
  }
,
  {
    "className": "Lorg/springframework/ui/context/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-context-5.3.1.jar!/org/springframework/ui/context/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/AntPathMatcher$AntPathStringMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/AntPathMatcher$AntPathStringMatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Z)V","matchStrings(Ljava/lang/String;Ljava/util/Map;)Z","quote(Ljava/lang/String;II)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/AntPathMatcher$PathSeparatorPatternCache;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/AntPathMatcher$PathSeparatorPatternCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/AntPathMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/AntPathMatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/util/PathMatcher;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(Ljava/lang/String;)V","deactivatePatternCache()V","doMatch(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)Z","getStringMatcher(Ljava/lang/String;)Lorg/springframework/util/AntPathMatcher$AntPathStringMatcher;","isPattern(Ljava/lang/String;)Z","isPotentialMatch(Ljava/lang/String;[Ljava/lang/String;)Z","isWildcardChar(C)Z","match(Ljava/lang/String;Ljava/lang/String;)Z","matchStart(Ljava/lang/String;Ljava/lang/String;)Z","matchStrings(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Z","skipSegment(Ljava/lang/String;ILjava/lang/String;)I","skipSeparator(Ljava/lang/String;ILjava/lang/String;)I","tokenizePath(Ljava/lang/String;)[Ljava/lang/String;","tokenizePattern(Ljava/lang/String;)[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/Assert;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/Assert.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["assignableCheckFailed(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V","endsWithSeparator(Ljava/lang/String;)Z","hasLength(Ljava/lang/String;Ljava/lang/String;)V","hasText(Ljava/lang/String;Ljava/lang/String;)V","instanceCheckFailed(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V","isAssignable(Ljava/lang/Class;Ljava/lang/Class;)V","isAssignable(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)V","isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;)V","isInstanceOf(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V","isTrue(ZLjava/lang/String;)V","isTrue(ZLjava/util/function/Supplier;)V","messageWithTypeName(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;","notEmpty(Ljava/util/Collection;Ljava/lang/String;)V","notEmpty([Ljava/lang/Object;Ljava/lang/String;)V","notNull(Ljava/lang/Object;Ljava/lang/String;)V","notNull(Ljava/lang/Object;Ljava/util/function/Supplier;)V","nullSafeGet(Ljava/util/function/Supplier;)Ljava/lang/String;","state(ZLjava/lang/String;)V","state(ZLjava/util/function/Supplier;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/ClassUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ClassUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Reference of class that is not initialized: org.springframework.util.ConcurrentReferenceHashMap",
    "invokedMethods": ["<clinit>()V","classNamesToString(Ljava/util/Collection;)Ljava/lang/String;","classPackageAsResourcePath(Ljava/lang/Class;)Ljava/lang/String;","convertClassNameToResourcePath(Ljava/lang/String;)Ljava/lang/String;","convertResourcePathToClassName(Ljava/lang/String;)Ljava/lang/String;","determineCommonAncestor(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;","findMethodCandidatesByName(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Set;","forName(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;","getAllInterfacesForClass(Ljava/lang/Class;)[Ljava/lang/Class;","getAllInterfacesForClass(Ljava/lang/Class;Ljava/lang/ClassLoader;)[Ljava/lang/Class;","getAllInterfacesForClassAsSet(Ljava/lang/Class;)Ljava/util/Set;","getAllInterfacesForClassAsSet(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/Set;","getClassFileName(Ljava/lang/Class;)Ljava/lang/String;","getConstructorIfAvailable(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","getDefaultClassLoader()Ljava/lang/ClassLoader;","getDescriptiveType(Ljava/lang/Object;)Ljava/lang/String;","getInterfaceMethodIfPossible(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","getMethodCountForName(Ljava/lang/Class;Ljava/lang/String;)I","getMethodIfAvailable(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;","getMethodOrNull(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;","getPackageName(Ljava/lang/String;)Ljava/lang/String;","getQualifiedMethodName(Ljava/lang/reflect/Method;)Ljava/lang/String;","getQualifiedMethodName(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;","getQualifiedName(Ljava/lang/Class;)Ljava/lang/String;","getShortName(Ljava/lang/Class;)Ljava/lang/String;","getShortName(Ljava/lang/String;)Ljava/lang/String;","getShortNameAsProperty(Ljava/lang/Class;)Ljava/lang/String;","getStaticMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;","getUserClass(Ljava/lang/Class;)Ljava/lang/Class;","getUserClass(Ljava/lang/Object;)Ljava/lang/Class;","hasConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Z","hasMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Z","hasMethod(Ljava/lang/Class;Ljava/lang/reflect/Method;)Z","isAssignable(Ljava/lang/Class;Ljava/lang/Class;)Z","isAssignableValue(Ljava/lang/Class;Ljava/lang/Object;)Z","isCacheSafe(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z","isInnerClass(Ljava/lang/Class;)Z","isJavaLanguageInterface(Ljava/lang/Class;)Z","isLoadable(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z","isPresent(Ljava/lang/String;Ljava/lang/ClassLoader;)Z","isPrimitiveOrWrapper(Ljava/lang/Class;)Z","isPrimitiveWrapper(Ljava/lang/Class;)Z","isVisible(Ljava/lang/Class;Ljava/lang/ClassLoader;)Z","lambda$getInterfaceMethodIfPossible$0(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;","matchesTypeName(Ljava/lang/Class;Ljava/lang/String;)Z","registerCommonClasses([Ljava/lang/Class;)V","resolveClassName(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;","resolvePrimitiveClassName(Ljava/lang/String;)Ljava/lang/Class;","resolvePrimitiveIfNecessary(Ljava/lang/Class;)Ljava/lang/Class;","toClassArray(Ljava/util/Collection;)[Ljava/lang/Class;"]
  }
,
  {
    "className": "Lorg/springframework/util/CollectionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/CollectionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["isEmpty(Ljava/util/Collection;)Z","isEmpty(Ljava/util/Map;)Z","lastElement(Ljava/util/List;)Ljava/lang/Object;","mergePropertiesIntoMap(Ljava/util/Properties;Ljava/util/Map;)V","newHashMap(I)Ljava/util/HashMap;","newLinkedHashMap(I)Ljava/util/LinkedHashMap;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$1;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$1.class",
    "super": "Lorg/springframework/util/ConcurrentReferenceHashMap$Task;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;ZLjava/lang/Object;)V","execute(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$2;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$2.class",
    "super": "Lorg/springframework/util/ConcurrentReferenceHashMap$Task;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)V","execute(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$3;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$3.class",
    "super": "Lorg/springframework/util/ConcurrentReferenceHashMap$Task;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;Ljava/lang/Object;)V","execute(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Boolean;","execute(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Entries.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","access$000(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I","setValue(Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$EntryIterator;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$EntryIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;)V","getNextIfNecessary()V","hasNext()Z","moveToNextReference()V","moveToNextSegment()V","next()Ljava/lang/Object;","next()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;","remove()V"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$EntrySet;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;)V","<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;Lorg/springframework/util/ConcurrentReferenceHashMap$1;)V","clear()V","contains(Ljava/lang/Object;)Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Reference.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;)V","createReference(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","pollForPurge()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Restructure.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Segment.class",
    "super": "Ljava/util/concurrent/locks/ReentrantLock;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;II)V","access$300(Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","clear()V","createReferenceArray(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","doTask(ILjava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;","findInChain(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","getCount()I","getIndex(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I","getReference(Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","lambda$doTask$0(Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;ILjava/lang/Object;)V","restructure(ZLorg/springframework/util/ConcurrentReferenceHashMap$Reference;)V","restructureIfNecessary(Z)V"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": ["Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/ref/ReferenceQueue;)V","get()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;","getHash()I","getNext()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","release()V"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$Task;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$Task.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)V","execute(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;","hasOption(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap$WeakEntryReference;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap$WeakEntryReference.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": ["Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/ref/ReferenceQueue;)V","get()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;","getHash()I","getNext()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","release()V"]
  }
,
  {
    "className": "Lorg/springframework/util/ConcurrentReferenceHashMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ConcurrentReferenceHashMap.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/concurrent/ConcurrentMap;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>()V","<init>(I)V","<init>(IFILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V","<init>(ILorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V","access$200(Lorg/springframework/util/ConcurrentReferenceHashMap;)[Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;","access$400(Lorg/springframework/util/ConcurrentReferenceHashMap;)Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceType;","calculateShift(II)I","clear()V","containsKey(Ljava/lang/Object;)Z","createReferenceManager()Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;","doTask(Ljava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","getHash(Ljava/lang/Object;)I","getLoadFactor()F","getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","getReference(Ljava/lang/Object;Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;","getSegmentForHash(I)Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;","isEmpty()Z","purgeUnreferencedEntries()V","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;","putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Lorg/springframework/util/FileCopyUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/FileCopyUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["close(Ljava/io/Closeable;)V","copy(Ljava/io/InputStream;Ljava/io/OutputStream;)I","copyToByteArray(Ljava/io/InputStream;)[B"]
  }
,
  {
    "className": "Lorg/springframework/util/LinkedMultiValueMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/LinkedMultiValueMap.class",
    "super": "Lorg/springframework/util/MultiValueMapAdapter;",
    "interfaces": ["Ljava/io/Serializable;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/Map;)V","clone()Ljava/lang/Object;","clone()Lorg/springframework/util/LinkedMultiValueMap;"]
  }
,
  {
    "className": "Lorg/springframework/util/MethodInvoker;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/MethodInvoker.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTypeDifferenceWeight([Ljava/lang/Class;[Ljava/lang/Object;)I"]
  }
,
  {
    "className": "Lorg/springframework/util/MultiValueMap;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/MultiValueMap.class",
    "super": "null",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/MultiValueMapAdapter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/MultiValueMapAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/util/MultiValueMap;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","add(Ljava/lang/Object;Ljava/lang/Object;)V","addAll(Ljava/lang/Object;Ljava/util/List;)V","addAll(Lorg/springframework/util/MultiValueMap;)V","clear()V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","equals(Ljava/lang/Object;)Z","get(Ljava/lang/Object;)Ljava/lang/Object;","get(Ljava/lang/Object;)Ljava/util/List;","hashCode()I","isEmpty()Z","keySet()Ljava/util/Set;","lambda$add$0(Ljava/lang/Object;)Ljava/util/List;","lambda$addAll$1(Ljava/lang/Object;)Ljava/util/List;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","put(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/util/List;","size()I","toString()Ljava/lang/String;","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Lorg/springframework/util/NumberUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/NumberUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.util.HashSet.PRESENT",
    "invokedMethods": ["<clinit>()V","checkedLongValue(Ljava/lang/Number;Ljava/lang/Class;)J","convertNumberToTargetClass(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/Number;","decodeBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;","isHexNumber(Ljava/lang/String;)Z","parseNumber(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Number;","parseNumber(Ljava/lang/String;Ljava/lang/Class;Ljava/text/NumberFormat;)Ljava/lang/Number;","raiseOverflowException(Ljava/lang/Number;Ljava/lang/Class;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/ObjectUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ObjectUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["arrayEquals(Ljava/lang/Object;Ljava/lang/Object;)Z","containsElement([Ljava/lang/Object;Ljava/lang/Object;)Z","getIdentityHexString(Ljava/lang/Object;)Ljava/lang/String;","identityToString(Ljava/lang/Object;)Ljava/lang/String;","isArray(Ljava/lang/Object;)Z","isEmpty(Ljava/lang/Object;)Z","isEmpty([Ljava/lang/Object;)Z","nullSafeClassName(Ljava/lang/Object;)Ljava/lang/String;","nullSafeEquals(Ljava/lang/Object;Ljava/lang/Object;)Z","nullSafeHashCode(Ljava/lang/Object;)I","nullSafeHashCode([B)I","nullSafeHashCode([C)I","nullSafeHashCode([D)I","nullSafeHashCode([F)I","nullSafeHashCode([I)I","nullSafeHashCode([J)I","nullSafeHashCode([Ljava/lang/Object;)I","nullSafeHashCode([S)I","nullSafeHashCode([Z)I","nullSafeToString(Ljava/lang/Object;)Ljava/lang/String;","nullSafeToString([B)Ljava/lang/String;","nullSafeToString([C)Ljava/lang/String;","nullSafeToString([D)Ljava/lang/String;","nullSafeToString([F)Ljava/lang/String;","nullSafeToString([I)Ljava/lang/String;","nullSafeToString([J)Ljava/lang/String;","nullSafeToString([Ljava/lang/Object;)Ljava/lang/String;","nullSafeToString([S)Ljava/lang/String;","nullSafeToString([Z)Ljava/lang/String;","toObjectArray(Ljava/lang/Object;)[Ljava/lang/Object;","unwrapOptional(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/util/PathMatcher;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/PathMatcher.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/PatternMatchUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/PatternMatchUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["simpleMatch(Ljava/lang/String;Ljava/lang/String;)Z","simpleMatch([Ljava/lang/String;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/PropertyPlaceholderHelper;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/PropertyPlaceholderHelper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.Class.initClassName()",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","findPlaceholderEndIndex(Ljava/lang/CharSequence;I)I","parseStringValue(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;Ljava/util/Set;)Ljava/lang/String;","replacePlaceholders(Ljava/lang/String;Lorg/springframework/util/PropertyPlaceholderHelper$PlaceholderResolver;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/ReflectionUtils$FieldFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ReflectionUtils$FieldFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ReflectionUtils$MethodCallback;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ReflectionUtils$MethodCallback.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ReflectionUtils$MethodFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ReflectionUtils$MethodFilter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/ReflectionUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ReflectionUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.lang.invoke.MethodHandle.invokeBasic()",
    "invokedMethods": ["<clinit>()V","accessibleConstructor(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/reflect/Constructor;","clearCache()V","doWithMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V","doWithMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V","findConcreteMethodsOnInterfaces(Ljava/lang/Class;)Ljava/util/List;","findField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;","findField(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/reflect/Field;","getAllDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","getDeclaredFields(Ljava/lang/Class;)[Ljava/lang/reflect/Field;","getDeclaredMethods(Ljava/lang/Class;)[Ljava/lang/reflect/Method;","getDeclaredMethods(Ljava/lang/Class;Z)[Ljava/lang/reflect/Method;","getUniqueDeclaredMethods(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodFilter;)[Ljava/lang/reflect/Method;","handleInvocationTargetException(Ljava/lang/reflect/InvocationTargetException;)V","handleReflectionException(Ljava/lang/Exception;)V","invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;","invokeMethod(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;","isCglibRenamedMethod(Ljava/lang/reflect/Method;)Z","isEqualsMethod(Ljava/lang/reflect/Method;)Z","isHashCodeMethod(Ljava/lang/reflect/Method;)Z","isPublicStaticFinal(Ljava/lang/reflect/Field;)Z","lambda$getUniqueDeclaredMethods$2(Ljava/util/List;Ljava/lang/reflect/Method;)V","lambda$static$0(Ljava/lang/reflect/Method;)Z","makeAccessible(Ljava/lang/reflect/Constructor;)V","makeAccessible(Ljava/lang/reflect/Field;)V","makeAccessible(Ljava/lang/reflect/Method;)V","rethrowRuntimeException(Ljava/lang/Throwable;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/ResourceUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/ResourceUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFile(Ljava/net/URI;Ljava/lang/String;)Ljava/io/File;","getFile(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File;","isFileURL(Ljava/net/URL;)Z","isJarURL(Ljava/net/URL;)Z","isUrl(Ljava/lang/String;)Z","toURI(Ljava/lang/String;)Ljava/net/URI;","toURI(Ljava/net/URL;)Ljava/net/URI;","useCachesIfNecessary(Ljava/net/URLConnection;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/StopWatch$TaskInfo;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/StopWatch$TaskInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;J)V","getTaskName()Ljava/lang/String;","getTimeNanos()J"]
  }
,
  {
    "className": "Lorg/springframework/util/StopWatch;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/StopWatch.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","getId()Ljava/lang/String;","getTaskInfo()[Lorg/springframework/util/StopWatch$TaskInfo;","getTotalTimeMillis()J","getTotalTimeNanos()J","nanosToMillis(J)J","shortSummary()Ljava/lang/String;","start()V","start(Ljava/lang/String;)V","stop()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/StreamUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/StreamUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["copy(Ljava/io/InputStream;Ljava/io/OutputStream;)I","copyToString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/StringUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/StringUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["applyRelativePath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","arrayToCommaDelimitedString([Ljava/lang/Object;)Ljava/lang/String;","arrayToDelimitedString([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;","capitalize(Ljava/lang/String;)Ljava/lang/String;","changeFirstCharacterCase(Ljava/lang/String;Z)Ljava/lang/String;","cleanPath(Ljava/lang/String;)Ljava/lang/String;","collectionToCommaDelimitedString(Ljava/util/Collection;)Ljava/lang/String;","collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;","collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","commaDelimitedListToStringArray(Ljava/lang/String;)[Ljava/lang/String;","containsText(Ljava/lang/CharSequence;)Z","countOccurrencesOf(Ljava/lang/String;Ljava/lang/String;)I","deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;","delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;","getFilename(Ljava/lang/String;)Ljava/lang/String;","hasLength(Ljava/lang/String;)Z","hasText(Ljava/lang/String;)Z","parseLocale(Ljava/lang/String;)Ljava/util/Locale;","parseLocaleString(Ljava/lang/String;)Ljava/util/Locale;","parseLocaleTokens(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/Locale;","parseTimeZoneString(Ljava/lang/String;)Ljava/util/TimeZone;","replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","stripFilenameExtension(Ljava/lang/String;)Ljava/lang/String;","substringMatch(Ljava/lang/CharSequence;ILjava/lang/CharSequence;)Z","toStringArray(Ljava/util/Collection;)[Ljava/lang/String;","toStringArray(Ljava/util/Enumeration;)[Ljava/lang/String;","tokenizeLocaleSource(Ljava/lang/String;)[Ljava/lang/String;","tokenizeToStringArray(Ljava/lang/String;Ljava/lang/String;ZZ)[Ljava/lang/String;","trimAllWhitespace(Ljava/lang/String;)Ljava/lang/String;","trimArrayElements([Ljava/lang/String;)[Ljava/lang/String;","trimLeadingCharacter(Ljava/lang/String;C)Ljava/lang/String;","trimLeadingWhitespace(Ljava/lang/String;)Ljava/lang/String;","uncapitalize(Ljava/lang/String;)Ljava/lang/String;","validateLocalePart(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/StringValueResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/StringValueResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/unit/DataSize;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/unit/DataSize.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;","Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(J)V","compareTo(Ljava/lang/Object;)I","compareTo(Lorg/springframework/util/unit/DataSize;)I","determineDataUnit(Ljava/lang/String;Lorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataUnit;","equals(Ljava/lang/Object;)Z","hashCode()I","of(JLorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;","parse(Ljava/lang/CharSequence;Lorg/springframework/util/unit/DataUnit;)Lorg/springframework/util/unit/DataSize;","toBytes()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/util/unit/DataUnit;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/unit/DataUnit.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["fromSuffix(Ljava/lang/String;)Lorg/springframework/util/unit/DataUnit;","size()Lorg/springframework/util/unit/DataSize;","values()[Lorg/springframework/util/unit/DataUnit;"]
  }
,
  {
    "className": "Lorg/springframework/util/unit/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/unit/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/util/xml/SimpleSaxErrorHandler;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/xml/SimpleSaxErrorHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/ErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/apache/commons/logging/Log;)V","error(Lorg/xml/sax/SAXParseException;)V","fatalError(Lorg/xml/sax/SAXParseException;)V","warning(Lorg/xml/sax/SAXParseException;)V"]
  }
,
  {
    "className": "Lorg/springframework/util/xml/XmlValidationModeDetector;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/xml/XmlValidationModeDetector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","commentToken(Ljava/lang/String;Ljava/lang/String;Z)I","consume(Ljava/lang/String;)Ljava/lang/String;","consumeCommentTokens(Ljava/lang/String;)Ljava/lang/String;","detectValidationMode(Ljava/io/InputStream;)I","endComment(Ljava/lang/String;)I","hasDoctype(Ljava/lang/String;)Z","hasOpeningTag(Ljava/lang/String;)Z","startComment(Ljava/lang/String;)I"]
  }
,
  {
    "className": "Lorg/springframework/util/xml/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-core-5.3.1.jar!/org/springframework/util/xml/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/ConfigurableWebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/ConfigurableWebApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/web/context/WebApplicationContext;","Lorg/springframework/context/ConfigurableApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/ConfigurableWebEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/ConfigurableWebEnvironment.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/core/env/ConfigurableEnvironment;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/ServletConfigAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/ServletConfigAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/ServletContextAware;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/ServletContextAware.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/beans/factory/Aware;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/WebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/WebApplicationContext.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/context/ApplicationContext;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/request/AbstractRequestAttributes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/AbstractRequestAttributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/web/context/request/RequestAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isRequestActive()Z","registerRequestDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/AbstractRequestAttributesScope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/AbstractRequestAttributesScope.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/Scope;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;","registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V","resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/DestructionCallbackBindingListener;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/DestructionCallbackBindingListener.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/servlet/http/HttpSessionBindingListener;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Runnable;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/NativeWebRequest;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/NativeWebRequest.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/web/context/request/WebRequest;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/request/RequestAttributes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/RequestAttributes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/request/RequestContextHolder$FacesRequestAttributesFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/RequestContextHolder$FacesRequestAttributesFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFacesRequestAttributes()Lorg/springframework/web/context/request/RequestAttributes;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/RequestContextHolder;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/RequestContextHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","currentRequestAttributes()Lorg/springframework/web/context/request/RequestAttributes;","getRequestAttributes()Lorg/springframework/web/context/request/RequestAttributes;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/RequestScope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/RequestScope.class",
    "super": "Lorg/springframework/web/context/request/AbstractRequestAttributesScope;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getScope()I"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/ServletRequestAttributes;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/ServletRequestAttributes.class",
    "super": "Lorg/springframework/web/context/request/AbstractRequestAttributes;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","<init>(Ljavax/servlet/http/HttpServletRequest;)V","<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V","getAttribute(Ljava/lang/String;I)Ljava/lang/Object;","getRequest()Ljavax/servlet/http/HttpServletRequest;","getResponse()Ljavax/servlet/http/HttpServletResponse;","getSession(Z)Ljavax/servlet/http/HttpSession;","getSessionMutex()Ljava/lang/Object;","obtainSession()Ljavax/servlet/http/HttpSession;","registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;I)V","registerSessionDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V","resolveReference(Ljava/lang/String;)Ljava/lang/Object;","setAttribute(Ljava/lang/String;Ljava/lang/Object;I)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/ServletWebRequest;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/ServletWebRequest.class",
    "super": "Lorg/springframework/web/context/request/ServletRequestAttributes;",
    "interfaces": ["Lorg/springframework/web/context/request/NativeWebRequest;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V","getDescription(Z)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/SessionScope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/SessionScope.class",
    "super": "Lorg/springframework/web/context/request/AbstractRequestAttributesScope;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;","getScope()I"]
  }
,
  {
    "className": "Lorg/springframework/web/context/request/WebRequest;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/WebRequest.class",
    "super": "null",
    "interfaces": ["Lorg/springframework/web/context/request/RequestAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/request/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/request/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/context/support/GenericWebApplicationContext;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/GenericWebApplicationContext.class",
    "super": "Lorg/springframework/context/support/GenericApplicationContext;",
    "interfaces": ["Lorg/springframework/web/context/ConfigurableWebApplicationContext;","Lorg/springframework/ui/context/ThemeSource;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","createEnvironment()Lorg/springframework/core/env/ConfigurableEnvironment;","getApplicationName()Ljava/lang/String;","getResourcePatternResolver()Lorg/springframework/core/io/support/ResourcePatternResolver;","getServletContext()Ljavax/servlet/ServletContext;","initPropertySources()V","onRefresh()V","setServletContext(Ljavax/servlet/ServletContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletConfigPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletConfigPropertySource.class",
    "super": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljavax/servlet/ServletConfig;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getPropertyNames()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletContextAwareProcessor;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletContextAwareProcessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/BeanPostProcessor;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getServletConfig()Ljavax/servlet/ServletConfig;","getServletContext()Ljavax/servlet/ServletContext;","postProcessAfterInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;","postProcessBeforeInitialization(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletContextPropertySource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletContextPropertySource.class",
    "super": "Lorg/springframework/core/env/EnumerablePropertySource;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljavax/servlet/ServletContext;)V","getProperty(Ljava/lang/String;)Ljava/lang/Object;","getProperty(Ljava/lang/String;)Ljava/lang/String;","getPropertyNames()[Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletContextResource;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletContextResource.class",
    "super": "Lorg/springframework/core/io/AbstractFileResolvingResource;",
    "interfaces": ["Lorg/springframework/core/io/ContextResource;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/servlet/ServletContext;Ljava/lang/String;)V","createRelative(Ljava/lang/String;)Lorg/springframework/core/io/Resource;","equals(Ljava/lang/Object;)Z","exists()Z","getDescription()Ljava/lang/String;","getFile()Ljava/io/File;","getFilename()Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getPath()Ljava/lang/String;","getServletContext()Ljavax/servlet/ServletContext;","getURL()Ljava/net/URL;","hashCode()I","isReadable()Z"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletContextResourcePatternResolver;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletContextResourcePatternResolver.class",
    "super": "Lorg/springframework/core/io/support/PathMatchingResourcePatternResolver;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Lorg/springframework/core/io/ResourceLoader;)V","doFindPathMatchingFileResources(Lorg/springframework/core/io/Resource;Ljava/lang/String;)Ljava/util/Set;","doRetrieveMatchingJarEntries(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V","doRetrieveMatchingServletContextResources(Ljavax/servlet/ServletContext;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/ServletContextScope;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/ServletContextScope.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/config/Scope;","Lorg/springframework/beans/factory/DisposableBean;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/servlet/ServletContext;)V","destroy()V","get(Ljava/lang/String;Lorg/springframework/beans/factory/ObjectFactory;)Ljava/lang/Object;","registerDestructionCallback(Ljava/lang/String;Ljava/lang/Runnable;)V","resolveContextualObject(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/StandardServletEnvironment;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/StandardServletEnvironment.class",
    "super": "Lorg/springframework/core/env/StandardEnvironment;",
    "interfaces": ["Lorg/springframework/web/context/ConfigurableWebEnvironment;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","customizePropertySources(Lorg/springframework/core/env/MutablePropertySources;)V","initPropertySources(Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils$FacesDependencyRegistrar;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils$FacesDependencyRegistrar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["registerFacesDependencies(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils$RequestObjectFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils$RequestObjectFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/web/context/support/WebApplicationContextUtils$1;)V","getObject()Ljava/lang/Object;","getObject()Ljavax/servlet/ServletRequest;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils$ResponseObjectFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils$ResponseObjectFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/web/context/support/WebApplicationContextUtils$1;)V","getObject()Ljava/lang/Object;","getObject()Ljavax/servlet/ServletResponse;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils$SessionObjectFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils$SessionObjectFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/web/context/support/WebApplicationContextUtils$1;)V","getObject()Ljava/lang/Object;","getObject()Ljavax/servlet/http/HttpSession;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils$WebRequestObjectFactory;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils$WebRequestObjectFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/springframework/beans/factory/ObjectFactory;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/springframework/web/context/support/WebApplicationContextUtils$1;)V","getObject()Ljava/lang/Object;","getObject()Lorg/springframework/web/context/request/WebRequest;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/WebApplicationContextUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/WebApplicationContextUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.System.security",
    "invokedMethods": ["<clinit>()V","access$400()Lorg/springframework/web/context/request/ServletRequestAttributes;","currentRequestAttributes()Lorg/springframework/web/context/request/ServletRequestAttributes;","initServletPropertySources(Lorg/springframework/core/env/MutablePropertySources;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V","registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V","registerEnvironmentBeans(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;Ljavax/servlet/ServletConfig;)V","registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V","registerWebApplicationScopes(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljavax/servlet/ServletContext;)V"]
  }
,
  {
    "className": "Lorg/springframework/web/context/support/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/context/support/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/filter/DelegatingFilterProxy;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/filter/DelegatingFilterProxy.class",
    "super": "Lorg/springframework/web/filter/GenericFilterBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/filter/GenericFilterBean;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/filter/GenericFilterBean.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/servlet/Filter;","Lorg/springframework/beans/factory/BeanNameAware;","Lorg/springframework/context/EnvironmentAware;","Lorg/springframework/core/env/EnvironmentCapable;","Lorg/springframework/web/context/ServletContextAware;","Lorg/springframework/beans/factory/InitializingBean;","Lorg/springframework/beans/factory/DisposableBean;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/filter/OncePerRequestFilter;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/filter/OncePerRequestFilter.class",
    "super": "Lorg/springframework/web/filter/GenericFilterBean;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/filter/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/filter/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/springframework/web/util/WebUtils;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/util/WebUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: java.lang.String.COMPACT_STRINGS",
    "invokedMethods": ["<clinit>()V","getRealPath(Ljavax/servlet/ServletContext;Ljava/lang/String;)Ljava/lang/String;","getSessionMutex(Ljavax/servlet/http/HttpSession;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/springframework/web/util/package-info;",
    "module": "unnamed",
    "source": "file:/home/yunyao.zxl/alibaba.quickstart.sharedcache/BOOT-INF/lib/spring-web-5.3.1.jar!/org/springframework/web/util/package-info.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Attr;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Attr.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/CDATASection;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/CDATASection.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Text;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/CharacterData;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/CharacterData.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Comment;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Comment.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/CharacterData;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DOMConfiguration;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DOMConfiguration.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DOMError;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DOMError.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DOMException;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DOMException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(SLjava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/w3c/dom/DOMImplementation;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DOMImplementation.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DOMLocator;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DOMLocator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Document;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Document.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DocumentFragment;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DocumentFragment.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/DocumentType;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/DocumentType.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Element;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Element.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ElementTraversal;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ElementTraversal.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Entity;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Entity.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/EntityReference;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/EntityReference.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/NamedNodeMap;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/NamedNodeMap.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Node;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Node.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/NodeList;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/NodeList.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Notation;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Notation.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ProcessingInstruction;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ProcessingInstruction.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/Node;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/Text;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/Text.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/CharacterData;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/TypeInfo;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/TypeInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/events/DocumentEvent;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/events/DocumentEvent.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/events/Event;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/events/Event.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/events/EventException;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/events/EventException.class",
    "super": "Ljava/lang/RuntimeException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(SLjava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/w3c/dom/events/EventTarget;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/events/EventTarget.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/events/MutationEvent;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/events/MutationEvent.class",
    "super": "null",
    "interfaces": ["Lorg/w3c/dom/events/Event;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ls/DOMImplementationLS;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ls/DOMImplementationLS.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ls/LSResourceResolver;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ls/LSResourceResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ranges/DocumentRange;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ranges/DocumentRange.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/ranges/Range;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/ranges/Range.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/traversal/DocumentTraversal;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/traversal/DocumentTraversal.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/w3c/dom/traversal/NodeIterator;",
    "module": "java.xml",
    "source": "/java.xml/org/w3c/dom/traversal/NodeIterator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/AttributeList;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/AttributeList.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/Attributes;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/Attributes.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ContentHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ContentHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/DTDHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/DTDHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/EntityResolver;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/EntityResolver.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ErrorHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ErrorHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/InputSource;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/InputSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/Reader;)V","<init>(Ljava/lang/String;)V","getByteStream()Ljava/io/InputStream;","getCharacterStream()Ljava/io/Reader;","getEncoding()Ljava/lang/String;","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","isEmpty()Z","isStreamEmpty()Z","setByteStream(Ljava/io/InputStream;)V","setCharacterStream(Ljava/io/Reader;)V","setEncoding(Ljava/lang/String;)V","setPublicId(Ljava/lang/String;)V","setSystemId(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/Locator;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/Locator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/Parser;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/Parser.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/SAXException;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/SAXException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Exception;)V","<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/Exception;)V","getCause()Ljava/lang/Throwable;","getException()Ljava/lang/Exception;","getExceptionInternal()Ljava/lang/Exception;","getMessage()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/xml/sax/SAXNotRecognizedException;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/SAXNotRecognizedException.class",
    "super": "Lorg/xml/sax/SAXException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/SAXNotSupportedException;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/SAXNotSupportedException.class",
    "super": "Lorg/xml/sax/SAXException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/SAXParseException;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/SAXParseException.class",
    "super": "Lorg/xml/sax/SAXException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Exception;)V","<init>(Ljava/lang/String;Lorg/xml/sax/Locator;)V","<init>(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V","getColumnNumber()I","getLineNumber()I","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","init(Ljava/lang/String;Ljava/lang/String;II)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lorg/xml/sax/XMLReader;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/XMLReader.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ext/Attributes2;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ext/Attributes2.class",
    "super": "null",
    "interfaces": ["Lorg/xml/sax/Attributes;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ext/DeclHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ext/DeclHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ext/EntityResolver2;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ext/EntityResolver2.class",
    "super": "null",
    "interfaces": ["Lorg/xml/sax/EntityResolver;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ext/LexicalHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ext/LexicalHandler.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/ext/Locator2;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/ext/Locator2.class",
    "super": "null",
    "interfaces": ["Lorg/xml/sax/Locator;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lorg/xml/sax/helpers/AttributesImpl;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/helpers/AttributesImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/Attributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lorg/xml/sax/Attributes;)V","clear()V","getLength()I","getLocalName(I)Ljava/lang/String;","getValue(I)Ljava/lang/String;","getValue(Ljava/lang/String;)Ljava/lang/String;","setAttributes(Lorg/xml/sax/Attributes;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/helpers/DefaultHandler;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/helpers/DefaultHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/EntityResolver;","Lorg/xml/sax/DTDHandler;","Lorg/xml/sax/ContentHandler;","Lorg/xml/sax/ErrorHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","characters([CII)V","endDocument()V","endPrefixMapping(Ljava/lang/String;)V","error(Lorg/xml/sax/SAXParseException;)V","fatalError(Lorg/xml/sax/SAXParseException;)V","ignorableWhitespace([CII)V","notationDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","processingInstruction(Ljava/lang/String;Ljava/lang/String;)V","resolveEntity(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;","setDocumentLocator(Lorg/xml/sax/Locator;)V","skippedEntity(Ljava/lang/String;)V","startDocument()V","startPrefixMapping(Ljava/lang/String;Ljava/lang/String;)V","unparsedEntityDecl(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","warning(Lorg/xml/sax/SAXParseException;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/helpers/LocatorImpl;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/helpers/LocatorImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lorg/xml/sax/Locator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lorg/xml/sax/Locator;)V","getColumnNumber()I","getLineNumber()I","getPublicId()Ljava/lang/String;","getSystemId()Ljava/lang/String;","setColumnNumber(I)V","setLineNumber(I)V","setPublicId(Ljava/lang/String;)V","setSystemId(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lorg/xml/sax/helpers/NewInstance;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/helpers/NewInstance.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["newInstance(Ljava/lang/Class;Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lorg/xml/sax/helpers/XMLReaderFactory;",
    "module": "java.xml",
    "source": "/java.xml/org/xml/sax/helpers/XMLReaderFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createXMLReader()Lorg/xml/sax/XMLReader;","findServiceProvider(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;","jarLookup(Ljava/lang/ClassLoader;)Ljava/lang/String;","lambda$findServiceProvider$0(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Object;","loadClass(Ljava/lang/ClassLoader;Ljava/lang/String;)Lorg/xml/sax/XMLReader;"]
  }
,
  {
    "className": "Lsun/awt/AWTAccessor$AWTEventAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AWTAccessor$AWTEventAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/AWTAccessor$ComponentAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AWTAccessor$ComponentAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/AWTAccessor$EventQueueAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AWTAccessor$EventQueueAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/AWTAccessor$ToolkitAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AWTAccessor$ToolkitAccessor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/AWTAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AWTAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","setAWTEventAccessor(Lsun/awt/AWTAccessor$AWTEventAccessor;)V","setComponentAccessor(Lsun/awt/AWTAccessor$ComponentAccessor;)V","setEventQueueAccessor(Lsun/awt/AWTAccessor$EventQueueAccessor;)V","setToolkitAccessor(Lsun/awt/AWTAccessor$ToolkitAccessor;)V"]
  }
,
  {
    "className": "Lsun/awt/AppContext$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/AppContext;)V","run()Ljava/lang/ClassLoader;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/awt/AppContext$2;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/awt/AppContext$3;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Lsun/awt/AppContext;"]
  }
,
  {
    "className": "Lsun/awt/AppContext$6;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$6.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljdk/internal/misc/JavaAWTAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/awt/AppContext$GetAppContextLock;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$GetAppContextLock.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/awt/AppContext$State;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/AppContext;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/AppContext.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.util.logging.PlatformLogger.loggers",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/lang/ThreadGroup;)V","get(Ljava/lang/Object;)Ljava/lang/Object;","getAppContext()Lsun/awt/AppContext;","initMainAppContext()V","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/awt/ComponentFactory;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/ComponentFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/DebugSettings$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/DebugSettings$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/DebugSettings;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/awt/DebugSettings;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/DebugSettings.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.util.logging.PlatformLogger.loggers",
    "invokedMethods": ["<clinit>()V","<init>()V","getBoolean(Ljava/lang/String;Z)Z","getPropertyNames()Ljava/util/List;","getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","init()V","loadDefaultProperties()V","loadFileProperties()V","loadNativeSettings()V","loadProperties()V","loadSystemProperties()V","println(Ljava/lang/Object;)V","setCTracingOn(Z)V","setCTracingOn(ZLjava/lang/String;)V","setCTracingOn(ZLjava/lang/String;I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/awt/HeadlessToolkit$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/HeadlessToolkit$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/peer/KeyboardFocusManagerPeer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/awt/HeadlessToolkit;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/HeadlessToolkit.class",
    "super": "Ljava/awt/Toolkit;",
    "interfaces": ["Lsun/awt/ComponentFactory;","Lsun/awt/KeyboardFocusManagerPeerProvider;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/Toolkit;)V","createImage(Ljava/awt/image/ImageProducer;)Ljava/awt/Image;"]
  }
,
  {
    "className": "Lsun/awt/InputMethodSupport;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/InputMethodSupport.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/KeyboardFocusManagerPeerProvider;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/KeyboardFocusManagerPeerProvider.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/MostRecentKeyValue;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/MostRecentKeyValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;)V","setPair(Ljava/lang/Object;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/awt/NativeLibLoader$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/NativeLibLoader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/awt/NativeLibLoader;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/NativeLibLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["loadLibraries()V"]
  }
,
  {
    "className": "Lsun/awt/PostEventQueue;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/PostEventQueue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/EventQueue;)V"]
  }
,
  {
    "className": "Lsun/awt/RequestFocusController;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/RequestFocusController.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/SoftCache$Entry;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SoftCache$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/SoftCache;Ljava/util/Map$Entry;Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","hashCode()I"]
  }
,
  {
    "className": "Lsun/awt/SoftCache$EntrySet$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SoftCache$EntrySet$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/SoftCache$EntrySet;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;","remove()V"]
  }
,
  {
    "className": "Lsun/awt/SoftCache$EntrySet;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SoftCache$EntrySet.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/SoftCache;)V","isEmpty()Z","iterator()Ljava/util/Iterator;","remove(Ljava/lang/Object;)Z","size()I"]
  }
,
  {
    "className": "Lsun/awt/SoftCache$ValueCell;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SoftCache$ValueCell.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","create(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)Lsun/awt/SoftCache$ValueCell;","drop()V","isValid()Z","strip(Ljava/lang/Object;Z)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/awt/SoftCache;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SoftCache.class",
    "super": "Ljava/util/AbstractMap;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","fill(Ljava/lang/Object;)Ljava/lang/Object;","get(Ljava/lang/Object;)Ljava/lang/Object;","isEmpty()Z","processQueue()V","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lsun/awt/SunToolkit;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/SunToolkit.class",
    "super": "Ljava/awt/Toolkit;",
    "interfaces": ["Lsun/awt/ComponentFactory;","Lsun/awt/InputMethodSupport;","Lsun/awt/KeyboardFocusManagerPeerProvider;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","createNewAppContext()Lsun/awt/AppContext;","createNewAppContext(Ljava/lang/ThreadGroup;)Lsun/awt/AppContext;","initEQ(Lsun/awt/AppContext;)V"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$1$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$1$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/WeakIdentityHashMap$1;)V","hasNext()Z","next()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$1.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/WeakIdentityHashMap;)V","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$2$1$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$2$1$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map$Entry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/WeakIdentityHashMap$2$1;)V","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$2$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$2$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/WeakIdentityHashMap$2;Ljava/util/Iterator;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/util/Map$Entry;"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$2;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$2.class",
    "super": "Ljava/util/AbstractSet;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/awt/WeakIdentityHashMap;)V","iterator()Ljava/util/Iterator;","size()I"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap$WeakKey;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap$WeakKey.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/awt/WeakIdentityHashMap;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/WeakIdentityHashMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Map;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clear()V","containsKey(Ljava/lang/Object;)Z","entrySet()Ljava/util/Set;","get(Ljava/lang/Object;)Ljava/lang/Object;","getMap()Ljava/util/Map;","isEmpty()Z","keySet()Ljava/util/Set;","put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;","putAll(Ljava/util/Map;)V","remove(Ljava/lang/Object;)Ljava/lang/Object;","size()I","values()Ljava/util/Collection;"]
  }
,
  {
    "className": "Lsun/awt/image/ByteComponentRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/ByteComponentRaster.class",
    "super": "Lsun/awt/image/SunWritableRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferByte;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/ByteComponentRaster;)V","initIDs()V","verify()V"]
  }
,
  {
    "className": "Lsun/awt/image/ByteInterleavedRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/ByteInterleavedRaster.class",
    "super": "Lsun/awt/image/ByteComponentRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferByte;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferByte;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/ByteInterleavedRaster;)V","createChild(IIIIII[I)Ljava/awt/image/Raster;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","createWritableChild(IIIIII[I)Ljava/awt/image/WritableRaster;","getByteData(IIII[B)[B","getDataElements(IIIILjava/lang/Object;)Ljava/lang/Object;","getDataElements(IILjava/lang/Object;)Ljava/lang/Object;","getDataOffset(I)I","getDataStorage()[B","getPixelStride()I","getPixels(IIII[I)[I","getScanlineStride()I","isInterleaved(Ljava/awt/image/ComponentSampleModel;)Z","putByteData(IIII[B)V","setDataElements(IIIIIILjava/awt/image/Raster;)V","setDataElements(IIIILjava/lang/Object;)V","setDataElements(IILjava/lang/Object;)V","setPixels(IIII[I)V","setRect(IILjava/awt/image/Raster;)V","setSample(IIII)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/awt/image/BytePackedRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/BytePackedRaster.class",
    "super": "Lsun/awt/image/SunWritableRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferByte;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferByte;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/BytePackedRaster;)V","createChild(IIIIII[I)Ljava/awt/image/Raster;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","createWritableChild(IIIIII[I)Ljava/awt/image/WritableRaster;","getDataElements(IILjava/lang/Object;)Ljava/lang/Object;","getPixels(IIII[I)[I","initIDs()V","putByteData(IIII[B)V","setDataElements(IIIIIILsun/awt/image/BytePackedRaster;)V","setDataElements(IIIILjava/lang/Object;)V","setDataElements(IILjava/lang/Object;)V","setPixels(IIII[I)V","setRect(IILjava/awt/image/Raster;)V","toString()Ljava/lang/String;","verify(Z)V"]
  }
,
  {
    "className": "Lsun/awt/image/IntegerComponentRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/IntegerComponentRaster.class",
    "super": "Lsun/awt/image/SunWritableRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferInt;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/IntegerComponentRaster;)V","initIDs()V","verify()V"]
  }
,
  {
    "className": "Lsun/awt/image/IntegerInterleavedRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/IntegerInterleavedRaster.class",
    "super": "Lsun/awt/image/IntegerComponentRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferInt;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferInt;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/IntegerInterleavedRaster;)V","createChild(IIIIII[I)Ljava/awt/image/Raster;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","createWritableChild(IIIIII[I)Ljava/awt/image/WritableRaster;","getDataElements(IILjava/lang/Object;)Ljava/lang/Object;","getPixelStride()I","setDataElements(IIIILjava/lang/Object;)V","setDataElements(IILjava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/awt/image/NativeLibLoader$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/NativeLibLoader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/awt/image/NativeLibLoader;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/NativeLibLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["loadLibraries()V"]
  }
,
  {
    "className": "Lsun/awt/image/OffScreenImageSource;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/OffScreenImageSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/awt/image/ImageProducer;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/image/BufferedImage;Ljava/util/Hashtable;)V"]
  }
,
  {
    "className": "Lsun/awt/image/ShortComponentRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/ShortComponentRaster.class",
    "super": "Lsun/awt/image/SunWritableRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferUShort;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/ShortComponentRaster;)V","initIDs()V","verify()V"]
  }
,
  {
    "className": "Lsun/awt/image/ShortInterleavedRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/ShortInterleavedRaster.class",
    "super": "Lsun/awt/image/ShortComponentRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferUShort;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBufferUShort;Ljava/awt/Rectangle;Ljava/awt/Point;Lsun/awt/image/ShortInterleavedRaster;)V","createChild(IIIIII[I)Ljava/awt/image/Raster;","createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;","createWritableChild(IIIIII[I)Ljava/awt/image/WritableRaster;","getDataElements(IILjava/lang/Object;)Ljava/lang/Object;","getPixelStride()I","setDataElements(IIIILjava/lang/Object;)V","setDataElements(IILjava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/awt/image/SunWritableRaster$DataStealer;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/SunWritableRaster$DataStealer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/awt/image/SunWritableRaster;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/SunWritableRaster.class",
    "super": "Ljava/awt/image/WritableRaster;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/awt/image/SampleModel;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Point;)V","<init>(Ljava/awt/image/SampleModel;Ljava/awt/image/DataBuffer;Ljava/awt/Rectangle;Ljava/awt/Point;Ljava/awt/image/WritableRaster;)V","markDirty()V","setDataStealer(Lsun/awt/image/SunWritableRaster$DataStealer;)V","stealData(Ljava/awt/image/DataBufferByte;I)[B","stealData(Ljava/awt/image/DataBufferInt;I)[I","stealData(Ljava/awt/image/DataBufferUShort;I)[S","stealTrackable(Ljava/awt/image/DataBuffer;)Lsun/java2d/StateTrackableDelegate;"]
  }
,
  {
    "className": "Lsun/awt/image/SurfaceManager$ImageAccessor;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/SurfaceManager$ImageAccessor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/awt/image/SurfaceManager;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/image/SurfaceManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["setImageAccessor(Lsun/awt/image/SurfaceManager$ImageAccessor;)V"]
  }
,
  {
    "className": "Lsun/awt/util/ThreadGroupUtils;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/awt/util/ThreadGroupUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getRootThreadGroup()Ljava/lang/ThreadGroup;"]
  }
,
  {
    "className": "Lsun/java2d/Disposer$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/Disposer$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/java2d/Disposer;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/Disposer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "false",
    "unsafeReason": "Non-inlined invoke of method: java.security.AccessController.doPrivileged(PrivilegedAction)",
    "invokedMethods": ["<clinit>()V","<init>()V","add(Ljava/lang/Object;Lsun/java2d/DisposerRecord;)V","addRecord(Ljava/lang/Object;Lsun/java2d/DisposerRecord;)V","clearDeferredRecords()V","initIDs()V","lambda$static$0()Ljava/lang/Void;","run()V"]
  }
,
  {
    "className": "Lsun/java2d/DisposerRecord;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/DisposerRecord.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/DisposerTarget;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/DisposerTarget.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/HeadlessGraphicsEnvironment;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/HeadlessGraphicsEnvironment.class",
    "super": "Ljava/awt/GraphicsEnvironment;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/awt/GraphicsEnvironment;)V","createGraphics(Ljava/awt/image/BufferedImage;)Ljava/awt/Graphics2D;"]
  }
,
  {
    "className": "Lsun/java2d/StateTrackable$State;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/StateTrackable$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["values()[Lsun/java2d/StateTrackable$State;"]
  }
,
  {
    "className": "Lsun/java2d/StateTrackable;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/StateTrackable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/StateTrackableDelegate$2;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/StateTrackableDelegate$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lsun/java2d/StateTrackableDelegate;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/StateTrackableDelegate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/StateTrackable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<clinit>()V","<init>(Lsun/java2d/StateTrackable$State;)V","createInstance(Lsun/java2d/StateTrackable$State;)Lsun/java2d/StateTrackableDelegate;","markDirty()V","setUntrackable()V"]
  }
,
  {
    "className": "Lsun/java2d/cmm/CMMServiceProvider;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/CMMServiceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getColorManagementModule()Lsun/java2d/cmm/PCMM;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/CMSManager$CMMTracer;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/CMSManager$CMMTracer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/cmm/PCMM;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/java2d/cmm/PCMM;)V","createTransform(Ljava/awt/color/ICC_Profile;II)Lsun/java2d/cmm/ColorTransform;","createTransform([Lsun/java2d/cmm/ColorTransform;)Lsun/java2d/cmm/ColorTransform;","getTagData(Lsun/java2d/cmm/Profile;I[B)V","getTagSize(Lsun/java2d/cmm/Profile;I)I","loadProfile([B)Lsun/java2d/cmm/Profile;","signatureToString(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/CMSManager;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/CMSManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["canCreateModule()Z","getModule()Lsun/java2d/cmm/PCMM;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/ColorTransform;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/ColorTransform.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/cmm/PCMM;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/PCMM.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/cmm/Profile;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/Profile.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","getNativePtr()J"]
  }
,
  {
    "className": "Lsun/java2d/cmm/ProfileActivator;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/ProfileActivator.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/java2d/cmm/ProfileDataVerifier;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/ProfileDataVerifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTagOffset(I[B)I","getTagSize(I[B)I","readInt32([BI)I","verify([B)V"]
  }
,
  {
    "className": "Lsun/java2d/cmm/ProfileDeferralInfo;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/ProfileDeferralInfo.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;III)V","read()I"]
  }
,
  {
    "className": "Lsun/java2d/cmm/ProfileDeferralMgr;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/ProfileDeferralMgr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["activateProfiles()V","registerDeferral(Lsun/java2d/cmm/ProfileActivator;)V"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMS$1;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMS$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMS;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/cmm/PCMM;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","colorConvert(Lsun/java2d/cmm/lcms/LCMSTransform;Lsun/java2d/cmm/lcms/LCMSImageLayout;Lsun/java2d/cmm/lcms/LCMSImageLayout;)V","createNativeTransform([JIIZIZLjava/lang/Object;)J","createTransform(Ljava/awt/color/ICC_Profile;II)Lsun/java2d/cmm/ColorTransform;","createTransform([Lsun/java2d/cmm/ColorTransform;)Lsun/java2d/cmm/ColorTransform;","createTransform([Lsun/java2d/cmm/lcms/LCMSProfile;IIZIZLjava/lang/Object;)J","getLcmsProfile(Lsun/java2d/cmm/Profile;)Lsun/java2d/cmm/lcms/LCMSProfile;","getModule()Lsun/java2d/cmm/PCMM;","getProfileID(Ljava/awt/color/ICC_Profile;)Lsun/java2d/cmm/lcms/LCMSProfile;","getTagData(Lsun/java2d/cmm/Profile;I[B)V","getTagNative(JI)[B","getTagSize(Lsun/java2d/cmm/Profile;I)I","initLCMS(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V","loadProfile([B)Lsun/java2d/cmm/Profile;","loadProfileNative([BLjava/lang/Object;)J"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSImageLayout$ImageLayoutException;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSImageLayout$ImageLayoutException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSImageLayout;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSImageLayout.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(III)V","<init>([BIII)V","<init>([SIII)V","BYTES_SH(I)I","CHANNELS_SH(I)I","getBytesPerPixel(I)I","safeAdd(II)I","safeMult(II)I","verify()V"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSProfile$TagCache;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSProfile$TagCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/java2d/cmm/lcms/LCMSProfile;)V","getTag(I)Lsun/java2d/cmm/lcms/LCMSProfile$TagData;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSProfile$TagData;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSProfile$TagData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I[B)V","copyDataTo([B)V","getSize()I"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSProfile;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSProfile.class",
    "super": "Lsun/java2d/cmm/Profile;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JLjava/lang/Object;)V","access$000(Lsun/java2d/cmm/lcms/LCMSProfile;)J","getLcmsPtr()J","getTag(I)Lsun/java2d/cmm/lcms/LCMSProfile$TagData;"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LCMSTransform;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LCMSTransform.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/java2d/cmm/ColorTransform;"],
    "safeForPreinit": "false",
    "unsafeReason": "Access of static field from a different class: sun.java2d.cmm.ProfileDeferralMgr.deferring",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/awt/color/ICC_Profile;II)V","<init>([Lsun/java2d/cmm/ColorTransform;)V","colorConvert([B[B)[B","colorConvert([S[S)[S","doTransform(Lsun/java2d/cmm/lcms/LCMSImageLayout;Lsun/java2d/cmm/lcms/LCMSImageLayout;)V","getNumInComponents()I","getNumOutComponents()I"]
  }
,
  {
    "className": "Lsun/java2d/cmm/lcms/LcmsServiceProvider;",
    "module": "java.desktop",
    "source": "/java.desktop/sun/java2d/cmm/lcms/LcmsServiceProvider.class",
    "super": "Lsun/java2d/cmm/CMMServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getModule()Lsun/java2d/cmm/PCMM;"]
  }
,
  {
    "className": "Lsun/management/Util;",
    "module": "java.management",
    "source": "/java.management/sun/management/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["newObjectName(Ljava/lang/String;)Ljavax/management/ObjectName;","newObjectName(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;"]
  }
,
  {
    "className": "Lsun/misc/Unsafe;",
    "module": "jdk.unsupported",
    "source": "/jdk.unsupported/sun/misc/Unsafe.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["allocateInstance(Ljava/lang/Class;)Ljava/lang/Object;","arrayBaseOffset(Ljava/lang/Class;)I","arrayIndexScale(Ljava/lang/Class;)I","compareAndSwapInt(Ljava/lang/Object;JII)Z","compareAndSwapLong(Ljava/lang/Object;JJJ)Z","compareAndSwapObject(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z","copyMemory(Ljava/lang/Object;JLjava/lang/Object;JJ)V","getAndAddInt(Ljava/lang/Object;JI)I","getAndAddLong(Ljava/lang/Object;JJ)J","getAndSetLong(Ljava/lang/Object;JJ)J","getAndSetObject(Ljava/lang/Object;JLjava/lang/Object;)Ljava/lang/Object;","getByte(Ljava/lang/Object;J)B","getInt(J)I","getIntVolatile(Ljava/lang/Object;J)I","getObjectVolatile(Ljava/lang/Object;J)Ljava/lang/Object;","objectFieldOffset(Ljava/lang/reflect/Field;)J","putIntVolatile(Ljava/lang/Object;JI)V","putObjectVolatile(Ljava/lang/Object;JLjava/lang/Object;)V","putOrderedObject(Ljava/lang/Object;JLjava/lang/Object;)V","storeFence()V"]
  }
,
  {
    "className": "Lsun/net/ApplicationProxy;",
    "module": "java.base",
    "source": "/java.base/sun/net/ApplicationProxy.class",
    "super": "Ljava/net/Proxy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/Proxy;)V","create(Ljava/net/Proxy;)Lsun/net/ApplicationProxy;"]
  }
,
  {
    "className": "Lsun/net/ConnectionResetException;",
    "module": "java.base",
    "source": "/java.base/sun/net/ConnectionResetException.class",
    "super": "Ljava/net/SocketException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/net/DefaultProgressMeteringPolicy;",
    "module": "java.base",
    "source": "/java.base/sun/net/DefaultProgressMeteringPolicy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/net/ProgressMeteringPolicy;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getProgressUpdateThreshold()I","shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lsun/net/InetAddressCachePolicy;",
    "module": "java.base",
    "source": "/java.base/sun/net/InetAddressCachePolicy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get()I","getNegative()I"]
  }
,
  {
    "className": "Lsun/net/NetHooks$Provider;",
    "module": "java.base",
    "source": "/java.base/sun/net/NetHooks$Provider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/NetHooks;",
    "module": "java.base",
    "source": "/java.base/sun/net/NetHooks.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["beforeTcpBind(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V","beforeTcpConnect(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V"]
  }
,
  {
    "className": "Lsun/net/NetProperties;",
    "module": "java.base",
    "source": "/java.base/sun/net/NetProperties.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["get(Ljava/lang/String;)Ljava/lang/String;","getInteger(Ljava/lang/String;I)Ljava/lang/Integer;"]
  }
,
  {
    "className": "Lsun/net/PortConfig;",
    "module": "java.base",
    "source": "/java.base/sun/net/PortConfig.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getLower()I","getUpper()I"]
  }
,
  {
    "className": "Lsun/net/ProgressEvent;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressEvent.class",
    "super": "Ljava/util/EventObject;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/net/ProgressSource;Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;Lsun/net/ProgressSource$State;JJ)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/net/ProgressListener;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressListener.class",
    "super": "null",
    "interfaces": ["Ljava/util/EventListener;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/ProgressMeteringPolicy;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressMeteringPolicy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/ProgressMonitor;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressMonitor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getDefault()Lsun/net/ProgressMonitor;","getProgressUpdateThreshold()I","shouldMeterInput(Ljava/net/URL;Ljava/lang/String;)Z","unregisterSource(Lsun/net/ProgressSource;)V","updateProgress(Lsun/net/ProgressSource;)V"]
  }
,
  {
    "className": "Lsun/net/ProgressSource$State;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressSource$State.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/ProgressSource;",
    "module": "java.base",
    "source": "/java.base/sun/net/ProgressSource.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/URL;Ljava/lang/String;J)V","clone()Ljava/lang/Object;","close()V","connected()Z","finishTracking()V","getContentType()Ljava/lang/String;","getExpected()J","getMethod()Ljava/lang/String;","getProgress()J","getState()Lsun/net/ProgressSource$State;","getURL()Ljava/net/URL;","toString()Ljava/lang/String;","updateProgress(JJ)V"]
  }
,
  {
    "className": "Lsun/net/ResourceManager;",
    "module": "java.base",
    "source": "/java.base/sun/net/ResourceManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["afterUdpClose()V","beforeUdpCreate()V"]
  }
,
  {
    "className": "Lsun/net/SocksProxy;",
    "module": "java.base",
    "source": "/java.base/sun/net/SocksProxy.class",
    "super": "Ljava/net/Proxy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/SocketAddress;I)V","create(Ljava/net/SocketAddress;I)Lsun/net/SocksProxy;","protocolVersion()I"]
  }
,
  {
    "className": "Lsun/net/dns/OptionsImpl;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/OptionsImpl.class",
    "super": "Lsun/net/dns/ResolverConfiguration$Options;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfiguration$Options;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfiguration$Options.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfiguration;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfiguration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","open()Lsun/net/dns/ResolverConfiguration;"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfigurationImpl$1;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfigurationImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/net/dns/ResolverConfigurationImpl;)V","run()Ljava/lang/Object;","run()Ljava/util/LinkedList;"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfigurationImpl$2;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfigurationImpl$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/net/dns/ResolverConfigurationImpl;)V","run()Ljava/lang/Object;","run()Ljava/util/LinkedList;"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfigurationImpl$3;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfigurationImpl$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/net/dns/ResolverConfigurationImpl;)V","run()Ljava/lang/Object;","run()Ljava/util/LinkedList;"]
  }
,
  {
    "className": "Lsun/net/dns/ResolverConfigurationImpl;",
    "module": "java.base",
    "source": "/java.base/sun/net/dns/ResolverConfigurationImpl.class",
    "super": "Lsun/net/dns/ResolverConfiguration;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","fallbackDomain0()Ljava/lang/String;","getSearchList()Ljava/util/LinkedList;","loadConfig()V","localDomain0()Ljava/lang/String;","nameservers()Ljava/util/List;","resolvconf(Ljava/lang/String;II)Ljava/util/LinkedList;"]
  }
,
  {
    "className": "Lsun/net/ext/ExtendedSocketOptions$NoExtendedSocketOptions;",
    "module": "java.base",
    "source": "/java.base/sun/net/ext/ExtendedSocketOptions$NoExtendedSocketOptions.class",
    "super": "Lsun/net/ext/ExtendedSocketOptions;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getOption(Ljava/io/FileDescriptor;Ljava/net/SocketOption;)Ljava/lang/Object;","setOption(Ljava/io/FileDescriptor;Ljava/net/SocketOption;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/net/ext/ExtendedSocketOptions;",
    "module": "java.base",
    "source": "/java.base/sun/net/ext/ExtendedSocketOptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/util/Set;)V","getInstance()Lsun/net/ext/ExtendedSocketOptions;","isOptionSupported(Ljava/net/SocketOption;)Z","lambda$options0$0(Ljava/net/SocketOption;)Z","lambda$options0$1(Ljava/net/SocketOption;)Z","options()Ljava/util/Set;","options(S)Ljava/util/Set;","options0(S)Ljava/util/Set;","register(Lsun/net/ext/ExtendedSocketOptions;)V"]
  }
,
  {
    "className": "Lsun/net/sdp/SdpProvider$Action;",
    "module": "java.base",
    "source": "/java.base/sun/net/sdp/SdpProvider$Action.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/sdp/SdpProvider$Rule;",
    "module": "java.base",
    "source": "/java.base/sun/net/sdp/SdpProvider$Rule.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/sdp/SdpProvider;",
    "module": "java.base",
    "source": "/java.base/sun/net/sdp/SdpProvider.class",
    "super": "Lsun/net/NetHooks$Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convertTcpToSdpIfMatch(Ljava/io/FileDescriptor;Lsun/net/sdp/SdpProvider$Action;Ljava/net/InetAddress;I)V","implBeforeTcpBind(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V","implBeforeTcpConnect(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V"]
  }
,
  {
    "className": "Lsun/net/sdp/SdpSupport;",
    "module": "java.base",
    "source": "/java.base/sun/net/sdp/SdpSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["convert0(I)V","convertSocket(Ljava/io/FileDescriptor;)V"]
  }
,
  {
    "className": "Lsun/net/spi/DefaultProxySelector$3;",
    "module": "java.base",
    "source": "/java.base/sun/net/spi/DefaultProxySelector$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Integer;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/net/spi/DefaultProxySelector$4;",
    "module": "java.base",
    "source": "/java.base/sun/net/spi/DefaultProxySelector$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/net/spi/DefaultProxySelector;Ljava/lang/String;Ljava/lang/String;Lsun/net/spi/DefaultProxySelector$NonProxyInfo;)V","run()Ljava/lang/Object;","run()[Ljava/net/Proxy;"]
  }
,
  {
    "className": "Lsun/net/spi/DefaultProxySelector$NonProxyInfo;",
    "module": "java.base",
    "source": "/java.base/sun/net/spi/DefaultProxySelector$NonProxyInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/spi/DefaultProxySelector;",
    "module": "java.base",
    "source": "/java.base/sun/net/spi/DefaultProxySelector.class",
    "super": "Ljava/net/ProxySelector;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["connectFailed(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V","defaultPort(Ljava/lang/String;)I","disjunctToRegex(Ljava/lang/String;)Ljava/lang/String;","getSystemProxies(Ljava/lang/String;Ljava/lang/String;)[Ljava/net/Proxy;","select(Ljava/net/URI;)Ljava/util/List;","shouldNotUseProxyFor(Ljava/util/regex/Pattern;Ljava/lang/String;)Z","socksProxyVersion()I","toPattern(Ljava/lang/String;)Ljava/util/regex/Pattern;"]
  }
,
  {
    "className": "Lsun/net/util/IPAddressUtil;",
    "module": "java.base",
    "source": "/java.base/sun/net/util/IPAddressUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkAuth(Ljava/lang/String;)Ljava/lang/String;","checkAuthority(Ljava/net/URL;)Ljava/lang/String;","checkExternalForm(Ljava/net/URL;)Ljava/lang/String;","checkHost(Ljava/lang/String;)Ljava/lang/String;","checkHostString(Ljava/lang/String;)Ljava/lang/String;","checkUserInfo(Ljava/lang/String;)Ljava/lang/String;","convertFromIPv4MappedAddress([B)[B","describeChar(C)Ljava/lang/String;","isIPv4MappedAddress([B)Z","isIPv6LiteralAddress(Ljava/lang/String;)Z","match(CJJ)Z","scan(Ljava/lang/String;JJ)I","scan(Ljava/lang/String;JJ[C)I","textToNumericFormatV4(Ljava/lang/String;)[B","textToNumericFormatV6(Ljava/lang/String;)[B"]
  }
,
  {
    "className": "Lsun/net/util/SocketExceptions;",
    "module": "java.base",
    "source": "/java.base/sun/net/util/SocketExceptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["of(Ljava/io/IOException;Ljava/net/InetSocketAddress;)Ljava/io/IOException;"]
  }
,
  {
    "className": "Lsun/net/util/URLUtil;",
    "module": "java.base",
    "source": "/java.base/sun/net/util/URLUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["urlNoFragString(Ljava/net/URL;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/net/www/MessageHeader;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/MessageHeader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","add(Ljava/lang/String;Ljava/lang/String;)V","findValue(Ljava/lang/String;)Ljava/lang/String;","grow()V","set(Ljava/lang/String;Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/net/www/MeteredStream;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/MeteredStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;Lsun/net/ProgressSource;J)V","available()I","close()V","isMarked()Z","justRead(J)V","mark(I)V","markSupported()Z","read()I","read([BII)I","reset()V","skip(J)J"]
  }
,
  {
    "className": "Lsun/net/www/MimeEntry;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/MimeEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V","clone()Ljava/lang/Object;","getExtensionsAsList()Ljava/lang/String;","getType()Ljava/lang/String;","isStarred(Ljava/lang/String;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/net/www/MimeTable$DefaultInstanceHolder;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/MimeTable$DefaultInstanceHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/www/MimeTable;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/MimeTable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/FileNameMap;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["findByExt(Ljava/lang/String;)Lsun/net/www/MimeEntry;","findByFileName(Ljava/lang/String;)Lsun/net/www/MimeEntry;","getContentTypeFor(Ljava/lang/String;)Ljava/lang/String;","getDefaultTable()Lsun/net/www/MimeTable;","loadTable()Ljava/net/FileNameMap;"]
  }
,
  {
    "className": "Lsun/net/www/ParseUtil;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/ParseUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decode(Ljava/lang/String;)Ljava/lang/String;","encodePath(Ljava/lang/String;)Ljava/lang/String;","encodePath(Ljava/lang/String;IC)Ljava/lang/String;","encodePath(Ljava/lang/String;Z)Ljava/lang/String;","escape([CCI)I","firstEncodeIndex(Ljava/lang/String;)I","match(CJJ)Z","unescape(Ljava/lang/String;I)B"]
  }
,
  {
    "className": "Lsun/net/www/URLConnection;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/URLConnection.class",
    "super": "Ljava/net/URLConnection;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/URL;)V","getContentType()Ljava/lang/String;","getHeaderField(Ljava/lang/String;)Ljava/lang/String;","setContentType(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/net/www/http/ChunkedInputStream;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/http/ChunkedInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": ["Lsun/net/www/http/Hurryable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/www/http/Hurryable;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/http/Hurryable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/net/www/protocol/file/FileURLConnection;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/protocol/file/FileURLConnection.class",
    "super": "Lsun/net/www/URLConnection;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/URL;Ljava/io/File;)V","connect()V","getContentLengthLong()J","getHeaderField(Ljava/lang/String;)Ljava/lang/String;","getInputStream()Ljava/io/InputStream;","getLastModified()J","initializeHeaders()V"]
  }
,
  {
    "className": "Lsun/net/www/protocol/file/Handler;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/protocol/file/Handler.class",
    "super": "Ljava/net/URLStreamHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createFileURLConnection(Ljava/net/URL;Ljava/io/File;)Ljava/net/URLConnection;","hostsEqual(Ljava/net/URL;Ljava/net/URL;)Z","openConnection(Ljava/net/URL;)Ljava/net/URLConnection;","openConnection(Ljava/net/URL;Ljava/net/Proxy;)Ljava/net/URLConnection;","parseURL(Ljava/net/URL;Ljava/lang/String;II)V"]
  }
,
  {
    "className": "Lsun/net/www/protocol/jar/Handler;",
    "module": "java.base",
    "source": "/java.base/sun/net/www/protocol/jar/Handler.class",
    "super": "Ljava/net/URLStreamHandler;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/AsynchronousChannelGroupImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/AsynchronousChannelGroupImpl.class",
    "super": "Ljava/nio/channels/AsynchronousChannelGroup;",
    "interfaces": ["Ljava/util/concurrent/Executor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/ChannelInputStream;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/ChannelInputStream.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/channels/ReadableByteChannel;)V","available()I","close()V","read()I","read(Ljava/nio/ByteBuffer;)I","read(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;Z)I","read([BII)I"]
  }
,
  {
    "className": "Lsun/nio/ch/DatagramChannelImpl$DefaultOptionsHolder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DatagramChannelImpl$DefaultOptionsHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/DatagramChannelImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DatagramChannelImpl.class",
    "super": "Ljava/nio/channels/DatagramChannel;",
    "interfaces": ["Lsun/nio/ch/SelChImpl;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/nio/channels/spi/SelectorProvider;)V","<init>(Ljava/nio/channels/spi/SelectorProvider;Ljava/net/ProtocolFamily;)V","beginRead(ZZ)Ljava/net/SocketAddress;","beginWrite(ZZ)Ljava/net/SocketAddress;","bind(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;","bindInternal(Ljava/net/SocketAddress;)V","connect(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;","disconnect()Ljava/nio/channels/DatagramChannel;","disconnect0(Ljava/io/FileDescriptor;Z)V","endRead(ZZ)V","endWrite(ZZ)V","ensureOpen()V","getFDVal()I","getLocalAddress()Ljava/net/SocketAddress;","getOption(Ljava/net/SocketOption;)Ljava/lang/Object;","implCloseSelectableChannel()V","implConfigureBlocking(Z)V","initIDs()V","isConnected()Z","kill()V","localAddress()Ljava/net/InetSocketAddress;","pollRead(J)Z","receive(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;Z)I","receive(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;","receive0(Ljava/io/FileDescriptor;JIZ)I","receiveIntoNativeBuffer(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;IIZ)I","remoteAddress()Ljava/net/InetSocketAddress;","send(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;Ljava/net/InetSocketAddress;)I","send(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I","send0(ZLjava/io/FileDescriptor;JILjava/net/InetAddress;I)I","sendFromNativeBuffer(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;Ljava/net/InetSocketAddress;)I","socket()Ljava/net/DatagramSocket;","supportedOptions()Ljava/util/Set;","write(Ljava/nio/ByteBuffer;)I"]
  }
,
  {
    "className": "Lsun/nio/ch/DatagramDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DatagramDispatcher.class",
    "super": "Lsun/nio/ch/NativeDispatcher;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","close(Ljava/io/FileDescriptor;)V","preClose(Ljava/io/FileDescriptor;)V","write(Ljava/io/FileDescriptor;JI)I","write0(Ljava/io/FileDescriptor;JI)I"]
  }
,
  {
    "className": "Lsun/nio/ch/DatagramSocketAdaptor$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DatagramSocketAdaptor$1.class",
    "super": "Ljava/net/DatagramSocketImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["bind(ILjava/net/InetAddress;)V","close()V","create()V","getOption(I)Ljava/lang/Object;","peek(Ljava/net/InetAddress;)I","peekData(Ljava/net/DatagramPacket;)I","receive(Ljava/net/DatagramPacket;)V","send(Ljava/net/DatagramPacket;)V","setOption(ILjava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/nio/ch/DatagramSocketAdaptor;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DatagramSocketAdaptor.class",
    "super": "Ljava/net/DatagramSocket;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/ch/DatagramChannelImpl;)V","bind(Ljava/net/SocketAddress;)V","close()V","connect(Ljava/net/InetAddress;I)V","connectInternal(Ljava/net/SocketAddress;)V","create(Lsun/nio/ch/DatagramChannelImpl;)Ljava/net/DatagramSocket;","disconnect()V","getLocalPort()I","isClosed()Z","receive(Ljava/net/DatagramPacket;)V","receive(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;","send(Ljava/net/DatagramPacket;)V","setSoTimeout(I)V"]
  }
,
  {
    "className": "Lsun/nio/ch/DirectBuffer;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/DirectBuffer.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/EPoll$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/EPoll$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/nio/ch/EpollAccess;"],
    "safeForPreinit": "true",
    "invokedMethods": ["allocatePollArray(I)J","epollCreate()I","epollCtl(IIII)I","socketpair([I)V"]
  }
,
  {
    "className": "Lsun/nio/ch/EPoll;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/EPoll.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["allocatePollArray(I)J","create()I","ctl(IIII)I"]
  }
,
  {
    "className": "Lsun/nio/ch/EPollPort;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/EPollPort.class",
    "super": "Lsun/nio/ch/Port;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/EPollSelectorProvider;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/EPollSelectorProvider.class",
    "super": "Lsun/nio/ch/SelectorProviderImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/EpollAccess;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/EpollAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["initializeEpoll()V"]
  }
,
  {
    "className": "Lsun/nio/ch/ExtendedSocketOption$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/ExtendedSocketOption$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/SocketOption;"],
    "safeForPreinit": "true",
    "invokedMethods": ["name()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/nio/ch/ExtendedSocketOption;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/ExtendedSocketOption.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/FileChannelImpl$Closer;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/FileChannelImpl$Closer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/FileDescriptor;)V","run()V"]
  }
,
  {
    "className": "Lsun/nio/ch/FileChannelImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/FileChannelImpl.class",
    "super": "Ljava/nio/channels/FileChannel;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZLjava/lang/Object;)V","beginBlocking()V","endBlocking(Z)V","ensureOpen()V","implCloseChannel()V","initIDs()J","open(Ljava/io/FileDescriptor;Ljava/lang/String;ZZZLjava/lang/Object;)Ljava/nio/channels/FileChannel;","position()J","read(Ljava/nio/ByteBuffer;)I","setUninterruptible()V","size()J"]
  }
,
  {
    "className": "Lsun/nio/ch/FileDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/FileDispatcher.class",
    "super": "Lsun/nio/ch/NativeDispatcher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/nio/ch/FileDispatcherImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/FileDispatcherImpl.class",
    "super": "Lsun/nio/ch/FileDispatcher;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","close0(Ljava/io/FileDescriptor;)V","preClose0(Ljava/io/FileDescriptor;)V","pread(Ljava/io/FileDescriptor;JIJ)I","pread0(Ljava/io/FileDescriptor;JIJ)I","read(Ljava/io/FileDescriptor;JI)I","read0(Ljava/io/FileDescriptor;JI)I","release(Ljava/io/FileDescriptor;JJ)V","release0(Ljava/io/FileDescriptor;JJ)V","seek(Ljava/io/FileDescriptor;J)J","seek0(Ljava/io/FileDescriptor;J)J","setDirect0(Ljava/io/FileDescriptor;)I","setDirectIO(Ljava/io/FileDescriptor;Ljava/lang/String;)I","size(Ljava/io/FileDescriptor;)J","size0(Ljava/io/FileDescriptor;)J","write0(Ljava/io/FileDescriptor;JI)I"]
  }
,
  {
    "className": "Lsun/nio/ch/FileLockImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/FileLockImpl.class",
    "super": "Ljava/nio/channels/FileLock;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/IOStatus;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/IOStatus.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["normalize(I)I","normalize(J)J"]
  }
,
  {
    "className": "Lsun/nio/ch/IOUtil$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/IOUtil$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/nio/ch/IOUtil;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/IOUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","configureBlocking(Ljava/io/FileDescriptor;Z)V","fdVal(Ljava/io/FileDescriptor;)I","initIDs()V","iovMax()I","load()V","makePipe(Z)J","newFD(I)Ljava/io/FileDescriptor;","read(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JLsun/nio/ch/NativeDispatcher;)I","read(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JZILsun/nio/ch/NativeDispatcher;)I","readIntoNativeBuffer(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JZILsun/nio/ch/NativeDispatcher;)I","setfdVal(Ljava/io/FileDescriptor;I)V","write(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JLsun/nio/ch/NativeDispatcher;)I","write(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JZILsun/nio/ch/NativeDispatcher;)I","writeFromNativeBuffer(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;JZILsun/nio/ch/NativeDispatcher;)I"]
  }
,
  {
    "className": "Lsun/nio/ch/Interruptible;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Interruptible.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/NativeDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/NativeDispatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","pread(Ljava/io/FileDescriptor;JIJ)I","pwrite(Ljava/io/FileDescriptor;JIJ)I"]
  }
,
  {
    "className": "Lsun/nio/ch/NativeThread;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/NativeThread.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","current()J","init()V","signal(J)V"]
  }
,
  {
    "className": "Lsun/nio/ch/NativeThreadSet;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/NativeThreadSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","add()I","remove(I)V","signalAndWait()V"]
  }
,
  {
    "className": "Lsun/nio/ch/Net$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Net$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/net/ProtocolFamily;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/nio/ch/Net;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Net.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","asInetSocketAddress(Ljava/net/SocketAddress;)Ljava/net/InetSocketAddress;","bind(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V","bind(Ljava/net/ProtocolFamily;Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)V","bind0(Ljava/io/FileDescriptor;ZZLjava/net/InetAddress;I)V","checkAddress(Ljava/net/SocketAddress;)Ljava/net/InetSocketAddress;","checkAddress(Ljava/net/SocketAddress;Ljava/net/ProtocolFamily;)Ljava/net/InetSocketAddress;","connect(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)I","connect(Ljava/net/ProtocolFamily;Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)I","connect0(ZLjava/io/FileDescriptor;Ljava/net/InetAddress;I)I","getIntOption0(Ljava/io/FileDescriptor;ZII)I","getInterface4(Ljava/io/FileDescriptor;)I","getInterface6(Ljava/io/FileDescriptor;)I","getRevealedLocalAddress(Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;","getRevealedLocalAddressAsString(Ljava/net/InetSocketAddress;)Ljava/lang/String;","getSocketOption(Ljava/io/FileDescriptor;Ljava/net/ProtocolFamily;Ljava/net/SocketOption;)Ljava/lang/Object;","inet4FromInt(I)Ljava/net/InetAddress;","initIDs()V","isExclusiveBindAvailable()I","isFastTcpLoopbackRequested()Z","isIPv6Available()Z","isIPv6Available0()Z","localAddress(Ljava/io/FileDescriptor;)Ljava/net/InetSocketAddress;","localInetAddress(Ljava/io/FileDescriptor;)Ljava/net/InetAddress;","localPort(Ljava/io/FileDescriptor;)I","poll(Ljava/io/FileDescriptor;IJ)I","pollconnValue()S","pollerrValue()S","pollhupValue()S","pollinValue()S","pollnvalValue()S","polloutValue()S","setIntOption0(Ljava/io/FileDescriptor;ZIIIZ)V","setSocketOption(Ljava/io/FileDescriptor;Ljava/net/ProtocolFamily;Ljava/net/SocketOption;Ljava/lang/Object;)V","shutdown(Ljava/io/FileDescriptor;I)V","socket(Ljava/net/ProtocolFamily;Z)Ljava/io/FileDescriptor;","socket(Z)Ljava/io/FileDescriptor;","socket0(ZZZZ)I","translateException(Ljava/lang/Exception;)V","translateException(Ljava/lang/Exception;Z)V","translateToSocketException(Ljava/lang/Exception;)V","useExclusiveBind()Z"]
  }
,
  {
    "className": "Lsun/nio/ch/OptionKey;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/OptionKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","level()I","name()I"]
  }
,
  {
    "className": "Lsun/nio/ch/Port;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Port.class",
    "super": "Lsun/nio/ch/AsynchronousChannelGroupImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/SelChImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SelChImpl.class",
    "super": "null",
    "interfaces": ["Ljava/nio/channels/Channel;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/SelectorProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SelectorProviderImpl.class",
    "super": "Ljava/nio/channels/spi/SelectorProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["openDatagramChannel()Ljava/nio/channels/DatagramChannel;","openDatagramChannel(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;","openSocketChannel()Ljava/nio/channels/SocketChannel;"]
  }
,
  {
    "className": "Lsun/nio/ch/SocketChannelImpl$DefaultOptionsHolder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketChannelImpl$DefaultOptionsHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/ch/SocketChannelImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketChannelImpl.class",
    "super": "Ljava/nio/channels/SocketChannel;",
    "interfaces": ["Lsun/nio/ch/SelChImpl;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/channels/spi/SelectorProvider;)V","beginConnect(ZLjava/net/InetSocketAddress;)V","beginFinishConnect(Z)V","beginRead(Z)V","beginWrite(Z)V","bind(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;","checkConnect(Ljava/io/FileDescriptor;Z)I","connect(Ljava/net/SocketAddress;)Z","endConnect(ZZ)V","endFinishConnect(ZZ)V","endRead(ZZ)V","endWrite(ZZ)V","ensureOpen()V","ensureOpenAndConnected()V","finishConnect()Z","getFDVal()I","implCloseSelectableChannel()V","implConfigureBlocking(Z)V","isConnected()Z","isInputOpen()Z","isOutputOpen()Z","kill()V","localAddress()Ljava/net/InetSocketAddress;","read(Ljava/nio/ByteBuffer;)I","remoteAddress()Ljava/net/InetSocketAddress;","setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;","supportedOptions()Ljava/util/Set;","toString()Ljava/lang/String;","write(Ljava/nio/ByteBuffer;)I"]
  }
,
  {
    "className": "Lsun/nio/ch/SocketDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketDispatcher.class",
    "super": "Lsun/nio/ch/NativeDispatcher;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["close(Ljava/io/FileDescriptor;)V","preClose(Ljava/io/FileDescriptor;)V","read(Ljava/io/FileDescriptor;JI)I","write(Ljava/io/FileDescriptor;JI)I"]
  }
,
  {
    "className": "Lsun/nio/ch/SocketOptionRegistry$LazyInitialization;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketOptionRegistry$LazyInitialization.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","options()Ljava/util/Map;"]
  }
,
  {
    "className": "Lsun/nio/ch/SocketOptionRegistry$RegistryKey;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketOptionRegistry$RegistryKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/net/SocketOption;Ljava/net/ProtocolFamily;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/nio/ch/SocketOptionRegistry;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/SocketOptionRegistry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findOption(Ljava/net/SocketOption;Ljava/net/ProtocolFamily;)Lsun/nio/ch/OptionKey;"]
  }
,
  {
    "className": "Lsun/nio/ch/Util$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Util$1.class",
    "super": "Ljdk/internal/misc/TerminatingThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Lsun/nio/ch/Util$BufferCache;","threadTerminated(Ljava/lang/Object;)V","threadTerminated(Lsun/nio/ch/Util$BufferCache;)V"]
  }
,
  {
    "className": "Lsun/nio/ch/Util$BufferCache;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Util$BufferCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","get(I)Ljava/nio/ByteBuffer;","isEmpty()Z","next(I)I","offerFirst(Ljava/nio/ByteBuffer;)Z","removeFirst()Ljava/nio/ByteBuffer;"]
  }
,
  {
    "className": "Lsun/nio/ch/Util;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkBufferPositionAligned(Ljava/nio/ByteBuffer;II)V","checkChannelPositionAligned(JI)V","checkRemainingBufferSizeAligned(II)V","free(Ljava/nio/ByteBuffer;)V","getTemporaryAlignedDirectBuffer(II)Ljava/nio/ByteBuffer;","getTemporaryDirectBuffer(I)Ljava/nio/ByteBuffer;","isBufferTooLarge(I)Z","isBufferTooLarge(Ljava/nio/ByteBuffer;)Z","offerFirstTemporaryDirectBuffer(Ljava/nio/ByteBuffer;)V","releaseTemporaryDirectBuffer(Ljava/nio/ByteBuffer;)V"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketImpl$1$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketImpl$1$1.class",
    "super": "Ljava/io/InputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/ch/WispSocketImpl$1;)V","available()I","close()V","read()I","read(Ljava/nio/ByteBuffer;)I","read([BII)I","read0(Ljava/nio/ByteBuffer;)I"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketImpl$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketImpl$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/ch/WispSocketImpl;)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketImpl$2$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketImpl$2$1.class",
    "super": "Ljava/io/OutputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/ch/WispSocketImpl$2;)V","close()V","write(I)V","write(Ljava/nio/ByteBuffer;)V","write([BII)V","write0(Ljava/nio/ByteBuffer;)V"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketImpl$2;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketImpl$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/ch/WispSocketImpl;)V","run()Ljava/io/OutputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/Socket;)V","bind(Ljava/net/SocketAddress;)V","close()V","connect(Ljava/net/SocketAddress;I)V","getChannelImpl()Lsun/nio/ch/SocketChannelImpl;","getInetAddress()Ljava/net/InetAddress;","getInputStream()Ljava/io/InputStream;","getLocalPort()I","getOutputStream()Ljava/io/OutputStream;","getPort()I","getSoTimeout()I","isBound()Z","isClosed()Z","isConnected()Z","isInputShutdown()Z","isOutputShutdown()Z","setBooleanOption(Ljava/net/SocketOption;Z)V","setSoTimeout(I)V","setTcpNoDelay(Z)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/nio/ch/WispSocketLockSupport;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispSocketLockSupport.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","beginRead()V","beginWrite()V","endRead()V","endWrite()V","lockRead()V","lockWrite()V","unLockRead()V","unLockWrite()V","unparkBlockedWispTask()V"]
  }
,
  {
    "className": "Lsun/nio/ch/WispUdpSocketImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/ch/WispUdpSocketImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/net/DatagramSocket;)V","bind(Ljava/net/SocketAddress;)V","close()V","connect(Ljava/net/InetAddress;I)V","connect(Ljava/net/SocketAddress;)V","disconnect()V","getChannelImpl()Lsun/nio/ch/DatagramChannelImpl;","getIntOption(Ljava/net/SocketOption;)I","getLocalPort()I","getReceiveBufferSize()I","getSoTimeout()I","isBound()Z","isClosed()Z","receive(Ljava/net/DatagramPacket;I)I","receive(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;","receive0(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;","send(Ljava/net/DatagramPacket;)V","send0(Ljava/net/DatagramPacket;)V","setSoTimeout(I)V"]
  }
,
  {
    "className": "Lsun/nio/cs/ArrayDecoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ArrayDecoder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/cs/ArrayEncoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ArrayEncoder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/cs/HistoricallyNamedCharset;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/HistoricallyNamedCharset.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/cs/ISO_8859_1$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ISO_8859_1$Decoder.class",
    "super": "Ljava/nio/charset/CharsetDecoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeBufferLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/nio/cs/ISO_8859_1$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ISO_8859_1$Encoder.class",
    "super": "Ljava/nio/charset/CharsetEncoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeBufferLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeISOArray([CI[BII)I","encodeISOArrayCheck([CI[BII)V","encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","implEncodeISOArray([CI[BII)I","isLegalReplacement([B)Z"]
  }
,
  {
    "className": "Lsun/nio/cs/ISO_8859_1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ISO_8859_1.class",
    "super": "Ljava/nio/charset/Charset;",
    "interfaces": ["Lsun/nio/cs/HistoricallyNamedCharset;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/StreamDecoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/StreamDecoder.class",
    "super": "Ljava/io/Reader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)V","<init>(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetDecoder;)V","<init>(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)V","close()V","ensureOpen()V","forDecoder(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Lsun/nio/cs/StreamDecoder;","forInputStreamReader(Ljava/io/InputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamDecoder;","forInputStreamReader(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamDecoder;","forInputStreamReader(Ljava/io/InputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetDecoder;)Lsun/nio/cs/StreamDecoder;","implClose()V","implRead([CII)I","implReady()Z","inReady()Z","read()I","read([CII)I","read0()I","readBytes()I","ready()Z"]
  }
,
  {
    "className": "Lsun/nio/cs/StreamEncoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/StreamEncoder.class",
    "super": "Ljava/io/Writer;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)V","<init>(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/CharsetEncoder;)V","close()V","ensureOpen()V","flush()V","flushBuffer()V","flushLeftoverChar(Ljava/nio/CharBuffer;Z)V","forOutputStreamWriter(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/lang/String;)Lsun/nio/cs/StreamEncoder;","forOutputStreamWriter(Ljava/io/OutputStream;Ljava/lang/Object;Ljava/nio/charset/Charset;)Lsun/nio/cs/StreamEncoder;","implClose()V","implFlush()V","implFlushBuffer()V","implWrite(Ljava/nio/CharBuffer;)V","implWrite([CII)V","isOpen()Z","write(I)V","write(Ljava/lang/String;II)V","write([CII)V","writeBytes()V"]
  }
,
  {
    "className": "Lsun/nio/cs/Surrogate$Parser;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/Surrogate$Parser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","error()Ljava/nio/charset/CoderResult;","parse(CLjava/nio/CharBuffer;)I","parse(C[CII)I","unmappableResult()Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/nio/cs/Surrogate;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/Surrogate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/cs/ThreadLocalCoders$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ThreadLocalCoders$1.class",
    "super": "Lsun/nio/cs/ThreadLocalCoders$Cache;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["create(Ljava/lang/Object;)Ljava/lang/Object;","hasName(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lsun/nio/cs/ThreadLocalCoders$2;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ThreadLocalCoders$2.class",
    "super": "Lsun/nio/cs/ThreadLocalCoders$Cache;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["create(Ljava/lang/Object;)Ljava/lang/Object;","hasName(Ljava/lang/Object;Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lsun/nio/cs/ThreadLocalCoders$Cache;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ThreadLocalCoders$Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["forName(Ljava/lang/Object;)Ljava/lang/Object;","moveToFront([Ljava/lang/Object;I)V"]
  }
,
  {
    "className": "Lsun/nio/cs/ThreadLocalCoders;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/ThreadLocalCoders.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decoderFor(Ljava/lang/Object;)Ljava/nio/charset/CharsetDecoder;","encoderFor(Ljava/lang/Object;)Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/US_ASCII$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/US_ASCII$Decoder.class",
    "super": "Ljava/nio/charset/CharsetDecoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeBufferLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/nio/cs/US_ASCII$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/US_ASCII$Encoder.class",
    "super": "Ljava/nio/charset/CharsetEncoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeBufferLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","isLegalReplacement([B)Z"]
  }
,
  {
    "className": "Lsun/nio/cs/US_ASCII;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/US_ASCII.class",
    "super": "Ljava/nio/charset/Charset;",
    "interfaces": ["Lsun/nio/cs/HistoricallyNamedCharset;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16$Decoder.class",
    "super": "Lsun/nio/cs/UnicodeDecoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16$Encoder.class",
    "super": "Lsun/nio/cs/UnicodeEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16.class",
    "super": "Lsun/nio/cs/Unicode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16BE$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16BE$Decoder.class",
    "super": "Lsun/nio/cs/UnicodeDecoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16BE$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16BE$Encoder.class",
    "super": "Lsun/nio/cs/UnicodeEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16BE;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16BE.class",
    "super": "Lsun/nio/cs/Unicode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16LE$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16LE$Decoder.class",
    "super": "Lsun/nio/cs/UnicodeDecoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16LE$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16LE$Encoder.class",
    "super": "Lsun/nio/cs/UnicodeEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_16LE;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_16LE.class",
    "super": "Lsun/nio/cs/Unicode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_8$Decoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_8$Decoder.class",
    "super": "Ljava/nio/charset/CharsetDecoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","decodeArrayLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeBufferLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","isMalformed3(III)Z","isMalformed3_2(II)Z","isMalformed4(III)Z","isMalformed4_2(II)Z","isMalformed4_3(I)Z","isNotContinuation(I)Z","malformed(Ljava/nio/ByteBuffer;II)Ljava/nio/charset/CoderResult;","malformed(Ljava/nio/ByteBuffer;ILjava/nio/CharBuffer;II)Ljava/nio/charset/CoderResult;","malformedForLength(Ljava/nio/ByteBuffer;II)Ljava/nio/charset/CoderResult;","malformedForLength(Ljava/nio/ByteBuffer;ILjava/nio/CharBuffer;II)Ljava/nio/charset/CoderResult;","malformedN(Ljava/nio/ByteBuffer;I)Ljava/nio/charset/CoderResult;","xflow(Ljava/nio/Buffer;II)Ljava/nio/charset/CoderResult;","xflow(Ljava/nio/Buffer;IILjava/nio/Buffer;II)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_8$Encoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_8$Encoder.class",
    "super": "Ljava/nio/charset/CharsetEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;)V","encodeArrayLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeBufferLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","isLegalReplacement([B)Z","overflow(Ljava/nio/CharBuffer;I)Ljava/nio/charset/CoderResult;","overflow(Ljava/nio/CharBuffer;ILjava/nio/ByteBuffer;I)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/nio/cs/UTF_8;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UTF_8.class",
    "super": "Lsun/nio/cs/Unicode;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["historicalName()Ljava/lang/String;","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;","updatePositions(Ljava/nio/Buffer;ILjava/nio/Buffer;I)V"]
  }
,
  {
    "className": "Lsun/nio/cs/Unicode;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/Unicode.class",
    "super": "Ljava/nio/charset/Charset;",
    "interfaces": ["Lsun/nio/cs/HistoricallyNamedCharset;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/cs/UnicodeDecoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UnicodeDecoder.class",
    "super": "Ljava/nio/charset/CharsetDecoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;I)V","decode(II)C","decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;","implReset()V"]
  }
,
  {
    "className": "Lsun/nio/cs/UnicodeEncoder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/cs/UnicodeEncoder.class",
    "super": "Ljava/nio/charset/CharsetEncoder;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/charset/Charset;IZ)V","encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;","implReset()V","put(CLjava/nio/ByteBuffer;)V"]
  }
,
  {
    "className": "Lsun/nio/fs/AbstractBasicFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/AbstractBasicFileAttributeView.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributeView;","Lsun/nio/fs/DynamicFileAttributeView;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/nio/fs/AbstractFileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/AbstractFileSystemProvider.class",
    "super": "Ljava/nio/file/spi/FileSystemProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/AbstractUserDefinedFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/AbstractUserDefinedFileAttributeView.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/UserDefinedFileAttributeView;","Lsun/nio/fs/DynamicFileAttributeView;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/nio/fs/DefaultFileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/DefaultFileSystemProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["theFileSystem()Ljava/nio/file/FileSystem;"]
  }
,
  {
    "className": "Lsun/nio/fs/DynamicFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/DynamicFileAttributeView.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/ExtendedOptions$InternalOption;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/ExtendedOptions$InternalOption.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["matches(Ljava/lang/Object;)Z"]
  }
,
  {
    "className": "Lsun/nio/fs/ExtendedOptions$Wrapper;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/ExtendedOptions$Wrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/ExtendedOptions;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/ExtendedOptions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/FileOwnerAttributeViewImpl;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/FileOwnerAttributeViewImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/FileOwnerAttributeView;","Lsun/nio/fs/DynamicFileAttributeView;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/nio/file/attribute/PosixFileAttributeView;)V"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxDosFileAttributeView$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxDosFileAttributeView$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/DosFileAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/LinuxDosFileAttributeView;Lsun/nio/fs/UnixFileAttributes;I)V","fileKey()Ljava/lang/Object;","isDirectory()Z","lastModifiedTime()Ljava/nio/file/attribute/FileTime;"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxDosFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxDosFileAttributeView.class",
    "super": "Lsun/nio/fs/UnixFileAttributeViews$Basic;",
    "interfaces": ["Ljava/nio/file/attribute/DosFileAttributeView;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;Z)V","getDosAttribute(I)I","readAttributes()Ljava/nio/file/attribute/BasicFileAttributes;","readAttributes()Ljava/nio/file/attribute/DosFileAttributes;"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxFileSystem$SupportedFileFileAttributeViewsHolder;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxFileSystem$SupportedFileFileAttributeViewsHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/LinuxFileSystem;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxFileSystem.class",
    "super": "Lsun/nio/fs/UnixFileSystem;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["supportedFileAttributeViews()Ljava/util/Set;"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxFileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxFileSystemProvider.class",
    "super": "Lsun/nio/fs/UnixFileSystemProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFileAttributeView(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;","readAttributes(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxNativeDispatcher$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxNativeDispatcher$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxNativeDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxNativeDispatcher.class",
    "super": "Lsun/nio/fs/UnixNativeDispatcher;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","fgetxattr(I[BJI)I","fgetxattr0(IJJI)I","init()V"]
  }
,
  {
    "className": "Lsun/nio/fs/LinuxUserDefinedFileAttributeView;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/LinuxUserDefinedFileAttributeView.class",
    "super": "Lsun/nio/fs/AbstractUserDefinedFileAttributeView;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;Z)V"]
  }
,
  {
    "className": "Lsun/nio/fs/NativeBuffer$Deallocator;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/NativeBuffer$Deallocator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","run()V"]
  }
,
  {
    "className": "Lsun/nio/fs/NativeBuffer;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/NativeBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","address()J","free()V","owner()Ljava/lang/Object;","release()V","setOwner(Ljava/lang/Object;)V","size()I"]
  }
,
  {
    "className": "Lsun/nio/fs/NativeBuffers$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/NativeBuffers$1.class",
    "super": "Ljdk/internal/misc/TerminatingThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["threadTerminated(Ljava/lang/Object;)V","threadTerminated([Lsun/nio/fs/NativeBuffer;)V"]
  }
,
  {
    "className": "Lsun/nio/fs/NativeBuffers;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/NativeBuffers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["allocNativeBuffer(I)Lsun/nio/fs/NativeBuffer;","asNativeBuffer([B)Lsun/nio/fs/NativeBuffer;","copyCStringToNativeBuffer([BLsun/nio/fs/NativeBuffer;)V","getNativeBuffer(I)Lsun/nio/fs/NativeBuffer;","getNativeBufferFromCache(I)Lsun/nio/fs/NativeBuffer;","releaseNativeBuffer(Lsun/nio/fs/NativeBuffer;)V"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixChannelFactory$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixChannelFactory$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/UnixChannelFactory$Flags;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixChannelFactory$Flags.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toFlags(Ljava/util/Set;)Lsun/nio/fs/UnixChannelFactory$Flags;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixChannelFactory;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixChannelFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["newFileChannel(ILsun/nio/fs/UnixPath;Ljava/lang/String;Ljava/util/Set;I)Ljava/nio/channels/FileChannel;","newFileChannel(Lsun/nio/fs/UnixPath;Ljava/util/Set;I)Ljava/nio/channels/FileChannel;","open(ILsun/nio/fs/UnixPath;Ljava/lang/String;Lsun/nio/fs/UnixChannelFactory$Flags;I)Ljava/io/FileDescriptor;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixDirectoryStream$UnixDirectoryIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixDirectoryStream;)V","hasNext()Z","isSelfOrParent([B)Z","next()Ljava/lang/Object;","next()Ljava/nio/file/Path;","readNextEntry()Ljava/nio/file/Path;","remove()V"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixDirectoryStream;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixDirectoryStream.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/DirectoryStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;JLjava/nio/file/DirectoryStream$Filter;)V","close()V","closeImpl()Z","isOpen()Z","iterator()Ljava/util/Iterator;","iterator(Ljava/nio/file/DirectoryStream;)Ljava/util/Iterator;","readLock()Ljava/util/concurrent/locks/Lock;","writeLock()Ljava/util/concurrent/locks/Lock;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixException;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/String;)V","asIOException(Lsun/nio/fs/UnixPath;)Ljava/io/IOException;","errno()I","errorString()Ljava/lang/String;","fillInStackTrace()Ljava/lang/Throwable;","getMessage()Ljava/lang/String;","rethrowAsIOException(Lsun/nio/fs/UnixPath;)V","rethrowAsIOException(Lsun/nio/fs/UnixPath;Lsun/nio/fs/UnixPath;)V","setError(I)V","translateToIOException(Ljava/lang/String;Ljava/lang/String;)Ljava/io/IOException;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileAttributeViews$Basic;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileAttributeViews$Basic.class",
    "super": "Lsun/nio/fs/AbstractBasicFileAttributeView;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;Z)V","readAttributes()Ljava/nio/file/attribute/BasicFileAttributes;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileAttributeViews$Posix;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileAttributeViews$Posix.class",
    "super": "Lsun/nio/fs/UnixFileAttributeViews$Basic;",
    "interfaces": ["Ljava/nio/file/attribute/PosixFileAttributeView;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;Z)V","checkReadExtended()V","readAttributes()Ljava/nio/file/attribute/BasicFileAttributes;","readAttributes()Lsun/nio/fs/UnixFileAttributes;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileAttributeViews;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileAttributeViews.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createBasicView(Lsun/nio/fs/UnixPath;Z)Lsun/nio/fs/UnixFileAttributeViews$Basic;","createOwnerView(Lsun/nio/fs/UnixPath;Z)Lsun/nio/fs/FileOwnerAttributeViewImpl;","createPosixView(Lsun/nio/fs/UnixPath;Z)Lsun/nio/fs/UnixFileAttributeViews$Posix;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileAttributes$UnixAsBasicFileAttributes;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileAttributes$UnixAsBasicFileAttributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/BasicFileAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixFileAttributes;)V","fileKey()Ljava/lang/Object;","isDirectory()Z","lastModifiedTime()Ljava/nio/file/attribute/FileTime;","wrap(Lsun/nio/fs/UnixFileAttributes;)Lsun/nio/fs/UnixFileAttributes$UnixAsBasicFileAttributes;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileAttributes;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileAttributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/attribute/PosixFileAttributes;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","asBasicFileAttributes()Ljava/nio/file/attribute/BasicFileAttributes;","fileKey()Ljava/lang/Object;","fileKey()Lsun/nio/fs/UnixFileKey;","get(I)Lsun/nio/fs/UnixFileAttributes;","get(Lsun/nio/fs/UnixPath;Z)Lsun/nio/fs/UnixFileAttributes;","isDirectory()Z","isSymbolicLink()Z","lastModifiedTime()Ljava/nio/file/attribute/FileTime;","toFileTime(JJ)Ljava/nio/file/attribute/FileTime;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileKey;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JJ)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileModeAttribute$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileModeAttribute$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileModeAttribute;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileModeAttribute.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toUnixMode(I[Ljava/nio/file/attribute/FileAttribute;)I","toUnixMode(Ljava/util/Set;)I"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileStoreAttributes;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileStoreAttributes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileSystem;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileSystem.class",
    "super": "Ljava/nio/file/FileSystem;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixFileSystemProvider;Ljava/lang/String;)V","close()V","defaultDirectory()[B","getPath(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;","isSolaris()Z","needToResolveAgainstDefaultDirectory()Z","normalizeJavaPath(Ljava/lang/String;)Ljava/lang/String;","normalizeNativePath([C)[C","provider()Ljava/nio/file/spi/FileSystemProvider;","rootDirectory()Lsun/nio/fs/UnixPath;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileSystemProvider$3;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileSystemProvider$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/UnixFileSystemProvider;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixFileSystemProvider.class",
    "super": "Lsun/nio/fs/AbstractFileSystemProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkAccess(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V","createDirectory(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V","exists(Ljava/nio/file/Path;)Z","getFileAttributeView(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;","getPath(Ljava/net/URI;)Ljava/nio/file/Path;","getScheme()Ljava/lang/String;","isDirectory(Ljava/nio/file/Path;)Z","newByteChannel(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;","newDirectoryStream(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;","readAttributes(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;","theFileSystem()Lsun/nio/fs/UnixFileSystem;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixMountEntry;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixMountEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/nio/fs/UnixNativeDispatcher$1;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixNativeDispatcher$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixNativeDispatcher;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixNativeDispatcher.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","access(Lsun/nio/fs/UnixPath;I)V","access0(JI)V","close(I)V","close0(I)V","closedir(J)V","copyToNativeBuffer(Lsun/nio/fs/UnixPath;)Lsun/nio/fs/NativeBuffer;","dup(I)I","exists(Lsun/nio/fs/UnixPath;)Z","exists0(J)Z","fdopendir(I)J","fstat(ILsun/nio/fs/UnixFileAttributes;)V","getcwd()[B","init()I","lstat(Lsun/nio/fs/UnixPath;Lsun/nio/fs/UnixFileAttributes;)V","lstat0(JLsun/nio/fs/UnixFileAttributes;)V","mkdir(Lsun/nio/fs/UnixPath;I)V","mkdir0(JI)V","open(Lsun/nio/fs/UnixPath;II)I","open0(JII)I","openat(I[BII)I","openat0(IJII)I","openatSupported()Z","opendir(Lsun/nio/fs/UnixPath;)J","opendir0(J)J","readdir(J)[B","realpath(Lsun/nio/fs/UnixPath;)[B","realpath0(J)[B","stat(Lsun/nio/fs/UnixPath;)I","stat(Lsun/nio/fs/UnixPath;Lsun/nio/fs/UnixFileAttributes;)V","stat0(JLsun/nio/fs/UnixFileAttributes;)V","stat1(J)I","strerror(I)[B","unlink(Lsun/nio/fs/UnixPath;)V","unlink0(J)V","unlinkat(I[BI)V","unlinkat0(IJI)V"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixPath;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixPath.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/Path;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixFileSystem;Ljava/lang/String;)V","<init>(Lsun/nio/fs/UnixFileSystem;[B)V","asByteArray()[B","checkNotNul(Ljava/lang/String;C)V","checkRead()V","checkWrite()V","compareTo(Ljava/lang/Object;)I","compareTo(Ljava/nio/file/Path;)I","emptyPath()Lsun/nio/fs/UnixPath;","encode(Lsun/nio/fs/UnixFileSystem;Ljava/lang/String;)[B","equals(Ljava/lang/Object;)Z","getByteArrayForSysCalls()[B","getFileName()Ljava/nio/file/Path;","getFileName()Lsun/nio/fs/UnixPath;","getFileSystem()Ljava/nio/file/FileSystem;","getFileSystem()Lsun/nio/fs/UnixFileSystem;","getName(I)Ljava/nio/file/Path;","getName(I)Lsun/nio/fs/UnixPath;","getNameCount()I","getParent()Ljava/nio/file/Path;","getParent()Lsun/nio/fs/UnixPath;","getPathForExceptionMessage()Ljava/lang/String;","getRoot()Lsun/nio/fs/UnixPath;","hashCode()I","initOffsets()V","isAbsolute()Z","isEmpty()Z","normalize()Ljava/nio/file/Path;","normalize()Lsun/nio/fs/UnixPath;","normalize(Ljava/lang/String;II)Ljava/lang/String;","normalizeAndCheck(Ljava/lang/String;)Ljava/lang/String;","openForAttributeAccess(Z)I","resolve(Ljava/nio/file/Path;)Ljava/nio/file/Path;","resolve(Ljava/nio/file/Path;)Lsun/nio/fs/UnixPath;","resolve([B)Lsun/nio/fs/UnixPath;","resolve([B[B)[B","toAbsolutePath()Ljava/nio/file/Path;","toAbsolutePath()Lsun/nio/fs/UnixPath;","toRealPath([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;","toString()Ljava/lang/String;","toUnixPath(Ljava/nio/file/Path;)Lsun/nio/fs/UnixPath;","toUri()Ljava/net/URI;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixSecureDirectoryStream;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixSecureDirectoryStream.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/nio/file/SecureDirectoryStream;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/nio/fs/UnixPath;JILjava/nio/file/DirectoryStream$Filter;)V","close()V","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lsun/nio/fs/UnixUriUtils;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/UnixUriUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["decode(C)I","fromUri(Lsun/nio/fs/UnixFileSystem;Ljava/net/URI;)Ljava/nio/file/Path;","match(CJJ)Z","toUri(Lsun/nio/fs/UnixPath;)Ljava/net/URI;"]
  }
,
  {
    "className": "Lsun/nio/fs/Util;",
    "module": "java.base",
    "source": "/java.base/sun/nio/fs/Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["followLinks([Ljava/nio/file/LinkOption;)Z","jnuEncoding()Ljava/nio/charset/Charset;","toBytes(Ljava/lang/String;)[B","toString([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/reflect/ReflectionFactory;",
    "module": "jdk.unsupported",
    "source": "/jdk.unsupported/sun/reflect/ReflectionFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/annotation/AnnotationParser;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/annotation/AnnotationParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["toArray(Ljava/util/Map;)[Ljava/lang/annotation/Annotation;"]
  }
,
  {
    "className": "Lsun/reflect/annotation/AnnotationType;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/annotation/AnnotationType.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getInstance(Ljava/lang/Class;)Lsun/reflect/annotation/AnnotationType;"]
  }
,
  {
    "className": "Lsun/reflect/annotation/ExceptionProxy;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/annotation/ExceptionProxy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/annotation/TypeNotPresentExceptionProxy;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/annotation/TypeNotPresentExceptionProxy.class",
    "super": "Lsun/reflect/annotation/ExceptionProxy;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/factory/CoreReflectionFactory;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/factory/CoreReflectionFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/factory/GenericsFactory;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)V","findTypeVariable(Ljava/lang/String;)Ljava/lang/reflect/TypeVariable;","getDecl()Ljava/lang/reflect/GenericDeclaration;","getDeclsLoader()Ljava/lang/ClassLoader;","getScope()Lsun/reflect/generics/scope/Scope;","make(Ljava/lang/reflect/GenericDeclaration;Lsun/reflect/generics/scope/Scope;)Lsun/reflect/generics/factory/CoreReflectionFactory;","makeArrayType(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;","makeBool()Ljava/lang/reflect/Type;","makeByte()Ljava/lang/reflect/Type;","makeChar()Ljava/lang/reflect/Type;","makeDouble()Ljava/lang/reflect/Type;","makeFloat()Ljava/lang/reflect/Type;","makeInt()Ljava/lang/reflect/Type;","makeLong()Ljava/lang/reflect/Type;","makeNamedType(Ljava/lang/String;)Ljava/lang/reflect/Type;","makeParameterizedType(Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;","makeShort()Ljava/lang/reflect/Type;","makeTypeVariable(Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;)Ljava/lang/reflect/TypeVariable;","makeVoid()Ljava/lang/reflect/Type;","makeWildcard([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;)Ljava/lang/reflect/WildcardType;"]
  }
,
  {
    "className": "Lsun/reflect/generics/factory/GenericsFactory;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/factory/GenericsFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/parser/SignatureParser;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/parser/SignatureParser.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","advance()V","current()C","error(Ljava/lang/String;)Ljava/lang/Error;","init(Ljava/lang/String;)V","make()Lsun/reflect/generics/parser/SignatureParser;","mark()V","markToCurrent()Ljava/lang/String;","parseArrayTypeSignature()Lsun/reflect/generics/tree/ArrayTypeSignature;","parseBaseType()Lsun/reflect/generics/tree/BaseType;","parseBounds()[Lsun/reflect/generics/tree/FieldTypeSignature;","parseClassTypeSignature()Lsun/reflect/generics/tree/ClassTypeSignature;","parseClassTypeSignatureSuffix(Ljava/util/List;)V","parseFieldTypeSignature()Lsun/reflect/generics/tree/FieldTypeSignature;","parseFieldTypeSignature(Z)Lsun/reflect/generics/tree/FieldTypeSignature;","parseFormalParameters()[Lsun/reflect/generics/tree/TypeSignature;","parseFormalTypeParameter()Lsun/reflect/generics/tree/FormalTypeParameter;","parseFormalTypeParameters()[Lsun/reflect/generics/tree/FormalTypeParameter;","parseIdentifier()Ljava/lang/String;","parseMethodSig(Ljava/lang/String;)Lsun/reflect/generics/tree/MethodTypeSignature;","parseMethodTypeSignature()Lsun/reflect/generics/tree/MethodTypeSignature;","parsePackageNameAndSimpleClassTypeSignature()Lsun/reflect/generics/tree/SimpleClassTypeSignature;","parseReturnType()Lsun/reflect/generics/tree/ReturnType;","parseSimpleClassTypeSignature(Z)Lsun/reflect/generics/tree/SimpleClassTypeSignature;","parseThrowsSignature()Lsun/reflect/generics/tree/FieldTypeSignature;","parseTypeArgument()Lsun/reflect/generics/tree/TypeArgument;","parseTypeArguments()[Lsun/reflect/generics/tree/TypeArgument;","parseTypeSig(Ljava/lang/String;)Lsun/reflect/generics/tree/TypeSignature;","parseTypeSignature()Lsun/reflect/generics/tree/TypeSignature;","parseTypeVariableSignature()Lsun/reflect/generics/tree/TypeVariableSignature;","parseZeroOrMoreFormalTypeParameters()[Lsun/reflect/generics/tree/FormalTypeParameter;","parseZeroOrMoreThrowsSignatures()[Lsun/reflect/generics/tree/FieldTypeSignature;","parseZeroOrMoreTypeSignatures()[Lsun/reflect/generics/tree/TypeSignature;","progress(I)V","remainder()Ljava/lang/String;","skipIdentifier()V"]
  }
,
  {
    "className": "Lsun/reflect/generics/reflectiveObjects/GenericArrayTypeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/reflectiveObjects/GenericArrayTypeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/GenericArrayType;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Type;)V","equals(Ljava/lang/Object;)Z","getGenericComponentType()Ljava/lang/reflect/Type;","hashCode()I","make(Ljava/lang/reflect/Type;)Lsun/reflect/generics/reflectiveObjects/GenericArrayTypeImpl;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getReifier()Lsun/reflect/generics/visitor/Reifier;","reifyBounds([Lsun/reflect/generics/tree/FieldTypeSignature;)[Ljava/lang/reflect/Type;"]
  }
,
  {
    "className": "Lsun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/reflect/ParameterizedType;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V","equals(Ljava/lang/Object;)Z","getActualTypeArguments()[Ljava/lang/reflect/Type;","getOwnerType()Ljava/lang/reflect/Type;","getRawType()Ljava/lang/Class;","getRawType()Ljava/lang/reflect/Type;","hashCode()I","make(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Lsun/reflect/generics/reflectiveObjects/ParameterizedTypeImpl;","toString()Ljava/lang/String;","validateConstructorArguments()V"]
  }
,
  {
    "className": "Lsun/reflect/generics/reflectiveObjects/TypeVariableImpl;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/reflectiveObjects/TypeVariableImpl.class",
    "super": "Lsun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator;",
    "interfaces": ["Ljava/lang/reflect/TypeVariable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;Lsun/reflect/generics/factory/GenericsFactory;)V","equals(Ljava/lang/Object;)Z","getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;","getAnnotations()[Ljava/lang/annotation/Annotation;","getBounds()[Ljava/lang/reflect/Type;","getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;","getGenericDeclaration()Ljava/lang/reflect/GenericDeclaration;","getName()Ljava/lang/String;","hashCode()I","make(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/reflectiveObjects/TypeVariableImpl;","mapAnnotations([Ljava/lang/annotation/Annotation;)Ljava/util/Map;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/reflect/generics/reflectiveObjects/WildcardTypeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/reflectiveObjects/WildcardTypeImpl.class",
    "super": "Lsun/reflect/generics/reflectiveObjects/LazyReflectiveObjectGenerator;",
    "interfaces": ["Ljava/lang/reflect/WildcardType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;Lsun/reflect/generics/factory/GenericsFactory;)V","equals(Ljava/lang/Object;)Z","getLowerBounds()[Ljava/lang/reflect/Type;","getUpperBounds()[Ljava/lang/reflect/Type;","hashCode()I","make([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/reflectiveObjects/WildcardTypeImpl;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/reflect/generics/repository/AbstractRepository;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/repository/AbstractRepository.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V","getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getReifier()Lsun/reflect/generics/visitor/Reifier;","getTree()Lsun/reflect/generics/tree/Tree;"]
  }
,
  {
    "className": "Lsun/reflect/generics/repository/ConstructorRepository;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/repository/ConstructorRepository.class",
    "super": "Lsun/reflect/generics/repository/GenericDeclRepository;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V","computeExceptionTypes()[Ljava/lang/reflect/Type;","computeParameterTypes()[Ljava/lang/reflect/Type;","getExceptionTypes()[Ljava/lang/reflect/Type;","getParameterTypes()[Ljava/lang/reflect/Type;","make(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/ConstructorRepository;","parse(Ljava/lang/String;)Lsun/reflect/generics/tree/MethodTypeSignature;","parse(Ljava/lang/String;)Lsun/reflect/generics/tree/Tree;"]
  }
,
  {
    "className": "Lsun/reflect/generics/repository/FieldRepository;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/repository/FieldRepository.class",
    "super": "Lsun/reflect/generics/repository/AbstractRepository;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V","computeGenericType()Ljava/lang/reflect/Type;","getGenericType()Ljava/lang/reflect/Type;","make(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/FieldRepository;","parse(Ljava/lang/String;)Lsun/reflect/generics/tree/Tree;","parse(Ljava/lang/String;)Lsun/reflect/generics/tree/TypeSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/repository/GenericDeclRepository;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/repository/GenericDeclRepository.class",
    "super": "Lsun/reflect/generics/repository/AbstractRepository;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V","computeTypeParameters()[Ljava/lang/reflect/TypeVariable;","getTypeParameters()[Ljava/lang/reflect/TypeVariable;"]
  }
,
  {
    "className": "Lsun/reflect/generics/repository/MethodRepository;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/repository/MethodRepository.class",
    "super": "Lsun/reflect/generics/repository/ConstructorRepository;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)V","computeReturnType()Ljava/lang/reflect/Type;","getReturnType()Ljava/lang/reflect/Type;","make(Ljava/lang/String;Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/repository/MethodRepository;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/AbstractScope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/AbstractScope.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/scope/Scope;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/GenericDeclaration;)V","getEnclosingScope()Lsun/reflect/generics/scope/Scope;","getRecvr()Ljava/lang/reflect/GenericDeclaration;","lookup(Ljava/lang/String;)Ljava/lang/reflect/TypeVariable;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/ClassScope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/ClassScope.class",
    "super": "Lsun/reflect/generics/scope/AbstractScope;",
    "interfaces": ["Lsun/reflect/generics/scope/Scope;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Class;)V","computeEnclosingScope()Lsun/reflect/generics/scope/Scope;","make(Ljava/lang/Class;)Lsun/reflect/generics/scope/ClassScope;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/ConstructorScope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/ConstructorScope.class",
    "super": "Lsun/reflect/generics/scope/AbstractScope;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Constructor;)V","computeEnclosingScope()Lsun/reflect/generics/scope/Scope;","getEnclosingClass()Ljava/lang/Class;","make(Ljava/lang/reflect/Constructor;)Lsun/reflect/generics/scope/ConstructorScope;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/DummyScope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/DummyScope.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/scope/Scope;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["lookup(Ljava/lang/String;)Ljava/lang/reflect/TypeVariable;","make()Lsun/reflect/generics/scope/DummyScope;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/MethodScope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/MethodScope.class",
    "super": "Lsun/reflect/generics/scope/AbstractScope;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/reflect/Method;)V","computeEnclosingScope()Lsun/reflect/generics/scope/Scope;","getEnclosingClass()Ljava/lang/Class;","make(Ljava/lang/reflect/Method;)Lsun/reflect/generics/scope/MethodScope;"]
  }
,
  {
    "className": "Lsun/reflect/generics/scope/Scope;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/scope/Scope.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/ArrayTypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/ArrayTypeSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/FieldTypeSignature;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/reflect/generics/tree/TypeSignature;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getComponentType()Lsun/reflect/generics/tree/TypeSignature;","make(Lsun/reflect/generics/tree/TypeSignature;)Lsun/reflect/generics/tree/ArrayTypeSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/BaseType;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/BaseType.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/TypeSignature;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/BooleanSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/BooleanSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/BooleanSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/BottomSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/BottomSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/FieldTypeSignature;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/BottomSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/ByteSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/ByteSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/ByteSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/CharSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/CharSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/CharSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/ClassTypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/ClassTypeSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/FieldTypeSignature;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/List;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getPath()Ljava/util/List;","make(Ljava/util/List;)Lsun/reflect/generics/tree/ClassTypeSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/DoubleSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/DoubleSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/DoubleSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/FieldTypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/FieldTypeSignature.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;","Lsun/reflect/generics/tree/TypeSignature;","Lsun/reflect/generics/tree/TypeArgument;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/FloatSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/FloatSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/FloatSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/FormalTypeParameter;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/FormalTypeParameter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/TypeTree;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getBounds()[Lsun/reflect/generics/tree/FieldTypeSignature;","getName()Ljava/lang/String;","make(Ljava/lang/String;[Lsun/reflect/generics/tree/FieldTypeSignature;)Lsun/reflect/generics/tree/FormalTypeParameter;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/IntSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/IntSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/IntSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/LongSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/LongSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/LongSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/MethodTypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/MethodTypeSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/Signature;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([Lsun/reflect/generics/tree/FormalTypeParameter;[Lsun/reflect/generics/tree/TypeSignature;Lsun/reflect/generics/tree/ReturnType;[Lsun/reflect/generics/tree/FieldTypeSignature;)V","getExceptionTypes()[Lsun/reflect/generics/tree/FieldTypeSignature;","getFormalTypeParameters()[Lsun/reflect/generics/tree/FormalTypeParameter;","getParameterTypes()[Lsun/reflect/generics/tree/TypeSignature;","getReturnType()Lsun/reflect/generics/tree/ReturnType;","make([Lsun/reflect/generics/tree/FormalTypeParameter;[Lsun/reflect/generics/tree/TypeSignature;Lsun/reflect/generics/tree/ReturnType;[Lsun/reflect/generics/tree/FieldTypeSignature;)Lsun/reflect/generics/tree/MethodTypeSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/ReturnType;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/ReturnType.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/TypeTree;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/ShortSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/ShortSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/BaseType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/ShortSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/Signature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/Signature.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/Tree;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/SimpleClassTypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/SimpleClassTypeSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/FieldTypeSignature;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Z[Lsun/reflect/generics/tree/TypeArgument;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getDollar()Z","getName()Ljava/lang/String;","getTypeArguments()[Lsun/reflect/generics/tree/TypeArgument;","make(Ljava/lang/String;Z[Lsun/reflect/generics/tree/TypeArgument;)Lsun/reflect/generics/tree/SimpleClassTypeSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/Tree;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/Tree.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/TypeArgument;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/TypeArgument.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/TypeTree;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/TypeSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/TypeSignature.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/ReturnType;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/TypeTree;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/TypeTree.class",
    "super": "null",
    "interfaces": ["Lsun/reflect/generics/tree/Tree;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/generics/tree/TypeVariableSignature;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/TypeVariableSignature.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/FieldTypeSignature;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getIdentifier()Ljava/lang/String;","make(Ljava/lang/String;)Lsun/reflect/generics/tree/TypeVariableSignature;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/VoidDescriptor;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/VoidDescriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/ReturnType;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","make()Lsun/reflect/generics/tree/VoidDescriptor;"]
  }
,
  {
    "className": "Lsun/reflect/generics/tree/Wildcard;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/tree/Wildcard.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/tree/TypeArgument;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;)V","accept(Lsun/reflect/generics/visitor/TypeTreeVisitor;)V","getLowerBounds()[Lsun/reflect/generics/tree/FieldTypeSignature;","getUpperBounds()[Lsun/reflect/generics/tree/FieldTypeSignature;","make([Lsun/reflect/generics/tree/FieldTypeSignature;[Lsun/reflect/generics/tree/FieldTypeSignature;)Lsun/reflect/generics/tree/Wildcard;"]
  }
,
  {
    "className": "Lsun/reflect/generics/visitor/Reifier;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/visitor/Reifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/reflect/generics/visitor/TypeTreeVisitor;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/reflect/generics/factory/GenericsFactory;)V","getFactory()Lsun/reflect/generics/factory/GenericsFactory;","getResult()Ljava/lang/reflect/Type;","make(Lsun/reflect/generics/factory/GenericsFactory;)Lsun/reflect/generics/visitor/Reifier;","reifyTypeArguments([Lsun/reflect/generics/tree/TypeArgument;)[Ljava/lang/reflect/Type;","visitArrayTypeSignature(Lsun/reflect/generics/tree/ArrayTypeSignature;)V","visitBooleanSignature(Lsun/reflect/generics/tree/BooleanSignature;)V","visitBottomSignature(Lsun/reflect/generics/tree/BottomSignature;)V","visitByteSignature(Lsun/reflect/generics/tree/ByteSignature;)V","visitCharSignature(Lsun/reflect/generics/tree/CharSignature;)V","visitClassTypeSignature(Lsun/reflect/generics/tree/ClassTypeSignature;)V","visitDoubleSignature(Lsun/reflect/generics/tree/DoubleSignature;)V","visitFloatSignature(Lsun/reflect/generics/tree/FloatSignature;)V","visitFormalTypeParameter(Lsun/reflect/generics/tree/FormalTypeParameter;)V","visitIntSignature(Lsun/reflect/generics/tree/IntSignature;)V","visitLongSignature(Lsun/reflect/generics/tree/LongSignature;)V","visitShortSignature(Lsun/reflect/generics/tree/ShortSignature;)V","visitSimpleClassTypeSignature(Lsun/reflect/generics/tree/SimpleClassTypeSignature;)V","visitTypeVariableSignature(Lsun/reflect/generics/tree/TypeVariableSignature;)V","visitVoidDescriptor(Lsun/reflect/generics/tree/VoidDescriptor;)V","visitWildcard(Lsun/reflect/generics/tree/Wildcard;)V"]
  }
,
  {
    "className": "Lsun/reflect/generics/visitor/TypeTreeVisitor;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/generics/visitor/TypeTreeVisitor.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/reflect/misc/MethodUtil;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/misc/MethodUtil.class",
    "super": "Ljava/security/SecureClassLoader;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/reflect/misc/ReflectUtil;",
    "module": "java.base",
    "source": "/java.base/sun/reflect/misc/ReflectUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkPackageAccess(Ljava/lang/Class;)V","checkPackageAccess(Ljava/lang/String;)V","checkProxyPackageAccess(Ljava/lang/ClassLoader;[Ljava/lang/Class;)V","forName(Ljava/lang/String;)Ljava/lang/Class;","isPackageAccessible(Ljava/lang/Class;)Z"]
  }
,
  {
    "className": "Lsun/security/action/GetBooleanAction;",
    "module": "java.base",
    "source": "/java.base/sun/security/action/GetBooleanAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/lang/Boolean;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/action/GetIntegerAction;",
    "module": "java.base",
    "source": "/java.base/sun/security/action/GetIntegerAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["privilegedGetProperty(Ljava/lang/String;I)Ljava/lang/Integer;"]
  }
,
  {
    "className": "Lsun/security/action/GetLongAction;",
    "module": "java.base",
    "source": "/java.base/sun/security/action/GetLongAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;J)V","run()Ljava/lang/Long;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/action/GetPropertyAction;",
    "module": "java.base",
    "source": "/java.base/sun/security/action/GetPropertyAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Ljava/lang/String;)V","privilegedGetProperties()Ljava/util/Properties;","privilegedGetProperty(Ljava/lang/String;)Ljava/lang/String;","privilegedGetProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","run()Ljava/lang/Object;","run()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/action/PutAllAction;",
    "module": "java.base",
    "source": "/java.base/sun/security/action/PutAllAction.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/util/Map;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/ec/ECDHKeyAgreement;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDHKeyAgreement.class",
    "super": "Ljavax/crypto/KeyAgreementSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$Raw;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$Raw.class",
    "super": "Lsun/security/ec/ECDSASignature$RawECDSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$RawECDSA;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$RawECDSA.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$RawinP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$RawinP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature$RawECDSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA1;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA1.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA1inP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA1inP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA224;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA224.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA224inP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA224inP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA256;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA256.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA256inP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA256inP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA384;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA384.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA384inP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA384inP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA512;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA512.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature$SHA512inP1363Format;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature$SHA512inP1363Format.class",
    "super": "Lsun/security/ec/ECDSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECDSASignature;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECDSASignature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;Z)V","<init>(Z)V"]
  }
,
  {
    "className": "Lsun/security/ec/ECKeyFactory;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECKeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;","implGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","implGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","implTranslatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","implTranslatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/ec/ECKeyPairGenerator;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECKeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","checkKeySize(I)V","initialize(ILjava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/ec/ECPrivateKeyImpl;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECPrivateKeyImpl.class",
    "super": "Lsun/security/pkcs/PKCS8Key;",
    "interfaces": ["Ljava/security/interfaces/ECPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)V","<init>([B)V","getAlgorithm()Ljava/lang/String;","getParams()Ljava/security/spec/ECParameterSpec;","getS()Ljava/math/BigInteger;","makeEncoding(Ljava/math/BigInteger;)V","parseKeyBits()V"]
  }
,
  {
    "className": "Lsun/security/ec/ECPublicKeyImpl;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/ECPublicKeyImpl.class",
    "super": "Lsun/security/x509/X509Key;",
    "interfaces": ["Ljava/security/interfaces/ECPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V","<init>([B)V","getAlgorithm()Ljava/lang/String;","getParams()Ljava/security/spec/ECParameterSpec;","getW()Ljava/security/spec/ECPoint;","parseKeyBits()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/ec/SunEC$2;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/SunEC$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/ec/SunEC;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/ec/SunEC$ProviderService;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/SunEC$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/util/HashMap;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/ec/SunEC;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/SunEC.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","putEntries(Z)V","putXDHEntries()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyAgreement$X25519;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyAgreement$X25519.class",
    "super": "Lsun/security/ec/XDHKeyAgreement;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyAgreement$X448;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyAgreement$X448.class",
    "super": "Lsun/security/ec/XDHKeyAgreement;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyAgreement;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyAgreement.class",
    "super": "Ljavax/crypto/KeyAgreementSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/security/spec/AlgorithmParameterSpec;)V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyFactory$X25519;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyFactory$X25519.class",
    "super": "Lsun/security/ec/XDHKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyFactory$X448;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyFactory$X448.class",
    "super": "Lsun/security/ec/XDHKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyFactory;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/security/spec/AlgorithmParameterSpec;)V","checkLockedParams(Ljava/util/function/Function;Ljava/security/spec/AlgorithmParameterSpec;)V","checkLockedParams(Ljava/util/function/Function;Lsun/security/ec/XECParameters;)V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;","generatePrivateImpl(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","generatePublicImpl(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","lambda$engineTranslateKey$0()Ljava/security/InvalidKeyException;"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyPairGenerator$X25519;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyPairGenerator$X25519.class",
    "super": "Lsun/security/ec/XDHKeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyPairGenerator$X448;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyPairGenerator$X448.class",
    "super": "Lsun/security/ec/XDHKeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHKeyPairGenerator;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHKeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/security/spec/NamedParameterSpec;)V","initialize(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","initializeImpl(Lsun/security/ec/XECParameters;Ljava/security/SecureRandom;)V","tryInitialize(Ljava/security/spec/NamedParameterSpec;)V"]
  }
,
  {
    "className": "Lsun/security/ec/XDHPrivateKeyImpl;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHPrivateKeyImpl.class",
    "super": "Lsun/security/pkcs/PKCS8Key;",
    "interfaces": ["Ljava/security/interfaces/XECPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/ec/XECParameters;[B)V","<init>([B)V","checkLength(Lsun/security/ec/XECParameters;)V","getAlgorithm()Ljava/lang/String;","getK()[B","getParams()Ljava/security/spec/AlgorithmParameterSpec;","getScalar()Ljava/util/Optional;"]
  }
,
  {
    "className": "Lsun/security/ec/XDHPublicKeyImpl;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XDHPublicKeyImpl.class",
    "super": "Lsun/security/x509/X509Key;",
    "interfaces": ["Ljava/security/interfaces/XECPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/ec/XECParameters;Ljava/math/BigInteger;)V","<init>([B)V","checkLength(Lsun/security/ec/XECParameters;)V","getAlgorithm()Ljava/lang/String;","getParams()Ljava/security/spec/AlgorithmParameterSpec;","getU()Ljava/math/BigInteger;","reverse([B)V","swap([BII)V"]
  }
,
  {
    "className": "Lsun/security/ec/XECOperations;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XECOperations.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/ec/XECParameters;)V","getIntegerFieldModulo(Ljava/math/BigInteger;)Lsun/security/util/math/IntegerFieldModuloP;","getParameters()Lsun/security/ec/XECParameters;"]
  }
,
  {
    "className": "Lsun/security/ec/XECParameters$1;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XECParameters$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/function/Supplier;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/function/Function;Ljava/lang/Object;)V","get()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/ec/XECParameters;",
    "module": "jdk.crypto.ec",
    "source": "/jdk.crypto.ec/sun/security/ec/XECParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["apply(Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/function/Supplier;","get(Ljava/util/function/Function;Ljava/security/spec/AlgorithmParameterSpec;)Lsun/security/ec/XECParameters;","get(Ljava/util/function/Function;Lsun/security/x509/AlgorithmId;)Lsun/security/ec/XECParameters;","getA24()I","getBasePoint()B","getBits()I","getByName(Ljava/lang/String;)Ljava/util/Optional;","getByOid(Lsun/security/util/ObjectIdentifier;)Ljava/util/Optional;","getBytes()I","getName()Ljava/lang/String;","getOid()Lsun/security/util/ObjectIdentifier;","getP()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Lsun/security/internal/spec/TlsRsaPremasterSecretParameterSpec;",
    "module": "java.base",
    "source": "/java.base/sun/security/internal/spec/TlsRsaPremasterSecretParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/jca/GetInstance$Instance;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/GetInstance$Instance.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/Object;)V","toArray()[Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/jca/GetInstance;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/GetInstance.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkSuperClass(Ljava/security/Provider$Service;Ljava/lang/Class;Ljava/lang/Class;)V","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;)Lsun/security/jca/GetInstance$Instance;","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Lsun/security/jca/GetInstance$Instance;","getInstance(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/security/Provider;)Lsun/security/jca/GetInstance$Instance;","getInstance(Ljava/security/Provider$Service;Ljava/lang/Class;)Lsun/security/jca/GetInstance$Instance;","getService(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider$Service;","getService(Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/security/Provider$Service;","getServices(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;","getServices(Ljava/util/List;)Ljava/util/List;"]
  }
,
  {
    "className": "Lsun/security/jca/JCAUtil$CachedSecureRandomHolder;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/JCAUtil$CachedSecureRandomHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lsun/security/jca/JCAUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/JCAUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getSecureRandom()Ljava/security/SecureRandom;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderConfig$2;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderConfig$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderConfig;)V","run()Ljava/lang/Object;","run()Ljava/security/Provider;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderConfig$3;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderConfig$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderConfig;)V","run()Ljava/lang/Object;","run()Ljava/security/Provider;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderConfig$ProviderLoader$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderConfig$ProviderLoader$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderConfig$ProviderLoader;Ljava/lang/Class;)V","run()Ljava/lang/Object;","run()Ljava/security/Provider;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderConfig$ProviderLoader;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderConfig$ProviderLoader.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["legacyLoad(Ljava/lang/String;)Ljava/security/Provider;","load(Ljava/lang/String;)Ljava/security/Provider;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderConfig;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderConfig.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["disableLoad()V","doLoadProvider()Ljava/security/Provider;","equals(Ljava/lang/Object;)Z","getProvider()Ljava/security/Provider;","hasArgument()Z","hashCode()I","isLoaded()Z","shouldLoad()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderList$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList$1.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getService(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider$Service;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderList$3;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList$3.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderList;)V","get(I)Ljava/lang/Object;","get(I)Ljava/security/Provider;","size()I"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderList$PreferredEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList$PreferredEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/jca/ProviderList$ServiceList$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList$ServiceList$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderList$ServiceList;)V","hasNext()Z","next()Ljava/lang/Object;","next()Ljava/security/Provider$Service;","remove()V"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderList$ServiceList;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList$ServiceList.class",
    "super": "Ljava/util/AbstractList;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jca/ProviderList;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lsun/security/jca/ProviderList;Ljava/util/List;)V","addService(Ljava/security/Provider$Service;)V","get(I)Ljava/lang/Object;","get(I)Ljava/security/Provider$Service;","isEmpty()Z","iterator()Ljava/util/Iterator;","size()I","tryGet(I)Ljava/security/Provider$Service;"]
  }
,
  {
    "className": "Lsun/security/jca/ProviderList;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ProviderList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([Lsun/security/jca/ProviderConfig;Z)V","getIndex(Ljava/lang/String;)I","getProvider(I)Ljava/security/Provider;","getProvider(Ljava/lang/String;)Ljava/security/Provider;","getProviderConfig(Ljava/lang/String;)Lsun/security/jca/ProviderConfig;","getService(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider$Service;","getServices(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;","getServices(Ljava/util/List;)Ljava/util/List;","loadAll()I","providers()Ljava/util/List;","removeInvalid()Lsun/security/jca/ProviderList;","toArray()[Ljava/security/Provider;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/jca/Providers;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/Providers.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["changeThreadProviderList(Lsun/security/jca/ProviderList;)V","getFullProviderList()Lsun/security/jca/ProviderList;","getProviderList()Lsun/security/jca/ProviderList;","getSunProvider()Ljava/security/Provider;","getSystemProviderList()Lsun/security/jca/ProviderList;","getThreadProviderList()Lsun/security/jca/ProviderList;","setSystemProviderList(Lsun/security/jca/ProviderList;)V"]
  }
,
  {
    "className": "Lsun/security/jca/ServiceId;",
    "module": "java.base",
    "source": "/java.base/sun/security/jca/ServiceId.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/jgss/GSSCaller;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/GSSCaller.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/jgss/GSSExceptionImpl;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/GSSExceptionImpl.class",
    "super": "Lorg/ietf/jgss/GSSException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ILjava/lang/String;)V","getMessage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/jgss/GSSManagerImpl;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/GSSManagerImpl.class",
    "super": "Lorg/ietf/jgss/GSSManager;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jgss/GSSCaller;Z)V","getMechs()[Lorg/ietf/jgss/Oid;"]
  }
,
  {
    "className": "Lsun/security/jgss/GSSUtil;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/GSSUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["debug(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/jgss/ProviderList$PreferencesEntry;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/ProviderList$PreferencesEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Lorg/ietf/jgss/Oid;)V","equals(Ljava/lang/Object;)Z","hashCode()I","implies(Ljava/lang/Object;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/jgss/ProviderList;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/ProviderList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jgss/GSSCaller;Z)V","addAllMechsFromProvider(Ljava/security/Provider;)Z","addProviderAtEnd(Ljava/security/Provider;Lorg/ietf/jgss/Oid;)V","getMechs()[Lorg/ietf/jgss/Oid;","getOidFromMechFactoryProperty(Ljava/lang/String;)Lorg/ietf/jgss/Oid;","isMechFactoryProperty(Ljava/lang/String;)Z"]
  }
,
  {
    "className": "Lsun/security/jgss/SunProvider$1;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/SunProvider$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/jgss/SunProvider;Ljava/security/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/jgss/SunProvider$ProviderService;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/SunProvider$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/jgss/SunProvider;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/SunProvider.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lsun/security/jgss/SunProvider;Ljava/security/Provider$Service;)V","access$100(Lsun/security/jgss/SunProvider;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lsun/security/jgss/krb5/Krb5MechFactory;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/krb5/Krb5MechFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/jgss/spi/MechanismFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/jgss/GSSCaller;)V"]
  }
,
  {
    "className": "Lsun/security/jgss/spi/MechanismFactory;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/spi/MechanismFactory.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/jgss/spnego/SpNegoMechFactory;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/spnego/SpNegoMechFactory.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/jgss/spi/MechanismFactory;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/jgss/GSSCaller;)V"]
  }
,
  {
    "className": "Lsun/security/jgss/wrapper/SunNativeProvider;",
    "module": "java.security.jgss",
    "source": "/java.security.jgss/sun/security/jgss/wrapper/SunNativeProvider.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs/ContentInfo;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs/ContentInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","<init>(Lsun/security/util/DerInputStream;Z)V","getContent()Lsun/security/util/DerValue;","getContentType()Lsun/security/util/ObjectIdentifier;","getData()[B","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs/EncryptedPrivateKeyInfo;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs/EncryptedPrivateKeyInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Lsun/security/x509/AlgorithmId;","getEncoded()[B","getEncryptedData()[B","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/pkcs/PKCS8Key;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs/PKCS8Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivateKey;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","buildPKCS8Key(Lsun/security/x509/AlgorithmId;[B)Ljava/security/PrivateKey;","decode(Ljava/io/InputStream;)V","decode([B)V","encode()[B","encode(Lsun/security/util/DerOutputStream;)V","encode(Lsun/security/util/DerOutputStream;Lsun/security/x509/AlgorithmId;[B)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getFormat()Ljava/lang/String;","hashCode()I","parseKey(Lsun/security/util/DerValue;)Ljava/security/PrivateKey;","parseKeyBits()V"]
  }
,
  {
    "className": "Lsun/security/pkcs/ParsingException;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs/ParsingException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/Config;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Config.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","checkDup(Ljava/lang/String;)V","debug(Ljava/lang/Object;)V","decodeAttributeName(Ljava/lang/String;)J","decodeAttributeValue(JLjava/lang/String;)Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","decodeByteArray(Ljava/lang/String;)[B","decodeNumber(Ljava/lang/String;)I","excLine(Ljava/lang/String;)Lsun/security/pkcs11/ConfigurationException;","excToken(Ljava/lang/String;)Lsun/security/pkcs11/ConfigurationException;","expand(Ljava/lang/String;)Ljava/lang/String;","getAllowSingleThreadedModules()Z","getDescription()Ljava/lang/String;","getExplicitCancel()Z","getFunctionList()Ljava/lang/String;","getHandleStartupErrors()I","getInsertionCheckInterval()I","getKeyStoreCompatibilityMode()Z","getLibrary()Ljava/lang/String;","getName()Ljava/lang/String;","getNssArgs()Ljava/lang/String;","getNssDbMode()Lsun/security/pkcs11/Secmod$DbMode;","getNssLibraryDirectory()Ljava/lang/String;","getNssModule()Ljava/lang/String;","getNssOptimizeSpace()Z","getNssSecmodDirectory()Ljava/lang/String;","getNssUseSecmod()Z","getNssUseSecmodTrust()Z","getOmitInitialize()Z","getShowInfo()Z","getSlotID()I","getSlotListIndex()I","getTemplateManager()Lsun/security/pkcs11/TemplateManager;","getUseEcX963Encoding()Z","isByteArray(Ljava/lang/String;)Z","isCloseBraces(I)Z","isEnabled(J)Z","isNumber(Ljava/lang/String;)Z","nextToken()I","parse()V","parseAttributes(Ljava/lang/String;)V","parseBoolean()Z","parseBooleanEntry(Ljava/lang/String;)Z","parseComma()V","parseDescription(Ljava/lang/String;)V","parseDisabledMechanisms(Ljava/lang/String;)V","parseEnabledMechanisms(Ljava/lang/String;)V","parseEquals()V","parseHandleStartupErrors(Ljava/lang/String;)V","parseIntegerEntry(Ljava/lang/String;)I","parseKeyAlgorithm()J","parseLibrary(Ljava/lang/String;)Ljava/lang/String;","parseLine()Ljava/lang/String;","parseMechanism(Ljava/lang/String;)J","parseMechanisms(Ljava/lang/String;)Ljava/util/Set;","parseNSSArgs(Ljava/lang/String;)V","parseObjectClass()J","parseOpenBraces()V","parseOperation()Ljava/lang/String;","parseSlotID(Ljava/lang/String;)V","parseSlotListIndex(Ljava/lang/String;)V","parseStringEntry(Ljava/lang/String;)Ljava/lang/String;","parseWord()Ljava/lang/String;","setCompatibilityAttributes()V","setupTokenizer()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/ConfigurationException;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/ConfigurationException.class",
    "super": "Ljava/io/IOException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/KeyCache$IdentityWrapper;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/KeyCache$IdentityWrapper.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/pkcs11/KeyCache;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/KeyCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","get(Ljava/security/Key;)Lsun/security/pkcs11/P11Key;","put(Ljava/security/Key;Lsun/security/pkcs11/P11Key;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/NativeKeyHolder;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/NativeKeyHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/P11Key;JLsun/security/pkcs11/Session;ZZ)V","createNativeKeyWrapper(Lsun/security/pkcs11/Token;)V","decWrapperKeyRef()V","deleteNativeKeyWrapper()V","getKeyID()J","releaseKeyID()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11AEADCipher;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11AEADCipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","cancelOperation()V","doFinalLength(I)I","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","ensureInitialized()V","handleException(Lsun/security/pkcs11/wrapper/PKCS11Exception;)V","implDoFinal([BII[BII)I","implInit(ILjava/security/Key;[BILjava/security/SecureRandom;)V","initialize()V","parseMode(Ljava/lang/String;)I","reset(Z)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Cipher$PKCS5Padding;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Cipher$PKCS5Padding.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/pkcs11/P11Cipher$Padding;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","setPaddingBytes([BI)I","unpad([BI)I"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Cipher$Padding;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Cipher$Padding.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Cipher;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Cipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","bufferInputBytes([BII)V","cancelOperation()V","doFinalLength(I)I","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","engineUpdate([BII[BI)I","ensureInitialized()V","handleException(Lsun/security/pkcs11/wrapper/PKCS11Exception;)V","implDoFinal([BII)I","implInit(ILjava/security/Key;[BLjava/security/SecureRandom;)V","implUpdate([BII[BII)I","initialize()V","parseMode(Ljava/lang/String;)I","reset(Z)V","updateLength(I)I"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11DHKeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11DHKeyFactory.class",
    "super": "Lsun/security/pkcs11/P11KeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","generatePrivate(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PrivateKey;","generatePublic(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PublicKey;","implGetSoftwareFactory()Ljava/security/KeyFactory;","implTranslatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","implTranslatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11DSAKeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11DSAKeyFactory.class",
    "super": "Lsun/security/pkcs11/P11KeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","generatePrivate(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PrivateKey;","generatePublic(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PublicKey;","implTranslatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","implTranslatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Digest;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Digest.class",
    "super": "Ljava/security/MessageDigestSpi;",
    "interfaces": ["Ljava/lang/Cloneable;","Lsun/security/util/MessageDigestSpi2;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","clone()Ljava/lang/Object;","engineDigest()[B","engineDigest([BII)I","engineGetDigestLength()I","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V","fetchSession()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11ECDHKeyAgreement;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11ECDHKeyAgreement.class",
    "super": "Ljavax/crypto/KeyAgreementSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11ECKeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11ECKeyFactory.class",
    "super": "Lsun/security/pkcs11/P11KeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","decodeParameters([B)Ljava/security/spec/ECParameterSpec;","decodePoint([BLjava/security/spec/EllipticCurve;)Ljava/security/spec/ECPoint;","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","generatePrivate(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)Ljava/security/PrivateKey;","generatePublic(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)Ljava/security/PublicKey;","getECParameterSpec(I)Ljava/security/spec/ECParameterSpec;","getSunECProvider()Ljava/security/Provider;","implTranslatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","implTranslatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11DHPrivateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11DHPrivateKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljavax/crypto/interfaces/DHPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","equals(Ljava/lang/Object;)Z","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljavax/crypto/spec/DHParameterSpec;","getX()Ljava/math/BigInteger;","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11DHPublicKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11DHPublicKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljavax/crypto/interfaces/DHPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","equals(Ljava/lang/Object;)Z","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljavax/crypto/spec/DHParameterSpec;","getY()Ljava/math/BigInteger;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11DSAPrivateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11DSAPrivateKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/DSAPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljava/security/interfaces/DSAParams;","getX()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11DSAPublicKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11DSAPublicKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/DSAPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljava/security/interfaces/DSAParams;","getY()Ljava/math/BigInteger;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11ECPrivateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11ECPrivateKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/ECPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljava/security/spec/ECParameterSpec;","getS()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11ECPublicKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11ECPublicKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/ECPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getParams()Ljava/security/spec/ECParameterSpec;","getW()Ljava/security/spec/ECPoint;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11PrivateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11PrivateKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/PrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","getEncodedInternal()[B","getFormat()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11RSAPrivateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11RSAPrivateKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPrivateCrtKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getCrtCoefficient()Ljava/math/BigInteger;","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getModulus()Ljava/math/BigInteger;","getPrimeExponentP()Ljava/math/BigInteger;","getPrimeExponentQ()Ljava/math/BigInteger;","getPrimeP()Ljava/math/BigInteger;","getPrimeQ()Ljava/math/BigInteger;","getPrivateExponent()Ljava/math/BigInteger;","getPublicExponent()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11RSAPrivateNonCRTKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11RSAPrivateNonCRTKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getModulus()Ljava/math/BigInteger;","getPrivateExponent()Ljava/math/BigInteger;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11RSAPublicKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11RSAPublicKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","fetchValues()V","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getModulus()Ljava/math/BigInteger;","getPublicExponent()Ljava/math/BigInteger;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key$P11SecretKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key$P11SecretKey.class",
    "super": "Lsun/security/pkcs11/P11Key;",
    "interfaces": ["Ljavax/crypto/SecretKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","getEncodedInternal()[B","getFormat()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Key;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/Key;","Lsun/security/util/Length;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","equals(Ljava/lang/Object;)Z","fetchAttributes([Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","getAlgorithm()Ljava/lang/String;","getAttributes(Lsun/security/pkcs11/Session;J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","getEncoded()[B","getKeyID()J","hashCode()I","isPrivate()Z","isPublic()Z","length()I","privateKey(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)Ljava/security/PrivateKey;","publicKey(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)Ljava/security/PublicKey;","releaseKeyID()V","secretKey(Lsun/security/pkcs11/Session;JLjava/lang/String;I[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)Ljavax/crypto/SecretKey;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyAgreement;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyAgreement.class",
    "super": "Ljavax/crypto/KeyAgreementSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","convertKey(Lsun/security/pkcs11/Token;Ljava/security/Key;Ljava/lang/String;)Lsun/security/pkcs11/P11Key;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","checkKeySize(JILsun/security/pkcs11/Token;)I","setDefaultKeySize()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyPairGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","checkKeySize(ILjava/security/spec/AlgorithmParameterSpec;)V","initialize(ILjava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyStore$AliasInfo;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyStore$AliasInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;[BZLjava/security/cert/X509Certificate;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyStore$PasswordCallbackHandler;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyStore$PasswordCallbackHandler.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/security/auth/callback/CallbackHandler;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([C)V","handle([Ljavax/security/auth/callback/Callback;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyStore$THandle;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyStore$THandle.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(JLsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11KeyStore;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11KeyStore.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;)V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","findObjects(Lsun/security/pkcs11/Session;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[J","getID(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Ljava/lang/String;","getID([B)Ljava/lang/String;","getTokenObject(Lsun/security/pkcs11/Session;Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;[BLjava/lang/String;)Lsun/security/pkcs11/P11KeyStore$THandle;","loadCert(Lsun/security/pkcs11/Session;J)Ljava/security/cert/X509Certificate;","loadChain(Lsun/security/pkcs11/Session;Ljava/security/cert/X509Certificate;)[Ljava/security/cert/X509Certificate;","loadPkey(Lsun/security/pkcs11/Session;J)Ljava/security/PrivateKey;","loadSkey(Lsun/security/pkcs11/Session;J)Ljavax/crypto/SecretKey;","login(Ljavax/security/auth/callback/CallbackHandler;)V","mapCerts(Ljava/util/ArrayList;Ljava/util/HashMap;)Z","mapLabels()Z","mapPrivateKeys(Ljava/util/ArrayList;Ljava/util/HashMap;)Ljava/util/ArrayList;","mapSecretKeys(Ljava/util/HashMap;)V","mapTrustedCert(Ljava/lang/String;Lsun/security/pkcs11/P11KeyStore$AliasInfo;Ljava/util/HashSet;)Z"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Mac;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Mac.class",
    "super": "Ljavax/crypto/MacSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","cancelOperation()V","engineDoFinal()[B","engineGetMacLength()I","engineInit(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V","ensureInitialized()V","initialize()V","reset(Z)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11PSSSignature;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11PSSSignature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11RSACipher;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11RSACipher.class",
    "super": "Ljavax/crypto/CipherSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V","cancelOperation()V","engineDoFinal([BII)[B","engineDoFinal([BII[BI)I","engineGetKeySize(Ljava/security/Key;)I","engineGetParameters()Ljava/security/AlgorithmParameters;","engineInit(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/SecureRandom;)V","engineInit(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V","engineSetMode(Ljava/lang/String;)V","engineSetPadding(Ljava/lang/String;)V","ensureInitialized()V","implDoFinal([BII)I","implInit(ILjava/security/Key;)V","implUpdate([BII)V","initialize()V","reset(Z)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11RSAKeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11RSAKeyFactory.class",
    "super": "Lsun/security/pkcs11/P11KeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","generatePrivate(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PrivateKey;","generatePrivate(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PrivateKey;","generatePublic(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/PublicKey;","implTranslatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","implTranslatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11SecretKeyFactory;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11SecretKeyFactory.class",
    "super": "Ljavax/crypto/SecretKeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;)V","convertKey(Lsun/security/pkcs11/Token;Ljava/security/Key;Ljava/lang/String;)Lsun/security/pkcs11/P11Key;","convertKey(Lsun/security/pkcs11/Token;Ljava/security/Key;Ljava/lang/String;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)Lsun/security/pkcs11/P11Key;","createKey(Lsun/security/pkcs11/Token;[BLjava/lang/String;J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)Lsun/security/pkcs11/P11Key;","engineGenerateSecret(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;","engineGetKeySpec(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;","engineTranslateKey(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;","fixDESParity([BI)V","getKeyBytes(Ljavax/crypto/SecretKey;)[B","getKeyType(Ljava/lang/String;)J"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11SecureRandom;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11SecureRandom.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;)V","engineNextBytes([B)V","engineSetSeed([B)V","implNextBytes([B)V","mix([B)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Signature;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Signature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11TlsKeyMaterialGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11TlsKeyMaterialGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11TlsMasterSecretGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11TlsMasterSecretGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11TlsPrfGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11TlsPrfGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11TlsRsaPremasterSecretGenerator;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11TlsRsaPremasterSecretGenerator.class",
    "super": "Ljavax/crypto/KeyGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/P11Util;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/P11Util.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["concat([J[J)[J","convert([BII)[B","getMagnitude(Ljava/math/BigInteger;)[B","getProvider(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;)Ljava/security/Provider;","getSunJceProvider()Ljava/security/Provider;","getSunRsaSignProvider()Ljava/security/Provider;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod$Bytes;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod$Bytes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod$DbMode;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod$DbMode.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod$Module;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod$Module.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod$ModuleType;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod$ModuleType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod$TrustType;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod$TrustType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/Secmod;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Secmod.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["fetchVersions()V","getConfigDir()Ljava/lang/String;","getDigest(Ljava/security/cert/X509Certificate;Ljava/lang/String;)[B","getInstance()Lsun/security/pkcs11/Secmod;","getLibDir()Ljava/lang/String;","getModule(Lsun/security/pkcs11/Secmod$ModuleType;)Lsun/security/pkcs11/Secmod$Module;","getModuleTrust(Lsun/security/pkcs11/Secmod$ModuleType;Lsun/security/pkcs11/Secmod$Bytes;)Lsun/security/pkcs11/Secmod$TrustAttributes;","getModules()Ljava/util/List;","initialize(Lsun/security/pkcs11/Secmod$DbMode;Ljava/lang/String;Ljava/lang/String;Z)V","isInitialized()Z","isLoaded()Z","isTrusted(Ljava/security/cert/X509Certificate;Lsun/security/pkcs11/Secmod$TrustType;)Z","nssGetLibraryHandle(Ljava/lang/String;)J","nssGetModuleList(JLjava/lang/String;)Ljava/lang/Object;","nssInitialize(Ljava/lang/String;JLjava/lang/String;Z)Z","nssLoadLibrary(Ljava/lang/String;)J","nssVersionCheck(JLjava/lang/String;)Z"]
  }
,
  {
    "className": "Lsun/security/pkcs11/Session;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Session.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;J)V","addObject()V","close()V","compareTo(Ljava/lang/Object;)I","compareTo(Lsun/security/pkcs11/Session;)I","hasObjects()Z","id()J","isLive(J)Z","removeObject()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SessionKeyRef;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SessionKeyRef.class",
    "super": "Ljava/lang/ref/PhantomReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/P11Key;JZLsun/security/pkcs11/Session;)V","dispose()V","drainRefQueueBounded()V","registerNativeKey(JLsun/security/pkcs11/Session;)V","removeNativeKey()V","updateNativeKey(JLsun/security/pkcs11/Session;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SessionManager$Pool;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SessionManager$Pool.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SessionManager;Z)V","free()V","poll()Lsun/security/pkcs11/Session;","release(Lsun/security/pkcs11/Session;)V","remove(Lsun/security/pkcs11/Session;)Z"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SessionManager;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SessionManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;)V","closeSession(Lsun/security/pkcs11/Session;)V","demoteObjSession(Lsun/security/pkcs11/Session;)V","ensureValid(Lsun/security/pkcs11/Session;)Lsun/security/pkcs11/Session;","getObjSession()Lsun/security/pkcs11/Session;","getOpSession()Lsun/security/pkcs11/Session;","killSession(Lsun/security/pkcs11/Session;)Lsun/security/pkcs11/Session;","lowMaxSessions()Z","openSession()Lsun/security/pkcs11/Session;","releaseSession(Lsun/security/pkcs11/Session;)Lsun/security/pkcs11/Session;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SessionRef;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SessionRef.class",
    "super": "Ljava/lang/ref/PhantomReference;",
    "interfaces": ["Ljava/lang/Comparable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Session;JLsun/security/pkcs11/Token;)V","compareTo(Ljava/lang/Object;)I","compareTo(Lsun/security/pkcs11/SessionRef;)I","dispose()V","drainRefQueueBounded()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$1;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;Ljava/lang/String;)V","run()Ljava/lang/Object;","run()Lsun/security/pkcs11/SunPKCS11;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$2;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$3;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$3.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;Ljava/util/Map;Lsun/security/pkcs11/Token;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$4;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$4.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;)V","run()Ljava/lang/Object;","run()Ljavax/security/auth/callback/CallbackHandler;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$Descriptor;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$Descriptor.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["service(Lsun/security/pkcs11/Token;I)Lsun/security/pkcs11/SunPKCS11$P11Service;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$P11Service;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$P11Service.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/Token;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;J)V","isLocalKey(Ljava/security/Key;)Z","newInstance(Ljava/lang/Object;)Ljava/lang/Object;","newInstance0(Ljava/lang/Object;)Ljava/lang/Object;","supportsParameter(Ljava/lang/Object;)Z","toList([Ljava/lang/String;)Ljava/util/List;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11$TokenPoller;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11$TokenPoller.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;)V","disable()V","run()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/SunPKCS11;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/SunPKCS11.class",
    "super": "Ljava/security/AuthProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/pkcs11/Config;)V","access$000(Lsun/security/pkcs11/SunPKCS11;Ljava/security/Provider$Service;)V","access$100(Lsun/security/pkcs11/SunPKCS11;Ljava/security/Provider$Service;)V","access$200(Lsun/security/pkcs11/SunPKCS11;Ljava/security/Provider$Service;)V","checkNull(Ljava/lang/Object;)Ljava/lang/Object;","configure(Ljava/lang/String;)Ljava/security/Provider;","createPoller()V","destroyPoller()V","equals(Ljava/lang/Object;)Z","getCallbackHandler(Ljavax/security/auth/callback/CallbackHandler;)Ljavax/security/auth/callback/CallbackHandler;","hasValidToken()Z","hashCode()I","initToken(Lsun/security/pkcs11/wrapper/CK_SLOT_INFO;)V","isConfigured()Z","isLegacy(Lsun/security/pkcs11/wrapper/CK_MECHANISM_INFO;)Z","login(Ljavax/security/auth/Subject;Ljavax/security/auth/callback/CallbackHandler;)V","s([Ljava/lang/String;)[Ljava/lang/String;","toString([J)Ljava/lang/String;","uninitToken(Lsun/security/pkcs11/Token;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/TemplateManager$KeyAndTemplate;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/TemplateManager$KeyAndTemplate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/TemplateManager$TemplateKey;Lsun/security/pkcs11/TemplateManager$Template;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/TemplateManager$Template;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/TemplateManager$Template.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>([Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","add(Lsun/security/pkcs11/TemplateManager$Template;)V","combine([Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","getAttributes([Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/TemplateManager$TemplateKey;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/TemplateManager$TemplateKey.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;JJ)V","appliesTo(Lsun/security/pkcs11/TemplateManager$TemplateKey;)Z","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/TemplateManager;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/TemplateManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","addTemplate(Ljava/lang/String;JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","buildCompositeTemplate(Lsun/security/pkcs11/TemplateManager$TemplateKey;)Lsun/security/pkcs11/TemplateManager$Template;","getAttributes(Ljava/lang/String;JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","getTemplate(Lsun/security/pkcs11/TemplateManager$TemplateKey;)Lsun/security/pkcs11/TemplateManager$Template;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/Token;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/Token.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/pkcs11/SunPKCS11;)V","destroy()V","ensureLoggedIn(Lsun/security/pkcs11/Session;)V","ensureValid()V","getAttributes(Ljava/lang/String;JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;","getKeyFactory(Ljava/lang/String;)Lsun/security/pkcs11/P11KeyFactory;","getKeyStore()Lsun/security/pkcs11/P11KeyStore;","getMechanismInfo(J)Lsun/security/pkcs11/wrapper/CK_MECHANISM_INFO;","getObjSession()Lsun/security/pkcs11/Session;","getOpSession()Lsun/security/pkcs11/Session;","getRandom()Lsun/security/pkcs11/P11SecureRandom;","isLoggedIn(Lsun/security/pkcs11/Session;)Z","isLoggedInNow(Lsun/security/pkcs11/Session;)Z","isPresent(J)Z","isValid()Z","isWriteProtected()Z","killSession(Lsun/security/pkcs11/Session;)Lsun/security/pkcs11/Session;","releaseSession(Lsun/security/pkcs11/Session;)Lsun/security/pkcs11/Session;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_AES_CTR_PARAMS;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_AES_CTR_PARAMS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_ATTRIBUTE.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","<init>(JJ)V","<init>(JLjava/lang/Object;)V","<init>(JLjava/math/BigInteger;)V","<init>(JZ)V","getBigInteger()Ljava/math/BigInteger;","getBoolean()Z","getByteArray()[B","getCharArray()[C","getLong()J","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_C_INITIALIZE_ARGS;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_C_INITIALIZE_ARGS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_GCM_PARAMS;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_GCM_PARAMS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I[B[B)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_INFO;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_INFO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_MECHANISM;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_MECHANISM.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(J)V","<init>(JLjava/lang/Long;)V","<init>(JLsun/security/pkcs11/wrapper/CK_AES_CTR_PARAMS;)V","<init>(JLsun/security/pkcs11/wrapper/CK_GCM_PARAMS;)V","<init>(J[B)V","init(JLjava/lang/Object;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_MECHANISM_INFO;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_MECHANISM_INFO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_SESSION_INFO;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_SESSION_INFO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_SLOT_INFO;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_SLOT_INFO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_TOKEN_INFO;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_TOKEN_INFO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/CK_VERSION;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/CK_VERSION.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/Constants;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/Constants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/Functions$Flags;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/Functions$Flags.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["toString(J)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/Functions;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/Functions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getAttributeId(Ljava/lang/String;)J","getAttributeName(J)Ljava/lang/String;","getId(Ljava/util/Map;Ljava/lang/String;)J","getKeyId(Ljava/lang/String;)J","getKeyName(J)Ljava/lang/String;","getMechanismId(Ljava/lang/String;)J","getMechanismName(J)Ljava/lang/String;","getName(Ljava/util/Map;J)Ljava/lang/String;","getObjectClassId(Ljava/lang/String;)J","getObjectClassName(J)Ljava/lang/String;","mechanismInfoFlagsToString(J)Ljava/lang/String;","toFullHexString(J)Ljava/lang/String;","toHexString([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/PKCS11$SynchronizedPKCS11;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/PKCS11$SynchronizedPKCS11.class",
    "super": "Lsun/security/pkcs11/wrapper/PKCS11;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","C_CloseSession(J)V","C_CopyObject(JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_CreateObject(J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_Decrypt(JJ[BIIJ[BII)I","C_DecryptFinal(JJ[BII)I","C_DecryptInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_DecryptUpdate(JJ[BIIJ[BII)I","C_DestroyObject(JJ)V","C_DigestFinal(J[BII)I","C_DigestInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;)V","C_DigestSingle(JLsun/security/pkcs11/wrapper/CK_MECHANISM;[BII[BII)I","C_DigestUpdate(JJ[BII)V","C_Encrypt(JJ[BIIJ[BII)I","C_EncryptFinal(JJ[BII)I","C_EncryptInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_EncryptUpdate(JJ[BIIJ[BII)I","C_FindObjects(JJ)[J","C_FindObjectsFinal(J)V","C_FindObjectsInit(J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","C_GenerateKey(JLsun/security/pkcs11/wrapper/CK_MECHANISM;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_GenerateRandom(J[B)V","C_GetAttributeValue(JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","C_GetInfo()Lsun/security/pkcs11/wrapper/CK_INFO;","C_GetMechanismInfo(JJ)Lsun/security/pkcs11/wrapper/CK_MECHANISM_INFO;","C_GetMechanismList(J)[J","C_GetSessionInfo(J)Lsun/security/pkcs11/wrapper/CK_SESSION_INFO;","C_GetSlotInfo(J)Lsun/security/pkcs11/wrapper/CK_SLOT_INFO;","C_GetSlotList(Z)[J","C_GetTokenInfo(J)Lsun/security/pkcs11/wrapper/CK_TOKEN_INFO;","C_Initialize(Ljava/lang/Object;)V","C_Login(JJ[C)V","C_OpenSession(JJLjava/lang/Object;Lsun/security/pkcs11/wrapper/CK_NOTIFY;)J","C_SeedRandom(J[B)V","C_Sign(J[B)[B","C_SignFinal(JI)[B","C_SignInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_SignUpdate(JJ[BII)V","C_VerifyRecover(J[BII[BII)I","C_VerifyRecoverInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/PKCS11;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/PKCS11.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","C_CloseSession(J)V","C_CopyObject(JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_CreateObject(J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_Decrypt(JJ[BIIJ[BII)I","C_DecryptFinal(JJ[BII)I","C_DecryptInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_DecryptUpdate(JJ[BIIJ[BII)I","C_DestroyObject(JJ)V","C_DigestFinal(J[BII)I","C_DigestInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;)V","C_DigestSingle(JLsun/security/pkcs11/wrapper/CK_MECHANISM;[BII[BII)I","C_DigestUpdate(JJ[BII)V","C_Encrypt(JJ[BIIJ[BII)I","C_EncryptFinal(JJ[BII)I","C_EncryptInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_EncryptUpdate(JJ[BIIJ[BII)I","C_FindObjects(JJ)[J","C_FindObjectsFinal(J)V","C_FindObjectsInit(J[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","C_GenerateKey(JLsun/security/pkcs11/wrapper/CK_MECHANISM;[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)J","C_GenerateRandom(J[B)V","C_GetAttributeValue(JJ[Lsun/security/pkcs11/wrapper/CK_ATTRIBUTE;)V","C_GetInfo()Lsun/security/pkcs11/wrapper/CK_INFO;","C_GetMechanismInfo(JJ)Lsun/security/pkcs11/wrapper/CK_MECHANISM_INFO;","C_GetMechanismList(J)[J","C_GetOperationState(J)[B","C_GetSessionInfo(J)Lsun/security/pkcs11/wrapper/CK_SESSION_INFO;","C_GetSlotInfo(J)Lsun/security/pkcs11/wrapper/CK_SLOT_INFO;","C_GetSlotList(Z)[J","C_GetTokenInfo(J)Lsun/security/pkcs11/wrapper/CK_TOKEN_INFO;","C_Initialize(Ljava/lang/Object;)V","C_Login(JJ[C)V","C_OpenSession(JJLjava/lang/Object;Lsun/security/pkcs11/wrapper/CK_NOTIFY;)J","C_SeedRandom(J[B)V","C_SetOperationState(J[BJJ)V","C_Sign(J[B)[B","C_SignFinal(JI)[B","C_SignInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","C_SignUpdate(JJ[BII)V","C_VerifyRecover(J[BII[BII)I","C_VerifyRecoverInit(JLsun/security/pkcs11/wrapper/CK_MECHANISM;J)V","connect(Ljava/lang/String;Ljava/lang/String;)V","createNativeKey(J[BJLsun/security/pkcs11/wrapper/CK_MECHANISM;)J","getInstance(Ljava/lang/String;Ljava/lang/String;Lsun/security/pkcs11/wrapper/CK_C_INITIALIZE_ARGS;Z)Lsun/security/pkcs11/wrapper/PKCS11;","getNativeKeyInfo(JJJLsun/security/pkcs11/wrapper/CK_MECHANISM;)[B","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/pkcs11/wrapper/PKCS11Exception;",
    "module": "jdk.crypto.cryptoki",
    "source": "/jdk.crypto.cryptoki/sun/security/pkcs11/wrapper/PKCS11Exception.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/pkcs12/MacData;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/MacData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","getDigest()[B","getDigestAlgName()Ljava/lang/String;","getIterations()I","getSalt()[B"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$CertEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$CertEntry.class",
    "super": "Lsun/security/pkcs12/PKCS12KeyStore$Entry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/cert/X509Certificate;[BLjava/lang/String;)V","<init>(Ljava/security/cert/X509Certificate;[BLjava/lang/String;[Lsun/security/util/ObjectIdentifier;Ljava/util/Set;)V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$DualFormatPKCS12;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$DualFormatPKCS12.class",
    "super": "Lsun/security/util/KeyStoreDelegator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$Entry;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$Entry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$KeyEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$KeyEntry.class",
    "super": "Lsun/security/pkcs12/PKCS12KeyStore$Entry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$PrivateKeyEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$PrivateKeyEntry.class",
    "super": "Lsun/security/pkcs12/PKCS12KeyStore$KeyEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$RetryWithZero;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$RetryWithZero.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["run(Lsun/security/pkcs12/PKCS12KeyStore$RetryWithZero;[C)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore$SecretKeyEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore$SecretKeyEntry.class",
    "super": "Lsun/security/pkcs12/PKCS12KeyStore$KeyEntry;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/pkcs12/PKCS12KeyStore;",
    "module": "java.base",
    "source": "/java.base/sun/security/pkcs12/PKCS12KeyStore.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","findMatchedCertificate(Lsun/security/pkcs12/PKCS12KeyStore$PrivateKeyEntry;)Ljava/security/cert/X509Certificate;","getPBEKey([C)Ljavax/crypto/SecretKey;","getUnfriendlyName()Ljava/lang/String;","lambda$engineGetKey$0(Lsun/security/util/ObjectIdentifier;Ljava/security/AlgorithmParameters;[BLsun/security/pkcs12/PKCS12KeyStore$Entry;Ljava/lang/String;I[C)Ljava/security/Key;","lambda$engineLoad$1(Lsun/security/util/ObjectIdentifier;Ljava/security/AlgorithmParameters;[B[C)Ljava/lang/Object;","lambda$engineLoad$2(Ljavax/crypto/Mac;Ljavax/crypto/spec/PBEParameterSpec;[BILsun/security/pkcs12/MacData;[C)Ljava/lang/Void;","loadSafeContents(Lsun/security/util/DerInputStream;)V","mapPBEParamsToAlgorithm(Lsun/security/util/ObjectIdentifier;Ljava/security/AlgorithmParameters;)Ljava/lang/String;","parseAlgParameters(Lsun/security/util/ObjectIdentifier;Lsun/security/util/DerInputStream;)Ljava/security/AlgorithmParameters;"]
  }
,
  {
    "className": "Lsun/security/provider/AbstractDrbg$NonceProvider;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/AbstractDrbg$NonceProvider.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["next()[B"]
  }
,
  {
    "className": "Lsun/security/provider/AbstractDrbg$SeederHolder;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/AbstractDrbg$SeederHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","lambda$static$0(Lsun/security/provider/HashDrbg;IIIZ)[B"]
  }
,
  {
    "className": "Lsun/security/provider/AbstractDrbg;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/AbstractDrbg.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","configure(Ljava/security/SecureRandomParameters;)V","engineNextBytes([B)V","engineNextBytes([BLjava/security/SecureRandomParameters;)V","engineSetSeed([B)V","getEntropyInput(IIIZ)[B","getEntropyInput(Z)[B","getStandardStrength(I)I","instantiateIfNecessary([B)V","lambda$static$0(IIIZ)[B","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/AbstractHashDrbg;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/AbstractHashDrbg.class",
    "super": "Lsun/security/provider/AbstractDrbg;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","alg2strength(Ljava/lang/String;)I","chooseAlgorithmAndStrength()V","instantiateAlgorithm([B)V","reseedAlgorithm([B[B)V"]
  }
,
  {
    "className": "Lsun/security/provider/ByteArrayAccess;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/ByteArrayAccess.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["b2iBig64([BI[I)V","b2iLittle64([BI[I)V","b2lBig128([BI[J)V","b2lLittle([BI[JII)V","i2bBig([II[BII)V","i2bBig4(I[BI)V","i2bLittle([II[BII)V","i2bLittle4(I[BI)V","l2bBig([JI[BII)V","l2bLittle([JI[BII)V"]
  }
,
  {
    "className": "Lsun/security/provider/ConfigFile$Spi$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/ConfigFile$Spi$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/ConfigFile$Spi;Ljavax/security/auth/login/Configuration$Parameters;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/provider/ConfigFile$Spi;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/ConfigFile$Spi.class",
    "super": "Ljavax/security/auth/login/ConfigurationSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/net/URI;)V","<init>(Ljavax/security/auth/login/Configuration$Parameters;)V","expand(Ljava/lang/String;)Ljava/lang/String;","getInputStream(Ljava/net/URL;)Ljava/io/InputStream;","init()V","init(Ljava/net/URL;Ljava/util/Map;)V","ioException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;","match(Ljava/lang/String;)Ljava/lang/String;","nextToken()I","parseLoginEntry(Ljava/util/Map;)V","peek(Ljava/lang/String;)Z","readConfig(Ljava/io/Reader;Ljava/util/Map;)V"]
  }
,
  {
    "className": "Lsun/security/provider/ConfigFile;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/ConfigFile.class",
    "super": "Ljavax/security/auth/login/Configuration;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/provider/CtrDrbg;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/CtrDrbg.class",
    "super": "Lsun/security/provider/AbstractDrbg;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/SecureRandomParameters;)V","addOne([BI)V","alg2strength(Ljava/lang/String;)I","bcc([B[[B)[B","chooseAlgorithmAndStrength()V","df([B)[B","generateAlgorithm([B[B)V","initEngine()V","instantiateAlgorithm([B)V","reseedAlgorithm([B[B)V","toString()Ljava/lang/String;","update([B)V"]
  }
,
  {
    "className": "Lsun/security/provider/DRBG;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DRBG.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/SecureRandomParameters;)V","checkTwice(ZLjava/lang/String;)V","createImpl()V","engineNextBytes([B)V","engineSetSeed([B)V","lambda$new$0()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$Raw$NullDigest20;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$Raw$NullDigest20.class",
    "super": "Ljava/security/MessageDigest;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineDigest()[B","engineDigest([BII)I","engineGetDigestLength()I","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$Raw;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$Raw.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Z)V"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$RawDSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$RawDSA.class",
    "super": "Lsun/security/provider/DSA$Raw;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$RawDSAinP1363Format;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$RawDSAinP1363Format.class",
    "super": "Lsun/security/provider/DSA$Raw;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA1withDSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA1withDSA.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA1withDSAinP1363Format;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA1withDSAinP1363Format.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA224withDSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA224withDSA.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA224withDSAinP1363Format;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA224withDSAinP1363Format.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA256withDSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA256withDSA.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA$SHA256withDSAinP1363Format;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA$SHA256withDSAinP1363Format.class",
    "super": "Lsun/security/provider/DSA;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSA.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/MessageDigest;)V","<init>(Ljava/security/MessageDigest;Z)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSAKeyFactory;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAKeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","engineGetKeySpec(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;"]
  }
,
  {
    "className": "Lsun/security/provider/DSAKeyPairGenerator$Current;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAKeyPairGenerator$Current.class",
    "super": "Lsun/security/provider/DSAKeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","initialize(ILjava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/provider/DSAKeyPairGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAKeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","checkStrength(II)V","init(ILjava/security/SecureRandom;Z)V","initialize(ILjava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/provider/DSAParameterGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAParameterGenerator.class",
    "super": "Ljava/security/AlgorithmParameterGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/DSAParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSAPrivateKey;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAPrivateKey.class",
    "super": "Lsun/security/pkcs/PKCS8Key;",
    "interfaces": ["Ljava/security/interfaces/DSAPrivateKey;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>([B)V","clearOldKey()V","getParams()Ljava/security/interfaces/DSAParams;","getX()Ljava/math/BigInteger;","parseKeyBits()V"]
  }
,
  {
    "className": "Lsun/security/provider/DSAPublicKey;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAPublicKey.class",
    "super": "Lsun/security/x509/X509Key;",
    "interfaces": ["Ljava/security/interfaces/DSAPublicKey;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>([B)V","getParams()Ljava/security/interfaces/DSAParams;","getY()Ljava/math/BigInteger;","parseKeyBits()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DSAPublicKeyImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DSAPublicKeyImpl.class",
    "super": "Lsun/security/provider/DSAPublicKey;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>([B)V"]
  }
,
  {
    "className": "Lsun/security/provider/DigestBase;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DigestBase.class",
    "super": "Ljava/security/MessageDigestSpi;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;II)V","clone()Ljava/lang/Object;","engineDigest()[B","engineDigest([BII)I","engineGetDigestLength()I","engineReset()V","engineUpdate(B)V","engineUpdate([BII)V","implCompressMultiBlock([BII)I","implCompressMultiBlock0([BII)I","implCompressMultiBlockCheck([BII)V"]
  }
,
  {
    "className": "Lsun/security/provider/DomainKeyStore$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DomainKeyStore$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Enumeration;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/DomainKeyStore;Ljava/util/Iterator;)V","hasMoreElements()Z","nextElement()Ljava/lang/Object;","nextElement()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/DomainKeyStore$DKS;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DomainKeyStore$DKS.class",
    "super": "Lsun/security/provider/DomainKeyStore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V"]
  }
,
  {
    "className": "Lsun/security/provider/DomainKeyStore;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/DomainKeyStore.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","getKeystoresForReading(Ljava/lang/String;)Ljava/util/AbstractMap$SimpleEntry;"]
  }
,
  {
    "className": "Lsun/security/provider/EntropySource;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/EntropySource.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/provider/FileInputStreamPool$StreamRef;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/FileInputStreamPool$StreamRef.class",
    "super": "Ljava/lang/ref/WeakReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;Lsun/security/provider/FileInputStreamPool$UnclosableInputStream;Ljava/lang/ref/ReferenceQueue;)V"]
  }
,
  {
    "className": "Lsun/security/provider/FileInputStreamPool$UnclosableInputStream;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/FileInputStreamPool$UnclosableInputStream.class",
    "super": "Ljava/io/FilterInputStream;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/InputStream;)V","close()V","getWrappedStream()Ljava/io/InputStream;"]
  }
,
  {
    "className": "Lsun/security/provider/FileInputStreamPool;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/FileInputStreamPool.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","getInputStream(Ljava/io/File;)Ljava/io/InputStream;"]
  }
,
  {
    "className": "Lsun/security/provider/HashDrbg;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/HashDrbg.class",
    "super": "Lsun/security/provider/AbstractHashDrbg;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/SecureRandomParameters;)V","addBytes([BI[[B)V","generateAlgorithm([B[B)V","hashDf(ILjava/util/List;)[B","hashDf(Ljava/security/MessageDigest;IILjava/util/List;)[B","hashGen([B[B)V","hashReseedInternal(Ljava/util/List;)V","initEngine()V"]
  }
,
  {
    "className": "Lsun/security/provider/HmacDrbg;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/HmacDrbg.class",
    "super": "Lsun/security/provider/AbstractHashDrbg;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/SecureRandomParameters;)V","generateAlgorithm([B[B)V","hashReseedInternal(Ljava/util/List;)V","initEngine()V","update(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore$CaseExactJKS;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore$CaseExactJKS.class",
    "super": "Lsun/security/provider/JavaKeyStore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertAlias(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore$DualFormatJKS;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore$DualFormatJKS.class",
    "super": "Lsun/security/util/KeyStoreDelegator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore$JKS;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore$JKS.class",
    "super": "Lsun/security/provider/JavaKeyStore;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convertAlias(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore$KeyEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore$KeyEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore$TrustedCertEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore$TrustedCertEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/JavaKeyStore;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/JavaKeyStore.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","convertToBytes([C)[B","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","getPreKeyedHash([C)Ljava/security/MessageDigest;"]
  }
,
  {
    "className": "Lsun/security/provider/KeyProtector;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/KeyProtector.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","recover(Lsun/security/pkcs/EncryptedPrivateKeyInfo;)Ljava/security/Key;"]
  }
,
  {
    "className": "Lsun/security/provider/MD2;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/MD2.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","implCompress([BI)V","implDigest([BI)V","implReset()V"]
  }
,
  {
    "className": "Lsun/security/provider/MD5;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/MD5.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","FF(IIIIIII)I","GG(IIIIIII)I","HH(IIIIIII)I","II(IIIIIII)I","clone()Ljava/lang/Object;","implCompress([BI)V","implDigest([BI)V","implReset()V","resetHashes()V"]
  }
,
  {
    "className": "Lsun/security/provider/MoreDrbgParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/MoreDrbgParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/SecureRandomParameters;","Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/EntropySource;Ljava/lang/String;Ljava/lang/String;[BZLjava/security/DrbgParameters$Instantiation;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/NativePRNG$Variant;)V","run()Ljava/lang/Object;","run()Lsun/security/provider/NativePRNG$RandomIO;"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$2;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$Blocking;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$Blocking.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","engineNextBytes([B)V","engineSetSeed([B)V","isAvailable()Z"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$NonBlocking;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$NonBlocking.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","engineNextBytes([B)V","engineSetSeed([B)V","isAvailable()Z"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$RandomIO$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$RandomIO$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/NativePRNG$RandomIO;)V","run()Ljava/io/OutputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$RandomIO;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$RandomIO.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/File;Ljava/io/File;)V","ensureBufferValid()V","getMixRandom()Lsun/security/provider/SecureRandom;","implNextBytes([B)V","implSetSeed([B)V","readFully(Ljava/io/InputStream;[B)V"]
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG$Variant;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG$Variant.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/provider/NativePRNG;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativePRNG.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","engineNextBytes([B)V","engineSetSeed([B)V","getEgdUrl()Ljava/net/URL;","initIO(Lsun/security/provider/NativePRNG$Variant;)Lsun/security/provider/NativePRNG$RandomIO;","isAvailable()Z"]
  }
,
  {
    "className": "Lsun/security/provider/NativeSeedGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/NativeSeedGenerator.class",
    "super": "Lsun/security/provider/SeedGenerator$URLSeedGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/provider/ParameterCache;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/ParameterCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCachedDHParameterSpec(I)Ljavax/crypto/spec/DHParameterSpec;"]
  }
,
  {
    "className": "Lsun/security/provider/PolicySpiFile;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/PolicySpiFile.class",
    "super": "Ljava/security/PolicySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Policy$Parameters;)V"]
  }
,
  {
    "className": "Lsun/security/provider/SHA2$SHA224;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA2$SHA224.class",
    "super": "Lsun/security/provider/SHA2;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA2$SHA256;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA2$SHA256.class",
    "super": "Lsun/security/provider/SHA2;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA2;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA2.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I[I)V","clone()Ljava/lang/Object;","implCompress([BI)V","implCompress0([BI)V","implCompressCheck([BI)V","implDigest([BI)V","implReset()V","lf_R(II)I","lf_S(II)I","lf_ch(III)I","lf_delta0(I)I","lf_delta1(I)I","lf_maj(III)I","lf_sigma0(I)I","lf_sigma1(I)I","resetHashes()V"]
  }
,
  {
    "className": "Lsun/security/provider/SHA3$SHA224;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA3$SHA224.class",
    "super": "Lsun/security/provider/SHA3;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA3$SHA256;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA3$SHA256.class",
    "super": "Lsun/security/provider/SHA3;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA3$SHA384;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA3$SHA384.class",
    "super": "Lsun/security/provider/SHA3;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA3$SHA512;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA3$SHA512.class",
    "super": "Lsun/security/provider/SHA3;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA3;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA3.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","bytes2Lanes([B[J)V","clone()Ljava/lang/Object;","implCompress([BI)V","implDigest([BI)V","implReset()V","keccak()V","lanes2Bytes([J[B)V","setPaddingBytes([BI)I","smChi([J)[J","smIota([JI)[J","smPiRho([J)[J","smTheta([J)[J"]
  }
,
  {
    "className": "Lsun/security/provider/SHA5$SHA384;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA5$SHA384.class",
    "super": "Lsun/security/provider/SHA5;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA5$SHA512;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA5$SHA512.class",
    "super": "Lsun/security/provider/SHA5;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA5$SHA512_224;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA5$SHA512_224.class",
    "super": "Lsun/security/provider/SHA5;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA5$SHA512_256;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA5$SHA512_256.class",
    "super": "Lsun/security/provider/SHA5;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SHA5;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA5.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I[J)V","clone()Ljava/lang/Object;","implCompress([BI)V","implCompress0([BI)V","implCompressCheck([BI)V","implDigest([BI)V","implReset()V","lf_R(JI)J","lf_S(JI)J","lf_ch(JJJ)J","lf_delta0(J)J","lf_delta1(J)J","lf_maj(JJJ)J","lf_sigma0(J)J","lf_sigma1(J)J","resetHashes()V"]
  }
,
  {
    "className": "Lsun/security/provider/SHA;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SHA.class",
    "super": "Lsun/security/provider/DigestBase;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","implCompress([BI)V","implCompress0([BI)V","implCompressCheck([BI)V","implDigest([BI)V","implReset()V","resetHashes()V"]
  }
,
  {
    "className": "Lsun/security/provider/SecureRandom$SeederHolder;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SecureRandom$SeederHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V"]
  }
,
  {
    "className": "Lsun/security/provider/SecureRandom;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SecureRandom.class",
    "super": "Ljava/security/SecureRandomSpi;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>([B)V","engineNextBytes([B)V","engineSetSeed([B)V","init([B)V","updateState([B[B)V"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/MessageDigest;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$ThreadedSeedGenerator$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$ThreadedSeedGenerator$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/SeedGenerator$ThreadedSeedGenerator;[Ljava/lang/ThreadGroup;)V","run()Ljava/lang/Object;","run()Ljava/lang/Thread;"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$ThreadedSeedGenerator$BogusThread;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$ThreadedSeedGenerator$BogusThread.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","run()V"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$ThreadedSeedGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$ThreadedSeedGenerator.class",
    "super": "Lsun/security/provider/SeedGenerator;",
    "interfaces": ["Ljava/lang/Runnable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","getSeedByte()B","getSeedBytes([B)V","run()V"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$URLSeedGenerator$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$URLSeedGenerator$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/SeedGenerator$URLSeedGenerator;Ljava/net/URL;)V","run()Ljava/io/InputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator$URLSeedGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator$URLSeedGenerator.class",
    "super": "Lsun/security/provider/SeedGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getSeedBytes([B)V","init()V"]
  }
,
  {
    "className": "Lsun/security/provider/SeedGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SeedGenerator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","<init>()V","addNetworkAdapterInfo(Ljava/security/MessageDigest;)V","generateSeed([B)V","getSystemEntropy()[B","longToByteArray(J)[B"]
  }
,
  {
    "className": "Lsun/security/provider/Sun;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/Sun.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","putEntries(Ljava/util/Iterator;)V"]
  }
,
  {
    "className": "Lsun/security/provider/SunEntries;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/SunEntries.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/Provider;)V","add(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V","createAliases([Ljava/lang/String;)Ljava/util/List;","createAliasesWithOid([Ljava/lang/String;)Ljava/util/List;","getDeviceFile(Ljava/net/URL;)Ljava/io/File;","getSeedSource()Ljava/lang/String;","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lsun/security/provider/X509Factory;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/X509Factory.class",
    "super": "Ljava/security/cert/CertificateFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","addToCache(Lsun/security/util/Cache;[BLjava/lang/Object;)V","checkHeaderFooter(Ljava/lang/String;Ljava/lang/String;)V","commitEvent(Lsun/security/x509/X509CertImpl;)V","engineGenerateCertificate(Ljava/io/InputStream;)Ljava/security/cert/Certificate;","getFromCache(Lsun/security/util/Cache;[B)Ljava/lang/Object;","intern(Ljava/security/cert/X509Certificate;)Lsun/security/x509/X509CertImpl;","readBERInternal(Ljava/io/InputStream;Ljava/io/ByteArrayOutputStream;I)I","readFully(Ljava/io/InputStream;Ljava/io/ByteArrayOutputStream;I)I","readOneBlock(Ljava/io/InputStream;)[B"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/CollectionCertStore;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/certpath/CollectionCertStore.class",
    "super": "Ljava/security/cert/CertStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/cert/CertStoreParameters;)V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/IndexedCollectionCertStore;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/certpath/IndexedCollectionCertStore.class",
    "super": "Ljava/security/cert/CertStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/cert/CertStoreParameters;)V","buildIndex(Ljava/util/Collection;)V","indexCRL(Ljava/security/cert/X509CRL;)V","indexCertificate(Ljava/security/cert/X509Certificate;)V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/PKIXCertPathValidator;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/certpath/PKIXCertPathValidator.class",
    "super": "Ljava/security/cert/CertPathValidatorSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/SunCertPathBuilder;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/certpath/SunCertPathBuilder.class",
    "super": "Ljava/security/cert/CertPathBuilderSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/X509CertificatePair;",
    "module": "java.base",
    "source": "/java.base/sun/security/provider/certpath/X509CertificatePair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["clearCache()V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/JdkLDAP$1;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/JdkLDAP$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/provider/certpath/ldap/JdkLDAP;Ljava/security/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/JdkLDAP$ProviderService;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/JdkLDAP$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/JdkLDAP;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/JdkLDAP.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lsun/security/provider/certpath/ldap/JdkLDAP;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/LDAPCertStore$Key;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/LDAPCertStore$Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/LDAPCertStore;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/LDAPCertStore.class",
    "super": "Ljava/security/cert/CertStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/cert/CertStoreParameters;)V"]
  }
,
  {
    "className": "Lsun/security/provider/certpath/ldap/LDAPCertStoreImpl;",
    "module": "java.naming",
    "source": "/java.naming/sun/security/provider/certpath/ldap/LDAPCertStoreImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","createInitialDirContext(Ljava/lang/String;I)V","lambda$createInitialDirContext$1()Ljava/lang/Boolean;"]
  }
,
  {
    "className": "Lsun/security/rsa/MGF1;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/MGF1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","generateAndXor([BIII[BI)V","getName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/rsa/PSSParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/PSSParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;","getEncoded(Ljava/security/spec/PSSParameterSpec;)[B"]
  }
,
  {
    "className": "Lsun/security/rsa/RSACore$BlindingParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSACore$BlindingParameters.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getBlindingRandomPair(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Lsun/security/rsa/RSACore$BlindingRandomPair;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSACore$BlindingRandomPair;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSACore$BlindingRandomPair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSACore;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSACore.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["convert([BII)[B","crtCrypt([BLjava/security/interfaces/RSAPrivateCrtKey;Z)[B","crypt([BLjava/math/BigInteger;Ljava/math/BigInteger;)[B","getBlindingRandomPair(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Lsun/security/rsa/RSACore$BlindingRandomPair;","getByteLength(Ljava/math/BigInteger;)I","parseMsg([BLjava/math/BigInteger;)Ljava/math/BigInteger;","priCrypt([BLjava/math/BigInteger;Ljava/math/BigInteger;)[B","rsa([BLjava/security/interfaces/RSAPrivateKey;Z)[B","rsa([BLjava/security/interfaces/RSAPublicKey;)[B","toByteArray(Ljava/math/BigInteger;I)[B"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyFactory$Legacy;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyFactory$Legacy.class",
    "super": "Lsun/security/rsa/RSAKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyFactory$PSS;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyFactory$PSS.class",
    "super": "Lsun/security/rsa/RSAKeyFactory;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyFactory;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyFactory.class",
    "super": "Ljava/security/KeyFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/rsa/RSAUtil$KeyType;)V","checkKeyAlgo(Ljava/security/Key;Ljava/lang/String;)V","checkKeyLengths(ILjava/math/BigInteger;II)V","checkRSAProviderKeyLengths(ILjava/math/BigInteger;)V","engineGeneratePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","engineGeneratePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","engineTranslateKey(Ljava/security/Key;)Ljava/security/Key;","generatePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey;","generatePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;","getInstance(Lsun/security/rsa/RSAUtil$KeyType;)Lsun/security/rsa/RSAKeyFactory;","toRSAKey(Ljava/security/Key;)Ljava/security/interfaces/RSAKey;","translatePrivateKey(Ljava/security/PrivateKey;)Ljava/security/PrivateKey;","translatePublicKey(Ljava/security/PublicKey;)Ljava/security/PublicKey;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyPairGenerator$Legacy;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyPairGenerator$Legacy.class",
    "super": "Lsun/security/rsa/RSAKeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyPairGenerator$PSS;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyPairGenerator$PSS.class",
    "super": "Lsun/security/rsa/RSAKeyPairGenerator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAKeyPairGenerator;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAKeyPairGenerator.class",
    "super": "Ljava/security/KeyPairGeneratorSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/rsa/RSAUtil$KeyType;I)V","initialize(ILjava/security/SecureRandom;)V","initialize(Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAPSSSignature;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAPSSSignature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAPadding;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAPadding.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IILjava/security/SecureRandom;Ljavax/crypto/spec/OAEPParameterSpec;)V","getInitialHash(Ljava/security/MessageDigest;[B)[B","getInstance(IILjava/security/SecureRandom;)Lsun/security/rsa/RSAPadding;","getInstance(IILjava/security/SecureRandom;Ljavax/crypto/spec/OAEPParameterSpec;)Lsun/security/rsa/RSAPadding;","getMaxDataSize()I","pad([B)[B","pad([BII)[B","padOAEP([B)[B","padV15([B)[B","unpad([B)[B","unpadOAEP([B)[B","unpadV15([B)[B"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAPrivateCrtKeyImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAPrivateCrtKeyImpl.class",
    "super": "Lsun/security/pkcs/PKCS8Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPrivateCrtKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/x509/AlgorithmId;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>([B)V","getAlgorithm()Ljava/lang/String;","getCrtCoefficient()Ljava/math/BigInteger;","getModulus()Ljava/math/BigInteger;","getParams()Ljava/security/spec/AlgorithmParameterSpec;","getPrimeExponentP()Ljava/math/BigInteger;","getPrimeExponentQ()Ljava/math/BigInteger;","getPrimeP()Ljava/math/BigInteger;","getPrimeQ()Ljava/math/BigInteger;","getPrivateExponent()Ljava/math/BigInteger;","getPublicExponent()Ljava/math/BigInteger;","newKey(Lsun/security/rsa/RSAUtil$KeyType;Ljava/security/spec/AlgorithmParameterSpec;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/interfaces/RSAPrivateKey;","newKey([B)Ljava/security/interfaces/RSAPrivateKey;","parseKeyBits()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAPrivateKeyImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAPrivateKeyImpl.class",
    "super": "Lsun/security/pkcs/PKCS8Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPrivateKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/x509/AlgorithmId;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getAlgorithm()Ljava/lang/String;","getModulus()Ljava/math/BigInteger;","getParams()Ljava/security/spec/AlgorithmParameterSpec;","getPrivateExponent()Ljava/math/BigInteger;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAPublicKeyImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAPublicKeyImpl.class",
    "super": "Lsun/security/x509/X509Key;",
    "interfaces": ["Ljava/security/interfaces/RSAPublicKey;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/x509/AlgorithmId;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","<init>([B)V","checkExponentRange(Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getAlgorithm()Ljava/lang/String;","getModulus()Ljava/math/BigInteger;","getParams()Ljava/security/spec/AlgorithmParameterSpec;","getPublicExponent()Ljava/math/BigInteger;","newKey(Lsun/security/rsa/RSAUtil$KeyType;Ljava/security/spec/AlgorithmParameterSpec;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/security/interfaces/RSAPublicKey;","newKey([B)Ljava/security/interfaces/RSAPublicKey;","parseKeyBits()V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$MD2withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$MD2withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$MD5withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$MD5withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA1withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA1withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA224withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA224withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA256withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA256withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA384withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA384withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA512_224withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA512_224withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA512_256withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA512_256withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature$SHA512withRSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature$SHA512withRSA.class",
    "super": "Lsun/security/rsa/RSASignature;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSASignature;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSASignature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/security/util/ObjectIdentifier;I)V"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAUtil$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAUtil$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/rsa/RSAUtil$KeyType;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAUtil$KeyType.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["keyAlgo()Ljava/lang/String;","lookup(Ljava/lang/String;)Lsun/security/rsa/RSAUtil$KeyType;","values()[Lsun/security/rsa/RSAUtil$KeyType;"]
  }
,
  {
    "className": "Lsun/security/rsa/RSAUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/RSAUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["checkParamsAgainstType(Lsun/security/rsa/RSAUtil$KeyType;Ljava/security/spec/AlgorithmParameterSpec;)V","createAlgorithmId(Lsun/security/rsa/RSAUtil$KeyType;Ljava/security/spec/AlgorithmParameterSpec;)Lsun/security/x509/AlgorithmId;","getParamSpec(Ljava/security/AlgorithmParameters;)Ljava/security/spec/AlgorithmParameterSpec;","getParamSpec(Lsun/security/x509/AlgorithmId;)Ljava/security/spec/AlgorithmParameterSpec;"]
  }
,
  {
    "className": "Lsun/security/rsa/SunRsaSign;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/SunRsaSign.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","putEntries(Ljava/util/Iterator;)V"]
  }
,
  {
    "className": "Lsun/security/rsa/SunRsaSignEntries;",
    "module": "java.base",
    "source": "/java.base/sun/security/rsa/SunRsaSignEntries.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;)V","add(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V","iterator()Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lsun/security/smartcardio/PCSC;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/PCSC.class",
    "super": "Lsun/security/smartcardio/PlatformPCSC;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["SCardEstablishContext(I)J","checkAvailable()V"]
  }
,
  {
    "className": "Lsun/security/smartcardio/PCSCException;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/PCSCException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/smartcardio/PCSCTerminals;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/PCSCTerminals.class",
    "super": "Ljavax/smartcardio/CardTerminals;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initContext()V"]
  }
,
  {
    "className": "Lsun/security/smartcardio/PlatformPCSC;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/PlatformPCSC.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/smartcardio/SunPCSC$1;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/SunPCSC$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/smartcardio/SunPCSC;Ljava/security/Provider;)V","run()Ljava/lang/Object;","run()Ljava/lang/Void;"]
  }
,
  {
    "className": "Lsun/security/smartcardio/SunPCSC$Factory;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/SunPCSC$Factory.class",
    "super": "Ljavax/smartcardio/TerminalFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/security/smartcardio/SunPCSC$ProviderService;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/SunPCSC$ProviderService.class",
    "super": "Ljava/security/Provider$Service;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/Provider;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V","newInstance(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/smartcardio/SunPCSC;",
    "module": "java.smartcardio",
    "source": "/java.smartcardio/sun/security/smartcardio/SunPCSC.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","access$000(Lsun/security/smartcardio/SunPCSC;Ljava/security/Provider$Service;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/AbstractKeyManagerWrapper;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/AbstractKeyManagerWrapper.class",
    "super": "Ljavax/net/ssl/X509ExtendedKeyManager;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/net/ssl/X509KeyManager;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/AbstractTrustManagerWrapper;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/AbstractTrustManagerWrapper.class",
    "super": "Ljavax/net/ssl/X509ExtendedTrustManager;",
    "interfaces": ["Ljavax/net/ssl/X509TrustManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljavax/net/ssl/X509TrustManager;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/DummyX509KeyManager;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/DummyX509KeyManager.class",
    "super": "Ljavax/net/ssl/X509ExtendedKeyManager;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/ssl/DummyX509TrustManager;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/DummyX509TrustManager.class",
    "super": "Ljavax/net/ssl/X509ExtendedTrustManager;",
    "interfaces": ["Ljavax/net/ssl/X509TrustManager;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/ssl/EphemeralKeyManager$EphemeralKeyPair;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/EphemeralKeyManager$EphemeralKeyPair.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/KeyPair;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/EphemeralKeyManager;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/EphemeralKeyManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/JsseJce;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/JsseJce.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getMessageDigest(Ljava/lang/String;)Ljava/security/MessageDigest;","getSecureRandom()Ljava/security/SecureRandom;","getSignature(Ljava/lang/String;)Ljava/security/Signature;"]
  }
,
  {
    "className": "Lsun/security/ssl/KeyManagerFactoryImpl$SunX509;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/KeyManagerFactoryImpl$SunX509.class",
    "super": "Lsun/security/ssl/KeyManagerFactoryImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineInit(Ljava/security/KeyStore;[C)V"]
  }
,
  {
    "className": "Lsun/security/ssl/KeyManagerFactoryImpl$X509;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/KeyManagerFactoryImpl$X509.class",
    "super": "Lsun/security/ssl/KeyManagerFactoryImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineInit(Ljava/security/KeyStore;[C)V"]
  }
,
  {
    "className": "Lsun/security/ssl/KeyManagerFactoryImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/KeyManagerFactoryImpl.class",
    "super": "Ljavax/net/ssl/KeyManagerFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetKeyManagers()[Ljavax/net/ssl/KeyManager;"]
  }
,
  {
    "className": "Lsun/security/ssl/RSASignature;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/RSASignature.class",
    "super": "Ljava/security/SignatureSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$AbstractDTLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$AbstractDTLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$AbstractTLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$CustomizedDTLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$CustomizedDTLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractDTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$CustomizedTLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$CustomizedTLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DTLS10Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DTLS10Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractDTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DTLS12Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DTLS12Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractDTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DTLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DTLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl$CustomizedDTLSContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DefaultManagersHolder$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DefaultManagersHolder$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/Map;)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DefaultManagersHolder$2;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DefaultManagersHolder$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedExceptionAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","run()Ljava/io/FileInputStream;","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DefaultManagersHolder;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DefaultManagersHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","getKeyManagers()[Ljavax/net/ssl/KeyManager;","getTrustManagers()[Ljavax/net/ssl/TrustManager;"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$DefaultSSLContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$DefaultSSLContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl$CustomizedTLSContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$TLS10Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$TLS10Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$TLS11Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$TLS11Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$TLS12Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$TLS12Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$TLS13Context;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$TLS13Context.class",
    "super": "Lsun/security/ssl/SSLContextImpl$AbstractTLSContext;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl$TLSContext;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl$TLSContext.class",
    "super": "Lsun/security/ssl/SSLContextImpl$CustomizedTLSContext;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLContextImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLContextImpl.class",
    "super": "Ljavax/net/ssl/SSLContextSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","chooseKeyManager([Ljavax/net/ssl/KeyManager;)Ljavax/net/ssl/X509ExtendedKeyManager;","chooseTrustManager([Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/X509TrustManager;","engineInit([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLLogger$SSLConsoleLogger;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLLogger$SSLConsoleLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/System$Logger;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","isLoggable(Ljava/lang/System$Logger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLLogger$SSLSimpleFormatter$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLLogger$SSLSimpleFormatter$1.class",
    "super": "Ljava/lang/ThreadLocal;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["initialValue()Ljava/lang/Object;","initialValue()Ljava/text/SimpleDateFormat;"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLLogger$SSLSimpleFormatter;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLLogger$SSLSimpleFormatter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["format(Lsun/security/ssl/SSLLogger$SSLConsoleLogger;Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","formatByteArrayInputStream(Ljava/io/ByteArrayInputStream;)Ljava/lang/String;","formatByteBuffer(Ljava/nio/ByteBuffer;)Ljava/lang/String;","formatCaller()Ljava/lang/String;","formatCertificate(Ljava/security/cert/Certificate;)Ljava/lang/String;","formatMapEntry(Ljava/util/Map$Entry;)Ljava/lang/String;","formatObject(Ljava/lang/Object;)Ljava/lang/String;","formatParameters([Ljava/lang/Object;)Ljava/lang/String;","formatThrowable(Ljava/lang/Throwable;)Ljava/lang/String;","lambda$formatCaller$0(Ljava/lang/StackWalker$StackFrame;)Z","lambda$formatCaller$1(Ljava/lang/StackWalker$StackFrame;)Ljava/lang/String;","lambda$formatCaller$2(Ljava/util/stream/Stream;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLLogger;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<clinit>()V","fine(Ljava/lang/String;[Ljava/lang/Object;)V","finest(Ljava/lang/String;[Ljava/lang/Object;)V","hasOption(Ljava/lang/String;)Z","help()V","isOn(Ljava/lang/String;)Z","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","warning(Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/SSLSessionContextImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SSLSessionContextImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljavax/net/ssl/SSLSessionContext;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getDefaultCacheLimit()I"]
  }
,
  {
    "className": "Lsun/security/ssl/SunJSSE$1;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SunJSSE$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/ssl/SunJSSE;Z)V","run()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/security/ssl/SunJSSE;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SunJSSE.class",
    "super": "Ljava/security/Provider;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/String;)V","<init>(Ljava/security/Provider;)V","<init>(Ljava/security/Provider;Ljava/lang/String;)V","checkNull(Ljava/lang/Object;)Ljava/lang/Object;","doRegister(Z)V","ensureFIPS(Ljava/security/Provider;)V","isFIPS()Z","ps(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V","registerAlgorithms(Z)V","subclassCheck()V"]
  }
,
  {
    "className": "Lsun/security/ssl/SunX509KeyManagerImpl$X509Credentials;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SunX509KeyManagerImpl$X509Credentials.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/PrivateKey;[Ljava/security/cert/X509Certificate;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/SunX509KeyManagerImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/SunX509KeyManagerImpl.class",
    "super": "Ljavax/net/ssl/X509ExtendedKeyManager;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/security/KeyStore;[C)V"]
  }
,
  {
    "className": "Lsun/security/ssl/TrustManagerFactoryImpl$PKIXFactory;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/TrustManagerFactoryImpl$PKIXFactory.class",
    "super": "Lsun/security/ssl/TrustManagerFactoryImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance(Ljava/util/Collection;)Ljavax/net/ssl/X509TrustManager;"]
  }
,
  {
    "className": "Lsun/security/ssl/TrustManagerFactoryImpl$SimpleFactory;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/TrustManagerFactoryImpl$SimpleFactory.class",
    "super": "Lsun/security/ssl/TrustManagerFactoryImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","getInstance(Ljava/util/Collection;)Ljavax/net/ssl/X509TrustManager;"]
  }
,
  {
    "className": "Lsun/security/ssl/TrustManagerFactoryImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/TrustManagerFactoryImpl.class",
    "super": "Ljavax/net/ssl/TrustManagerFactorySpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetTrustManagers()[Ljavax/net/ssl/TrustManager;","engineInit(Ljava/security/KeyStore;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/TrustStoreManager;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/TrustStoreManager.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getTrustedCerts()Ljava/util/Set;","getTrustedKeyStore()Ljava/security/KeyStore;"]
  }
,
  {
    "className": "Lsun/security/ssl/Utilities;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/Utilities.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getBooleanProperty(Ljava/lang/String;Z)Z","indent(Ljava/lang/String;)Ljava/lang/String;","indent(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","toHexString(B)Ljava/lang/String;","toHexString(J)Ljava/lang/String;","toHexString([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/ssl/X509KeyManagerImpl$SizedMap;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/X509KeyManagerImpl$SizedMap.class",
    "super": "Ljava/util/LinkedHashMap;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","removeEldestEntry(Ljava/util/Map$Entry;)Z"]
  }
,
  {
    "className": "Lsun/security/ssl/X509KeyManagerImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/X509KeyManagerImpl.class",
    "super": "Ljavax/net/ssl/X509ExtendedKeyManager;",
    "interfaces": ["Ljavax/net/ssl/X509KeyManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/security/KeyStore$Builder;)V","<init>(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lsun/security/ssl/X509TrustManagerImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/ssl/X509TrustManagerImpl.class",
    "super": "Ljavax/net/ssl/X509ExtendedTrustManager;",
    "interfaces": ["Ljavax/net/ssl/X509TrustManager;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Collection;)V"]
  }
,
  {
    "className": "Lsun/security/util/ArrayUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ArrayUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["blockSizeCheck(II)V","nullAndBoundsCheck([BII)V","reverse([B)V","swap([BII)V"]
  }
,
  {
    "className": "Lsun/security/util/BitArray;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/BitArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(I[B)V","<init>(Lsun/security/util/BitArray;)V","<init>([Z)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","get(I)Z","hashCode()I","length()I","position(I)I","set(IZ)V","subscript(I)I","toBooleanArray()[Z","toByteArray()[B","toString()Ljava/lang/String;","truncate()Lsun/security/util/BitArray;"]
  }
,
  {
    "className": "Lsun/security/util/ByteArrayLexOrder;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ByteArrayLexOrder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare([B[B)I"]
  }
,
  {
    "className": "Lsun/security/util/Cache$EqualByteArray;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/Cache$EqualByteArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/security/util/Cache;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/Cache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","newHardMemoryCache(I)Lsun/security/util/Cache;","newSoftMemoryCache(II)Lsun/security/util/Cache;"]
  }
,
  {
    "className": "Lsun/security/util/CurveDB;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/CurveDB.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getSupportedCurves()Ljava/util/Collection;","lookup(I)Lsun/security/util/NamedCurve;","lookup(Ljava/lang/String;)Lsun/security/util/NamedCurve;","lookup(Ljava/security/spec/ECParameterSpec;)Lsun/security/util/NamedCurve;"]
  }
,
  {
    "className": "Lsun/security/util/Debug;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/Debug.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","getInstance(Ljava/lang/String;)Lsun/security/util/Debug;","getInstance(Ljava/lang/String;Ljava/lang/String;)Lsun/security/util/Debug;","isOn(Ljava/lang/String;)Z","println(Ljava/lang/String;)V","toHexString(Ljava/math/BigInteger;)Ljava/lang/String;","toString([B)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/DerEncoder;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerEncoder.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/DerIndefLenConverter;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerIndefLenConverter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","convert([B)[B","getLengthBytes(I)[B","isEOC(I)Z","isIndefinite(I)Z","isLongForm(I)Z","parseLength()I","parseTag()V","parseValue(I)V","writeLength(I)V","writeLengthAndValue()V","writeTag()V","writeValue(I)V"]
  }
,
  {
    "className": "Lsun/security/util/DerInputBuffer;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerInputBuffer.class",
    "super": "Ljava/io/ByteArrayInputStream;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([BIIZ)V","<init>([BZ)V","dup()Lsun/security/util/DerInputBuffer;","equals(Ljava/lang/Object;)Z","equals(Lsun/security/util/DerInputBuffer;)Z","getBigInteger(IZ)Ljava/math/BigInteger;","getBitString()[B","getBitString(I)[B","getGeneralizedTime(I)Ljava/util/Date;","getInteger(I)I","getTime(IZ)Ljava/util/Date;","getUTCTime(I)Ljava/util/Date;","getUnalignedBitString()Lsun/security/util/BitArray;","hashCode()I","toByteArray()[B","toDigit(BLjava/lang/String;)I","truncate(I)V"]
  }
,
  {
    "className": "Lsun/security/util/DerInputStream;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerInputStream.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputBuffer;)V","<init>([B)V","<init>([BIIZ)V","available()I","getBigInteger()Ljava/math/BigInteger;","getBitString()[B","getByte()I","getBytes([B)V","getDefiniteLength()I","getDefiniteLength(Ljava/io/InputStream;)I","getDerValue()Lsun/security/util/DerValue;","getGeneralizedTime()Ljava/util/Date;","getInteger()I","getLength(ILjava/io/InputStream;)I","getLength(Ljava/io/InputStream;)I","getOID()Lsun/security/util/ObjectIdentifier;","getOctetString()[B","getPositiveBigInteger()Ljava/math/BigInteger;","getSequence(I)[Lsun/security/util/DerValue;","getSet(I)[Lsun/security/util/DerValue;","getSet(IZ)[Lsun/security/util/DerValue;","getUTCTime()Ljava/util/Date;","getUnalignedBitString()Lsun/security/util/BitArray;","init([BIIZ)V","mark(I)V","readVector(I)[Lsun/security/util/DerValue;","reset()V","subStream(IZ)Lsun/security/util/DerInputStream;","toByteArray()[B"]
  }
,
  {
    "className": "Lsun/security/util/DerOutputStream;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerOutputStream.class",
    "super": "Ljava/io/ByteArrayOutputStream;",
    "interfaces": ["Lsun/security/util/DerEncoder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","derEncode(Ljava/io/OutputStream;)V","putBitString([B)V","putBoolean(Z)V","putDerValue(Lsun/security/util/DerValue;)V","putEnumerated(I)V","putGeneralizedTime(Ljava/util/Date;)V","putIA5String(Ljava/lang/String;)V","putInteger(I)V","putInteger(Ljava/math/BigInteger;)V","putIntegerContents(I)V","putLength(I)V","putNull()V","putOID(Lsun/security/util/ObjectIdentifier;)V","putOctetString([B)V","putOrderedSet(B[Lsun/security/util/DerEncoder;Ljava/util/Comparator;)V","putOrderedSetOf(B[Lsun/security/util/DerEncoder;)V","putPrintableString(Ljava/lang/String;)V","putTime(Ljava/util/Date;B)V","putTruncatedUnalignedBitString(Lsun/security/util/BitArray;)V","putUnalignedBitString(Lsun/security/util/BitArray;)V","write(BLsun/security/util/DerOutputStream;)V","write(B[B)V","writeImplicit(BLsun/security/util/DerOutputStream;)V","writeString(Ljava/lang/String;BLjava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/util/DerValue;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/DerValue.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(B[B)V","<init>(B[BZ)V","<init>(Ljava/io/InputStream;)V","<init>(Ljava/io/InputStream;Z)V","<init>(Lsun/security/util/DerInputBuffer;)V","<init>([B)V","<init>([BZ)V","append([B[B)[B","createTag(BZB)B","doEquals(Lsun/security/util/DerValue;Lsun/security/util/DerValue;)Z","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getAsString()Ljava/lang/String;","getBMPString()Ljava/lang/String;","getBigInteger()Ljava/math/BigInteger;","getBitString()[B","getBoolean()Z","getData()Lsun/security/util/DerInputStream;","getDataBytes()[B","getEnumerated()I","getGeneralString()Ljava/lang/String;","getGeneralizedTime()Ljava/util/Date;","getIA5String()Ljava/lang/String;","getInteger()I","getOID()Lsun/security/util/ObjectIdentifier;","getOctetString()[B","getPrintableString()Ljava/lang/String;","getT61String()Ljava/lang/String;","getTag()B","getUTCTime()Ljava/util/Date;","getUTF8String()Ljava/lang/String;","getUnalignedBitString()Lsun/security/util/BitArray;","getUnalignedBitString(Z)Lsun/security/util/BitArray;","hashCode()I","init(ZLjava/io/InputStream;Z)Lsun/security/util/DerInputStream;","isConstructed()Z","isConstructed(B)Z","isContextSpecific()Z","isContextSpecific(B)Z","isPrintableStringChar(C)Z","length()I","resetTag(B)V","toByteArray()[B","toDerInputStream()Lsun/security/util/DerInputStream;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/ECKeySizeParameterSpec;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ECKeySizeParameterSpec.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/spec/AlgorithmParameterSpec;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","getKeySize()I"]
  }
,
  {
    "className": "Lsun/security/util/ECParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ECParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;","getAlgorithmParameters(Ljava/security/spec/ECParameterSpec;)Ljava/security/AlgorithmParameters;"]
  }
,
  {
    "className": "Lsun/security/util/ECUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ECUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decodePKCS8ECPrivateKey([B)Ljava/security/interfaces/ECPrivateKey;","decodePoint([BLjava/security/spec/EllipticCurve;)Ljava/security/spec/ECPoint;","decodeX509ECPublicKey([B)Ljava/security/interfaces/ECPublicKey;","encodeECParameterSpec(Ljava/security/Provider;Ljava/security/spec/ECParameterSpec;)[B","encodePoint(Ljava/security/spec/ECPoint;Ljava/security/spec/EllipticCurve;)[B","equals(Ljava/security/spec/ECParameterSpec;Ljava/security/spec/ECParameterSpec;)Z","generateECPrivateKey(Ljava/math/BigInteger;Ljava/security/spec/ECParameterSpec;)Ljava/security/interfaces/ECPrivateKey;","getECParameterSpec(Ljava/security/Provider;I)Ljava/security/spec/ECParameterSpec;","getECParameterSpec(Ljava/security/Provider;[B)Ljava/security/spec/ECParameterSpec;","getECParameters(Ljava/security/Provider;)Ljava/security/AlgorithmParameters;","getKeyFactory()Ljava/security/KeyFactory;","trimZeroes([B)[B","x509EncodeECPublicKey(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)[B"]
  }
,
  {
    "className": "Lsun/security/util/FilePermCompat;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/FilePermCompat.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/GCMParameters;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/GCMParameters.class",
    "super": "Ljava/security/AlgorithmParametersSpi;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","engineGetEncoded()[B","engineGetParameterSpec(Ljava/lang/Class;)Ljava/security/spec/AlgorithmParameterSpec;","engineInit(Ljava/security/spec/AlgorithmParameterSpec;)V","engineInit([B)V","engineToString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/HexDumpEncoder;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/HexDumpEncoder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","bytesPerAtom()I","bytesPerLine()I","encodeAtom(Ljava/io/OutputStream;[BII)V","encodeBuffer(Ljava/io/InputStream;Ljava/io/OutputStream;)V","encodeBuffer(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V","encodeBuffer([B)Ljava/lang/String;","encodeBuffer([BLjava/io/OutputStream;)V","encodeBufferPrefix(Ljava/io/OutputStream;)V","encodeLinePrefix(Ljava/io/OutputStream;I)V","encodeLineSuffix(Ljava/io/OutputStream;)V","getBytes(Ljava/nio/ByteBuffer;)[B","hexDigit(Ljava/io/PrintStream;B)V","readFully(Ljava/io/InputStream;[B)I"]
  }
,
  {
    "className": "Lsun/security/util/IOUtils;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/IOUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["readExactlyNBytes(Ljava/io/InputStream;I)[B"]
  }
,
  {
    "className": "Lsun/security/util/KeyStoreDelegator;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/KeyStoreDelegator.class",
    "super": "Ljava/security/KeyStoreSpi;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)V","engineAliases()Ljava/util/Enumeration;","engineGetCertificate(Ljava/lang/String;)Ljava/security/cert/Certificate;","engineGetCertificateChain(Ljava/lang/String;)[Ljava/security/cert/Certificate;","engineGetKey(Ljava/lang/String;[C)Ljava/security/Key;","engineIsCertificateEntry(Ljava/lang/String;)Z","engineIsKeyEntry(Ljava/lang/String;)Z","engineLoad(Ljava/io/InputStream;[C)V","lambda$new$0()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/KeyUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/KeyUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getKeySize(Ljava/security/Key;)I"]
  }
,
  {
    "className": "Lsun/security/util/Length;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/Length.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/MemoryCache$CacheEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/MemoryCache$CacheEntry.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/MemoryCache$HardCacheEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/MemoryCache$HardCacheEntry.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/util/MemoryCache$CacheEntry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;J)V","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","invalidate()V","isValid(J)Z"]
  }
,
  {
    "className": "Lsun/security/util/MemoryCache$SoftCacheEntry;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/MemoryCache$SoftCacheEntry.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": ["Lsun/security/util/MemoryCache$CacheEntry;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/ref/ReferenceQueue;)V","getKey()Ljava/lang/Object;","getValue()Ljava/lang/Object;","invalidate()V","isValid(J)Z"]
  }
,
  {
    "className": "Lsun/security/util/MemoryCache;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/MemoryCache.class",
    "super": "Lsun/security/util/Cache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(ZI)V","<init>(ZII)V","clear()V","emptyQueue()V","expungeExpiredEntries()V","get(Ljava/lang/Object;)Ljava/lang/Object;","newEntry(Ljava/lang/Object;Ljava/lang/Object;JLjava/lang/ref/ReferenceQueue;)Lsun/security/util/MemoryCache$CacheEntry;","put(Ljava/lang/Object;Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/security/util/MessageDigestSpi2;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/MessageDigestSpi2.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/NamedCurve;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/NamedCurve.class",
    "super": "Ljava/security/spec/ECParameterSpec;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getEncoded()[B","getName()Ljava/lang/String;","getObjectId()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/ObjectIdentifier;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ObjectIdentifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Lsun/security/util/DerInputBuffer;)V","<init>(Lsun/security/util/DerInputStream;)V","<init>([I)V","check([B)V","checkCount(I)V","checkFirstComponent(I)V","checkFirstComponent(Ljava/math/BigInteger;)V","checkOidSize(I)V","checkOtherComponent(II)V","checkOtherComponent(ILjava/math/BigInteger;)V","checkSecondComponent(II)V","checkSecondComponent(ILjava/math/BigInteger;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","init([II)V","pack([BIIII)[B","pack7Oid(I[BI)I","pack7Oid(Ljava/math/BigInteger;[BI)I","pack7Oid([BII[BI)I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/PropertyExpander$ExpandException;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/PropertyExpander$ExpandException.class",
    "super": "Ljava/security/GeneralSecurityException;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/security/util/PropertyExpander;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/PropertyExpander.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["expand(Ljava/lang/String;)Ljava/lang/String;","expand(Ljava/lang/String;Z)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/ResourcesMgr;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/ResourcesMgr.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getAuthResourceString(Ljava/lang/String;)Ljava/lang/String;","getBundle(Ljava/lang/String;)Ljava/util/ResourceBundle;","getString(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/util/SecurityConstants;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/SecurityConstants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/SecurityProviderConstants;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/SecurityProviderConstants.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getDefDSASubprimeSize(I)I"]
  }
,
  {
    "className": "Lsun/security/util/math/ImmutableIntegerModuloP;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/ImmutableIntegerModuloP.class",
    "super": "null",
    "interfaces": ["Lsun/security/util/math/IntegerModuloP;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/math/IntegerFieldModuloP;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/IntegerFieldModuloP.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/math/IntegerModuloP;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/IntegerModuloP.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/math/MutableIntegerModuloP;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/MutableIntegerModuloP.class",
    "super": "null",
    "interfaces": ["Lsun/security/util/math/IntegerModuloP;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/math/SmallValue;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/SmallValue.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial$Element;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial$Element.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/util/math/IntegerModuloP;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;Ljava/math/BigInteger;)V","<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;Z)V","<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;[JI)V","addModPowerTwo(Lsun/security/util/math/IntegerModuloP;[B)V","isSummand()Z","mutable()Lsun/security/util/math/MutableIntegerModuloP;","mutable()Lsun/security/util/math/intpoly/IntegerPolynomial$MutableElement;","setValue(Ljava/math/BigInteger;)V"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement.class",
    "super": "Lsun/security/util/math/intpoly/IntegerPolynomial$Element;",
    "interfaces": ["Lsun/security/util/math/ImmutableIntegerModuloP;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;Ljava/math/BigInteger;)V","<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;Z)V","<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;[JI)V","fixed()Lsun/security/util/math/ImmutableIntegerModuloP;","fixed()Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial$Limb;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial$Limb.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/util/math/SmallValue;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;I)V"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial$MutableElement;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial$MutableElement.class",
    "super": "Lsun/security/util/math/intpoly/IntegerPolynomial$Element;",
    "interfaces": ["Lsun/security/util/math/MutableIntegerModuloP;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/math/intpoly/IntegerPolynomial;[JI)V","setProduct(Lsun/security/util/math/IntegerModuloP;)Lsun/security/util/math/MutableIntegerModuloP;","setProduct(Lsun/security/util/math/IntegerModuloP;)Lsun/security/util/math/intpoly/IntegerPolynomial$MutableElement;","setSum(Lsun/security/util/math/IntegerModuloP;)Lsun/security/util/math/MutableIntegerModuloP;","setSum(Lsun/security/util/math/IntegerModuloP;)Lsun/security/util/math/intpoly/IntegerPolynomial$MutableElement;","setValue([BIIB)Lsun/security/util/math/MutableIntegerModuloP;","setValue([BIIB)Lsun/security/util/math/intpoly/IntegerPolynomial$MutableElement;"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial1305;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial1305.class",
    "super": "Lsun/security/util/math/intpoly/IntegerPolynomial;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["carryReduce([JJJJJJJJJJ)V","carryValue(J)J","encode(JJB[J)V","encode(Ljava/nio/ByteBuffer;IB[J)V","encode([BIIB[J)V","finalCarryReduceLast([J)V","modReduceIn([JIJ)V","mult([J[J[J)V","postEncodeCarry([J)V"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial25519;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial25519.class",
    "super": "Lsun/security/util/math/intpoly/IntegerPolynomial;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","carryReduce([JJJJJJJJJJJJJJJJJJJJ)V","finalCarryReduceLast([J)V","mult([J[J[J)V","reduce([J)V"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial448;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial448.class",
    "super": "Lsun/security/util/math/intpoly/IntegerPolynomial;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","carryReduce([JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ)V","finalCarryReduceLast([J)V","modReduceIn([JIJ)V","mult([J[J[J)V","reduce([J)V"]
  }
,
  {
    "className": "Lsun/security/util/math/intpoly/IntegerPolynomial;",
    "module": "java.base",
    "source": "/java.base/sun/security/util/math/intpoly/IntegerPolynomial.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/util/math/IntegerFieldModuloP;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(IIILjava/math/BigInteger;)V","addLimbs([J[J[J)V","addLimbsModPowerTwo([J[J[B)V","carry([J)V","carry([JII)V","carryOut([JI)J","carryValue(J)J","conditionalSwap(I[J[J)V","decode([J[BII)V","encode(Ljava/nio/ByteBuffer;IB[J)V","encode([BIIB[J)V","encodeSmall(Ljava/nio/ByteBuffer;IB[J)V","finalReduce([J)V","get0()Lsun/security/util/math/ImmutableIntegerModuloP;","get0()Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;","get1()Lsun/security/util/math/ImmutableIntegerModuloP;","get1()Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;","getElement(Ljava/math/BigInteger;)Lsun/security/util/math/ImmutableIntegerModuloP;","getElement(Ljava/math/BigInteger;)Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;","getElement([BIIB)Lsun/security/util/math/ImmutableIntegerModuloP;","getElement([BIIB)Lsun/security/util/math/intpoly/IntegerPolynomial$ImmutableElement;","getSmallValue(I)Lsun/security/util/math/SmallValue;","postEncodeCarry([J)V","setLimbsValue(Ljava/math/BigInteger;[J)V","setLimbsValuePositive(Ljava/math/BigInteger;[J)V","setPosModLimbs()[J"]
  }
,
  {
    "className": "Lsun/security/validator/TrustStoreUtil;",
    "module": "java.base",
    "source": "/java.base/sun/security/validator/TrustStoreUtil.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTrustedCerts(Ljava/security/KeyStore;)Ljava/util/Set;"]
  }
,
  {
    "className": "Lsun/security/x509/AVA;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AVA.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/util/DerEncoder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","derEncode(Ljava/io/OutputStream;)V","equals(Ljava/lang/Object;)Z","hasRFC2253Keyword()Z","hashCode()I","isDerString(Lsun/security/util/DerValue;Z)Z","toKeyword(ILjava/util/Map;)Ljava/lang/String;","toKeywordValueString(Ljava/lang/String;)Ljava/lang/String;","toRFC1779String(Ljava/util/Map;)Ljava/lang/String;","toRFC2253CanonicalString()Ljava/lang/String;","toRFC2253String(Ljava/util/Map;)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/AVAComparator;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AVAComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Lsun/security/x509/AVA;Lsun/security/x509/AVA;)I","getInstance()Ljava/util/Comparator;"]
  }
,
  {
    "className": "Lsun/security/x509/AVAKeyword;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AVAKeyword.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getKeyword(Lsun/security/util/ObjectIdentifier;ILjava/util/Map;)Ljava/lang/String;","hasKeyword(Lsun/security/util/ObjectIdentifier;I)Z","isCompliant(I)Z"]
  }
,
  {
    "className": "Lsun/security/x509/AccessDescription;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AccessDescription.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getAccessLocation()Lsun/security/x509/GeneralName;","getAccessMethod()Lsun/security/util/ObjectIdentifier;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/AlgIdDSA;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AlgIdDSA.class",
    "super": "Lsun/security/x509/AlgorithmId;",
    "interfaces": ["Ljava/security/interfaces/DSAParams;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V","getG()Ljava/math/BigInteger;","getName()Ljava/lang/String;","getP()Ljava/math/BigInteger;","getQ()Ljava/math/BigInteger;","initializeParams()V","paramsToString()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/AlgorithmId;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AlgorithmId.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/io/Serializable;","Lsun/security/util/DerEncoder;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/ObjectIdentifier;)V","<init>(Lsun/security/util/ObjectIdentifier;Ljava/security/AlgorithmParameters;)V","<init>(Lsun/security/util/ObjectIdentifier;Lsun/security/util/DerValue;)V","algOID(Ljava/lang/String;)Lsun/security/util/ObjectIdentifier;","computeOidTable()Ljava/util/HashMap;","decodeParams()V","derEncode(Ljava/io/OutputStream;)V","encode()[B","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","equals(Lsun/security/util/ObjectIdentifier;)Z","equals(Lsun/security/x509/AlgorithmId;)Z","get(Ljava/lang/String;)Lsun/security/x509/AlgorithmId;","getEncodedParams()[B","getName()Ljava/lang/String;","getOID()Lsun/security/util/ObjectIdentifier;","getParameters()Ljava/security/AlgorithmParameters;","hashCode()I","makeSigAlg(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;","oidTable()Ljava/util/Map;","paramsToString()Ljava/lang/String;","parse(Lsun/security/util/DerValue;)Lsun/security/x509/AlgorithmId;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/AuthorityInfoAccessExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AuthorityInfoAccessExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/List;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/AuthorityKeyIdentifierExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/AuthorityKeyIdentifierExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Lsun/security/x509/KeyIdentifier;Lsun/security/x509/GeneralNames;Lsun/security/x509/SerialNumber;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/BasicConstraintsExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/BasicConstraintsExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/lang/Boolean;ZI)V","<init>(ZI)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CRLDistributionPointsExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CRLDistributionPointsExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/List;)V","<init>(Lsun/security/util/ObjectIdentifier;Ljava/lang/Boolean;Ljava/lang/Object;Ljava/lang/String;)V","<init>(Lsun/security/util/ObjectIdentifier;ZLjava/util/List;Ljava/lang/String;)V","<init>(ZLjava/util/List;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CRLNumberExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CRLNumberExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/math/BigInteger;)V","<init>(Lsun/security/util/ObjectIdentifier;Ljava/lang/Boolean;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V","<init>(Lsun/security/util/ObjectIdentifier;ZLjava/math/BigInteger;Ljava/lang/String;Ljava/lang/String;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CRLReasonCodeExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CRLReasonCodeExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(ZI)V","encodeThis()V","getName()Ljava/lang/String;","getReasonCode()Ljava/security/cert/CRLReason;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertAttrSet;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertAttrSet.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/x509/CertificateAlgorithmId;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateAlgorithmId.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","get(Ljava/lang/String;)Lsun/security/x509/AlgorithmId;","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateExtensions;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateExtensions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","equals(Ljava/lang/Object;)Z","get(Ljava/lang/String;)Lsun/security/x509/Extension;","getAllExtensions()Ljava/util/Collection;","getName()Ljava/lang/String;","getUnparseableExtensions()Ljava/util/Map;","hashCode()I","init(Lsun/security/util/DerInputStream;)V","parseExtension(Lsun/security/x509/Extension;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateIssuerExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateIssuerExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Lsun/security/x509/GeneralNames;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificatePoliciesExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificatePoliciesExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/lang/Boolean;Ljava/util/List;)V","<init>(Ljava/util/List;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificatePolicyId;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificatePolicyId.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getIdentifier()Lsun/security/util/ObjectIdentifier;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificatePolicyMap;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificatePolicyMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateSerialNumber;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateSerialNumber.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","get(Ljava/lang/String;)Lsun/security/x509/SerialNumber;","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateValidity;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateValidity.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","construct(Lsun/security/util/DerValue;)V","get(Ljava/lang/String;)Ljava/util/Date;","getName()Ljava/lang/String;","getNotAfter()Ljava/util/Date;","getNotBefore()Ljava/util/Date;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateVersion;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateVersion.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/util/DerValue;)V","compare(I)I","construct(Lsun/security/util/DerValue;)V","get(Ljava/lang/String;)Ljava/lang/Integer;","getName()Ljava/lang/String;","getVersion()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/CertificateX509Key;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/CertificateX509Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","get(Ljava/lang/String;)Ljava/security/PublicKey;","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/DNSName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/DNSName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getName()Ljava/lang/String;","getType()I","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/DeltaCRLIndicatorExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/DeltaCRLIndicatorExtension.class",
    "super": "Lsun/security/x509/CRLNumberExtension;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/math/BigInteger;)V"]
  }
,
  {
    "className": "Lsun/security/x509/DistributionPoint;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/DistributionPoint.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","reasonToString(I)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/DistributionPointName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/DistributionPointName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/EDIPartyName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/EDIPartyName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getType()I","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/ExtendedKeyUsageExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/ExtendedKeyUsageExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/lang/Boolean;Ljava/util/Vector;)V","<init>(Ljava/util/Vector;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/Extension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/Extension.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/cert/Extension;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/util/DerValue;)V","<init>(Lsun/security/x509/Extension;)V","equals(Ljava/lang/Object;)Z","getExtensionId()Lsun/security/util/ObjectIdentifier;","getExtensionValue()[B","hashCode()I","isCritical()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/FreshestCRLExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/FreshestCRLExtension.class",
    "super": "Lsun/security/x509/CRLDistributionPointsExtension;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/List;)V"]
  }
,
  {
    "className": "Lsun/security/x509/GeneralName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/GeneralName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","<init>(Lsun/security/util/DerValue;Z)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/GeneralNameInterface;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/GeneralNameInterface.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/x509/GeneralNames;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/GeneralNames.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/util/DerValue;)V","add(Lsun/security/x509/GeneralName;)Lsun/security/x509/GeneralNames;","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","isEmpty()Z","names()Ljava/util/List;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/GeneralSubtree;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/GeneralSubtree.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/GeneralSubtrees;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/GeneralSubtrees.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/util/DerValue;)V","<init>(Lsun/security/x509/GeneralSubtrees;)V","add(Lsun/security/x509/GeneralSubtree;)V","clone()Ljava/lang/Object;","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","get(I)Lsun/security/x509/GeneralSubtree;","hashCode()I","size()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/IPAddressName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/IPAddressName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Lsun/security/util/DerValue;)V","<init>([B)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getName()Ljava/lang/String;","getType()I","hashCode()I","parseIPv4(Ljava/lang/String;)V","parseIPv6(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/InhibitAnyPolicyExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/InhibitAnyPolicyExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/IssuerAlternativeNameExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/IssuerAlternativeNameExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/lang/Boolean;Lsun/security/x509/GeneralNames;)V","<init>(Lsun/security/x509/GeneralNames;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/IssuingDistributionPointExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/IssuingDistributionPointExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Lsun/security/x509/DistributionPointName;Lsun/security/x509/ReasonFlags;ZZZZ)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/KeyIdentifier;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/KeyIdentifier.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","<init>([B)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/KeyUsageExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/KeyUsageExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Lsun/security/util/BitArray;)V","<init>([B)V","<init>([Z)V","encodeThis()V","getName()Ljava/lang/String;","isSet(I)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/NameConstraintsExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/NameConstraintsExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Lsun/security/x509/GeneralSubtrees;Lsun/security/x509/GeneralSubtrees;)V","clone()Ljava/lang/Object;","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/NetscapeCertTypeExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/NetscapeCertTypeExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>([B)V","<init>([Z)V","encodeThis()V","getName()Ljava/lang/String;","isSet(I)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/OCSPNoCheckExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/OCSPNoCheckExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","getName()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/OIDMap$OIDInfo;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/OIDMap$OIDInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getClazz()Ljava/lang/Class;"]
  }
,
  {
    "className": "Lsun/security/x509/OIDMap;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/OIDMap.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getClass(Lsun/security/util/ObjectIdentifier;)Ljava/lang/Class;"]
  }
,
  {
    "className": "Lsun/security/x509/OIDName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/OIDName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getType()I","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/OtherName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/OtherName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getGNI(Lsun/security/util/ObjectIdentifier;[B)Lsun/security/x509/GeneralNameInterface;","getType()I","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/PKIXExtensions;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/PKIXExtensions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/security/x509/PolicyConstraintsExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/PolicyConstraintsExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(II)V","<init>(Ljava/lang/Boolean;II)V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/PolicyInformation;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/PolicyInformation.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getPolicyIdentifier()Lsun/security/x509/CertificatePolicyId;","getPolicyQualifiers()Ljava/util/Set;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/PolicyMappingsExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/PolicyMappingsExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/List;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/PrivateKeyUsageExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/PrivateKeyUsageExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/Date;Ljava/util/Date;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/RDN;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/RDN.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","hashCode()I","toRFC1779String(Ljava/util/Map;)Ljava/lang/String;","toRFC2253String(Ljava/util/Map;)Ljava/lang/String;","toRFC2253String(Z)Ljava/lang/String;","toRFC2253StringInternal(ZLjava/util/Map;)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/RFC822Name;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/RFC822Name.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getName()Ljava/lang/String;","getType()I","hashCode()I","parseName(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/ReasonFlags;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/ReasonFlags.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","isSet(I)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/SerialNumber;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/SerialNumber.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","construct(Lsun/security/util/DerValue;)V","encode(Lsun/security/util/DerOutputStream;)V","getNumber()Ljava/math/BigInteger;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/SubjectAlternativeNameExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/SubjectAlternativeNameExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/lang/Boolean;Lsun/security/x509/GeneralNames;)V","<init>(Lsun/security/x509/GeneralNames;)V","encodeThis()V","get(Ljava/lang/String;)Lsun/security/x509/GeneralNames;","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/SubjectInfoAccessExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/SubjectInfoAccessExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>(Ljava/util/List;)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/SubjectKeyIdentifierExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/SubjectKeyIdentifierExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Boolean;Ljava/lang/Object;)V","<init>([B)V","encodeThis()V","getName()Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/URIName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/URIName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/net/URI;Ljava/lang/String;Lsun/security/x509/DNSName;)V","<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","getHost()Ljava/lang/String;","getHostObject()Ljava/lang/Object;","getType()I","getURI()Ljava/net/URI;","hashCode()I","nameConstraint(Lsun/security/util/DerValue;)Lsun/security/x509/URIName;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/UniqueIdentity;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/UniqueIdentity.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/UnparseableExtension;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/UnparseableExtension.class",
    "super": "Lsun/security/x509/Extension;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/x509/Extension;Ljava/lang/Throwable;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/X400Address;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X400Address.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","getType()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/X500Name;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X500Name.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/GeneralNameInterface;","Ljava/security/Principal;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerInputStream;)V","asX500Principal()Ljavax/security/auth/x500/X500Principal;","constrains(Lsun/security/x509/GeneralNameInterface;)I","encode(Lsun/security/util/DerOutputStream;)V","equals(Ljava/lang/Object;)Z","generateDN()V","generateRFC1779DN(Ljava/util/Map;)Ljava/lang/String;","generateRFC2253DN(Ljava/util/Map;)Ljava/lang/String;","getEncoded()[B","getEncodedInternal()[B","getName()Ljava/lang/String;","getRFC1779Name()Ljava/lang/String;","getRFC1779Name(Ljava/util/Map;)Ljava/lang/String;","getRFC2253CanonicalName()Ljava/lang/String;","getRFC2253Name()Ljava/lang/String;","getRFC2253Name(Ljava/util/Map;)Ljava/lang/String;","getType()I","hashCode()I","isEmpty()Z","isWithinSubtree(Lsun/security/x509/X500Name;)Z","parseDER(Lsun/security/util/DerInputStream;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/X509AttributeName;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X509AttributeName.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","getPrefix()Ljava/lang/String;","getSuffix()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/X509CertImpl;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X509CertImpl.class",
    "super": "Ljava/security/cert/X509Certificate;",
    "interfaces": ["Lsun/security/util/DerEncoder;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>([B)V","derEncode(Ljava/io/OutputStream;)V","get(Ljava/lang/String;)Ljava/lang/Object;","getEncoded()[B","getEncodedInternal()[B","getEncodedInternal(Ljava/security/cert/Certificate;)[B","getIssuerDN()Ljava/security/Principal;","getIssuerX500Principal()Ljavax/security/auth/x500/X500Principal;","getNotAfter()Ljava/util/Date;","getNotBefore()Ljava/util/Date;","getPublicKey()Ljava/security/PublicKey;","getSerialNumber()Ljava/math/BigInteger;","getSerialNumberObject()Lsun/security/x509/SerialNumber;","getSigAlgName()Ljava/lang/String;","getSubjectDN()Ljava/security/Principal;","getSubjectX500Principal()Ljavax/security/auth/x500/X500Principal;","getVersion()I","parse(Lsun/security/util/DerValue;)V","toImpl(Ljava/security/cert/X509Certificate;)Lsun/security/x509/X509CertImpl;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/security/x509/X509CertInfo;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X509CertInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/security/x509/CertAttrSet;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/security/util/DerValue;)V","attributeMap(Ljava/lang/String;)I","equals(Ljava/lang/Object;)Z","equals(Lsun/security/x509/X509CertInfo;)Z","get(Ljava/lang/String;)Ljava/lang/Object;","getName()Ljava/lang/String;","getX500Name(Ljava/lang/String;Z)Ljava/lang/Object;","hashCode()I","parse(Lsun/security/util/DerValue;)V","toString()Ljava/lang/String;","verifyCert(Lsun/security/x509/X500Name;Lsun/security/x509/CertificateExtensions;)V"]
  }
,
  {
    "className": "Lsun/security/x509/X509Key;",
    "module": "java.base",
    "source": "/java.base/sun/security/x509/X509Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PublicKey;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Lsun/security/x509/AlgorithmId;Lsun/security/util/BitArray;)V","buildX509Key(Lsun/security/x509/AlgorithmId;Lsun/security/util/BitArray;)Ljava/security/PublicKey;","decode(Ljava/io/InputStream;)V","decode([B)V","encode()[B","encode(Lsun/security/util/DerOutputStream;)V","encode(Lsun/security/util/DerOutputStream;Lsun/security/x509/AlgorithmId;Lsun/security/util/BitArray;)V","equals(Ljava/lang/Object;)Z","getAlgorithm()Ljava/lang/String;","getEncoded()[B","getEncodedInternal()[B","getFormat()Ljava/lang/String;","getKey()Lsun/security/util/BitArray;","hashCode()I","parse(Lsun/security/util/DerValue;)Ljava/security/PublicKey;","parseKeyBits()V","setKey(Lsun/security/util/BitArray;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/text/CollatorUtilities;",
    "module": "java.base",
    "source": "/java.base/sun/text/CollatorUtilities.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["toNormalizerMode(I)Lsun/text/normalizer/NormalizerBase$Mode;"]
  }
,
  {
    "className": "Lsun/text/CompactByteArray;",
    "module": "java.base",
    "source": "/java.base/sun/text/CompactByteArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["clone()Ljava/lang/Object;","elementAt(C)B","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/text/ComposedCharIter;",
    "module": "java.base",
    "source": "/java.base/sun/text/ComposedCharIter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","decomposition()Ljava/lang/String;","next()I"]
  }
,
  {
    "className": "Lsun/text/IntHashtable;",
    "module": "java.base",
    "source": "/java.base/sun/text/IntHashtable.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(I)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","find(I)I","get(I)I","hashCode()I","initialize(I)V","leastGreaterPrimeIndex(I)I","put(II)V","putInternal(II)V","rehash()V","size()I"]
  }
,
  {
    "className": "Lsun/text/Normalizer;",
    "module": "java.base",
    "source": "/java.base/sun/text/Normalizer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getCombiningClass(I)I"]
  }
,
  {
    "className": "Lsun/text/RuleBasedBreakIterator$SafeCharIterator;",
    "module": "java.base",
    "source": "/java.base/sun/text/RuleBasedBreakIterator$SafeCharIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/text/CharacterIterator;","Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/text/CharacterIterator;)V","clone()Ljava/lang/Object;","current()C","first()C","getBeginIndex()I","getEndIndex()I","getIndex()I","next()C","previous()C","setIndex(I)C"]
  }
,
  {
    "className": "Lsun/text/RuleBasedBreakIterator;",
    "module": "java.base",
    "source": "/java.base/sun/text/RuleBasedBreakIterator.class",
    "super": "Ljava/text/BreakIterator;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["checkOffset(ILjava/text/CharacterIterator;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","following(I)I","getCurrent()I","getCurrentCodePointCount()I","getNext()I","getNextIndex()I","getPrevious()I","getText()Ljava/text/CharacterIterator;","handleNext()I","handlePrevious()I","hashCode()I","isBoundary(I)Z","lookupBackwardState(II)I","lookupCategory(I)I","lookupState(II)I","setText(Ljava/text/CharacterIterator;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/text/SupplementaryCharacterData;",
    "module": "java.base",
    "source": "/java.base/sun/text/SupplementaryCharacterData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getValue(I)I"]
  }
,
  {
    "className": "Lsun/text/UCompactIntArray;",
    "module": "java.base",
    "source": "/java.base/sun/text/UCompactIntArray.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(I)V","compact()V","elementAt(I)I","expand()V","initPlane(I)V","setElementAt(II)V"]
  }
,
  {
    "className": "Lsun/text/normalizer/BMPSet;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/BMPSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>([II)V","contains(I)Z","containsSlow(III)Z","findCodePoint(III)I","initBits()V","set32x64Bits([III)V","span(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;Lsun/text/normalizer/OutputInt;)I","spanBack(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/FilteredNormalizer2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/FilteredNormalizer2.class",
    "super": "Lsun/text/normalizer/Normalizer2;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hasBoundaryBefore(I)Z","normalize(Ljava/lang/CharSequence;Ljava/lang/Appendable;Lsun/text/normalizer/UnicodeSet$SpanCondition;)Ljava/lang/Appendable;","normalize(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;","normalizeSecondAndAppend(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;","normalizeSecondAndAppend(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;Z)Ljava/lang/StringBuilder;","spanQuickCheckYes(Ljava/lang/CharSequence;)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$ComposeNormalizer2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$ComposeNormalizer2.class",
    "super": "Lsun/text/normalizer/Norm2AllModes$Normalizer2WithImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hasBoundaryBefore(I)Z","normalize(Ljava/lang/CharSequence;Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","normalizeAndAppend(Ljava/lang/CharSequence;ZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","spanQuickCheckYes(Ljava/lang/CharSequence;)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$DecomposeNormalizer2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$DecomposeNormalizer2.class",
    "super": "Lsun/text/normalizer/Norm2AllModes$Normalizer2WithImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hasBoundaryBefore(I)Z","normalize(Ljava/lang/CharSequence;Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","normalizeAndAppend(Ljava/lang/CharSequence;ZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","spanQuickCheckYes(Ljava/lang/CharSequence;)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$NFCSingleton;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$NFCSingleton.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$NoopNormalizer2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$NoopNormalizer2.class",
    "super": "Lsun/text/normalizer/Normalizer2;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["hasBoundaryBefore(I)Z","normalize(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;"]
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$Norm2AllModesSingleton;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$Norm2AllModesSingleton.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes$Normalizer2WithImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes$Normalizer2WithImpl.class",
    "super": "Lsun/text/normalizer/Normalizer2;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["append(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;","getCombiningClass(I)I","getDecomposition(I)Ljava/lang/String;","normalize(Ljava/lang/CharSequence;)Ljava/lang/String;","normalize(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;","normalizeSecondAndAppend(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;","normalizeSecondAndAppend(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;Z)Ljava/lang/StringBuilder;"]
  }
,
  {
    "className": "Lsun/text/normalizer/Norm2AllModes;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Norm2AllModes.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getInstanceFromSingleton(Lsun/text/normalizer/Norm2AllModes$Norm2AllModesSingleton;)Lsun/text/normalizer/Norm2AllModes;","getNFCInstance()Lsun/text/normalizer/Norm2AllModes;"]
  }
,
  {
    "className": "Lsun/text/normalizer/Normalizer2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Normalizer2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNFDInstance()Lsun/text/normalizer/Normalizer2;","normalize(Ljava/lang/CharSequence;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$1;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$Mode.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$ModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$ModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFC32ModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFC32ModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFCMode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFCMode.class",
    "super": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNormalizer2(I)Lsun/text/normalizer/Normalizer2;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFCModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFCModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFD32ModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFD32ModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFDMode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFDMode.class",
    "super": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNormalizer2(I)Lsun/text/normalizer/Normalizer2;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFDModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFDModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKC32ModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKC32ModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKCMode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKCMode.class",
    "super": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNormalizer2(I)Lsun/text/normalizer/Normalizer2;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKCModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKCModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKD32ModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKD32ModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKDMode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKDMode.class",
    "super": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNormalizer2(I)Lsun/text/normalizer/Normalizer2;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NFKDModeImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NFKDModeImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase$NONEMode;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase$NONEMode.class",
    "super": "Lsun/text/normalizer/NormalizerBase$Mode;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getNormalizer2(I)Lsun/text/normalizer/Normalizer2;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerBase;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerBase.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Lsun/text/normalizer/NormalizerBase$Mode;)V","<init>(Ljava/lang/String;Lsun/text/normalizer/NormalizerBase$Mode;I)V","clearBuffer()V","clone()Ljava/lang/Object;","getMode()Lsun/text/normalizer/NormalizerBase$Mode;","next()I","nextNormalize()Z","normalize(Ljava/lang/String;Ljava/text/Normalizer$Form;)Ljava/lang/String;","normalize(Ljava/lang/String;Lsun/text/normalizer/NormalizerBase$Mode;I)Ljava/lang/String;","previous()I","previousNormalize()Z","reset()V","setMode(Lsun/text/normalizer/NormalizerBase$Mode;)V","setText(Ljava/lang/String;)V","toMode(Ljava/text/Normalizer$Form;)Lsun/text/normalizer/NormalizerBase$Mode;"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl$Hangul;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl$Hangul.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["decompose(ILjava/lang/Appendable;)I","isHangulLV(I)Z"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl$NextCCArgs;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl$NextCCArgs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl$PrevArgs;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl$PrevArgs.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl$ReorderingBuffer.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Appendable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/text/normalizer/NormalizerImpl;Ljava/lang/Appendable;I)V","append(C)Ljava/lang/Appendable;","append(C)Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;","append(II)V","append(Ljava/lang/CharSequence;II)Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;","append(Ljava/lang/CharSequence;IIII)V","equals(Ljava/lang/CharSequence;II)Z","flush()V","flushAndAppendZeroCC(Ljava/lang/CharSequence;II)Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;","getStringBuilder()Ljava/lang/StringBuilder;","insert(II)V","isEmpty()Z","length()I","previousCC()I","remove()V","removeSuffix(I)V","setIterator()V","skipPrevious()V"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl$UTF16Plus;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl$UTF16Plus.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equal(Ljava/lang/CharSequence;IILjava/lang/CharSequence;II)Z","isSurrogateLead(I)Z"]
  }
,
  {
    "className": "Lsun/text/normalizer/NormalizerImpl;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/NormalizerImpl.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["canonicalDecomposeWithSingleQuotation(Ljava/lang/String;)Ljava/lang/String;","combine(Ljava/lang/String;II)I","compose(Ljava/lang/CharSequence;IIZZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)Z","composeAndAppend(Ljava/lang/CharSequence;ZZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","composeQuickCheck(Ljava/lang/CharSequence;IIZZ)I","decompose(IILsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","decompose(Ljava/lang/CharSequence;IILsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)I","decomposeAndAppend(Ljava/lang/CharSequence;ZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)V","decomposeShort(Ljava/lang/CharSequence;IIZZLsun/text/normalizer/NormalizerImpl$ReorderingBuffer;)I","findNextCompBoundary(Ljava/lang/CharSequence;IIZ)I","findPreviousCompBoundary(Ljava/lang/CharSequence;IZ)I","getCC(I)I","getCCFromNoNo(I)I","getCCFromNormalYesOrMaybe(I)I","getCCFromYesOrMaybe(I)I","getCCFromYesOrMaybeCP(I)I","getCompositionsListForComposite(I)I","getCompositionsListForDecompYes(I)I","getDecomposition(I)Ljava/lang/String;","getFCD16(I)I","getFCD16FromNormData(I)I","getNextCC(Lsun/text/normalizer/NormalizerImpl$NextCCArgs;)I","getNorm16(I)I","getPrevCC(Lsun/text/normalizer/NormalizerImpl$PrevArgs;)I","getPreviousTrailCC(Ljava/lang/CharSequence;II)I","getTrailCCFromCompYesAndZeroCC(I)I","hangulLVT()I","hasCompBoundaryAfter(IZ)Z","hasCompBoundaryAfter(Ljava/lang/CharSequence;IIZ)Z","hasCompBoundaryBefore(I)Z","hasCompBoundaryBefore(II)Z","hasCompBoundaryBefore(Ljava/lang/CharSequence;II)Z","hasDecompBoundaryBefore(I)Z","insertOrdered([CIIICCI)I","isAlgorithmicNoNo(I)Z","isCompYesAndZeroCC(I)Z","isDecompNoAlgorithmic(I)Z","isDecompYes(I)Z","isHangulLV(I)Z","isHangulLVT(I)Z","isInert(I)Z","isJamoVT(I)Z","isMaybe(I)Z","isMaybeOrNonZeroCC(I)Z","isMostDecompYesAndZeroCC(I)Z","isTrailCC01ForCompBoundaryAfter(I)Z","mapAlgorithmic(II)I","mergeOrdered([CII[CII)I","needSingleQuotation(C)Z","norm16HasCompBoundaryAfter(IZ)Z","norm16HasCompBoundaryBefore(I)Z","norm16HasDecompBoundaryBefore(I)Z","recompose(Lsun/text/normalizer/NormalizerImpl$ReorderingBuffer;IZ)V","singleLeadMightHaveNonZeroFCD16(I)Z"]
  }
,
  {
    "className": "Lsun/text/normalizer/OutputInt;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/OutputInt.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/Replaceable;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Replaceable.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/ReplaceableString;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/ReplaceableString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/text/normalizer/Replaceable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","charAt(I)C","length()I"]
  }
,
  {
    "className": "Lsun/text/normalizer/ReplaceableUCharacterIterator;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/ReplaceableUCharacterIterator.class",
    "super": "Lsun/text/normalizer/UCharacterIterator;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","clone()Ljava/lang/Object;","getIndex()I","next()I","previous()I","setIndex(I)V"]
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2$1;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/text/normalizer/Trie2$ValueMapper;"],
    "safeForPreinit": "true",
    "invokedMethods": ["map(I)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2$Range;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2$Range.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","equals(Ljava/lang/Object;)Z","hashCode()I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2$Trie2Iterator;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2$Trie2Iterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Iterator;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/text/normalizer/Trie2;Lsun/text/normalizer/Trie2$ValueMapper;)V","hasNext()Z","next()Ljava/lang/Object;","next()Lsun/text/normalizer/Trie2$Range;","rangeEndLS(C)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2$ValueMapper;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2$ValueMapper.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Iterable;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["hashByte(II)I","hashInt(II)I","hashUChar32(II)I","initHash()I","iterator()Ljava/util/Iterator;","iterator(Lsun/text/normalizer/Trie2$ValueMapper;)Ljava/util/Iterator;","rangeEnd(III)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Trie2_16;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Trie2_16.class",
    "super": "Lsun/text/normalizer/Trie2;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["get(I)I","getFromU16SingleLead(C)I","iterator()Ljava/util/Iterator;","iterator(Lsun/text/normalizer/Trie2$ValueMapper;)Ljava/util/Iterator;"]
  }
,
  {
    "className": "Lsun/text/normalizer/UCharacter;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UCharacter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getCombiningClass(I)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/UCharacterIterator;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UCharacterIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","clone()Ljava/lang/Object;","getInstance(Ljava/lang/String;)Lsun/text/normalizer/UCharacterIterator;","moveCodePointIndex(I)I","nextCodePoint()I","previousCodePoint()I"]
  }
,
  {
    "className": "Lsun/text/normalizer/UCharacterProperty;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UCharacterProperty.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getRawSupplementary(CC)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/UTF16;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UTF16.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getLeadSurrogate(I)C","getTrailSurrogate(I)C","isLeadSurrogate(C)Z","isSurrogate(C)Z","isTrailSurrogate(C)Z","toString(I)Ljava/lang/String;","valueOf(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/text/normalizer/UnicodeSet$SpanCondition;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UnicodeSet$SpanCondition.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/normalizer/UnicodeSet;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UnicodeSet.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","<init>(II)V","<init>(Lsun/text/normalizer/UnicodeSet;)V","add(I)Lsun/text/normalizer/UnicodeSet;","add_unchecked(I)Lsun/text/normalizer/UnicodeSet;","checkFrozen()V","cloneAsThawed()Lsun/text/normalizer/UnicodeSet;","complement(II)Lsun/text/normalizer/UnicodeSet;","contains(I)Z","ensureBufferCapacity(I)V","ensureCapacity(I)V","findCodePoint(I)I","freeze()Lsun/text/normalizer/UnicodeSet;","isFrozen()Z","range(II)[I","retain([III)Lsun/text/normalizer/UnicodeSet;","retainAll(Lsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/UnicodeSet;","set(Lsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/UnicodeSet;","span(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;)I","span(Ljava/lang/CharSequence;Lsun/text/normalizer/UnicodeSet$SpanCondition;)I","spanAndCount(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;Lsun/text/normalizer/OutputInt;)I","spanBack(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;)I","spanCodePointsAndCount(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;Lsun/text/normalizer/OutputInt;)I","xor([III)Lsun/text/normalizer/UnicodeSet;"]
  }
,
  {
    "className": "Lsun/text/normalizer/UnicodeSetStringSpan$OffsetList;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UnicodeSetStringSpan$OffsetList.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","addOffset(I)V","addOffsetAndCount(II)V","clear()V","containsOffset(I)Z","hasCountAtOffset(II)Z","isEmpty()Z","popMinimum(Lsun/text/normalizer/OutputInt;)I","setMaxLength(I)V","shift(I)V"]
  }
,
  {
    "className": "Lsun/text/normalizer/UnicodeSetStringSpan;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/UnicodeSetStringSpan.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/text/normalizer/UnicodeSet;Ljava/util/ArrayList;I)V","addToSpanNotSet(I)V","contains(I)Z","makeSpanLengthByte(I)S","matches16(Ljava/lang/CharSequence;ILjava/lang/String;I)Z","matches16CPB(Ljava/lang/CharSequence;IILjava/lang/String;I)Z","needsStringSpanUTF16()Z","span(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;)I","spanAndCount(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;Lsun/text/normalizer/OutputInt;)I","spanBack(Ljava/lang/CharSequence;ILsun/text/normalizer/UnicodeSet$SpanCondition;)I","spanContainedAndCount(Ljava/lang/CharSequence;ILsun/text/normalizer/OutputInt;)I","spanNot(Ljava/lang/CharSequence;ILsun/text/normalizer/OutputInt;)I","spanNotBack(Ljava/lang/CharSequence;I)I","spanOne(Lsun/text/normalizer/UnicodeSet;Ljava/lang/CharSequence;II)I","spanOneBack(Lsun/text/normalizer/UnicodeSet;Ljava/lang/CharSequence;I)I","spanWithStrings(Ljava/lang/CharSequence;IILsun/text/normalizer/UnicodeSet$SpanCondition;)I"]
  }
,
  {
    "className": "Lsun/text/normalizer/Utility;",
    "module": "java.base",
    "source": "/java.base/sun/text/normalizer/Utility.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["hex(JI)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/text/resources/BreakIteratorInfo;",
    "module": "java.base",
    "source": "/java.base/sun/text/resources/BreakIteratorInfo.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/text/resources/BreakIteratorResources;",
    "module": "java.base",
    "source": "/java.base/sun/text/resources/BreakIteratorResources.class",
    "super": "Lsun/util/resources/BreakIteratorResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getBreakIteratorInfo()Ljava/util/ResourceBundle;"]
  }
,
  {
    "className": "Lsun/text/resources/CollationData;",
    "module": "java.base",
    "source": "/java.base/sun/text/resources/CollationData.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/resources/cldr/FormatData;",
    "module": "java.base",
    "source": "/java.base/sun/text/resources/cldr/FormatData.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/resources/cldr/FormatData_en;",
    "module": "java.base",
    "source": "/java.base/sun/text/resources/cldr/FormatData_en.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/text/spi/JavaTimeDateTimePatternProvider;",
    "module": "java.base",
    "source": "/java.base/sun/text/spi/JavaTimeDateTimePatternProvider.class",
    "super": "Ljava/util/spi/LocaleServiceProvider;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/util/PropertyResourceBundleCharset$PropertiesFileDecoder;",
    "module": "java.base",
    "source": "/java.base/sun/util/PropertyResourceBundleCharset$PropertiesFileDecoder.class",
    "super": "Ljava/nio/charset/CharsetDecoder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/util/PropertyResourceBundleCharset;Ljava/nio/charset/Charset;FF)V","decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;"]
  }
,
  {
    "className": "Lsun/util/PropertyResourceBundleCharset;",
    "module": "java.base",
    "source": "/java.base/sun/util/PropertyResourceBundleCharset.class",
    "super": "Ljava/nio/charset/Charset;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;[Ljava/lang/String;)V","<init>(Z)V","newDecoder()Ljava/nio/charset/CharsetDecoder;","newEncoder()Ljava/nio/charset/CharsetEncoder;"]
  }
,
  {
    "className": "Lsun/util/calendar/AbstractCalendar;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/AbstractCalendar.class",
    "super": "Lsun/util/calendar/CalendarSystem;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate;","getDayOfWeekDateAfter(JI)J","getDayOfWeekDateBefore(JI)J","getDayOfWeekDateOnOrBefore(JI)J","getEras()[Lsun/util/calendar/Era;","getNthDayOfWeek(IILsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate;","getTime(Lsun/util/calendar/CalendarDate;)J","getTimeOfDay(Lsun/util/calendar/CalendarDate;)J","getTimeOfDayValue(Lsun/util/calendar/CalendarDate;)J","normalizeTime(Lsun/util/calendar/CalendarDate;)I","setTimeOfDay(Lsun/util/calendar/CalendarDate;I)Lsun/util/calendar/CalendarDate;","validateTime(Lsun/util/calendar/CalendarDate;)Z"]
  }
,
  {
    "className": "Lsun/util/calendar/BaseCalendar$Date;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/BaseCalendar$Date.class",
    "super": "Lsun/util/calendar/CalendarDate;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/TimeZone;)V","getCachedJan1()J","getCachedYear()I","hit(I)Z","hit(J)Z","setCache(IJI)V","setNormalizedDate(III)Lsun/util/calendar/BaseCalendar$Date;"]
  }
,
  {
    "className": "Lsun/util/calendar/BaseCalendar;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/BaseCalendar.class",
    "super": "Lsun/util/calendar/AbstractCalendar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V","getDayOfWeek(Lsun/util/calendar/CalendarDate;)I","getDayOfWeekFromFixedDate(J)I","getDayOfYear(III)J","getDayOfYear(Lsun/util/calendar/CalendarDate;)J","getFixedDate(IIILsun/util/calendar/BaseCalendar$Date;)J","getFixedDate(Lsun/util/calendar/CalendarDate;)J","getGregorianYearFromFixedDate(J)I","getMonthLength(II)I","getMonthLength(Lsun/util/calendar/CalendarDate;)I","getYearLength(Lsun/util/calendar/CalendarDate;)I","isLeapYear(I)Z","isLeapYear(Lsun/util/calendar/CalendarDate;)Z","normalize(Lsun/util/calendar/CalendarDate;)Z","normalizeMonth(Lsun/util/calendar/CalendarDate;)V","validate(Lsun/util/calendar/CalendarDate;)Z"]
  }
,
  {
    "className": "Lsun/util/calendar/CalendarDate;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/CalendarDate.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/lang/Cloneable;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/TimeZone;)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getDayOfMonth()I","getDayOfWeek()I","getEra()Lsun/util/calendar/Era;","getHours()I","getMillis()I","getMinutes()I","getMonth()I","getSeconds()I","getTimeOfDay()J","getYear()I","getZone()Ljava/util/TimeZone;","getZoneOffset()I","hashCode()I","isDaylightTime()Z","isLeapYear()Z","isNormalized()Z","isStandardTime()Z","setDate(III)Lsun/util/calendar/CalendarDate;","setDayOfMonth(I)Lsun/util/calendar/CalendarDate;","setDayOfWeek(I)V","setDaylightSaving(I)V","setEra(Lsun/util/calendar/Era;)Lsun/util/calendar/CalendarDate;","setHours(I)Lsun/util/calendar/CalendarDate;","setLeapYear(Z)V","setMillis(I)Lsun/util/calendar/CalendarDate;","setMinutes(I)Lsun/util/calendar/CalendarDate;","setMonth(I)Lsun/util/calendar/CalendarDate;","setNormalized(Z)V","setSeconds(I)Lsun/util/calendar/CalendarDate;","setTimeOfDay(IIII)Lsun/util/calendar/CalendarDate;","setTimeOfDay(J)V","setYear(I)Lsun/util/calendar/CalendarDate;","setZone(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","setZoneOffset(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/calendar/CalendarSystem;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/CalendarSystem.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["forName(Ljava/lang/String;)Lsun/util/calendar/CalendarSystem;","getGregorianCalendar()Lsun/util/calendar/Gregorian;"]
  }
,
  {
    "className": "Lsun/util/calendar/CalendarUtils;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/CalendarUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["floorDivide(II)I","floorDivide(II[I)I","floorDivide(JJ)J","isGregorianLeapYear(I)Z","isJulianLeapYear(I)Z","mod(II)I","mod(JJ)J","sprintf0d(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer;","sprintf0d(Ljava/lang/StringBuilder;II)Ljava/lang/StringBuilder;"]
  }
,
  {
    "className": "Lsun/util/calendar/Era;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/Era.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["equals(Ljava/lang/Object;)Z","getAbbreviation()Ljava/lang/String;","getName()Ljava/lang/String;","getSince(Ljava/util/TimeZone;)J","getSinceDate()Lsun/util/calendar/CalendarDate;","hashCode()I","isLocalTime()Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/calendar/Gregorian$Date;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/Gregorian$Date.class",
    "super": "Lsun/util/calendar/BaseCalendar$Date;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","<init>(Ljava/util/TimeZone;)V","getNormalizedYear()I","setNormalizedYear(I)V"]
  }
,
  {
    "className": "Lsun/util/calendar/Gregorian;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/Gregorian.class",
    "super": "Lsun/util/calendar/BaseCalendar;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getCalendarDate()Lsun/util/calendar/CalendarDate;","getCalendarDate()Lsun/util/calendar/Gregorian$Date;","getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/Gregorian$Date;","newCalendarDate()Lsun/util/calendar/Gregorian$Date;","newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;"]
  }
,
  {
    "className": "Lsun/util/calendar/ImmutableGregorianDate;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/ImmutableGregorianDate.class",
    "super": "Lsun/util/calendar/BaseCalendar$Date;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getDayOfMonth()I","getDayOfWeek()I","getEra()Lsun/util/calendar/Era;","getHours()I","getMillis()I","getMinutes()I","getMonth()I","getNormalizedYear()I","getSeconds()I","getTimeOfDay()J","getYear()I","getZone()Ljava/util/TimeZone;","getZoneOffset()I","hashCode()I","isDaylightTime()Z","isLeapYear()Z","isNormalized()Z","isStandardTime()Z","setDayOfMonth(I)Lsun/util/calendar/CalendarDate;","setDayOfWeek(I)V","setDaylightSaving(I)V","setHours(I)Lsun/util/calendar/CalendarDate;","setLeapYear(Z)V","setMillis(I)Lsun/util/calendar/CalendarDate;","setMinutes(I)Lsun/util/calendar/CalendarDate;","setMonth(I)Lsun/util/calendar/CalendarDate;","setNormalized(Z)V","setNormalizedYear(I)V","setSeconds(I)Lsun/util/calendar/CalendarDate;","setTimeOfDay(J)V","setZone(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","setZoneOffset(I)V","toString()Ljava/lang/String;","unsupported()V"]
  }
,
  {
    "className": "Lsun/util/calendar/JulianCalendar$Date;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/JulianCalendar$Date.class",
    "super": "Lsun/util/calendar/BaseCalendar$Date;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TimeZone;)V","getNormalizedYear()I","setKnownEra(Lsun/util/calendar/Era;)V","setNormalizedYear(I)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/calendar/JulianCalendar;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/JulianCalendar.class",
    "super": "Lsun/util/calendar/BaseCalendar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","getCalendarDate(JLjava/util/TimeZone;)Lsun/util/calendar/JulianCalendar$Date;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/JulianCalendar$Date;","getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V","getDayOfWeek(Lsun/util/calendar/CalendarDate;)I","getFixedDate(IIILsun/util/calendar/BaseCalendar$Date;)J","isLeapYear(I)Z","newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/CalendarDate;","newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/JulianCalendar$Date;"]
  }
,
  {
    "className": "Lsun/util/calendar/LocalGregorianCalendar$Date;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/LocalGregorianCalendar$Date.class",
    "super": "Lsun/util/calendar/BaseCalendar$Date;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/util/TimeZone;)V","getNormalizedYear()I","setEra(Lsun/util/calendar/Era;)Lsun/util/calendar/LocalGregorianCalendar$Date;","setLocalEra(Lsun/util/calendar/Era;)V","setLocalYear(I)V","setNormalizedYear(I)V","setYear(I)Lsun/util/calendar/CalendarDate;","setYear(I)Lsun/util/calendar/LocalGregorianCalendar$Date;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/calendar/LocalGregorianCalendar;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/LocalGregorianCalendar.class",
    "super": "Lsun/util/calendar/BaseCalendar;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["adjustYear(Lsun/util/calendar/LocalGregorianCalendar$Date;JI)Lsun/util/calendar/LocalGregorianCalendar$Date;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/CalendarDate;","getCalendarDate(JLsun/util/calendar/CalendarDate;)Lsun/util/calendar/LocalGregorianCalendar$Date;","getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V","isLeapYear(I)Z","newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/LocalGregorianCalendar$Date;","normalize(Lsun/util/calendar/CalendarDate;)Z","normalizeMonth(Lsun/util/calendar/CalendarDate;)V","normalizeYear(Lsun/util/calendar/CalendarDate;)V","validate(Lsun/util/calendar/CalendarDate;)Z","validateEra(Lsun/util/calendar/Era;)Z"]
  }
,
  {
    "className": "Lsun/util/calendar/ZoneInfo;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/ZoneInfo.class",
    "super": "Ljava/util/TimeZone;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;I)V","<init>(Ljava/lang/String;III[J[I[IZ)V","clone()Ljava/lang/Object;","equals(Ljava/lang/Object;)Z","getAliasTable()Ljava/util/Map;","getAvailableIDs()[Ljava/lang/String;","getDSTSavings()I","getLastRawOffset()I","getLastRule()Ljava/util/SimpleTimeZone;","getLastRuleInstance()Ljava/util/SimpleTimeZone;","getOffset(J)I","getOffsets(J[I)I","getOffsets(J[II)I","getOffsetsByStandard(J[I)I","getOffsetsByWall(J[I)I","getRawOffset()I","getTimeZone(Ljava/lang/String;)Ljava/util/TimeZone;","getTransitionIndex(JI)I","hashCode()I","isDirty()Z","toString()Ljava/lang/String;","useDaylightTime()Z"]
  }
,
  {
    "className": "Lsun/util/calendar/ZoneInfoFile$Checksum;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/ZoneInfoFile$Checksum.class",
    "super": "Ljava/util/zip/CRC32;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","update(I)V","update(J)V"]
  }
,
  {
    "className": "Lsun/util/calendar/ZoneInfoFile$ZoneOffsetTransitionRule;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/ZoneInfoFile$ZoneOffsetTransitionRule.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/io/DataInput;)V","adjust(JII)J","getTransitionEpochSecond(I)J","isLeapYear(I)Z","lengthOfMonth(II)I","nextOrSame(JI)J","previousOrSame(JI)J","toEpochDay(III)J"]
  }
,
  {
    "className": "Lsun/util/calendar/ZoneInfoFile;",
    "module": "java.base",
    "source": "/java.base/sun/util/calendar/ZoneInfoFile.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["addTrans([JI[IIJII)I","getAliasMap()Ljava/util/Map;","getCustomTimeZone(Ljava/lang/String;I)Lsun/util/calendar/ZoneInfo;","getStandardOffset([J[IJ)I","getYear(JI)I","getZoneIds()[Ljava/lang/String;","getZoneInfo(Ljava/io/DataInput;Ljava/lang/String;)Lsun/util/calendar/ZoneInfo;","getZoneInfo(Ljava/lang/String;)Lsun/util/calendar/ZoneInfo;","getZoneInfo(Ljava/lang/String;[J[I[J[I[Lsun/util/calendar/ZoneInfoFile$ZoneOffsetTransitionRule;)Lsun/util/calendar/ZoneInfo;","getZoneInfo0(Ljava/lang/String;)Lsun/util/calendar/ZoneInfo;","indexOf([IIII)I","readEpochSec(Ljava/io/DataInput;)J","readOffset(Ljava/io/DataInput;)I","toCustomID(I)Ljava/lang/String;","useOldMapping()Z"]
  }
,
  {
    "className": "Lsun/util/cldr/CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRBaseLocaleDataMetaInfo$TZCanonicalIDMapHolder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/cldr/CLDRBaseLocaleDataMetaInfo;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRBaseLocaleDataMetaInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleDataMetaInfo;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["availableLanguageTags(Ljava/lang/String;)Ljava/lang/String;","getLanguageAliasMap()Ljava/util/Map;","parentLocales()Ljava/util/Map;","tzCanonicalIDs()Ljava/util/Map;"]
  }
,
  {
    "className": "Lsun/util/cldr/CLDRCalendarDataProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRCalendarDataProviderImpl.class",
    "super": "Lsun/util/locale/provider/CalendarDataProviderImpl;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["findValue(Ljava/lang/String;Ljava/util/Locale;)I","getFirstDayOfWeek(Ljava/util/Locale;)I","getMinimalDaysInFirstWeek(Ljava/util/Locale;)I","retrieveInteger(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;"]
  }
,
  {
    "className": "Lsun/util/cldr/CLDRCalendarNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRCalendarNameProviderImpl.class",
    "super": "Lsun/util/locale/provider/CalendarNameProviderImpl;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/cldr/CLDRLocaleProviderAdapter;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRLocaleProviderAdapter.class",
    "super": "Lsun/util/locale/provider/JRELocaleProviderAdapter;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["applyAliases(Ljava/util/Locale;)Ljava/util/Locale;","applyParentLocales(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;","canonicalTZID(Ljava/lang/String;)Ljava/util/Optional;","createLanguageTagSet(Ljava/lang/String;)Ljava/util/Set;","getAdapterType()Lsun/util/locale/provider/LocaleProviderAdapter$Type;","getCandidateLocales(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/List;","getCollatorProvider()Ljava/text/spi/CollatorProvider;","getParentLocale(Ljava/util/Locale;)Ljava/util/Locale;","getTimeZoneNameProvider()Ljava/util/spi/TimeZoneNameProvider;","lambda$getTimeZoneNameProvider$2()Ljava/util/spi/TimeZoneNameProvider;"]
  }
,
  {
    "className": "Lsun/util/cldr/CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRTimeZoneNameProviderImpl$AVAILABLE_IDS.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/cldr/CLDRTimeZoneNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/cldr/CLDRTimeZoneNameProviderImpl.class",
    "super": "Lsun/util/locale/provider/TimeZoneNameProviderImpl;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","deriveFallbackName([Ljava/lang/String;ILjava/util/Locale;Z)V","deriveFallbackNames([Ljava/lang/String;Ljava/util/Locale;)V","exists([Ljava/lang/String;I)Z","getDisplayNameArray(Ljava/lang/String;Ljava/util/Locale;)[Ljava/lang/String;","getZoneStrings(Ljava/util/Locale;)[[Ljava/lang/String;","mapChineseLocale(Ljava/util/Locale;)Ljava/util/Locale;","regionFormatFallback([Ljava/lang/String;ILjava/util/Locale;)Z","toGMTFormat(Ljava/lang/String;ZLjava/util/Locale;)Ljava/lang/String;","typeFallback([Ljava/lang/String;I)Z"]
  }
,
  {
    "className": "Lsun/util/locale/BaseLocale$Cache;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/BaseLocale$Cache.class",
    "super": "Lsun/util/locale/LocaleObjectCache;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createObject(Ljava/lang/Object;)Ljava/lang/Object;","createObject(Lsun/util/locale/BaseLocale$Key;)Lsun/util/locale/BaseLocale;","normalizeKey(Ljava/lang/Object;)Ljava/lang/Object;","normalizeKey(Lsun/util/locale/BaseLocale$Key;)Lsun/util/locale/BaseLocale$Key;"]
  }
,
  {
    "className": "Lsun/util/locale/BaseLocale$Key;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/BaseLocale$Key.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","getBaseLocale()Lsun/util/locale/BaseLocale;","hashCode()I","hashCode(Lsun/util/locale/BaseLocale;)I","normalize(Lsun/util/locale/BaseLocale$Key;)Lsun/util/locale/BaseLocale$Key;"]
  }
,
  {
    "className": "Lsun/util/locale/BaseLocale;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/BaseLocale.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V","equals(Ljava/lang/Object;)Z","getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lsun/util/locale/BaseLocale;","getLanguage()Ljava/lang/String;","getRegion()Ljava/lang/String;","getScript()Ljava/lang/String;","getVariant()Ljava/lang/String;","hashCode()I","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/Extension;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/Extension.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(C)V","<init>(CLjava/lang/String;)V","getID()Ljava/lang/String;","getValue()Ljava/lang/String;","setValue(Ljava/lang/String;)V","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/InternalLocaleBuilder$CaseInsensitiveChar;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/InternalLocaleBuilder$CaseInsensitiveChar.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(C)V","<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","value()C"]
  }
,
  {
    "className": "Lsun/util/locale/InternalLocaleBuilder$CaseInsensitiveString;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/InternalLocaleBuilder$CaseInsensitiveString.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","equals(Ljava/lang/Object;)Z","hashCode()I","value()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/InternalLocaleBuilder;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/InternalLocaleBuilder.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","checkVariants(Ljava/lang/String;Ljava/lang/String;)I","clear()Lsun/util/locale/InternalLocaleBuilder;","clearExtensions()Lsun/util/locale/InternalLocaleBuilder;","getBaseLocale()Lsun/util/locale/BaseLocale;","getLocaleExtensions()Lsun/util/locale/LocaleExtensions;","removePrivateuseVariant(Ljava/lang/String;)Ljava/lang/String;","setExtensions(Ljava/util/List;Ljava/lang/String;)Lsun/util/locale/InternalLocaleBuilder;","setLanguageTag(Lsun/util/locale/LanguageTag;)Lsun/util/locale/InternalLocaleBuilder;","setLocale(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)Lsun/util/locale/InternalLocaleBuilder;","setRegion(Ljava/lang/String;)Lsun/util/locale/InternalLocaleBuilder;","setUnicodeLocaleExtension(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/util/locale/LanguageTag;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LanguageTag.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","canonicalizeExtension(Ljava/lang/String;)Ljava/lang/String;","canonicalizeLanguage(Ljava/lang/String;)Ljava/lang/String;","canonicalizeRegion(Ljava/lang/String;)Ljava/lang/String;","canonicalizeScript(Ljava/lang/String;)Ljava/lang/String;","getExtensions()Ljava/util/List;","getExtlangs()Ljava/util/List;","getLanguage()Ljava/lang/String;","getPrivateuse()Ljava/lang/String;","getRegion()Ljava/lang/String;","getScript()Ljava/lang/String;","getVariants()Ljava/util/List;","isExtensionSingleton(Ljava/lang/String;)Z","isExtensionSubtag(Ljava/lang/String;)Z","isExtlang(Ljava/lang/String;)Z","isLanguage(Ljava/lang/String;)Z","isPrivateusePrefix(Ljava/lang/String;)Z","isPrivateusePrefixChar(C)Z","isPrivateuseSubtag(Ljava/lang/String;)Z","isRegion(Ljava/lang/String;)Z","isScript(Ljava/lang/String;)Z","isVariant(Ljava/lang/String;)Z","parse(Ljava/lang/String;Lsun/util/locale/ParseStatus;)Lsun/util/locale/LanguageTag;","parseExtensions(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseExtlangs(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseLanguage(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseLocale(Lsun/util/locale/BaseLocale;Lsun/util/locale/LocaleExtensions;)Lsun/util/locale/LanguageTag;","parsePrivateuse(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseRegion(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseScript(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","parseVariants(Lsun/util/locale/StringTokenIterator;Lsun/util/locale/ParseStatus;)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/LocaleExtensions;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LocaleExtensions.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/Map;Ljava/util/Set;Ljava/util/Map;)V","equals(Ljava/lang/Object;)Z","getExtension(Ljava/lang/Character;)Lsun/util/locale/Extension;","getID()Ljava/lang/String;","getKeys()Ljava/util/Set;","getUnicodeLocaleType(Ljava/lang/String;)Ljava/lang/String;","hashCode()I","isEmpty()Z","toID(Ljava/util/SortedMap;)Ljava/lang/String;","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/LocaleObjectCache$CacheEntry;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LocaleObjectCache$CacheEntry.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","getKey()Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/locale/LocaleObjectCache;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LocaleObjectCache.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["cleanStaleEntries()V","get(Ljava/lang/Object;)Ljava/lang/Object;","normalizeKey(Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/locale/LocaleSyntaxException;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LocaleSyntaxException.class",
    "super": "Ljava/lang/Exception;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;)V","<init>(Ljava/lang/String;I)V","getErrorIndex()I"]
  }
,
  {
    "className": "Lsun/util/locale/LocaleUtils;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/LocaleUtils.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["caseIgnoreMatch(Ljava/lang/String;Ljava/lang/String;)Z","isAlpha(C)Z","isAlphaNumeric(C)Z","isAlphaNumericString(Ljava/lang/String;)Z","isAlphaString(Ljava/lang/String;)Z","isEmpty(Ljava/lang/String;)Z","isEmpty(Ljava/util/List;)Z","isEmpty(Ljava/util/Map;)Z","isEmpty(Ljava/util/Set;)Z","isLower(C)Z","isNumeric(C)Z","isNumericString(Ljava/lang/String;)Z","isUpper(C)Z","toLower(C)C","toLowerString(Ljava/lang/String;)Ljava/lang/String;","toTitleString(Ljava/lang/String;)Ljava/lang/String;","toUpper(C)C","toUpperString(Ljava/lang/String;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/ParseStatus;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/ParseStatus.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V","isError()Z","reset()V"]
  }
,
  {
    "className": "Lsun/util/locale/StringTokenIterator;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/StringTokenIterator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/String;)V","current()Ljava/lang/String;","currentEnd()I","currentStart()I","hasNext()Z","isDone()Z","next()Ljava/lang/String;","nextDelimiter(I)I","setStart(I)Lsun/util/locale/StringTokenIterator;"]
  }
,
  {
    "className": "Lsun/util/locale/UnicodeLocaleExtension;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/UnicodeLocaleExtension.class",
    "super": "Lsun/util/locale/Extension;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/SortedSet;Ljava/util/SortedMap;)V","getID()Ljava/lang/String;","getUnicodeLocaleAttributes()Ljava/util/Set;","getUnicodeLocaleKeys()Ljava/util/Set;","getUnicodeLocaleType(Ljava/lang/String;)Ljava/lang/String;","getValue()Ljava/lang/String;","isAttribute(Ljava/lang/String;)Z","isKey(Ljava/lang/String;)Z","isSingletonChar(C)Z","toString()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/AvailableLanguageTags;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/AvailableLanguageTags.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/BreakIteratorProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/BreakIteratorProviderImpl.class",
    "super": "Ljava/text/spi/BreakIteratorProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarDataProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarDataProviderImpl.class",
    "super": "Ljava/util/spi/CalendarDataProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNameGetter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNameGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getObject(Ljava/util/spi/CalendarNameProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;","getObject(Ljava/util/spi/LocaleServiceProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNamesMapGetter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarDataUtility$CalendarFieldValueNamesMapGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getObject(Ljava/util/spi/CalendarNameProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;","getObject(Ljava/util/spi/LocaleServiceProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarDataUtility$CalendarWeekParameterGetter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarDataUtility$CalendarWeekParameterGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getObject(Ljava/util/spi/CalendarDataProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Integer;","getObject(Ljava/util/spi/LocaleServiceProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarDataUtility;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarDataUtility.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["findRegionOverride(Ljava/util/Locale;)Ljava/util/Locale;","normalizeCalendarType(Ljava/lang/String;)Ljava/lang/String;","retrieveFieldValueName(Ljava/lang/String;IIILjava/util/Locale;)Ljava/lang/String;","retrieveFieldValueNames(Ljava/lang/String;IILjava/util/Locale;)Ljava/util/Map;","retrieveFirstDayOfWeek(Ljava/util/Locale;)I","retrieveJavaTimeFieldValueName(Ljava/lang/String;IIILjava/util/Locale;)Ljava/lang/String;","retrieveJavaTimeFieldValueNames(Ljava/lang/String;IILjava/util/Locale;)Ljava/util/Map;","retrieveMinimalDaysInFirstWeek(Ljava/util/Locale;)I"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarNameProviderImpl$LengthBasedComparator;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarNameProviderImpl$LengthBasedComparator.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/util/Comparator;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["compare(Ljava/lang/Object;Ljava/lang/Object;)I","compare(Ljava/lang/String;Ljava/lang/String;)I"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CalendarNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CalendarNameProviderImpl.class",
    "super": "Ljava/util/spi/CalendarNameProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["getBaseStyle(I)I","getDisplayName(Ljava/lang/String;IIILjava/util/Locale;)Ljava/lang/String;","getDisplayNameImpl(Ljava/lang/String;IIILjava/util/Locale;Z)Ljava/lang/String;","getDisplayNames(Ljava/lang/String;IILjava/util/Locale;)Ljava/util/Map;","getDisplayNamesImpl(Ljava/lang/String;IILjava/util/Locale;Z)Ljava/util/Map;","getJavaTimeDisplayName(Ljava/lang/String;IIILjava/util/Locale;)Ljava/lang/String;","getJavaTimeDisplayNames(Ljava/lang/String;IILjava/util/Locale;)Ljava/util/Map;","getResourceKey(Ljava/lang/String;IIZ)Ljava/lang/String;","getResourceKeyFor(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/lang/String;IIZ)Ljava/lang/String;","hasDuplicates([Ljava/lang/String;)Z","toStyleName(I)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CollatorProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CollatorProviderImpl.class",
    "super": "Ljava/text/spi/CollatorProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getInstance(Ljava/util/Locale;)Ljava/text/Collator;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/CurrencyNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/CurrencyNameProviderImpl.class",
    "super": "Ljava/util/spi/CurrencyNameProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["getDisplayName(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;","getString(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;","getSymbol(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/DateFormatProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/DateFormatProviderImpl.class",
    "super": "Ljava/text/spi/DateFormatProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getDateInstance(ILjava/util/Locale;)Ljava/text/DateFormat;","getDateTimeInstance(IILjava/util/Locale;)Ljava/text/DateFormat;","getInstance(IILjava/util/Locale;)Ljava/text/DateFormat;","getTimeInstance(ILjava/util/Locale;)Ljava/text/DateFormat;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/DateFormatSymbolsProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/DateFormatSymbolsProviderImpl.class",
    "super": "Ljava/text/spi/DateFormatSymbolsProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getInstance(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/DecimalFormatSymbolsProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.class",
    "super": "Ljava/text/spi/DecimalFormatSymbolsProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getInstance(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/JRELocaleProviderAdapter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/JRELocaleProviderAdapter.class",
    "super": "Lsun/util/locale/provider/LocaleProviderAdapter;",
    "interfaces": ["Lsun/util/locale/provider/ResourceBundleBasedAdapter;"],
    "safeForPreinit": "true",
    "invokedMethods": ["createLanguageTagSet(Ljava/lang/String;)Ljava/util/Set;","getAdapterType()Lsun/util/locale/provider/LocaleProviderAdapter$Type;","getCandidateLocales(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/List;","getCollatorProvider()Ljava/text/spi/CollatorProvider;","getDateFormatProvider()Ljava/text/spi/DateFormatProvider;","getDateFormatSymbolsProvider()Ljava/text/spi/DateFormatSymbolsProvider;","getDecimalFormatSymbolsProvider()Ljava/text/spi/DecimalFormatSymbolsProvider;","getJavaTimeDateTimePatternProvider()Lsun/text/spi/JavaTimeDateTimePatternProvider;","getLanguageTagSet(Ljava/lang/String;)Ljava/util/Set;","getLocaleData()Lsun/util/resources/LocaleData;","getLocaleResources(Ljava/util/Locale;)Lsun/util/locale/provider/LocaleResources;","getNumberFormatProvider()Ljava/text/spi/NumberFormatProvider;","getTimeZoneNameProvider()Ljava/util/spi/TimeZoneNameProvider;","lambda$getCollatorProvider$1()Ljava/text/spi/CollatorProvider;","lambda$getDateFormatProvider$2()Ljava/text/spi/DateFormatProvider;","lambda$getDateFormatSymbolsProvider$3()Ljava/text/spi/DateFormatSymbolsProvider;","lambda$getDecimalFormatSymbolsProvider$4()Ljava/text/spi/DecimalFormatSymbolsProvider;","lambda$getJavaTimeDateTimePatternProvider$12()Lsun/text/spi/JavaTimeDateTimePatternProvider;","lambda$getNumberFormatProvider$5()Ljava/text/spi/NumberFormatProvider;","lambda$getTimeZoneNameProvider$8()Ljava/util/spi/TimeZoneNameProvider;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/JavaTimeDateTimePatternImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/JavaTimeDateTimePatternImpl.class",
    "super": "Lsun/text/spi/JavaTimeDateTimePatternProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getJavaTimeDateTimePattern(IILjava/lang/String;Ljava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleDataMetaInfo;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleDataMetaInfo.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleNameProviderImpl.class",
    "super": "Ljava/util/spi/LocaleNameProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleProviderAdapter$Type;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleProviderAdapter$Type.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getTextResourcesPackage()Ljava/lang/String;","getUtilResourcesPackage()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleProviderAdapter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleProviderAdapter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["forJRE()Lsun/util/locale/provider/LocaleProviderAdapter;","forType(Lsun/util/locale/provider/LocaleProviderAdapter$Type;)Lsun/util/locale/provider/LocaleProviderAdapter;","getAdapter(Ljava/lang/Class;Ljava/util/Locale;)Lsun/util/locale/provider/LocaleProviderAdapter;","getAdapterPreference()Ljava/util/List;","getResourceBundleBased()Lsun/util/locale/provider/LocaleProviderAdapter;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleResources$ResourceReference;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleResources$ResourceReference.class",
    "super": "Ljava/lang/ref/SoftReference;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V","getCacheKey()Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleResources;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleResources.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/ResourceBundleBasedAdapter;Ljava/util/Locale;)V","getCalendarData(Ljava/lang/String;)Ljava/lang/String;","getCalendarNames(Ljava/lang/String;)[Ljava/lang/String;","getCollationData()Ljava/lang/String;","getCurrencyName(Ljava/lang/String;)Ljava/lang/String;","getDateTimePattern(IILjava/util/Calendar;)Ljava/lang/String;","getDateTimePattern(Ljava/lang/String;IILjava/lang/String;)Ljava/lang/String;","getDateTimePattern(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;","getDecimalFormatSymbolsData()[Ljava/lang/Object;","getJavaTimeDateTimePattern(IILjava/lang/String;)Ljava/lang/String;","getJavaTimeFormatData()Ljava/util/ResourceBundle;","getJavaTimeNames(Ljava/lang/String;)[Ljava/lang/String;","getNumberPatterns()[Ljava/lang/String;","getTimeZoneNames(Ljava/lang/String;)Ljava/lang/Object;","getZoneIDs()Ljava/util/Set;","getZoneStrings()[[Ljava/lang/String;","lambda$getZoneStrings$0(Ljava/lang/String;)Z","lambda$getZoneStrings$1(Ljava/util/Set;Lsun/util/resources/TimeZoneNamesBundle;Ljava/util/Set;Ljava/lang/String;)V","removeEmptyReferences()V","trace(Ljava/lang/String;[Ljava/lang/Object;)V"]
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/LocaleServiceProviderPool;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/LocaleServiceProviderPool.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/NumberFormatProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/NumberFormatProviderImpl.class",
    "super": "Ljava/text/spi/NumberFormatProvider;",
    "interfaces": ["Lsun/util/locale/provider/AvailableLanguageTags;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","adjustForCurrencyDefaultFractionDigits(Ljava/text/DecimalFormat;Ljava/text/DecimalFormatSymbols;)V","getCurrencyInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getInstance(Ljava/util/Locale;I)Ljava/text/NumberFormat;","getIntegerInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getNumberInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;","getPercentInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/ResourceBundleBasedAdapter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/ResourceBundleBasedAdapter.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/locale/provider/TimeZoneNameProviderImpl;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/TimeZoneNameProviderImpl.class",
    "super": "Ljava/util/spi/TimeZoneNameProvider;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;Ljava/util/Set;)V","getDisplayName(Ljava/lang/String;ZILjava/util/Locale;)Ljava/lang/String;","getDisplayNameArray(Ljava/lang/String;Ljava/util/Locale;)[Ljava/lang/String;","getGenericDisplayName(Ljava/lang/String;ILjava/util/Locale;)Ljava/lang/String;","getZoneStrings(Ljava/util/Locale;)[[Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleServiceProviderPool$LocalizedObjectGetter;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["examineAliases(Ljava/util/spi/TimeZoneNameProvider;Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;)Ljava/lang/String;","getName(Ljava/util/spi/TimeZoneNameProvider;Ljava/util/Locale;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;","getObject(Ljava/util/spi/LocaleServiceProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;","getObject(Ljava/util/spi/TimeZoneNameProvider;Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/locale/provider/TimeZoneNameUtility;",
    "module": "java.base",
    "source": "/java.base/sun/util/locale/provider/TimeZoneNameUtility.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["canonicalTZID(Ljava/lang/String;)Ljava/util/Optional;","convertLDMLShortID(Ljava/lang/String;)Ljava/util/Optional;","getZoneStrings(Ljava/util/Locale;)[[Ljava/lang/String;","loadZoneStrings(Ljava/util/Locale;)[[Ljava/lang/String;","retrieveDisplayName(Ljava/lang/String;ZILjava/util/Locale;)Ljava/lang/String;","retrieveDisplayNames(Ljava/lang/String;Ljava/util/Locale;)[Ljava/lang/String;","retrieveDisplayNamesImpl(Ljava/lang/String;Ljava/util/Locale;)[Ljava/lang/String;","retrieveGenericDisplayName(Ljava/lang/String;ILjava/util/Locale;)Ljava/lang/String;"]
  }
,
  {
    "className": "Lsun/util/logging/PlatformLogger$Bridge;",
    "module": "java.base",
    "source": "/java.base/sun/util/logging/PlatformLogger$Bridge.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["convert(Ljava/lang/System$Logger;)Lsun/util/logging/PlatformLogger$Bridge;"]
  }
,
  {
    "className": "Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;",
    "module": "java.base",
    "source": "/java.base/sun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>()V"]
  }
,
  {
    "className": "Lsun/util/logging/PlatformLogger$ConfigurableBridge;",
    "module": "java.base",
    "source": "/java.base/sun/util/logging/PlatformLogger$ConfigurableBridge.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","getLoggerConfiguration(Lsun/util/logging/PlatformLogger$Bridge;)Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;"]
  }
,
  {
    "className": "Lsun/util/logging/PlatformLogger$Level;",
    "module": "java.base",
    "source": "/java.base/sun/util/logging/PlatformLogger$Level.class",
    "super": "Ljava/lang/Enum;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["intValue()I","systemLevel()Ljava/lang/System$Logger$Level;","valueOf(I)Lsun/util/logging/PlatformLogger$Level;","valueOf(Ljava/lang/String;)Lsun/util/logging/PlatformLogger$Level;","values()[Lsun/util/logging/PlatformLogger$Level;"]
  }
,
  {
    "className": "Lsun/util/logging/PlatformLogger;",
    "module": "java.base",
    "source": "/java.base/sun/util/logging/PlatformLogger.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/util/logging/PlatformLogger$Bridge;)V","fine(Ljava/lang/String;[Ljava/lang/Object;)V","finer(Ljava/lang/String;)V","getLogger(Ljava/lang/String;)Lsun/util/logging/PlatformLogger;","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","toPlatformLevel(Ljava/lang/System$Logger$Level;)Lsun/util/logging/PlatformLogger$Level;","warning(Ljava/lang/String;)V"]
  }
,
  {
    "className": "Lsun/util/logging/internal/LoggingProviderImpl$JULWrapper;",
    "module": "java.logging",
    "source": "/java.logging/sun/util/logging/internal/LoggingProviderImpl$JULWrapper.class",
    "super": "Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;",
    "interfaces": ["Ljava/lang/System$Logger;","Lsun/util/logging/PlatformLogger$Bridge;","Lsun/util/logging/PlatformLogger$ConfigurableBridge;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Ljava/util/logging/Logger;)V","equals(Ljava/lang/Object;)Z","getLoggerConfiguration()Lsun/util/logging/PlatformLogger$ConfigurableBridge$LoggerConfiguration;","getPlatformLevel()Lsun/util/logging/PlatformLogger$Level;","hashCode()I","isLoggable(Ljava/lang/System$Logger$Level;)Z","isLoggable(Lsun/util/logging/PlatformLogger$Level;)Z","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;)V","log(Ljava/lang/System$Logger$Level;Ljava/util/function/Supplier;Ljava/lang/Throwable;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;[Ljava/lang/Object;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","log(Lsun/util/logging/PlatformLogger$Level;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Ljava/util/function/Supplier;)V","logp(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Supplier;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/lang/String;Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/Throwable;)V","logrb(Lsun/util/logging/PlatformLogger$Level;Ljava/util/ResourceBundle;Ljava/lang/String;[Ljava/lang/Object;)V","of(Ljava/util/logging/Logger;)Lsun/util/logging/internal/LoggingProviderImpl$JULWrapper;","setPlatformLevel(Lsun/util/logging/PlatformLogger$Level;)V","toJUL(Ljava/lang/System$Logger$Level;)Ljava/util/logging/Level;","toJUL(Lsun/util/logging/PlatformLogger$Level;)Ljava/util/logging/Level;"]
  }
,
  {
    "className": "Lsun/util/logging/internal/LoggingProviderImpl$LogManagerAccess;",
    "module": "java.logging",
    "source": "/java.logging/sun/util/logging/internal/LoggingProviderImpl$LogManagerAccess.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/logging/internal/LoggingProviderImpl;",
    "module": "java.logging",
    "source": "/java.logging/sun/util/logging/internal/LoggingProviderImpl.class",
    "super": "Ljdk/internal/logger/DefaultLoggerFinder;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>()V","demandJULLoggerFor(Ljava/lang/String;Ljava/lang/Module;)Ljava/util/logging/Logger;","demandLoggerFor(Ljava/lang/String;Ljava/lang/Module;)Ljava/lang/System$Logger;","setLogManagerAccess(Lsun/util/logging/internal/LoggingProviderImpl$LogManagerAccess;)V"]
  }
,
  {
    "className": "Lsun/util/logging/resources/logging;",
    "module": "java.logging",
    "source": "/java.logging/sun/util/logging/resources/logging.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/BreakIteratorResourceBundle;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/BreakIteratorResourceBundle.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;","handleKeySet()Ljava/util/Set;","lambda$getResourceAsStream$0(Ljava/lang/String;)Ljava/io/InputStream;"]
  }
,
  {
    "className": "Lsun/util/resources/Bundles$Strategy;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/Bundles$Strategy.class",
    "super": "null",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/Bundles;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/Bundles.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["loadBundleOf(Ljava/lang/String;Ljava/util/Locale;Lsun/util/resources/Bundles$Strategy;)Ljava/util/ResourceBundle;","of(Ljava/lang/String;Ljava/util/Locale;Lsun/util/resources/Bundles$Strategy;)Ljava/util/ResourceBundle;"]
  }
,
  {
    "className": "Lsun/util/resources/LocaleData$1;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/LocaleData$1.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Locale;)V","run()Ljava/lang/Object;","run()Ljava/util/ResourceBundle;"]
  }
,
  {
    "className": "Lsun/util/resources/LocaleData$2;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/LocaleData$2.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Ljava/security/PrivilegedAction;"],
    "safeForPreinit": "true",
    "invokedMethods": ["<init>(Ljava/lang/String;Ljava/util/Locale;)V","run()Ljava/lang/Object;","run()Lsun/util/resources/OpenListResourceBundle;"]
  }
,
  {
    "className": "Lsun/util/resources/LocaleData$LocaleDataStrategy;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/LocaleData$LocaleDataStrategy.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/resources/Bundles$Strategy;"],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/LocaleData$SupplementaryStrategy;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/LocaleData$SupplementaryStrategy.class",
    "super": "Lsun/util/resources/LocaleData$LocaleDataStrategy;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/LocaleData;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/LocaleData.class",
    "super": "Ljava/lang/Object;",
    "interfaces": [],
    "safeForPreinit": "false",
    "unsafeReason": "null",
    "invokedMethods": ["<init>(Lsun/util/locale/provider/LocaleProviderAdapter$Type;)V","getBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;","getCalendarData(Ljava/util/Locale;)Ljava/util/ResourceBundle;","getCollationData(Ljava/util/Locale;)Ljava/util/ResourceBundle;","getCurrencyNames(Ljava/util/Locale;)Lsun/util/resources/OpenListResourceBundle;","getDateFormatData(Ljava/util/Locale;)Ljava/util/ResourceBundle;","getNumberFormatData(Ljava/util/Locale;)Ljava/util/ResourceBundle;","getSupplementary(Ljava/lang/String;Ljava/util/Locale;)Lsun/util/resources/OpenListResourceBundle;","getTimeZoneNames(Ljava/util/Locale;)Lsun/util/resources/TimeZoneNamesBundle;","setSupplementary(Ljava/lang/String;Lsun/util/resources/ParallelListResourceBundle;)Z","setSupplementary(Lsun/util/resources/ParallelListResourceBundle;)V"]
  }
,
  {
    "className": "Lsun/util/resources/OpenListResourceBundle;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/OpenListResourceBundle.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createSet()Ljava/util/Set;","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;","handleKeySet()Ljava/util/Set;","keySet()Ljava/util/Set;","loadLookup()V","loadLookupTablesIfNecessary()V"]
  }
,
  {
    "className": "Lsun/util/resources/ParallelListResourceBundle;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/ParallelListResourceBundle.class",
    "super": "Ljava/util/ResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/TimeZoneNames;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/TimeZoneNames.class",
    "super": "Lsun/util/resources/TimeZoneNamesBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/TimeZoneNamesBundle;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/TimeZoneNamesBundle.class",
    "super": "Lsun/util/resources/OpenListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": ["createSet()Ljava/util/Set;","handleGetObject(Ljava/lang/String;)Ljava/lang/Object;"]
  }
,
  {
    "className": "Lsun/util/resources/TimeZoneNames_en;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/TimeZoneNames_en.class",
    "super": "Lsun/util/resources/TimeZoneNamesBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/CalendarData;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/CalendarData.class",
    "super": "Ljava/util/ListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/CurrencyNames;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/CurrencyNames.class",
    "super": "Lsun/util/resources/OpenListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/CurrencyNames_en;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/CurrencyNames_en.class",
    "super": "Lsun/util/resources/OpenListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/LocaleNames;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/LocaleNames.class",
    "super": "Lsun/util/resources/OpenListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/LocaleNames_en;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/LocaleNames_en.class",
    "super": "Lsun/util/resources/OpenListResourceBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/TimeZoneNames;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/TimeZoneNames.class",
    "super": "Lsun/util/resources/TimeZoneNamesBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/TimeZoneNames_en;",
    "module": "java.base",
    "source": "/java.base/sun/util/resources/cldr/TimeZoneNames_en.class",
    "super": "Lsun/util/resources/TimeZoneNamesBundle;",
    "interfaces": [],
    "safeForPreinit": "true",
    "invokedMethods": []
  }
,
  {
    "className": "Lsun/util/resources/cldr/provider/CLDRLocaleDataMetaInfo;",
    "module": "jdk.localedata",
    "source": "/jdk.localedata/sun/util/resources/cldr/provider/CLDRLocaleDataMetaInfo.class",
    "super": "Ljava/lang/Object;",
    "interfaces": ["Lsun/util/locale/provider/LocaleDataMetaInfo;"],
    "safeForPreinit": "true",
    "invokedMethods": ["availableLanguageTags(Ljava/lang/String;)Ljava/lang/String;"]
  }
]